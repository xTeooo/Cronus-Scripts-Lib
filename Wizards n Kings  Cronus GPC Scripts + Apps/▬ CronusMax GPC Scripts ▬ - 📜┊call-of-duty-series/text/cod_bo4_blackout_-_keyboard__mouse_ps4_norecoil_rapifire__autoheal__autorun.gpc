// GPC Online Library
// cod_bo4_blackout_-_keyboard_&_mouse_(ps4)_|_norecoil_|_rapifire_|_autoheal_|_autorun.gpc

// GPC Online Library
// keyboard_&_mouse_for_bo4_blackout_(ps4).gpc

//|-------------------------------|
// Sat Oct 06 2018 20:19:46
// Script generated by GPC BLOCKLY
//|-------------------------------|

//**********************//
// Variables ***********//
//**********************//
int AlreadyHelpHeal = FALSE;
int IsHelpHeal = TRUE;

int AutoSprint = FALSE;

int IsFly = FALSE;

int IsLoot = FALSE;
int TimeLoot = 0;

int MoveValueX = 0;
int MoveValueY = 0;

int RapidFire = TRUE;

int NoRecoil = TRUE;
int AntiRecoilV = 0;
int AntiRecoilH = 0;

int PAntiRecoilV = 20;
int PAntiRecoilH = 3;

//**********************//
// Constructeur ********//
//**********************//
main
{
	//RapidFire
	if(RapidFire)
	{
		if(get_val(PS4_R2))
		{
			combo_run(RapidFire);
		}
		else
		{
	        combo_stop(RapidFire);
	    }
	}

	//NoRecoil	
  	if(NoRecoil) 
  	{ 
    	if(get_val(PS4_R2) && get_val(PS4_L2)) 
    	{ 
        	combo_run(AntiRecoil);                     
    	}
    	else
    	{ 
        	combo_stop(AntiRecoil);                        
    	}
 
    	if(abs(get_val(PS4_RY)) > PAntiRecoilV + 1 || abs(get_val(PS4_RX)) > PAntiRecoilV + 1) 
    	{
        	combo_stop(AntiRecoil);                       
    	}  
   	}

	//AutoSprint
	if(AutoSprint && (get_val(PS4_L2) || get_val(PS4_R2) || get_val(PS4_R1) || get_val(PS4_CIRCLE) || (get_val(PS4_LY) >= 100) || (get_val(PS4_LY) <= -100) || (get_val(PS4_LX) >= 100) || (get_val(PS4_LX) <= -100)))
	{
		AutoSprint = FALSE;
	}
	else if(AutoSprint)
	{
		set_val(PS4_LY, -99);
	}
	
	//HelpHeal
	if(get_val(PS4_L2) && event_press(PS4_LEFT))
  	{
  		IsHelpHeal=!IsHelpHeal;
	}

	if(IsHelpHeal)
	{
		if(AlreadyHelpHeal && (event_press(PS4_R1) || event_press(PS4_OPTIONS)))
		{
			combo_stop(Tap_HelpHeal);
			AlreadyHelpHeal = FALSE;
		}	
		else if(event_press(PS4_L1))
		{
			if(AlreadyHelpHeal)
			{
				combo_stop(Tap_HelpHeal);
				AlreadyHelpHeal = FALSE;
			}  
			else
			{
				combo_run(Tap_HelpHeal);
			}
		}
	}


	//Fly
	if(event_press(CEMU_EXTRA4))
  	{
  		IsFly=!IsFly;
  		combo_stop(Tap_MoveFly);
	}	
	
	if(IsFly) 
	{	
		sensitivity(9, NOT_USE, 327);
		sensitivity(10, NOT_USE, 327);
		
		if((get_val(PS4_RX) >= 5 || get_val(PS4_RX) <= -5))
		{			
			MoveValueX = get_val(PS4_RX);
			combo_run(Tap_MoveFly);
		}
		
		if((get_val(PS4_RY) >= 5 || get_val(PS4_RY) <= -5))
		{			
			MoveValueY = get_val(PS4_RY);
			combo_run(Tap_MoveFly);
		}
	}
	else
	{
		sensitivity(9, NOT_USE, 100);
		sensitivity(10, NOT_USE, 100);
	}


	//Move loot or change weapon
	if(get_val(CEMU_EXTRA6) && get_val(CEMU_EXTRA5))
	{
		combo_run(Tap_SetLeft);
	}
	else if(get_val(CEMU_EXTRA6))
	{
		combo_run(Tap_SetTriangle);
	}
	
	
	//Loot
	if(event_press(CEMU_EXTRA3))
	{
		IsLoot=!IsLoot;
	}
	
	if(IsLoot)
	{
		if(get_val(PS4_L2) || get_val(PS4_R2) || get_val(PS4_L3) || get_val(PS4_R3) || get_val(PS4_TRIANGLE) || get_val(PS4_CIRCLE) || get_val(CEMU_EXTRA1) || get_val(CEMU_EXTRA4) || get_val(PS4_OPTIONS))
		{
			IsLoot = FALSE;
			TimeLoot = 0:
		}
	
		if(get_val(PS4_LY) >= 10 || get_val(PS4_LY) <= -10 || get_val(PS4_LX) >= 10 || get_val(PS4_LX) <= -10)
		{
			TimeLoot++;	
		}
		else
		{
			TimeLoot = 0:
		}
		
		if(TimeLoot >= 135)	
		{
			IsLoot = FALSE;
			TimeLoot = 0:
		}	
		
		if(IsLoot)
		{
			if(get_val(PS4_LY) >= 100)
			{
				combo_run(Tap_SetDownPad);				
			}
			else if(get_val(PS4_LY) <= -100)
			{
				combo_run(Tap_SetUpPad);
			}
			else if(get_val(PS4_LX) >= 100)
			{
				combo_run(Tap_SetRightPad);	
			}
			else if(get_val(PS4_LX) <= -100)
			{
				combo_run(Tap_SetLeftPad);				
			}
		}
	}
	
	// Extra
 	if(get_val(CEMU_EXTRA1))
	{
		combo_run(Tap_Coucher);
	}	
	else if(event_press(CEMU_EXTRA2))
	{
		AutoSprint=!AutoSprint;
	}
}

//**********************//
// Cheat ***************//
//**********************//
combo RapidFire
{
	set_val(PS4_R2,100);
	wait(35);
	set_val(PS4_R2,0);
	wait(20);	
}

combo AntiRecoil
{
	AntiRecoilV = get_val(PS4_RY) + (PAntiRecoilV);

	if(AntiRecoilV > 100)
		AntiRecoilV = 100;

	set_val(PS4_RY, AntiRecoilV);



	AntiRecoilH = get_val(PS4_RX) + PAntiRecoilH;

	if(AntiRecoilH > 100)
		AntiRecoilH = 100;

	set_val(PS4_RX, AntiRecoilH);
}

//**********************//
// Combo ***************//
//**********************//
combo Tap_HelpHeal
{
	AlreadyHelpHeal = TRUE;

    set_val(PS4_L1, 100);    
    wait(4000);
    
	AlreadyHelpHeal = FALSE;
}

combo Tap_Coucher
{
    set_val(PS4_CIRCLE, 100);
    wait(375);
}

combo Tap_MoveFly
{
	set_val(PS4_RX, MoveValueX * 10);
	set_val(PS4_RY, MoveValueY * 10);
	wait(1500);
}

combo Tap_SetLeft
{		
    set_val(PS4_LEFT, 100);
    wait(40);
    
    wait(150);
}

combo Tap_SetTriangle
{
    set_val(PS4_TRIANGLE, 100);
    wait(40);
    
    wait(300);   
}

combo Tap_SetLeftPad
{
	set_val(PS4_LX, 0);
    set_val(PS4_LEFT, 100);
    wait(40);
	set_val(PS4_LEFT, 0);
	set_val(PS4_LX, 0);
	
    wait(150);	
	set_val(PS4_LX, 0);    
}

combo Tap_SetRightPad
{
	set_val(PS4_LX, 0);
    set_val(PS4_RIGHT, 100);
    wait(40);
	set_val(PS4_RIGHT, 0); 
	set_val(PS4_LX, 0);
	
    wait(150);	
	set_val(PS4_LX, 0);
}

combo Tap_SetUpPad
{
	set_val(PS4_LY, 0);
    set_val(PS4_UP, 100);
    wait(40);
	set_val(PS4_UP, 0); 
	set_val(PS4_LY, 0);
	
    wait(250);	
	set_val(PS4_LY, 0);
}

combo Tap_SetDownPad
{
	set_val(PS4_LY, 0);
    set_val(PS4_DOWN, 100);
    wait(40);
	set_val(PS4_DOWN, 0); 
	set_val(PS4_LY, 0);
	
    wait(250);	
	set_val(PS4_LY, 0);
}