// GPC Online Library
// cod_black_ops_4_-_too_sexy_it_hurts!_-_the_cod_#1_script_.gpc


 
 
 
/*                               _    ,----------------------------------------------.
                             __))   | INSTRUCTIONS: tinyurl.com/scriptinstructions |
                            ( oo)   _)---------------------------------------------'
------------------------ooO--(_)--Ooo---------------------------------------------------
V8.6 PAE: Too Sexy It Hurts! The #1 GPC for COD multiplayer!
Open tinyurl.com/scriptinstructions in your browser to read instructions!
Support? tinyurl.com/get-support-here-crescens | discord.gg/Jc4dceQ 
---------------------------------------------------------------------------------------- 
                  __                     __   ___     __       ___     
                 /  `  /\  |    |       /  \ |__     |  \ |  |  |  \ / 
                 \__, /~~\ |___ |___    \__/ |       |__/ \__/  |   |                                             
                   __             __           __   __   __             
                  |__) |     /\  /  ` |__/    /  \ |__) /__`    | \  /  
                  |__) |___ /~~\ \__, |  \    \__/ |    .__/    |  \/   
 
                 888888  dP"Yb   dP"Yb      .dP"Y8 888888 Yb  dP Yb  dP 
                   88   dP   Yb dP   Yb     `Ybo." 88__    YbdP   YbdP  
                   88   Yb   dP Yb   dP     o.`Y8b 88""    dPYb    8P   
                   88    YbodP   YbodP      8bodP' 888888 dP  Yb  dP
                                o _|_   |_     ___|_ _  | 
                                |  |_   | ||_| |  |__>  o               
 
 
---------------------------------------------------------------------------------------- 
 
 
        TO SET ANTI RECOIL VALUES:
 
         - ACTIVATE ANTI RECOIL (LED TURNS GREEN)
         - ACTIVATE EDIT MENU (HOLD B/CIRCLE AND HOLD TRIANGLE + TAP UP) (LED TURNS RED)
         - AIM STRAIGHT AHEAD (SO HOLD ADS) AND FIRE YOUR WEAPON
         - WHILST FIRING, CORRECT THE VERTICAL RECOIL MANUALLY USING THE AIM STICK
         - WHEN THE RECOIL IS REDUCED TO A MINIMUM EXIT EDIT MENU (HOLD B / CIRCLE AND HOLD TRIANGLE / Y + TAP UP)
         - VALUEAS ARE AUTO SAVED ON EXIT
 
         DYNAMIC RAPID FIRE (FIRE RATE INCREASES BY THE AMOUNT THE FIRE TRIGGER IS PRESSED)
 
         - TO DECREASE THE FIRE RATE PER % OF TRIGGER PRESSURE HOLD B/CIRCLE AND HOLD TRIANGLE / Y + TAP D-PAD RIGHT
         - TO INCREASE THE FIRE RATE PER % OF TRIGGER PRESSURE HOLD B/CIRCLE AND HOLD TRIANGLE / Y + TAP D-PAD LEFT
         - buffer value is auto saved
         - need help? discord.gg/Jc4dceQ
 
         TO TWEAK AIM CORRECTIONS ON THE FLY 
 
         - HOLD B/CIRCLE AND HOLD TRIANGLE / Y + TAP SHARE / VIEW (-1)
         - HOLD B/CIRCLE AND HOLD TRIANGLE / Y + TAP MENU / OPTIONS (+1)
 
         IMPORTANT UPDATE V8.3: FIXED AN ISSUE WITH HIP FIRE SENS AND ADDED GRENADE SENSITIVITY 
 
 
____________________________ START USER CONFIG__________________________________________*/
define invert=1;//If you play with inverted set to -1*/
int IN_GAME_SENS=12;//-----fill out your in game sensitivity here (and TWO times more further down)
define AIM__CORRECT=1;// [0 = OFF / 1 = ON] 
define AIM_ASSIST=0;//[0 = OFF / 1 = ON] strongest aim assist for COD BO 4 multiplayer  
define CNL_RELOAD=1;//[0 = OFF / 1 = ON] cancel reload with fire or ads
define EASY__MELEE=1;//[0 = OFF / 1 = ON] super fast melee with your right thumb stick (for tactical button layout)
define FIRE__AND_HEAL=1;// [0 = OFF / 1 = ON] AUTO TACTICAL - after firing your weapon 
define EASY__SPRINT=1;// [0 = OFF / 1 = ON] auto sprint
define KS__FIREMODS=2;// [0 = OFF] [1 = legacy switch only][2 = legacy & kill switch]
//---buttons used for various layouts in the game menu - make changes when you NOT play with TACTICAL btn layout
//---hint: you may also fill out the play station btns, they work as well. Find all indentifiers here: tinyurl.com/identifiers-cronus
define LY = XB1_LY;
define LX = XB1_LX;
define RX = XB1_RX;
define RY = XB1_RY;
define FIRE = XB1_RT;
define ADS = XB1_LT;
define SPRINT = XB1_LS;
define TACTICAL = XB1_LB;
define LETHAL = XB1_RB;
define MELEE = XB1_B;
/*________________________________________________________________________________________
Open tinyurl.com/scriptinstructions in your browser to read instructions!
Support? tinyurl.com/get-support-here-crescens | <a href="https://discord.gg/Jc4dceQ" target="_blank">https://discord.gg/Jc4dceQ</a> */
//---other variables used by the script
int d_click;
int record, rumble;
int GUN_BELT=FALSE, WPN_1, K; 
int RELOAD__TIME, b_reload=FALSE;
int RF=FALSE, Fire_KS=FALSE, A__A=FALSE;
int first_time;
//---anti recoil, aim assist variables
 int a_r__c;
 int c___y;
 int x_y__max = 10;
 int inY[25];
 int token, ry__par;
 int Y_val;
 int edit = FALSE;
int A__R;
int v;
//---Zoom sens variables
int ADS_SENS, ADS_FIRE_SENS, Sens;
int ZOOM_SENS;
int Zoom=FALSE;
int F_H=FALSE;
int ROF;
int hold_time;
int buffer;
init {
    a_r__c = get_pvar(SPVAR_10,-100,100, 15); 
    buffer = get_pvar(SPVAR_8, 400, 2000, 500);
    RELOAD__TIME= get_pvar(SPVAR_3, 0, 4000, 800);
    IN_GAME_SENS = get_pvar(SPVAR_15, 3, 20, 12); //-----fill out your in game sensitivity here (and once more further down under reset defaults)
    first_time = get_pvar(SPVAR_16, 0, 1, 1);
    }/*
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 | | | | | | | | |M|A|I|N| |B|L|O|C|K| |S|T|A|R|T|S| |H|E|R|E| | | | | | | | | | | | | |
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+*/
main {

    //--TRACE 1 , 2 , 3 , 4 , 5 , 6
    set_val (30, a_r__c); set_val (32, Sens);
    set_val (34, buffer/100); //set_val (36, ZOOM_SENS);     
    //--EPROM STACK MEMORY FIX
    if (first_time == 1){RESET_Defaults();}  
    c___y = d___z(RY,0);
    //---double click timer 
    if(d_click) {d_click -= get_rtime();}/*
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
| | | |M|E|N|U| |A|D|S| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+*/
  if(get_val(ADS))    
                {
    //--FIRE MODS OFF 
    if(event_press(14))
                {//D-pad DOWN
                    WPN_1=TRUE
                    RF=FALSE;
                    rumble (RF);
                    GUN_BELT=FALSE;
                    A__R=FALSE;
                 }
//--FIRE MODS OFF / anti recoil on
    if(event_press(13))
                {//D-pad UP
                    WPN_1=TRUE
                    RF=FALSE;
                    rumble (RF);
                    GUN_BELT=FALSE;
                    A__R=TRUE;            
                }
//--RAPID FIRE ON
    if(event_press(16))
                {//D-pad RIGHT
                    WPN_1=TRUE
                    RF=TRUE;           
                    rumble (RF);
                    Fire_KS=FALSE;
                    GUN_BELT=FALSE;
                    A__R=FALSE;                
                }
//--RF SECONDANRY
    if(event_press(15))
                {//D-pad LEFT
                     WPN_1 = TRUE
                     RF=TRUE;
                     GUN_BELT=TRUE;
                     Fire_KS=FALSE;
                     rumble (GUN_BELT);
                     A__R=FALSE;                      
                }
   if (get_val (15) &&get_ptime(15)>900) {A__R=TRUE;rumble (A__R);}
//--AKIMBO 
    if(event_press (2))
                { 
                      A__A = !A__A;    rumble (A__A);       
                }
                set_val(2,0);
 
    if(get_val(1) && get_ptime (1) > 800)
                { 
                    RESET_Defaults();
                }
    }//--END
/*
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  | | | | | | | | |R|E|C|O|R|D| |T|I|M|E| | | | | | | | | | | | | | | | | | | | | | | | |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+*/ 
     if (get_val (XB1_DOWN))    //hold down + double click reload
                 {//---START
                 if (event_press(XB1_X)&& d_click)       
                                             { 
                                             record = TRUE; rumble (record); 
                                             }
                 else if (event_press(XB1_X)&& !d_click)
                                                 {
                                                 d_click = 300;
                                                 }
                 if (record)
                                  {
                                  RELOAD__TIME = get_ptime(XB1_X);
                                                          if (event_release (XB1_X))
                                                          { 
                                                         record = FALSE; save_pvars (); rumble (record);
                                                         }
                                 }                                
                 }//--END
 
 /*
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  | | | | | | | | |R|E|S|E|T|S| | | | | | | | | | | | | | | | | | | | | | | | | | | | | |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+*/  
     if(event_release(XB1_X)) 
                         {
                         if (Fire_KS && get_ledx ())Fire_KS=FALSE; reset_leds ();
                         b_reload=TRUE; 
                         }
     if(b_reload) 
                 {
                 b_reload = b_reload + get_rtime();
                 }
     if(b_reload >= RELOAD__TIME) 
                                     {
                                     b_reload = 0;
                                     b_reload = FALSE;
                                     }
  /*
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  | | | | | | | | |C|A|N|C|E|L| |R|E|L|O|A|D| | | | | | | | | | | | | | | | | | | | | | |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+*/
     if (CNL_RELOAD==1)
             {
             if (b_reload && (event_press(FIRE)||event_press(ADS))) 
                                                                 {
                                                                 combo_run(CANCEL_RLD);
                                                                 } 
             }    
 /*
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  | | | | | | | | |W|E|A|P|O|N| |F|I|R|E| |M|O|D|S| | | | | | | | | | | | | | | | | | | |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+*/     
     if(event_release(XB1_Y) && get_ptime(XB1_Y) < 300 && GUN_BELT)
                                 {                          
                                 WPN_1 = !WPN_1; rumble (WPN_1); 
                                 }  
 
 
     if (record==FALSE &&GUN_BELT && get_val (XB1_X)&& WPN_1==FALSE && get_ptime(XB1_X) > 180) 
                                 {//--RESET 
                                  WPN_1 = TRUE; rumble (WPN_1); 
                                 }
 //-- Rapid fire 
     if (RF)
 	{
        ROF =(get_val(FIRE))/4;
        if (ROF >= 20) ROF=20;
        if (ROF <= 2) ROF=2;
        hold_time = buffer / ROF;                  
        if(hold_time >=125) hold_time=125;
        if(hold_time <25) hold_time=25;
 
         {
         if (!WPN_1 && GUN_BELT || WPN_1 &&!GUN_BELT)
                                             {
                                             if (get_val (FIRE) && !Fire_KS && RF )                       
                                                                             {
                                                                             combo_run (RAPID_FIRE);                                                                           
                                                                             }
                                             }else if(combo_running(RAPID_FIRE)){  
            combo_stop(RAPID_FIRE);}
         }
 
 	}
 
    if (A__A &&get_val (FIRE)) set_val (ADS,100);
 
     /*
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  | | | | | | | | |A|U|T|O| |H|E|A|L| | | | | | | | | | | | | | | | | | | | | | | | | | |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+*/ 
     if(FIRE__AND_HEAL==1)
                       {
                     if (event_release (FIRE))
                                          {
                                         F_H=TRUE; combo_run (KILL);
                                         }
                     }/*
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 | | | | | | | | |A|I|M| | |C|O|R|R|E|C|T|I|O|N|S| | | | | | | | | | | | | | | | | | | |
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+                                                      _     _    
*/
 
  if(AIM__CORRECT==1)
                         {//----------------------------start AIM CORRECTIONS
                        ADS_SENS=111-(IN_GAME_SENS*2); ADS_FIRE_SENS=106-(IN_GAME_SENS*2); ZOOM_SENS=90-(IN_GAME_SENS*2);
 
       if (get_val (ADS))
                                       if (get_val (LETHAL)) block(LETHAL,150);
                                       if (event_release(LETHAL)) 
                                       {
                                    if(get_ptime(LETHAL) < 150&&get_val(ADS)) {Zoom = TRUE; rumble(Zoom);}
                                     else Zoom = FALSE;
                                     }                        
            if (!Zoom)
                                    {//--!Zoom   
                                      if(get_val(FIRE) && get_val(ADS))                              
                                              { 
                                              Sens = ADS_FIRE_SENS;                                              
                                              }
                                    if(!get_val(FIRE) && !get_val(ADS) || get_val (FIRE) &&!get_val(ADS)) 
                                              {
                                            Sens = 100;
                                              }   
                                      if(!get_val(FIRE) && get_val(ADS) || get_val (LETHAL) && !get_val (ADS)) 
                                              {
                                            Sens = ADS_SENS;
                                              }
                                               } //--!Zoom  end  
            if(Zoom)
                                            {
                                    if(get_val(ADS))
                                                { //--Zoom   
                                                Sens = ZOOM_SENS;
                                                }
                                                else 
                                                    {
                                                    Sens = 100;
                                                    Zoom = FALSE;
                                                    rumble(Zoom);
                                                    }
                                            }// -- Zoom end
        if(Sens > 100) Sens = 100;  
        sensitivity(RX, NOT_USE, Sens);
        sensitivity(RY, NOT_USE, Sens);
    }/*----------------------------end AIM_CORRECTIONS
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 | | | | |K|I|L|L| |S|W|I|T|C|H| |&| |S|U|P|E|R| |P|W| |S|W|I|T|C|H| | | | | | | | | | |
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+*/
     if (!get_val(XB1_B))
                 {     
                 if (KS__FIREMODS==1)
                                      {
                                     if(get_val(XB1_LEFT) && !get_val (ADS)) 
                                                                     { 
                                                                     set_val (XB1_Y,100); K=TRUE; if(K) 
                                                                                   {
                                                                                   K = K + get_rtime();
                                                                                   }
                                                                              if(K <= 400) 
                                                                                  {
                                                                                 combo_run (KILL);
                                                                                 }
                                                                     }
                                     if(get_val(XB1_UP) && !get_val (ADS))
                                                                     { 
                                                                     set_val (LETHAL,100); set_val (TACTICAL,100);  
                                                                     }
                                     }
                                      if (KS__FIREMODS==2)
                                                          {
                                                         if (!WPN_1 && GUN_BELT || WPN_1 &&!GUN_BELT)
                                                                     {
                                                                         if(get_val(XB1_LEFT) && !get_val (ADS))
                                                                             {
                                                                               if (RF) Fire_KS=TRUE; K=TRUE; if(K) 
                                                                                   {
                                                                                   K = K + get_rtime();
                                                                                   }
                                                                              if(K <= 400) 
                                                                                  {
                                                                                 combo_run (KILL);
                                                                                 }
                                                                             }
 
                                                                         if(get_val(XB1_UP) && !get_val (ADS))        
                                                                                 {
                                                                                 set_val (LETHAL,100); set_val (TACTICAL,100); 
                                                                                 if (RF) Fire_KS=TRUE;
                                                                                 }
                                                                     }
 
                                     }
                 }
 
     if (get_val(XB1_B) &&get_val(XB1_Y))
         {//-START
             if (event_press(XB1_UP))
                                 { 
                                 if (A__R && WPN_1)
                                         {
                                         edit = !edit; rumble(edit);
                                         }
                                 }
              if (event_press(XB1_LEFT))
                                   {
                                   buffer = buffer - 100;save_pvars ();
                                   }
              if (event_press(XB1_RIGHT))
                                   {
                                   buffer = buffer + 100;save_pvars ();
                                   }
 
         
 
             if (event_press(XB1_VIEW))
                                 {
                                 IN_GAME_SENS --; save_pvars ();
                                 }
             if (event_press(XB1_MENU))
                                 {
                                 IN_GAME_SENS ++; save_pvars ();                                                           
                                 }
             set_val (XB1_VIEW,0); set_val (XB1_MENU,0);set_val (XB1_LEFT,0); set_val (XB1_RIGHT,0);set_val (XB1_Y,0); set_val (XB1_B,0);
 
         }/*--END      
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 | | | | | | | | |E|A|S|Y| |M|E|L|E|E| | | | | | | | | | | | | | | | | | | | | | | | | |
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+*/
if (EASY__MELEE==1)    
                    {
                     if (get_val(SPRINT))set_val(MELEE, 100);        
                    }/*
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 | | | | | | | | |E|A|S|Y| |R|U|N| | | | | | | | | | | | | | | | | | | | | | | | | | | |
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+*/
if (EASY__SPRINT==1)
                    { 
                    if (!get_val(ADS)&& get_val(LY) < -25)combo_run (EASY_RUN);
                    } /*
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 | | | | | | | | |A|I|M| |A|S|S|I|S|T| | | | | | | | | | | | | | | | | | | | | | | | | |
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+*/
if (AIM_ASSIST==1)
                {
                if(get_val(ADS)) combo_run(AA_XY);
                else combo_stop(AA_XY);                
                }/*
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 | | | | | | | | |A|N|T|I| |R|E|C|O|I|L| | | | | | | | | | | | | | | | | | | | | | | | |
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+*/                                  
if (A__R && WPN_1)
                { 
                 if (get_val (FIRE)) 
                { 
 
                    if (get_val(ADS))
                        {
                Y_val = a_r__c;
                set_val (RY,Y()*invert);
                if (edit){
                         a__r ();
                            }
 
                        }
                }
 
        }/*
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 | | | | | | | | |T|U|R|B|O| |B|T|N| |A|.|K|.| |H|A|I|R| |T|R|I|G|G|E|R|S| | | | | | | |
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+*/  
deadzone(FIRE,ADS,99,99);
 /*
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  | | | | | | | | |L|E|D|S| |R|U|M|B|L|E| | | | | | | | | | | | | | | | | | | | | | | | |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+*/ 
    if (!get_ledx()){if (Fire_KS==TRUE){set_ledx(LED_1, 255);}
    else if (edit==TRUE || ADS_SENS >100 || ADS_FIRE_SENS >100 )f_Led (0,2,0,0);
    else if (GUN_BELT && !WPN_1||!GUN_BELT && RF && WPN_1) f_Led (2,2,2,2); 
    else if (A__R)f_Led (0,0,2,0);
    else f_Led (2,0,0,0);} if (Fire_KS) {rumble (1);} if(rumble) combo_run(RUMBLE);
    }/* 
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 | | | | | | | | |C|O|M|B|O| |S|E|C|T|I|O|N| | | | | | | | | | | | | | | | | | | | | | |
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+*/
 combo AA_XY {
    set_val(RY,xy_val(RY, 24));
    wait(20);
    set_val(RX,xy_val(RX, 24));
    set_val(LX,xy_val(LX, 24));
    wait(20);
    set_val(RY,xy_val(RY, 24 * -1));
    wait(20);
    set_val(RX,xy_val(RX, 24 * -1));
    set_val(LX,xy_val(LX, 24 * -1));
    wait(20);
}
 
 
combo RAPID_FIRE { 
    set_val(FIRE,100);
    wait(hold_time); 
    set_val(FIRE,  0); 
    wait(hold_time);
} 
 combo CANCEL_RLD {
     rumble (1);    
     set_val(XB1_Y, 100);
     wait(30);
     wait(20);
     set_val(XB1_Y, 100);
     wait(30);
     wait(20);
     b_reload=FALSE;
 }
 combo RUMBLE{
     wait(150);
     set_rumble(1,100);
     wait(150);
     reset_rumble();
     rumble--;
 }
combo EASY_RUN{                  
    set_val(SPRINT,100);       
    wait(30);                     
    wait(100);      
}  
 combo KILL {
     if (F_H)
     set_val (TACTICAL,100);
     wait (40);
     if (K)
     set_val (XB1_Y,100);
     wait (400);
     F_H=FALSE;
     K=FALSE;
     wait (40);
     }
function d___z(f_axis,f_val) {
    f_val = get_val(f_axis);
    if(abs(f_val) < 10) {
        set_val(f_axis,0); 
        return 0;
    }
    return f_val;
}
function rumble(pos) {
    if(pos)
        rumble = 1;
    else
        rumble = 2;
} 
function xy_val(f_axis,f_val) {
    if(abs(get_val(f_axis)) < 25)  
    return f_val;    
    return get_val(f_axis);     
} 
function Y() {
    v =  c___y;
    if(abs(v) < 10)
        v = 0;
    if(abs(v) > Y_val + 5)
        return v;
    return v + Y_val;           
}

 function a__r (){
    if(abs(c___y) >= x_y__max){
     inY[token] =  c___y;
     token += 1; 
     if(token == 25) 
     {
     for(token = 0;token <= 24;token++) 
     {
     ry__par += inY[token];
     }
     ry__par /= 25;
     a_r__c += ry__par / 10;
     ry__par = 0;
     token = 0;
     }
     }
     }
 function RESET_Defaults () {
     a_r__c =15;
    Y_val =  15;
    IN_GAME_SENS=12;//-------------------------------------------------fill out your in_game_sens here 
    first_time=0;
    buffer=500;
    RELOAD__TIME=800;
    save_pvars ();    
    }
 function save_pvars (){
    set_pvar(SPVAR_10, a_r__c);      
    set_pvar(SPVAR_15, IN_GAME_SENS);
    set_pvar(SPVAR_16, first_time); 
    set_pvar(SPVAR_8, buffer);
    set_pvar(SPVAR_3, RELOAD__TIME); 
    rumble (1);
    }
function f_Led (a,b,c,d){  
   set_led(LED_1,a);  
   set_led(LED_2,b); 
   set_led(LED_3,c); 
   set_led(LED_4,d);
}     /*
        0,2,0,0,     // Red 
        0,0,2,0,     // Green                                                             
        2,0,0,0,     // Blue                                                               
        0,0,0,2,     // Pink                                                               
        2,0,2,0,     // SkyBlue                                                                
        0,2,2,0,     // Yellow                                                            
        2,2,2,2,     // White
        0,0,0,0;     // Off
 
 
24       XB1_PR1         
25       XB1_PR2                                 
26       XB1_PL1                                
27       XB1_PL2  */