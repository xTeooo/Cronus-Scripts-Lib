// VERSUS SCREEN SAVER

int Timer,LineA,LineB,LineC,ii,jj,ll,oo,xx,TimeS;

int Saver = TRUE;
define TimeoutLimit = 20000; // Milliseconds (1000 = 1 second)

/*
 .~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 
(                       Init                         ) 
 `-~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-* 
*/ 

init {
	cls_oled(0);
}

/*
 .~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 
(                       Main                         ) 
 `-~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-* 
*/ 

main {

	/*
	ADD ADDITIONAL CODE HERE
	*/
	
	if (!Saver && event_press(PS4_CROSS)) { // A Command which will re-trigger the screen saver
		cls_oled(0);
		Saver = TRUE;
	}
	
	if (Saver) { 
        Timer += get_rtime();
        Saver ();
    } 
	
	if (Timer >= TimeoutLimit) {
    	Saver = FALSE;
    	Timer = 0;
    	cls_oled(0);
    }
}

/* 
 .~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 
(                   Combos                           ) 
 `-~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-* 
*/ 

	/*
	ADD ADDITIONAL CODE HERE
	*/

/* 
 .~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 
(                   Functions                        ) 
 `-~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-* 
*/ 

	/*
	ADD ADDITIONAL CODE HERE
	*/

function Saver () {
    
    if (Saver) { 

		TimeS += get_rtime();

    for(ii = 0; ii <= 10; ii++) { 
        putc_oled(1,Saver_Scroll[0][ii]);
        puts_oled(LineA + -30 + ii * 7, 2, 0,1,1);
    }

    for(jj = 0; jj <= 10; jj++) { 
        putc_oled(1,Saver_Scroll[1][jj]);
        puts_oled(LineA + 100 + jj * 7, 15, 0,1,1);
    }
    
    for(ll = 0; ll <= 10; ll++) { 
        putc_oled(1,Saver_Scroll[2][ll]);
        puts_oled(LineB + -50 + ll * 7, 28, 0,1,1);
    }
    
    for(oo = 0; oo <= 10; oo++) { 
        putc_oled(1,Saver_Scroll[3][oo]);
        puts_oled(LineC + 10 + oo * 7, 41, 0,1,1);
    }
    
    for(xx = 0; xx <= 10; xx++) { 
        putc_oled(1,Saver_Scroll[4][xx]);
        puts_oled(LineC + 127 + xx * 7, 53, 0,1,1);
    }
    
        if (TimeS == 50) {
            LineA +=2;
            LineB -=2;
            LineC +=1;
            TimeS = 0;
        }
    }
}

/* 
 .~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 
(                   ASCII Table                      ) 
 `-~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-* 
*/ 

define SPACE       =  32; /*¦¦       ¦¦*/	define  _0 = 48,  A = 65, K = 75, U =  85, e = 101, o = 111, y = 121; 
define EXCLAMATION =  33; /*¦¦   !   ¦¦*/	define  _1 = 49,  B = 66, L = 76, V =  86, f = 102, p = 112, z = 122; 
define QUOTE       =  34; /*¦¦   "   ¦¦*/	define  _2 = 50,  C = 67, M = 77, W =  87, g = 103, q = 113; 
define HASH        =  35; /*¦¦   #   ¦¦*/	define  _3 = 51,  D = 68, N = 78, X =  88, h = 104, r = 114; 
define DOLLAR      =  36; /*¦¦   $   ¦¦*/	define  _4 = 52,  E = 69, O = 79, Y =  89, i = 105, s = 115; 
define PERCENT     =  37; /*¦¦   %   ¦¦*/	define  _5 = 53,  F = 70, P = 80, Z =  90, j = 106, t = 116; 
define AND         =  38; /*¦¦   &   ¦¦*/	define  _6 = 54,  G = 71, Q = 81, a =  97, k = 107, u = 117; 
define APOSTROPHE  =  39; /*¦¦       ¦¦*/	define  _7 = 55,  H = 72, R = 82, b =  98, l = 108, v = 118; 
define O_BRACKET   =  40; /*¦¦   (   ¦¦*/	define  _8 = 56,  I = 73, S = 83, c =  99, m = 109, w = 119; 
define C_BRACKET   =  41; /*¦¦   )   ¦¦*/	define  _9 = 57,  J = 74, T = 84, d = 100, n = 110, x = 120; 
define ASTERISK    =  42; /*¦¦   *   ¦¦*/ 
define PLUS        =  43; /*¦¦   +   ¦¦*/ 
define COMMA       =  44; /*¦¦   ,   ¦¦*/ 
define MINUS       =  45; /*¦¦   -   ¦¦*/ 
define FULLSTOP    =  46; /*¦¦   .   ¦¦*/ 
define F_SLASH     =  47; /*¦¦   /   ¦¦*/ 
define COLON       =  58; /*¦¦   :   ¦¦*/ 
define SEMICOLON   =  59; /*¦¦   ;   ¦¦*/ 
define B_ARROW     =  60; /*¦¦   <   ¦¦*/ 
define EQUAL       =  61; /*¦¦   =   ¦¦*/ 
define F_ARROW     =  62; /*¦¦   >   ¦¦*/ 
define QUESTION    =  63; /*¦¦   ?   ¦¦*/ 
define AT          =  64; /*¦¦   @   ¦¦*/ 
define O_SQUARE    =  91; /*¦¦   [   ¦¦*/ 
define b_SLASH     =  92; /*¦¦   \   ¦¦*/ 
define C_SQUARE    =  93; /*¦¦   ]   ¦¦*/ 
define U_ARROW     =  94; /*¦¦   ^   ¦¦*/ 
define UNDERSCORE  =  95; /*¦¦   _   ¦¦*/ 
define TICK        =  96; /*¦¦   `   ¦¦*/ 
define O_CURLY     = 123; /*¦¦   {   ¦¦*/ 
define BAR         = 124; /*¦¦   |   ¦¦*/ 
define C_CURLY     = 125; /*¦¦   }   ¦¦*/ 
define WAVE        = 126; /*¦¦   ~   ¦¦*/ 
define CROSS       = 127; /*¦¦   PS  ¦¦*/ 
define CIRCLE      = 128; /*¦¦   PS  ¦¦*/ 
define SQUARE      = 129; /*¦¦   PS  ¦¦*/ 
define TRIANGLE    = 130; /*¦¦   PS  ¦¦*/ 
define UP          = 131; /*¦¦ PS+XB ¦¦*/ 
define DOWN        = 132; /*¦¦ PS+XB ¦¦*/ 
define LEFT        = 133; /*¦¦ PS+XB ¦¦*/ 
define RIGHT       = 134; /*¦¦ PS+XB ¦¦*/ 
define VIEW        = 135; /*¦¦   XB  ¦¦*/ 
define MENU        = 136; /*¦¦   XB  ¦¦*/ 

const uint8 Saver_Scroll[][] = {/*
    ¦¦  0      1     2      3       4       5       6       7       8        9       10    ¦¦*/
    { SPACE ,  P  ,  S  , SPACE ,   v   , SPACE ,   X   ,   B   ,   O    ,   X    , SPACE   },
    { SPACE ,  Z  ,  E  ,   N   , SPACE ,   v   , SPACE ,   M   ,   A    ,   X    , SPACE   },
    {   F   ,  O  ,  R  ,   T   ,   N   ,   I   ,   T   ,   E   ,  HASH  ,  _1    , SPACE   },
    {   C   ,  O  ,  D  , SPACE ,   v   , SPACE ,   A   ,   P   ,   E    ,   X    , SPACE   },
    {   A   ,  B  ,  X  ,   Y   , SPACE ,   v   , SPACE , CROSS , CIRCLE , SQUARE , TRIANGLE}};