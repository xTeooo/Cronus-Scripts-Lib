// DoGzTheFiGhTeR's SCROLL V1.00 (SCRIPT NAME,SCREENSAVER,COMMANDS,INFO,ETC)

// DO NOT TOUCH HERE FOR REFERENCE ONLY
define  _0 = 48,  A = 65, K = 75, U =  85, e = 101, o = 111, y = 121;
define  _1 = 49,  B = 66, L = 76, V =  86, f = 102, p = 112, z = 122;
define  _2 = 50,  C = 67, M = 77, W =  87, g = 103, q = 113;
define  _3 = 51,  D = 68, N = 78, X =  88, h = 104, r = 114;
define  _4 = 52,  E = 69, O = 79, Y =  89, i = 105, s = 115;
define  _5 = 53,  F = 70, P = 80, Z =  90, j = 106, t = 116;
define  _6 = 54,  G = 71, Q = 81, a =  97, k = 107, u = 117;
define  _7 = 55,  H = 72, R = 82, b =  98, l = 108, v = 118;
define  _8 = 56,  I = 73, S = 83, c =  99, m = 109, w = 119;
define  _9 = 57,  J = 74, T = 84, d = 100, n = 110, x = 120;
// DO NOT TOUCH HERE FOR REFERENCE ONLY	
define SPACE       =  32; //¦¦       ¦¦\\
define EXCLAMATION =  33; //¦¦   !   ¦¦\\
define QUOTE       =  34; //¦¦   "   ¦¦\\
define HASH        =  35; //¦¦   #   ¦¦\\
define DOLLAR      =  36; //¦¦   $   ¦¦\\
define PERCENT     =  37; //¦¦   %   ¦¦\\
define AND         =  38; //¦¦   &   ¦¦\\
define APOSTROPHE  =  39; //¦¦   '   ¦¦\\
define O_BRACKET   =  40; //¦¦   (   ¦¦\\
define C_BRACKET   =  41; //¦¦   )   ¦¦\\
define ASTERISK    =  42; //¦¦   *   ¦¦\\
define PLUS        =  43; //¦¦   +   ¦¦\\
define COMMA       =  44; //¦¦   ,   ¦¦\\
define MINUS       =  45; //¦¦   -   ¦¦\\
define FULLSTOP    =  46; //¦¦   .   ¦¦\\
define F_SLASH     =  47; //¦¦   /   ¦¦\\
define COLON       =  58; //¦¦   :   ¦¦\\
define SEMICOLON   =  59; //¦¦   ;   ¦¦\\
define B_ARROW     =  60; //¦¦   <   ¦¦\\
define EQUAL       =  61; //¦¦   =   ¦¦\\
define F_ARROW     =  62; //¦¦   >   ¦¦\\
define QUESTION    =  63; //¦¦   ?   ¦¦\\
define AT          =  64; //¦¦   @   ¦¦\\
define O_SQUARE    =  91; //¦¦   [   ¦¦\\
define b_SLASH     =  92; //¦¦   \   ¦¦\\
define C_SQUARE    =  93; //¦¦   ]   ¦¦\\
define U_ARROW     =  94; //¦¦   ^   ¦¦\\
define UNDERSCORE  =  95; //¦¦   _   ¦¦\\
define TICK        =  96; //¦¦   `   ¦¦\\
define O_CURLY     = 123; //¦¦   {   ¦¦\\
define BAR         = 124; //¦¦   |   ¦¦\\
define C_CURLY     = 125; //¦¦   }   ¦¦\\
define WAVE        = 126; //¦¦   ~   ¦¦\\

// DISPLAY NAME ETC HERE BELOW 24 CHARACTERS USE REFERENCE ABOVE FOR LETTERS,NUMBERS OR SYMBOLS
define SPACE1  = D;
define SPACE2  = o;
define SPACE3  = G;
define SPACE4  = z;
define SPACE5  = T;
define SPACE6  = h;
define SPACE7  = e;
define SPACE8  = F;
define SPACE9  = i;
define SPACE10 = G;
define SPACE11 = h;
define SPACE12 = T;
define SPACE13 = e;
define SPACE14 = R;
define SPACE15 = SPACE;
define SPACE16 = S;
define SPACE17 = c;
define SPACE18 = R;
define SPACE19 = o;
define SPACE20 = L;
define SPACE21 = L;
define SPACE22 = SPACE;
define SPACE23 = _8;
define SPACE24 = C_BRACKET;
// ENTER BELOW THE LINE HEIGHT (APPROX 30 = MIDDLE OF THE SCREEN) (APPROX MIN = 3 && MAX = 53)
define LINE = 30;

// DO NOT ALTER BELOW \\
int MU1  = 127;
int MU2  = 137;
int MU3  = 147;
int MU4  = 157;
int MU5  = 167;
int MU6  = 177;
int MU7  = 187;
int MU8  = 197;
int MU9  = 207;
int MU10 = 217;
int MU11 = 227;
int MU12 = 237;
int MU13 = 247;
int MU14 = 257;
int MU15 = 267;
int MU16 = 277;
int MU17 = 287;
int MU18 = 297;
int MU19 = 307;
int MU20 = 317;
int MU21 = 327;
int MU22 = 337;
int MU23 = 347;
int MU24 = 357;

init {
cls_oled(0);
}

main{

NAME();

}


function  NAME(){

	cls_oled(0);

	MU1--;MU2--;MU3--;MU4--;MU5--;MU6--;MU7--;MU8--;MU9--;MU10--;
	MU11--;MU12--;MU13--;MU14--;MU15--;MU16--;MU17--;
	MU18--;MU19--;MU20--;MU21--;MU22--;MU23--;MU24--;

	putc_oled(1,SPACE1);
	puts_oled(MU1,LINE,0,1,1);

	putc_oled(1,SPACE2);
	puts_oled(MU2,LINE,0,1,1);

	putc_oled(1,SPACE3);
	puts_oled(MU3,LINE,0,1,1);

	putc_oled(1,SPACE4);
	puts_oled(MU4,LINE,0,1,1);
	
	putc_oled(1,SPACE5);
	puts_oled(MU5,LINE,0,1,1);

	putc_oled(1,SPACE6);
	puts_oled(MU6,LINE,0,1,1);

	putc_oled(1,SPACE7);
	puts_oled(MU7,LINE,0,1,1);

	putc_oled(1,SPACE8);
	puts_oled(MU8,LINE,0,1,1);

	putc_oled(1,SPACE9);
	puts_oled(MU9,LINE,0,1,1);

	putc_oled(1,SPACE10);
	puts_oled(MU10,LINE,0,1,1);

	putc_oled(1,SPACE11);
	puts_oled(MU11,LINE,0,1,1);

	putc_oled(1,SPACE12);
	puts_oled(MU12,LINE,0,1,1);

	putc_oled(1,SPACE13);
	puts_oled(MU13,LINE,0,1,1);

	putc_oled(1,SPACE14);
	puts_oled(MU14,LINE,0,1,1);

	putc_oled(1,SPACE15);
	puts_oled(MU15,LINE,0,1,1);

	putc_oled(1,SPACE16);
	puts_oled(MU16,LINE,0,1,1);

	putc_oled(1,SPACE17);
	puts_oled(MU17,LINE,0,1,1);

	putc_oled(1,SPACE18);
	puts_oled(MU18,LINE,0,1,1);

	putc_oled(1,SPACE19);
	puts_oled(MU19,LINE,0,1,1);

	putc_oled(1,SPACE20);
	puts_oled(MU20,LINE,0,1,1);

	putc_oled(1,SPACE21);
	puts_oled(MU21,LINE,0,1,1);

	putc_oled(1,SPACE22);
	puts_oled(MU22,LINE,0,1,1);
	
	putc_oled(1,SPACE23);
	puts_oled(MU23,LINE,0,1,1);
	
	putc_oled(1,SPACE24);
	puts_oled(MU24,LINE,0,1,1);
}