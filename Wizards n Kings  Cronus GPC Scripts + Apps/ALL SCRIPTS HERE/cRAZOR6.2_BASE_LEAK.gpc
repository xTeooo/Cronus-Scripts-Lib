// GPC Online Library
// razor_6.2_fortnite_leak.gpc


/*


   ____________________________RAZOR SCRIPT FULL VERSION V 6.2 _______________________________
///                                                                                        ///
///                                                                                        ///
/// AIM ASSIST: always on  		                                                           ///
///  AUTO RUN: alway on but for disable L2+UP       									   ///
/// 100% ACCURACY: L2/LT +RB/R1                                                            ///
///  AIM ABUSE: hold L1+ Right for disable                                                 ///     		                                                                                                                              
///  GHOST PEEK: L2/LT + LB/L1, allows you to shoot behind the guards   				   ///                   
/// DROPSHOT: L2/LT + SQAURE, the player lowers and rises quickly as he shoots             ///                      
///  ANTI RECOIL: always on                                                                ///                                    
///  RAPID FIRE: L2/LT + RIGHT                                                             ///
/// HAIR TRIGGER: always On, fast build  				                                   ///                  
/// JITTER: hold L2 + hold L1  						                                       ///                                                                               
/// INSTA EDIT always on R2 KEY															   ///
/// RAMP BUILD: LEFT																	   ///
///_______________________________________________________________________________________ ///
*/


int Razor12 = TRUE; 
int Razor54  = 200; 
int Razor62=218;
int Razor51 = 111;
int Razor48   = 130                     
int Razor49     = 60            			
int Razor7  =21;
int Razor9  = 19;  
int Razor14 = 19;          
int Razor11  =17;                                                                     
int Razor10 =-19; 
int Razor8 = -21; 
int Razor58    = 19;      
int Razor59        = 21;        
int Razor60    = -21;        
int Razor61    = -9;
int Razor40         = 6;
int Razor1     = FALSE;                                            
int Razor2                                                          
int Razor3     = 20;                                              
int Razor4      = 28;                                             
int Razor5           = 12;  
int Razor13 =198;
int Razor35       = FALSE;	                                                      
int Razor36=FALSE;  
int Razor15  = TRUE;     
int Razor37=TRUE 
int Razor38    = TRUE;                                                  
int Razor39      = FALSE;	
int Razor42 
int Razor6 = TRUE;  
int Razor50 = TRUE;													
int Razor45 = TRUE 												
int Razor43= TRUE;  
int Razor46 = FALSE; 
int Razor56 = TRUE;
int Razor53  = TRUE;                                              
int Razor44 = RUMBLE_A;                                                                         
int Razor52 = Razor26;                                                    
int Razor41;                                                                      
int Razor55 = Razor18 
int Razor57 = TRUE;
int a; int b;													
define Razor16 = 4; 
define Razor17 = 7; 
define Razor18 = 5;
define Razor19 = 20; 
define Razor20 = 8; 
define Razor21 = 19; 
define Razor22 = 3; 
define Razor23 = 3; 
define Razor24 = 6; 
define Razor25 = 17; 
define Razor26 = 18; 
define Razor27 = 9; 
define Razor28 = 10; 
define Razor29 = 11; 
define Razor30 = 12; 
define Razor31 = 13; 
define Razor32 = 14;
define Razor33 = 15; 
define Razor34 = 16; 																		

                                                   
 main {                                                                       
if (Razor6) {
   if (get_val(Razor17)) {
   combo_run(Razor6);}}
   if (get_val(Razor27)<Razor10||get_val(Razor27)>Razor9||get_val(Razor28)<Razor10||get_val(Razor28)>Razor9||get_val(Razor27)<Razor10||get_val(Razor27)>Razor9||get_val(Razor28)<Razor10||get_val(Razor28)>Razor9){
         combo_stop(Razor6);}                                         
if (get_val(Razor17) && get_val(Razor23)) {
  combo_run(Razor15);
  combo_run(Razor45);a=4;b=2;
set_val(Razor23, 0);
      } else {
  combo_stop(Razor15);
}
if (get_val(Razor33) && get_ptime (Razor33) > 300) {
combo_run(Razor56);
set_val(Razor56, 0);
}else {
combo_stop(Razor56);
}                                                                        
if(Razor38){ 
   if(get_val(Razor16))
   set_val(Razor16, 100);
   }																		
if(Razor1){
  if(get_val(Razor16)){combo_run(Razor1);}
  if(get_rumble(RUMBLE_A) <= 50){Razor2 = Razor3;}
  if(get_rumble(RUMBLE_A) > 50){Razor2 = Razor4;}
  if(abs(get_val(Razor28)) >= Razor2+ 10){combo_stop(Razor1);}}
  if(get_val(Razor17) && event_press(Razor34)){
   Razor39 =! Razor39;
   if(Razor39 == TRUE){combo_run(Razor45);a=0;b=2;}
   if(Razor39 == FALSE){combo_run(Razor45);a=2;b=0;} 
   }
   if(Razor39){
     if(get_val(Razor16)){
        combo_run(Razor39);                                          
       } 
     } 											   
if (get_val(Razor17)) {
         if (event_press(Razor24)) {
                combo_run( Razor50);
                combo_run(Razor45);a=0;b=2;
       }
         set_val(Razor24, 0);
         }														
if(get_val(Razor24) && event_press(Razor33)){
   Razor12 =! Razor12; 
   if(Razor12 == TRUE){combo_run(Razor45);a=0;b=2;} 
   if(Razor12 == FALSE){combo_run(Razor45);a=2;b=0;}
    rumble_A_if_true(Razor12);
}

if(Razor12){
   if(get_val(Razor17)> 95){
      combo_run(Razor12);}
   if(event_release(Razor17)){ combo_stop(Razor12);
}

if (get_val(Razor17)) { 
if (event_press(Razor24)) {
    combo_run(Razor46);
    combo_run (Razor45); a=4;b=2;
}} 																		
if(get_val(Razor17) && event_press(Razor31)){
   Razor43=! Razor43;
	if(Razor43== TRUE){combo_run(Razor45);a=0;b=2;}
    if(Razor43== FALSE){combo_run(Razor45);a=2;b=0;} 
    }
if(Razor43){
   if(get_val(Razor30) <= -20){set_val(Razor20, 100);
}
if (a) 
{                                                                           
 if (i < num) 
 {                                                                     
  if (!combo_running(master)) 
  {                                                      
   combo_run(master);                                                                 
  }  
 
  } 
  else if (i > num) 
  {                                                            
       a = FALSE;                                                                   
  }                                                                                
    }                                                                                    
 
    if(Razor53)                                                                     
    {                                                                            
      if(get_val(Razor52) && get_ptime(Razor52) > Razor54)                     
      {                                                                                
          edit = TRUE;                                                                       
      }   
    }                                                                                  
      else if(!Razor53)                                                         
      {                                                                                
        if(get_val(Razor52))                                                           
        {                                                                                
        edit = TRUE;                                                                       
        }                                                                                
        }  
   if (edit == TRUE) 
    {                                                                  
     resetPress(0,1,0,0,0,0);                                                         
   if (get_val(Razor26)) 
    {                                                        
     Razor6 = TRUE;                                                                
     Razor12  = TRUE;                                                                
    }   
 
     if (event_release(Razor16) || get_val(Razor55) || get_val(Razor25)) 
     {   
      set_click(Razor26, 1, 0);                                                  
      edit = FALSE;                                                                
      }                                                                                
       }
}
if(get_val(Razor17) && event_press(Razor19)){
   Razor35 =! Razor35;
   if(Razor35 == TRUE){combo_run(Razor45);a=0;b=2;}
   if(Razor35 == FALSE){combo_run(Razor45);a=2;b=0;} 
   }
   if(Razor35){
      if(Razor36){if(get_val(Razor16)==0&&get_rumble(RUMBLE_A)||get_rumble(RUMBLE_B)){combo_run(Razor35);}}
      if(Razor37){if(get_val(Razor17)&&get_val(Razor16)){combo_run(Razor35);}}
      }
   }
}                                                 				
//LEDs.
// If the LED flashes Green, you have enabled a modification.
// If the LED flashes Red, you have disabled a modification.
// If the LED flashes Yellow, you are using an un-togglable modification.

combo Razor35{
set_val(Razor18,100);
wait(Razor48);                                                                     
wait(Razor49); 
set_val(Razor18,100);
}
combo Razor6 {
set_val(Razor28, (Razor7));
wait(Razor11)
set_val(Razor27, (Razor7));
wait(Razor11)
set_val(Razor28, (Razor8));
wait(Razor11)
set_val(Razor27, (Razor8));
wait(Razor11)
set_val(Razor28, (Razor7));
wait(Razor11)
set_val(Razor27, (Razor7));
wait(Razor11)
set_val(Razor28, (Razor8));
wait(Razor11)
set_val(Razor27, (Razor8));
wait(Razor11)
}     										 
combo Razor56 {
set_val(7, 100);
wait(50);
wait(50);
set_val(7, 100);
wait(50);
set_val(10, 100);
wait(20);
set_val(3, 100);
wait(50);
wait(50);
set_val(3, 100);
wait(50);
set_val(10, -100);
wait(20);
set_val(4, 100);
wait(50);
wait(50);
set_val(4, 100);
wait(80);
wait(80);
set_val(7, 100);
wait(50);
wait(50);
set_val(7, 100);
wait(240);
}             						
combo Razor45 {
if(Razor45){set_rumble(RUMBLE_B,65);}
set_led(LED_1, 0);
set_led(LED_2, a);
set_led(LED_3, b);
set_led(LED_4, 0);
wait(550);
set_led(LED_1, 0);
set_led(LED_2, 0);
set_led(LED_3, 0);
set_led(LED_4, 0);
wait(250);
set_led(LED_1, 0);
set_led(LED_2, a);
set_led(LED_3, b);
set_led(LED_4, 0);
wait(250);
set_led(LED_1, 0);
set_led(LED_2, 0);
set_led(LED_3, 0);
set_led(LED_4, 0);
wait(250);
set_led(LED_1, 0);
set_led(LED_2, a);
set_led(LED_3, b);
set_led(LED_4, 0);
wait(250);
reset_leds();
}                                                                        
combo Razor12 {
set_val(Razor17, 100);
wait(Razor13);
set_val(Razor17, 0);
wait(Razor14);
}
combo Razor46 {
set_val(Razor17, 100);
wait(50);
set_val(Razor16, 100);
wait(350);
set_val(Razor23, 100);
wait(100);
set_val(Razor23, 0);
wait(300);
set_val(Razor16, 100);
wait(1500);
set_val(Razor16, 0);
}												
combo Razor15 {
set_val(Razor16,100);
wait(100);
wait(250);
set_val(Razor16,100);
}																	                                                              
    
combo Razor39 {
      set_val(Razor16, 100); 
      wait(Razor41);
      set_val(Razor16, 0); 
}
function rumble_A_if_true(var) {
if (var) Razor44 = RUMBLE_A;
else Razor44 = RUMBLE_B;
combo_run(Vibrate);
}
combo master {                                                                           
wait(WAIT);                                                                             
set_val(button, 100);                                                                   
wait(28);                                                                               
set_val(button, 0);                                                                     
wait(28);                                                                               
i = i + 1;                                                                              
} 															
combo Razor50 {
set_val(Razor18, 100);
wait(15);
set_val(Razor18, 0);
wait(15);
set_val(Razor16, 100);
wait(15);
set_val(Razor16, 0);
wait(50);
set_val(Razor18, 100);
wait(15);
set_val(Razor18, 0);
}																		
combo Razor1 {
set_val(Razor28, Razor2);
wait(Razor5);
set_val(Razor28, Razor2);
wait(Razor5);
}
combo Vibrate {
set_rumble(Razor44, 100);
wait(300);
reset_rumble();
}
function resetPress(P0,P1,P2,P3,T,S) {                                              
if(!P0){pressedIt[0] = FALSE;}    else if(P0) {pressedIt[0] = TRUE;}                     
if(!P1){pressedIt[1] = FALSE;}    else if(P1) {pressedIt[1] = TRUE;}                        
if(!P2){pressedIt[2] = FALSE;}    else if(P2) {pressedIt[2] = TRUE;}                        
if(!P3){pressedIt[3] = FALSE;}    else if(P3) {pressedIt[3] = TRUE;}                      
}                                                                                        
 
function set_click(B, Num, Wait) {                                                      
    WAIT = Wait;                                                                            
    i = 0;                                                                                   
button = B;                                                                              
num = Num;                                                                               
a = TRUE;                                                                                
}                                                                                       
int edit = FALSE;                                                                       
int pressedIt[6];                                                                       
int WAIT;                                                                                
int num, i;                                                                           
int button;   

 
   




 



         

 
           


   























                                                                                      
                                                                                                                                 


            