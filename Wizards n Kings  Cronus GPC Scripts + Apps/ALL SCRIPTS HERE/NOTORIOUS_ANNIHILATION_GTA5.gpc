/*
 MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNNNNNNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNNdhyoo+//::::------------:://+ooyydmNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMmmhss++///::..`````                ```..::///++sshdmMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNddyyoo/-.                                          ../+oyyddmMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNNdds/:                                                        ::shdmmMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNNmss.``                                                            ``.++mNNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMs:-``                                                                  ``--smNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNN/:.                                                                          .:/ddMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMmoo`                                                                              `//mNNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMmhs  `.```                                                                      ```.`  osdMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNN/  ``++/:-                                                                      --/o/``  oNNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM//-`:dd+/.                                                                          .:/dd:--./MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNNyshhy::``                                                                            ``--yhysyNNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMmms/:``    `..``                                                               `..``     :/sdmNNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMyy:    ::/++oo///::--.``                                              ```--::://oo++//:``  :syMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNmm` `..::hddddhhyyyssoo::-``                                          ``.-:oossyyyhhhdddh//-.` .hhNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMd--``/yhmmhh/.``````..//++/::``                                        ::/++//-.```````/yymmdd+````mMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMmds  hdmNh--.``         ```````                                          ```````         ```..dmmmh  osdMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMmhhssdmo:-  ```..--::-.`                                                        ``-::--...``  --ohhyyyymMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNmmddoo- `--++osyyyhhyss++:-.                                              `.-++ssyhhyyyyo++::` -/+ddmmNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNNdd-.` `//yymMMMMMMMMMNNys+::..``          ````       `..           `..-:+oyNNMMMMMMMMMmhy++` ``-hhNNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNNmdd``   ``//hMMMMMMMMMMMMMMNmss/:-..`````..++:-.    `.:oo..`````..--:ooNNMMMMMMMMMMMMMMho+``    .yymNNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMm++     ``mNMMMMMMMMMMMMMMMMMMMNNNNmyysoymmmm:`       :ddNNyosyymmNNNNNMMMMMMMMMMMMMMMMMMd..    `::mMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMd--    .++NMMMMMMMMMMMMMMMMMMMMMMMMMNNNNNMN--`        `--mmNNNNNMMMMMMMMMMMMMMMMMMMMMMMMMNhh`    ``mMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMd--    `//NNMMMMMMMMMMMMMMMMMMMMMMMMMMmdy//    .++oo.`   //sydMMMMMMMMMMMMMMMMMMMMMMMMMMMmss`    ``mMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMm++     ..hdmMMMMMMMMMMMMMMMMMMMMMNNhh+/-  ``/+sddmms+/..  -:+yyNNNMMMMMMMMMMMMMMMMMMMMNmh--    `::mMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNmm..`    //hMNmmmmNMMMMMMMMMMMMMmdh--`   `//mMMMMMMMMdoo``  `..hhmNNMMMMMMMMMMMNNNmmMMdyo    ``-ssNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMss:..   `sNmoooohMMMMMMMMMMMNNy/:    `.-MMMMMMMMMMMMMM//`    --ymNMMMMMMMMMMMdys//NNo..  ``:+sMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMo-.    `.-yy.`..-oodddmdoo:-.      .++MMMMMMMMMMMMMMyy-      `.-++dddmdss--.`-ss::.    ``sNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMyy:``      `..``` `..-----..`        -ssMMMMMMMMMMMMMMdd:        ```-----..`````..``       -+sMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNyy:-`            `     `````           /ddNNNNhoooohmmmNNN/``         `````                  `.-ssNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMmoo`               `.-:::/-.`         ``/hyssss/``  /oossyy:.`         ``-::::--`               `::mMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNdd:-.````    ```.-+syNNys/``         ``...              ```.`         ``/oyNNhy+--```````````..:yyNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNNhso::::::://mNNNNNN-``                                               `:ddNMNNdoo:::::::oohNNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNNNmmmmmmmmmMMMMNhh:.`    :/-                                .:-..   `-ooMMMMMNNmmmmmddmNNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMhhmNNMMMMMMNmmhyyssyydds::::ossyyyyssso+++sssyyyysso//--sdhhhssssyhhMMMMMMMMMdhhNNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMhysosddMMMMMNNNNNNNhhsssyysssssyyddyyhddddyyhddhhsssyyyyyssyyNNNNNNNMMMMNmmsoooyMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMmd+`.++dmNMMMMMMMNm--` /hyss:..--++-.+hhdd/-:++::-.:oohh:````mmNMMMMMMNNdss` /yhMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMy/:  ::yMMMMMMmhs                                          //dMMMMMMhs+  ``yMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMmoo.```````````````````````````/+yMNhh-```````````````````````````ohdMMMMo:-`````````````````````````-/+MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMd    .:+MMMMmys     ``--`   `yy-``      :hy    `....`    ::hMMMMss-    hdNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMmmy..                            oydMm::`                           sNNMMhh:``                         `.:MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMm//`  `.ssNMNNd``  /ddmm/-::/NNdhyyyyyyyhNNoo:./dddd:    dmNMNdd..` `--mNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMho/                              hmNMm--`                         ..yMMMM//.                           ``-MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNhh`   `//NMMMNss++yMMMMdhhhhMMMNNNNNNNNNMMmmhydMMMMy++ooMMMMmss    .ooNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMo-.         .-://////////////////mMMMNoo+////..          ``///////oodMMMM.``        `--////:``         `-:MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMmm.    ..mMMMMMMmdNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMmmmNNMMMMm++    .yyMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMM+`          +ohNNNNNNNNNNNNNNNNNNMMMMMMMMMMMN::`        `..MMMMMMMMMMMMNN`          .ssmNNNh``         -+oMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNyy`    --mMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMmoo    `//NMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMNN/           syysssssssssssssssyNNNMMMMMMMMMMN``         .//MMMMMMMMMMMNdd           .ssssss+           /hhMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMd``    `++NMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNyy`      dNNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMss-           ++:```````````````-ddNMMMMMMMMMMm           -yyMMMMMMMMMMMd++            ```````           oNNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNNh      `--dmNMMMMMMMNNNNMMMMMMMMMMMMMMMMMMMMMMMMMMNNMMMMMMMNNd::       hdNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMM::.         ..--`               .NNMMMMMMMMMmhy           /mmMMMMMMMMMMMh..                            ``sMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNhh-.`  ``-:+syMMMMdoo::mMMMN++dNdys++dMd++mmNMd////dMMMMhh+:-``  ``-yyNNNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMM..`        `//++/:-``         `.-MMMMMMMMMMMh++         ``+MMMMMMMMMMMMMh``         .--::::.           -:yMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMys+:-``  .-:ddNMy--  +oooo``/o/--..+o/``++oo/  ``yMMNN//.    --+oyMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMNNN`          .sshdhhs``         .:/MMMMMMMMMMMy--         .-oMMMMMMMMMMMNmy           /yyhhyy:           +sdMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMmhy::``  `++mMy::``````                 `````--hMmyy    `::yymMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMNdd           -mmNNNNh           :ssMMMMMMMMMMMs           /+yMMMMMMMMMMMhs+           sMMMMmm/           dNNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM/:.    hmmNm:://:..``..........``..:/:::mmmNy    `./NNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMd++              ````            oNNMMMMMMMMMNmo           ymNMMMMMMMMMMMo:-         ..yMMMMso-         ``mMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNNo     `+mmNNddmNNmmNNNNNNNNNNmmNNmmmmmNN/``    ommMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMd//                            ``oMMMMMMMMMMMys/           hNMMMMMMMMMMMM/``         ++dMMMM/:.         ..mMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMh+/    `-----.---::::::::::::::---------`    --hMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMmyy..`       `                 -:yMMMMMMMMMMMs+:`    `  `--dMMMMMMMMMMMMM/``         hhmMMMM:-`        .ooNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNdh--            `````      ```            ``yhmMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMNNNoo++++++++++++++++++++++++++sydMMMMMMMMMMMhys+++++++++ssmMMMMMMMMMMMMMy+++++++++++NNNMMMMso+++++++++oddNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNss//::-``                          --://ooMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNmdhy::-..``              ``..-::yydmNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNNddy++--.````````..-//yhdNNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNNNmmmmmddddmmmmmNNNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMmhhhhhhhhhhhhhhhhhhhhhhhddNMMMMMMMMNmmhhhhhhhhhhhhhhhhhhhhhddNMMMMMMNNmhhhhhhhhhhhhhhhhhhhhhhhNNMMMMMMMmddhhhhhhhhhhhhhhhhhhhhhmmNMMMMMMNNmhhhhhhhhhhhhhhhhhhhhhhhmmNMMMMMMMMNhhhhhhhhhmNNMMMMMMNmmhhhhhhhhhhhhhhhhhhhhhhhNMMMMMMMMNhhhhhhhhhmmNMMNNhhhhhhhhhmNNMMMMMMNddhhhhhhhhhhhhhhhhhhhhhhhdNN
MMMMMMMMM+.``````````````````````--mMMMMMMMMdoo`````````````````````..hMMMMMMdy+```````````````````````dNNMMMMNNs..`````````````````````oomMMMMMMNms```````````````````````++hMMMMMMNNd`````````shmMMMMMMdoo`````````````````````..hMMMMMMMMh`````````ssdMNdd.````````+dmMMMMMMN//.``````````````````````:hh
MMMMMMMNN/                       ``mMMMMMMMMs``                       yMMMMMMo:-                       mMMMMMMyy:                       ::dMMMMMMhs+                       ``sMMMMMMdyo         hmNMMMMMMs``                       yMMMMMMNmy         sydMmss`        oMMMMMMMNm``                       /NN
MMMMMMMdh:                         mMMMMMMmm+                         yMMMMMM+..                     ``mMMMMMM+/.                       ::dMMMMMMo/-                       ..sMMMMMMh+/         dNMMMMMNNo                         yMMMMMMdyo         dNNMm//`      ``oMMMMMMmhs                         /MM
MMMMMMMso-      ``.////-         ``mMMMMMMhy/        `////:``       ``hMMMMMMyo+////.        `..////+ooNMMMMMM:.`      `.-////-         //dMMMMMM+-.      `..////:         -:yMMMMMMy:-       ..dMMMMMMdh+        `////:``         yMMMMMMy+:       ``mMMMd..       `.sMMMMMMho+       ``:////``       ``/MM
MMMMMMM//.      `.:dddd/``       ..mMMMMMMo+-       `.ddddo.`       ..hMMMMMMmdddddd:        `++hddddmmMMMMMMM-`       .//ddhh+         oomMMMMMM/``      `::hddds         ++hMMMMMMo..      `--mMMMMMMso:       ``ddddo..       ..yMMMMMMo:-       ..NMMMd``       --sMMMMMMy/:       ..sdddh//:------//sMM
MMMMMMM-.`      ``/MMMM+``      `//mMMMMMM/-.      ``.MMMMs``       ::dMMMMMMMMMMMNN/        .yyNMMMMMMMMMMMNN.        -+oMMmmo        `ddNMMMMMM/        `--dmdds         yymMMMMMMo``      `::mMMMMMM/-.       `.MMMMy``       --hMMMMMM+.`       ..NMMMd         //hMMMMMMs..       ``ymmmdsssoooossdmmMM
MMMMMMM``       .:+MMMM+        .ssNMMMMMM:``      `-:MMMMs         ++dMMMMMMMMMMMhh:        -mmMMMMMMMMMMMNmm.        :yyMMys/        `MMMMMMMMM:        `..::-..         mMMMMMMMM+        `oomMMMMMM:``      `.-MMMMy         ++dMMMMMM+``      `::NMMNd         oydMMMMMMs``       ``-:::::::::::ssmMMMM
MMMMMMM`        :oyMMhh:        .ddNMMMMMM-        .++MMNNo         yymMMMMMMMMMMM++.        -MMMMMMMMMMMMMNyy`        +NNMM+:.        `MMMMMMMhh-                      `--NMMMMMMmd/        .ddNMMMMMM-`       .//MMNNs         ssmMMMMMM/        .ssNMdyo         dNMMMMMMMo                       ``hMMMM
MMMMNmm         /yhMMss-        .NNMMMMMNN.        -ssMMhy+         NNNMMMMMMMMMMM::.       `:MMMMMMMMMMMMMm++`        oMMMM/.`      `..MMMMMMNoo.                      .ssNMMMMMMys:        .NNMMMMMMM-        -osMMdy+         mmNMMMMdd:        -mmNMy+:         mMMMMMMmm+                         yMMMM
MMMMmhh         ommMM+/.        -MMMMMMNhh.        /ddMMs+-        `MMMMMMMMMMMMMM-.`      `./MMMMMMMMMMMMMm--       ``oMMMM:``      `-:MMMMMMN//`                      .ooNMMMMMM+/.        .MMMMMMNdd.        /ddMMs+:         MMMMMMMss-        -NNMMs:-       ``mMMMMMMdh+                         hMMMM
MMMMmoo         sMMMM:-`      ``:MMMMMMNoo`        +MMMM+-.       `.MMMMMMMMMMMMMM``       -/oMMMMMMMMMMMMMd..       ..oMMMM-        .++MMMMMMN--`      ``.////.        `//NMMMMMM:-`      ``-MMMMMMNoo.        +MMMMo:.       ``MMMMMMM//.        :MMMMo..       ..mMMMMMMhy+........-////-         ..hMMMM
MMMMh--       ``yMMMM.`       .-/MMMMMMm::`       `+MMMM:``      `.-MMMMMMMMMMMMNN         :oyMMMMMMMMMMMMMd``       ::yMMNN-        :yyMMMMMMN``       -:oMMNN/        .ssNMMMMMM-``      .-/MMMMMMm::`        +MMMM/.`      `..MMMMMMM:-`      ``:MMMM+``      `::mMMMMMMso/------:/+MMMMs``       ::dMMMM
MMMMh``       --yMMMM`        -+oMMMMMMm..       ``+NNNN:        .//MMMMMMMMMMMNdd         +hdMMMMMMMMMMMMNd         +ohNmss.        /mmMMMMMMN         /oyMMdd:        -ddNMMMMMM.        ./+MMMMMMm--`      ``+NNNN:``      `::MMMMMMM``       .-+NNNN+        `ooNMMMMMM:.`      `-:NNNNs         ++dMMMM
MMMMh         ::hMNNN`        /yhMMMMMMm``         `----`        -ssMMMMMMMMMMMmyy         sNNMMMMMMMMMMMmhy         `..--..         +NNMMMMNmd         +ydMMss-        -NNMMMMMMM.        :syMMMMMMm``         `----`        -ooMMMMMMM`         ``----`        .hhNMMMMMM-         ``----.         yymMMMM
MMMMy         oodMNhh`        omNMMMMMMm                         :ddMMMMMMMMMMMd//        `sMMMMMMMMMMMMMdyo                       ``+MMMMMMmyy         smNMM//.       `:MMMMMMNhh`        +mmMMMMMMm                         :ddMMMMMMM                         .NNMMMMMMM-                         mmNMMMM
MMmds         hdmMm++`        oMMMMMMMMm``                     `.+NNMMMMMMMMMMMh--       ``yMMMMMMMMMMMMMmhs                       :/yMMMMMMd++         yMMMM-.`      `./MMMMMMmoo`        oMMMMMMMMm``                     `.+NNMMMMMMM``                     `-/MMMMMMNdd.                      `..MMMMMMM
MMdhs---------NMMMm++---------yMMMMMMMMm//---------------------/+yMMMMMMMMMMMMMd::-------//hMMMMMMMMMMMMMNmh-----------------------ydmMMMMMMd++-------::hMMMM::-------:/oMMMMMMmoo---------yMMMMMMMMN//---------------------/+yMMMMMMMMM::---------------------/syMMMMMMNhh:----------------------:++MMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM


                                                                  ░█████╗░███╗░░██╗███╗░░██╗██╗██╗░░██╗██╗██╗░░░░░░█████╗░████████╗██╗░█████╗░███╗░░██╗
                                                                  ██╔══██╗████╗░██║████╗░██║██║██║░░██║██║██║░░░░░██╔══██╗╚══██╔══╝██║██╔══██╗████╗░██║
                                                                  ███████║██╔██╗██║██╔██╗██║██║███████║██║██║░░░░░███████║░░░██║░░░██║██║░░██║██╔██╗██║
                                                                  ██╔══██║██║╚████║██║╚████║██║██╔══██║██║██║░░░░░██╔══██║░░░██║░░░██║██║░░██║██║╚████║
                                                                  ██║░░██║██║░╚███║██║░╚███║██║██║░░██║██║███████╗██║░░██║░░░██║░░░██║╚█████╔╝██║░╚███║
                                                                  ╚═╝░░╚═╝╚═╝░░╚══╝╚═╝░░╚══╝╚═╝╚═╝░░╚═╝╚═╝╚══════╝╚═╝░░╚═╝░░░╚═╝░░░╚═╝░╚════╝░╚═╝░░╚══╝

 ☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻ ANNIHILATION MOD MENU ☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻

                                    * Enter Menu   = L2 + OPTIONS                               * Next Mod     = RIGHT
                                    * Switch Menu  = CROSS                                      * Adjust +     = UP
                                    * Exit Menu    = CIRCLE                                     * Adjust -     = DOWN
                                    * Previous Mod = LEFT                                       * Toggle ON    = UP
                                    * Toggle OFF   = DOWN                                       * Aim Assist = LEFT + L1
                                    * Show Slot    = R3 + LEFT                                  * Aim Abuse  = LEFT + L2
                                    * Rapid Fire = LEFT + R2
  
☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻

* Sprint Assist  = CROSS + DOWN  (TRIANGLE ALSO DE-ACTIVATES) 
* Driving Assist = CROSS + UP	 (TRIANGLE ALSO DE-ACTIVATES) (ACTIVATE ONCE IN YOUR VEHICLE)
* Chopper Assist = CROSS + LEFT	 (TRIANGLE ALSO DE-ACTIVATES) (ACTIVATE ONCE IN YOUR CHOPPER)
* Plane Assist   = CROSS + RIGHT (TRIANGLE ALSO DE-ACTIVATES) (ACTIVATE ONCE IN YOUR PLANE)   (NOT TESTED IN JETS)

☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻	
	
  
* Fast Snack    = CIRCLE + LEFT  (EGGCHASER 1st Choice Keep Them Stocked Up)
* Fast Armour   = CIRCLE + RIGHT (Super Heavy Armour Keep It Stocked Up)
* Fast Vehicle  = CIRCLE + DOWN  (If You Have A Personal Assisgned/Available)
* Fast Aircraft = CIRCLE + UP    (If You Have A Personal Assisgned/Available)

☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻

* Fast Passive    = TRIANGLE + RIGHT
* Instant Suicide = TRIANGLE + LEFT  

☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻ 
  
* Auto Jog    = LY 
* Auto Sprint = LY 

* Quick Roll  = L3      
* Quick Map   = SHARE   
☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻

*/
                                                                                                                                                                                                                                                                                                                                                                                 const image _712309419726356419_ = {127, 63, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFF, 0xFF, 0xFF, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xFF, 0xFF, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x9F, 0xFF, 0xFF, 0xFF, 0x98, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x3F, 0xFF, 0xFF, 0xF9, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x0F, 0xFF, 0xFF, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x07, 0xFF, 0xFC, 0x38, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x1F, 0xFF, 0xFF, 0xFF, 0xFC, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC1, 0xFF, 0xFF, 0xFE, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0xFF, 0xFF, 0xF0, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x3C, 0xCF, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x03, 0xC0, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x0F, 0xC0, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x38, 0xC0, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0xC0, 0xC0, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x03, 0x00, 0xC0, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x0E, 0x01, 0xC0, 0x98, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xF7, 0xFC, 0x03, 0xFE, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFC, 0xF8, 0x43, 0xCF, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xE1, 0xE7, 0xE7, 0x83, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xFF, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0D, 0xFF, 0xF9, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x08, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x3F, 0xFF, 0xF0, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x76, 0x76, 0x61, 0x80, 0x00, 0x00, 0x0F, 0xFF, 0x8F, 0xFF, 0x1F, 0xFE, 0x00, 0x00, 0x00, 0x18, 0x40, 0x00, 0xC6, 0x00, 0x00, 0x00, 0x1E, 0x00, 0x07, 0xC0, 0x3C, 0x7C, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x3C, 0x00, 0x07, 0x80, 0xF8, 0x78, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0xF8, 0x00, 0x0F, 0x01, 0xF1, 0xF0, 0x00, 0x00, 0x01, 0xC0, 0x00, 0x00, 0x38, 0x00, 0x00, 0x01, 0xF7, 0xF0, 0x3E, 0x03, 0xFF, 0xE0, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x70, 0x00, 0x00, 0x03, 0xCF, 0xE0, 0x7C, 0x07, 0xFF, 0x80, 0x00, 0x00, 0x01, 0xC2, 0x00, 0x03, 0x80, 0x00, 0x00, 0x0F, 0x87, 0x80, 0xF0, 0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0xC7, 0xFF, 0xCE, 0x00, 0x00, 0x00, 0x1F, 0x1F, 0x03, 0xE0, 0x3E, 0x3E, 0x00, 0x00, 0x00, 0x00, 0xC1, 0x0C, 0x30, 0x00, 0x00, 0x00, 0x3F, 0xFE, 0x07, 0xC0, 0x78, 0x7C, 0x00, 0x00, 0x00, 0x01, 0xC0, 0x00, 0xE0, 0x00, 0x00, 0x00, 0x7F, 0xF8, 0x0F, 0x81, 0xF0, 0xF0, 0x00, 0x00, 0x00, 0x01, 0xF8, 0x1F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xF0, 0x7F, 0xF0, 0xFF, 0xC3, 0xFF, 0x07, 0xFE, 0x0F, 0x0F, 0xFE, 0x1E, 0x3C, 0x3F, 0xF8, 0x7F, 0xF0, 0xFF, 0xE1, 0xFF, 0x07, 0xFE, 0x0F, 0xFC, 0x1E, 0x1F, 0xFC, 0x3C, 0x70, 0x7F, 0xF0, 0xE1, 0xC1, 0xE3, 0x80, 0xF0, 0x0E, 0x3C, 0x1C, 0x78, 0x38, 0x3C, 0x70, 0x70, 0xE0, 0xE1, 0xC1, 0xC3, 0x83, 0x87, 0x01, 0xE0, 0x3C, 0x78, 0x78, 0xF0, 0x70, 0x70, 0xE0, 0xE3, 0xC1, 0xC0, 0x03, 0x8F, 0x07, 0x1E, 0x03, 0xC0, 0x78, 0xF0, 0xF1, 0xE1, 0xE0, 0xE3, 0xC1, 0xC7, 0x83, 0x80, 0x0F, 0x1E, 0x1E, 0x3C, 0x07, 0x80, 0xF1, 0xE1, 0xFF, 0x83, 0xC3, 0xC7, 0x87, 0x8F, 0x0F, 0xFE, 0x1E, 0x3C, 0x3C, 0x78, 0x0E, 0x01, 0xE3, 0x83, 0xFF, 0x07, 0x87, 0x8F, 0x0F, 0x1E, 0x1F, 0xFC, 0x3C, 0x70, 0x78, 0xE0, 0x1C, 0x03, 0x8F, 0x07, 0x9E, 0x0E, 0x0F, 0x1E, 0x1E, 0x38, 0x00, 0xF0, 0x70, 0xE0, 0xF1, 0xC0, 0x78, 0x07, 0x1E, 0x0E, 0x3C, 0x1C, 0x1E, 0x38, 0x38, 0x70, 0x00, 0xE0, 0xE3, 0xC1, 0xC7, 0x80, 0xF0, 0x1E, 0x3C, 0x3C, 0x78, 0x78, 0x38, 0x70, 0x71, 0xE0, 0xE3, 0xC3, 0xC7, 0x83, 0xFF, 0x01, 0xE0, 0x3F, 0xF8, 0x78, 0xF0, 0xF0, 0x7F, 0xE1, 0xFF, 0xC3, 0xFF, 0x87, 0x8F, 0x0F, 0xFE, 0x03, 0x80, 0x7F, 0xE0, 0xF1, 0xC1, 0xE1, 0xFF, 0xC3, 0xFF, 0x87, 0xFF, 0x0F, 0x1E, 0x0F, 0xF8, 0x07, 0x00, 0xFF, 0xC1, 0xC3, 0x83, 0xC1, 0xFF, 0x03, 0xFE, 0x0F, 0xFC, 0x00};
                                                                                                                                                                                                                                                                                                                                                                                 const image _255895502649838729_ = {127, 63, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFF, 0xFF, 0xFF, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xFF, 0xFF, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x9F, 0xFF, 0xFF, 0xFF, 0x98, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x3F, 0xFF, 0xFF, 0xF9, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x0F, 0xFF, 0xFF, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x07, 0xFF, 0xFC, 0x38, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x1F, 0xFF, 0xFF, 0xFF, 0xFC, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC1, 0xFF, 0xFF, 0xFE, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0xFF, 0xFF, 0xF0, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x3C, 0xCF, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x03, 0xC0, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x0F, 0xC0, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x38, 0xC0, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0xC0, 0xC0, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x03, 0x00, 0xC0, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x0E, 0x01, 0xC0, 0x98, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xF7, 0xFC, 0x03, 0xFE, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFC, 0xF8, 0x43, 0xCF, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xE1, 0xE7, 0xE7, 0x83, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xFF, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0D, 0xFF, 0xF9, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x08, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x3F, 0xFF, 0xF0, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x76, 0x76, 0x61, 0x80, 0x00, 0x00, 0x0F, 0xFF, 0x8F, 0xFF, 0x1F, 0xFE, 0x00, 0x00, 0x00, 0x18, 0x40, 0x00, 0xC6, 0x00, 0x00, 0x00, 0x1E, 0x00, 0x07, 0xC0, 0x3C, 0x7C, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x3C, 0x00, 0x07, 0x80, 0xF8, 0x78, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0xF8, 0x00, 0x0F, 0x01, 0xF1, 0xF0, 0x00, 0x00, 0x01, 0xC0, 0x00, 0x00, 0x38, 0x00, 0x00, 0x01, 0xF7, 0xF0, 0x3E, 0x03, 0xFF, 0xE0, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x70, 0x00, 0x00, 0x03, 0xCF, 0xE0, 0x7C, 0x07, 0xFF, 0x80, 0x00, 0x00, 0x01, 0xC2, 0x00, 0x03, 0x80, 0x00, 0x00, 0x0F, 0x87, 0x80, 0xF0, 0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0xC7, 0xFF, 0xCE, 0x00, 0x00, 0x00, 0x1F, 0x1F, 0x03, 0xE0, 0x3E, 0x3E, 0x00, 0x00, 0x00, 0x00, 0xC1, 0x0C, 0x30, 0x00, 0x00, 0x00, 0x3F, 0xFE, 0x07, 0xC0, 0x78, 0x7C, 0x00, 0x00, 0x00, 0x01, 0xC0, 0x00, 0xE0, 0x00, 0x00, 0x00, 0x7F, 0xF8, 0x0F, 0x81, 0xF0, 0xF0, 0x00, 0x00, 0x00, 0x01, 0xF8, 0x1F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xF0, 0x7F, 0xF0, 0xFF, 0xC3, 0xFF, 0x07, 0xFE, 0x0F, 0x0F, 0xFE, 0x1E, 0x3C, 0x3F, 0xF8, 0x7F, 0xF0, 0xFF, 0xE1, 0xFF, 0x07, 0xFE, 0x0F, 0xFC, 0x1E, 0x1F, 0xFC, 0x3C, 0x70, 0x7F, 0xF0, 0xE1, 0xC1, 0xE3, 0x80, 0xF0, 0x0E, 0x3C, 0x1C, 0x78, 0x38, 0x3C, 0x70, 0x70, 0xE0, 0xE1, 0xC1, 0xC3, 0x83, 0x87, 0x01, 0xE0, 0x3C, 0x78, 0x78, 0xF0, 0x70, 0x70, 0xE0, 0xE3, 0xC1, 0xC0, 0x03, 0x8F, 0x07, 0x1E, 0x03, 0xC0, 0x78, 0xF0, 0xF1, 0xE1, 0xE0, 0xE3, 0xC1, 0xC7, 0x83, 0x80, 0x0F, 0x1E, 0x1E, 0x3C, 0x07, 0x80, 0xF1, 0xE1, 0xFF, 0x83, 0xC3, 0xC7, 0x87, 0x8F, 0x0F, 0xFE, 0x1E, 0x3C, 0x3C, 0x78, 0x0E, 0x01, 0xE3, 0x83, 0xFF, 0x07, 0x87, 0x8F, 0x0F, 0x1E, 0x1F, 0xFC, 0x3C, 0x70, 0x78, 0xE0, 0x1C, 0x03, 0x8F, 0x07, 0x9E, 0x0E, 0x0F, 0x1E, 0x1E, 0x38, 0x00, 0xF0, 0x70, 0xE0, 0xF1, 0xC0, 0x78, 0x07, 0x1E, 0x0E, 0x3C, 0x1C, 0x1E, 0x38, 0x38, 0x70, 0x00, 0xE0, 0xE3, 0xC1, 0xC7, 0x80, 0xF0, 0x1E, 0x3C, 0x3C, 0x78, 0x78, 0x38, 0x70, 0x71, 0xE0, 0xE3, 0xC3, 0xC7, 0x83, 0xFF, 0x01, 0xE0, 0x3F, 0xF8, 0x78, 0xF0, 0xF0, 0x7F, 0xE1, 0xFF, 0xC3, 0xFF, 0x87, 0x8F, 0x0F, 0xFE, 0x03, 0x80, 0x7F, 0xE0, 0xF1, 0xC1, 0xE1, 0xFF, 0xC3, 0xFF, 0x87, 0xFF, 0x0F, 0x1E, 0x0F, 0xF8, 0x07, 0x00, 0xFF, 0xC1, 0xC3, 0x83, 0xC1, 0xFF, 0x03, 0xFE, 0x0F, 0xFC, 0x00};


                                                                                                                                                                                                                                                                                                                                                                                   const uint8 FontSize [][] = {{ 7, 10, 18 },{ 11, 18, 11 },{ 16, 26, 7 }};
                                                                                                                                                                                                                                                                                                                                                                                  const uint8 FontDigits [] = {48,49,50,51,52,53,54,55,56,57};
                                                                                                                                                                                                                                                                                                                                                                                  const string MiscString [] = {"MOD","ON","OFF","Notorious","GTA V MODS","GPC Slot:","Enabled","Disabled","Mod Toggle On/Off"};
                                                                                                                                                                                                                                                                                                                                                                                  const string ModToggle [] = {"", "Aimx Mod" , "XII RadiusBoost"  , "XII Angle Boost" , "  Aim Abuse Mod" , "  Rapid Fire Mod"  , " Auto Sprint Mod"  , " Quick Mod"  , "  Quick Snack Mod"  , "  Quick Roll Mod"  , "Fast Passive Mod" , "Easy way out" , "Instant Vehicle" , "Instant Aircraft" , " Easy Emote Mod" , "Sprint Auto Assist" , " Driver Autopilot " , "Chopper Autopilot" , "Plane Autopilot" , "  Quick Map Mod"  , "   Block Rumble"  , "LED Rainbow Flow" ,"Inventory Menu Position"};
                                                                                                                                                                                                                                                                                                                                                                                 const string ModValue []  = {"", "   Polar Radius"  , "Polar Angle"  , "Polar Radius Boost"  , "Polar Angle Boost" , "  Aimbot Hold"  , "  Aimbot Wait"  , " Rapid Fire Hold"  , " Rapid Fire Wait" , "  Map Idol Time" , " LED Brightness",  " Inventory Menu Position " };
                                                                                                                                                                                                                                                                                                                                                                                 const int16 ModDigitMin [] = { 0  , 1  , 5   , 1  , 1  , 100  , 10 , 20  , 20  , 5000  , 1 , 2};
                                                                                                                                                                                                                                                                                                                                                                                 const int16 ModDigitMax [] = { 0  , 50 , 180 , 20 , 80 , 2000 , 60 , 500 , 500 , 20000 , 50 , 4};
                                                                                                                                                                                                                                                                                                                                                                                 const int16 ModIncrement[] = { 0  , 1  , 1   , 1  , 1  , 10   , 10 , 10  , 10  , 1000  , 1 , 1};

																						   
/*
 
*/

const string KillSwitchL = "KillSwitch";
const string AimAssistL  = "Aim Assist";
const string AimAbuseL   = "Aim Abuse Toggle";
const string RapidFireL  = "Rapid Fire Toggle";
const string SprinterL   = "AutoSprint Assist";
const string DriverL     = "Auto Drive Assist";
const string ChopperL    = "Chopper FlyAssist";
const string PlaneL      = "Plane Fly Assist";

/*
 
*/                                                

define Fire     = PS4_R2;
define Ads      = PS4_L2;
define Cover    = PS4_R1;
define Weapon   = PS4_L1;
define Look     = PS4_R3;
define Stealth  = PS4_L3;
define Enter    = PS4_TRIANGLE;
define Jump     = PS4_SQUARE;
define Sprint   = PS4_CROSS;
define Reload   = PS4_CIRCLE;
define Options  = PS4_OPTIONS;
define InvMenu  = PS4_TOUCH;
define Up       = PS4_UP;
define Down     = PS4_DOWN;
define Left     = PS4_LEFT;
define Right    = PS4_RIGHT;
define RX       = PS4_RX;
define RY       = PS4_RY;
define LX       = PS4_LX;
define LY       = PS4_LY;
define On       = TRUE;
define Off      = FALSE;

/*
 

*/

define KillSwitchHold     = PS4_L2;
define KillSwitchPress    = PS4_SHARE;
						   
define AssistHold         = PS4_LEFT;
define AssistPress        = PS4_L1;
						   
define AbuseSwitchHold    = PS4_LEFT;
define AbuseSwitchPress   = PS4_L2;
						   
define FireSwitchHold     = PS4_LEFT;
define FireSwitchPress    = PS4_R2;

define SprintAssistHold   = PS4_CROSS;
define SprintAssistPress  = PS4_DOWN;

define DriverAssistHold   = PS4_CROSS;
define DriverAssistPress  = PS4_UP;

define ChopperAssistHold  = PS4_CROSS;
define ChopperAssistPress = PS4_LEFT;

define PlaneAssistHold    = PS4_CROSS;
define PlaneAssistPress   = PS4_RIGHT;

/*
 
*/

define FastSnackHold      = PS4_CIRCLE;
define FastSnackPress     = PS4_LEFT;
					      
define FastArmourHold     = PS4_CIRCLE;
define FastArmourPress    = PS4_RIGHT;

define FastArmourHoldVIP     = PS4_SQUARE;
define FastArmourPressVIP    = PS4_RIGHT;

define FastSnackHoldVIP      = PS4_SQUARE;
define FastSnackPressVIP     = PS4_LEFT;

define InstaVehicleHold   = PS4_CIRCLE;
define InstaVehiclePress  = PS4_DOWN;

define InstaAircraftHold  = PS4_CIRCLE;
define InstaAircraftPress = PS4_UP;

define InstaVehicleHoldVIP   = PS4_SQUARE;
define InstaVehiclePressVIP  = PS4_DOWN;

define InstaAircraftHoldVIP  = PS4_SQUARE;
define InstaAircraftPressVIP = PS4_UP;

define QuickRollPress     = PS4_L3;
					      
define FastMap            = PS4_SHARE;
					      
define FastPassiveHold    = PS4_TRIANGLE;
define FastPassivePress   = PS4_RIGHT;

define InstaDeathHold     = PS4_TRIANGLE;
define InstaDeathPress    = PS4_DOWN;

/*
*/

define MenuEnterHold   = PS4_L2;
define MenuEnterPress  = PS4_OPTIONS;
define MenuExitPress   = PS4_CIRCLE;
define ChangeMenuPress = PS4_CROSS;
define FindSlotHold    = PS4_R3;
define FindSlotPress   = PS4_LEFT;

/*
 
*/

define TimeoutLimit  = 1;
define TimeoutLimitM = 20000;
define IndexMinSwitches = 1;
define IndexMaxSwitches = 21;
define IndexMinValues   = 1;
define IndexMaxValues   = 11;

int Position,Update,MenuTimeout,Count,MainMenu,ModIndex,MenuValues,MenuSwitch,NumX,NumY,NumS,Clear;
int Number = 1,Slot = 20000;

int ScrollTime,ScrollWait,ScrollLine,ScrollIndex,ScrollChar;
int ScrollSpeed =  70;
int ScrollDelay = 950;
int ScrollX     =   8;
int ScrollY     =  50;

int ToggleT,ToggleTime,ToggleName,Modled,Saver,Ms,Sec,Min,ScreenTime,LedDec,Rgb,LedInc,Colour[3];
int TimeL,TimerP,TimerE,Length,X_POS1,Y_POS1,X_POS2,Y_POS2,Steps1,Steps2,XorY1,XorY2,Dir1,Dir2;
int Run,Shunt,KillSwitch,Map,RunTime,MapTime,Roll,Sprinter,Driver,Chopper,Plane;
int angle,cos_angle,sin_angle,actual_X,actual_Y,actual_Magnitude,max_Magnitude,Radius,Angle;

/*
 
*/ 

int AimAssistMod = On; 
int FireMod      = Off; 
int Abuse        = On;  
/*

*/ 

int ModDigit;
int PolarRadius   = 10;    
int PolarAngle    = 20;    
int PolarRBoost   = 3;     
int PolarABoost   = 10;    
int AimAbuseHold  = 900;   
int AimAbuseWait  = 20;    
int RapidFireHold = 40;    
int RapidFireWait = 30;   
int MapIdolTime   = 20000; 
int LedBrightness = 10;    
int runtimeInventory = 2;  

/*

*/ 

int ModSwitch;
int AimAssist      =  On; // Aimbot                  -- On or Off 	-- Also Accessed Via Zen Menu In Game --
int RadiusBoost    =  On; // Aim Assist Power Boost  -- On or Off 	-- Also Accessed Via Zen Menu In Game --
int AngleBoost     =  On; // Aim Assist Speed Boost  -- On or Off 	-- Also Accessed Via Zen Menu In Game --
int AimAbuse       =  On; // Aim Abuse               -- On or Off 	-- Also Accessed Via Zen Menu In Game --
int RapidFire      =  On; // Rapid Fire              -- On or Off 	-- Also Accessed Via Zen Menu In Game --
int AutoSprint     =  On; // Auto Sprint + Jog       -- On or Off 	-- Also Accessed Via Zen Menu In Game --
int FastArmour     =  On; // Fast Armour             -- On or Off   -- Also Accessed Via Zen Menu In Game --
int FastSnack      =  On; // Fast Snack              -- On or Off   -- Also Accessed Via Zen Menu In Game --
int QuickRoll      =  On; // Quick Roll              -- On or Off   -- Also Accessed Via Zen Menu In Game --
int FastPassive    =  On; // Fast Passive Mode       -- On or Off   -- Also Accessed Via Zen Menu In Game --
int InstaDeath     =  On; // Fast Suicide            -- On or Off   -- Also Accessed Via Zen Menu In Game --
int InstaVehicle   =  On; // Fast Vehicle            -- On or Off   -- Also Accessed Via Zen Menu In Game --
int InstaAircraft  =  On; // Fast Aircraft           -- On or Off   -- Also Accessed Via Zen Menu In Game --
int SprintAssist   =  On; // Auto Run/Sprint         -- On or Off   -- Also Accessed Via Zen Menu In Game --
int DriverAssist   =  On; // Auto Driver             -- On or Off   -- Also Accessed Via Zen Menu In Game --
int ChopperAssist  =  On; // Auto Chopper            -- On or Off   -- Also Accessed Via Zen Menu In Game --
int PlaneAssist    =  On; // Auto Plane              -- On or Off   -- Also Accessed Via Zen Menu In Game --
int QuickMap       =  On; // Fast Map                -- On or Off   -- Also Accessed Via Zen Menu In Game --
int BlockRumble    =  On; // Block Rumble            -- On or Off   -- Also Accessed Via Zen Menu In Game --
int LEDRainbowFlow =  On; // LED Flow                -- On or Off   -- Also Accessed Via Zen Menu In Game --

/*
 
*/ 

init {

    combo_run(Boot);
    LedInc = 1
    Colour = 150;
}

/*

*/ 

main {
	
	if (BlockRumble)
        block_rumble();

	if (get_ival(Ads) <= 90) set_val(Ads,0);




    
    if (!MainMenu) {
    
        if (get_ival(KillSwitchHold) >= 90 && event_press(KillSwitchPress)) {
            Shunt = KillSwitchPress;
            KillSwitch = !KillSwitch;
            ToggleName = On;
            Toggle(KillSwitch,KillSwitchL[0]);
        }
        
	    if (!KillSwitch) {
	    
	    	if (AutoSprint) {
	    	
	    		if (get_ival(LY) <= -60 && event_press(Sprint) && get_brtime(Sprint) < 250)
	    			Run = On;
	    	
	    		if (get_ival(LY) > -60 || event_press(Ads) || event_press(Fire) || event_press(InvMenu) || event_press(Options)) 
	    			Run = Off;
	    		
	    			if (Run) 
	    				combo_run(AutoSprint);
	    					
	    				else if (!Run) {
	    				
	    					if (get_ival(LY) <= -95 && RunTime < 950)
	    						RunTime += get_rtime();
	    					
	    						if (RunTime >= 950)
	    							set_val(Sprint,100);
	    				
	    							if (get_ival(LY) > -95)
	    								RunTime = Off;
	    				}
	    	}//EOAS
	    
	    	if (AimAssist) {
    			
    			if (get_ival(AssistHold) >= 90 && event_press(AssistPress)) {
        			Shunt = AssistPress;
        			AimAssistMod = !AimAssistMod;
        			ToggleName = On;
        			Toggle(AimAssistMod,AimAssistL[0]);
    			}

    			if (AimAssistMod) {

        			if (get_ival(Ads) >= 90) {
			            actual_X = get_ival(RX);
			            actual_Y = get_ival(RY);
			            actual_Magnitude = isqrt(pow(actual_X,2) + pow(actual_Y,2));
			            max_Magnitude = (actual_Magnitude < 100);

		            	if (RadiusBoost && get_ival(Fire)) {
		                	Radius = PolarRadius + PolarRBoost;
		            	}
		                	else {
		                    	Radius = PolarRadius;
		                	}
		            
		                    	if (AngleBoost && get_ival(Fire)) {
		                        	Angle = PolarABoost;
		                    	}
		                        	else {
		                            	Angle = 0;
		                        	}
		                                 
		                angle += PolarAngle + Angle;
		                angle = angle % 360;
		                sin_angle = DamPolar[angle % 360];
		                cos_angle = DamPolar[(angle + 270) % 360];
		                cos_angle = (cos_angle * Radius) / 100;
		                sin_angle = (sin_angle * Radius) / 100;
		
		            	if (actual_Magnitude <= 7) { 
		                	sin_angle -= actual_Y; 
		                	cos_angle -= actual_X; 
		            	}
		                	else { 
		                    	sin_angle = (sin_angle * (200 - ((abs(actual_Y) + actual_Magnitude) / 10) * 10) / 200) * max_Magnitude; 
		                    	cos_angle = (cos_angle * (200 - ((abs(actual_X) + actual_Magnitude) / 10) * 10) / 200) * max_Magnitude; 
		                	} 
		
		            	set_val(RX,clamp(actual_X + cos_angle, -100,100));
		            	set_val(RY,clamp(actual_Y + sin_angle, -100,100)); 
        			}
    			}
			}//EOAAS
	    			
	    	if (AimAbuse) {
	    		
	    		if (get_ival(AbuseSwitchHold) >= 90 && event_press(AbuseSwitchPress)) {
            		Shunt = AbuseSwitchPress;
            		Abuse = !Abuse;
            		ToggleName = On;
            		Toggle(Abuse,AimAbuseL[0]);
        		}
	    		
	    		if (Abuse && get_ival(Ads) >= 90)
	            	combo_run(AimAbuse);
	            
	            	else 
	            		combo_stop(AimAbuse);
	        }//EOAAB
	    	
	    	if (RapidFire) {
	    		
	    		if (get_ival(FireSwitchHold) >= 90 && event_press(FireSwitchPress)) {
            		Shunt = FireSwitchPress;
            		FireMod = !FireMod;
            		ToggleName = On;
            		Toggle(FireMod,RapidFireL[0]);
        		}
        		
	    		if (FireMod && get_ival(Fire))
            		combo_run(RapidFire);
        		    
            		else 
                		combo_stop(RapidFire);
            }
            
	    	if (FastSnack) {
	    	
	    		if (get_ival(FastSnackHold) >= 90 && event_press(FastSnackPress)) {
	    			Shunt = FastSnackPress;
					if(runtimeInventory == 2)
					{
						combo_run(FastSnack);
						
					}
					else if(runtimeInventory == 3)
					{
						combo_run(FastSnackVIP);
						
					}
					else if(runtimeInventory == 4)
					{
						combo_run(FastSnack_4);
					}
							
	    		}
				
	    	}//EOFS
			
	    	
	    	if (FastArmour) {
	    	
	    		if (get_ival(FastArmourHold) >= 90 && event_press(FastArmourPress)) {
	    			Shunt = FastArmourPress;
	    			if(runtimeInventory == 2)
					{
						combo_run(FastArmour);
						
					}
					else if(runtimeInventory == 3)
					{
						combo_run(FastArmourVIP);
						
					}
					else if(runtimeInventory == 4)
					{
						combo_run(FastArmour_4);
					}
	    		}
	    	}//EOFA
			
    	
	    	if (QuickRoll) {
	    		
	    		if (get_ival(QuickRollPress) && get_ptime(QuickRollPress) >= 1000)
	    			Roll = On;
	    			else
	    				Roll = Off;
	    				
	    		if (!get_ival(Ads) && event_press(QuickRollPress) || Roll) {
	    			Shunt = QuickRollPress;
	    		
	    			if (get_ival(RX) <= 0)	
	    				combo_run(QuickRollL);
	    		
	    				else if (get_ival(RX) > 0)	
	    					combo_run(QuickRollR);	
	    		}
	    	}//EOQR
	    	
	       	if (FastPassive) {
	    	
	    		if (get_ival(FastPassiveHold) >= 90 && event_press(FastPassivePress)) { 
	    			Shunt = FastPassivePress;
	    			combo_run(FastPassive);
	    		}
	    	}//EOFP
	    	
	       	if (InstaDeath) {
	       	
	    		if (get_ival(InstaDeathHold) >= 90 && event_press(InstaDeathPress)) {
	    			Shunt = InstaDeathPress;
	    			combo_run(InstaDeath);
	    		}
	    	}//EOID
	       	
	       	if (InstaVehicle) {
	       		    	
	    		if (get_ival(InstaVehicleHold) >= 90 && event_press(InstaVehiclePress)) {
	    			Shunt = InstaVehiclePress;
	    			if(runtimeInventory == 2)
					{
						combo_run(InstaVehicle);
						
					}
					else if(runtimeInventory == 3)
					{
						combo_run(InstaVehicleVIP);
						
					}
					else if(runtimeInventory == 4)
					{
						combo_run(InstaVehicle_4);
					}
	    		}
	    	}//EOIV 
	       	
	       	if (InstaAircraft) {
	       		    		    	
	    		if (get_ival(InstaAircraftHold) >= 90 && event_press(InstaAircraftPress)) {
	    			Shunt = InstaAircraftPress;
	    			if(runtimeInventory == 2)
					{
						combo_run(InstaAircraft);
						
					}
					else if(runtimeInventory == 3)
					{
						combo_run(InstaAircraftVIP);
						
					}
					else if(runtimeInventory == 4)
					{
						combo_run(InstaAircraft_4);
					}
	    		}
	    	}//EOIA
	       	
	       	
	      /* 	if (EasyEmote) {
	       		    		    		
	       		if (get_ival(EasyEmoteHold) && get_ptime(EasyEmoteHold) >= 700) {
	    			set_val(PS4_L3,100);
	    			set_val(PS4_R3,100);
	    		}
	    	}*/
	    	
	    	if (SprintAssist) {	
	    		
	    		if (!get_ival(Ads) &&  get_ival(SprintAssistHold) && event_press(SprintAssistPress)) {
	    			Sprinter = !Sprinter;
	    			Shunt = SprintAssistPress;
	    			ToggleName = On;
            		Toggle(Sprinter,SprinterL[0]);
	    		}	
	    			if (Sprinter) {
	    				
	    				Driver = Off;
	    				Chopper = Off;
	    				Plane = Off;
	    			    
	    			    if (!get_ival(Fire) && !get_ival(Ads)) {
	    			    	set_val(LY,-100);
	    			    	combo_run(AutoSprint);
	    			    }
	    			    
	    			    if (event_press(Enter)) {
	    			    	Sprinter = Off;
	    			    	ToggleName = On;
            				Toggle(Sprinter,SprinterL[0]);
            			}
	    			}
	    	}//EOSA
	    	
	    	if (DriverAssist) {	
	    		
	    		if (!get_ival(Ads) &&  get_ival(DriverAssistHold) && event_press(DriverAssistPress)) {
	    			Driver = !Driver;
	    			Shunt = DriverAssistPress;
	    			ToggleName = On;
            		Toggle(Driver,DriverL[0]);
	    		}	
	    			if (Driver) {
	    			
	    				Sprinter = Off;
	    				Chopper = Off;
	    				Plane = Off;
	    			    
	    			    if (!get_ival(Fire) && !get_ival(Ads)) 
	    			    	set_val(Fire,100);
	    			    
	    			    if (event_press(Enter)) {
	    			    	Driver = Off;
	    			    	ToggleName = On;
            				Toggle(Driver,DriverL[0]);
            			}
	    			}
	    	}//EODA
	    	
	    	if (ChopperAssist) {	
	    		
	    		if (!get_ival(Ads) &&  get_ival(ChopperAssistHold) && event_press(ChopperAssistPress)) {
	    			Chopper = !Chopper;
	    			Shunt = ChopperAssistPress;
	    			ToggleName = On;
            		Toggle(Chopper,ChopperL[0]);
	    		}	
	    			if (Chopper) {
	    				
	    				Sprinter = Off;
	    				Driver = Off;
	    				Plane = Off;
	    			    
	    			    if (!get_ival(Fire) && !get_ival(Ads)) {
	    			    	set_val(Fire,100);
	    			    	combo_run(Chopper);
	    			    }
	    			    
	    			    if (event_press(Enter)) {
	    			    	Chopper = Off;
	    			    	ToggleName = On;
            				Toggle(Chopper,ChopperL[0]);
	    				}
	    			}
	    	}//EOCA
	    	
	    	if (PlaneAssist) {	
	    		
	    		if (!get_ival(Ads) &&  get_ival(PlaneAssistHold) && event_press(PlaneAssistPress)) {
	    			Plane = !Plane;
	    			Shunt = PlaneAssistPress;
	    			ToggleName = On;
            		Toggle(Plane,PlaneL[0]);
	    		}
	    			
	    			if (Plane) {
	    				
	    				Sprinter = Off;
	    				Driver = Off;
	    				Chopper = Off;	
	    			
	    				if (!get_ival(Fire) && !get_ival(Ads)) {
	    					set_val(Fire,100);
	    					combo_run(Plane);
	    				}
	    				
	    			    if (event_press(Enter)) {
	    			    	Plane = Off;
	    					ToggleName = On;
            				Toggle(Plane,PlaneL[0]);	    			    	
	    				}
	    		}
	    	}//EOPA
	    	
	    	if (QuickMap) {
	    	
	    		if (!get_ival(Ads) && event_press(FastMap)) {
	    			Shunt = FastMap;
	    			Map = !Map;
	    		
	    			if (Map)	
	    				combo_run(QuickMap);
	    			
	    				else
	    					combo_run(QuickOff)
	    		}
	    		
	    		if (Map && MapTime < MapIdolTime)
	    			MapTime += get_rtime();
	    			
	    			if (MapTime >= MapIdolTime || event_press(Reload)) {
	    				Map = Off;
	    				MapTime = Off;
	    			}
	    	}//EOQM
	    }//EOKS	
	}//EOMM
	
	if (!MainMenu && get_ival(MenuEnterHold) >= 90 && event_press(MenuEnterPress)) {

		MenuToggle(On,On,On,On,Off);
	}

	if (MainMenu) {

        Scroll();
        combo_stop(Boot);
        MenuTimeout += get_rtime();

		if (get_ival(Up) || get_ival(Down) || get_ival(Left) || get_ival(Right) || event_press(ChangeMenuPress)) {

			MenuTimeout = Off;
		}

			if (MenuTimeout >= TimeoutLimitM || event_press(MenuExitPress)) {

				MenuToggle(Off,Off,Off,Off,Off);
			}

			if (event_press(ChangeMenuPress)) {

				MenuValues = !MenuValues;
				MenuSwitch = !MenuSwitch;
				ModIndex = On;
				Update = On;
			}


		if (MenuValues) {

			ModDigit[ModIndex] = PrintMod(ModDigit[ModIndex],ModDigitMin[ModIndex],ModDigitMax[ModIndex],ModIncrement[ModIndex],IndexMinValues,IndexMaxValues,ModValue[ModIndex]);
		}

		if (MenuSwitch) {

			ModSwitch[ModIndex] = PrintMod(ModSwitch[ModIndex],Off,On,1,IndexMinSwitches,IndexMaxSwitches,ModToggle[ModIndex]);
		}
				BlockButton(Down); BlockButton(Up); BlockButton(Left); BlockButton(Right); BlockButton(ChangeMenuPress);
	}//EOMM
 
    if (!MainMenu && Saver) { 
        ScreenTime (); 
     	Saver (); 
	} 

    if (!MainMenu && LEDRainbowFlow) { 
        LedFlow();
    }

    if (!MainMenu && get_ival(FindSlotHold) && event_press(FindSlotPress)) {
        Saver = Off;
        ScreenTime = Off;
        Slot = On;
        combo_run(Boot);
    }

    if (ToggleTime) {
        TimeToggle();
    }
    
	if (Shunt) {
        
        if (event_release(Shunt)) {
            Shunt = Off;
        }
            
            else {
                set_val(Shunt,Off);
            }
    }
    
}//EOM	

/* 
 .~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 
(                   Combos                           ) 
 `-~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-* 
*/

combo FastSnack {
	set_val(InvMenu,100);
	wait(400);
	wait(50);
	set_val(Down,100);
	wait(50);
	wait(50);
	set_val(Down,100);
	wait(50);
	wait(50);
	set_val(Sprint,100);
	wait(50);
	wait(50);
	set_val(Down,100);
	wait(50);
	wait(50);	
	set_val(Down,100);
	wait(50);
	wait(50);	
	set_val(Down,100);
	wait(50);
	wait(50);	
	set_val(Down,100);
	wait(50);
	wait(50);	
	set_val(Sprint,100);
	wait(50);
	wait(50);
	set_val(Down,100);
	wait(50);
	wait(50);	
	set_val(Sprint,100);
	wait(100);
	wait(350);
	set_val(InvMenu,100);
	wait(400);
}

combo FastArmour {
	set_val(InvMenu,100);
	wait(400);
	wait(50);
	set_val(Down,100);
	wait(50);
	wait(50);
	set_val(Down,100);
	wait(50);
	wait(50);
	set_val(Sprint,100);
	wait(50);
	wait(50);
	set_val(Down,100);
	wait(50);
	wait(50);
	set_val(Down,100);
	wait(50);
	wait(50);
	set_val(Down,100);
	wait(50);
	wait(50);
	set_val(Sprint,100);
	wait(50);
	wait(50);
	set_val(Up,100);
	wait(50);
	wait(50);
	set_val(Up,100);
	wait(50);
	wait(50);
	set_val(Up,100);
	wait(50);
	wait(50);
	set_val(Sprint,100);
	wait(50);
	wait(50);
	set_val(InvMenu,100);
	wait(400);
}

combo AimAbuse {

	set_val(Ads,100);
	wait(AimAbuseHold);
	set_val(Ads,0);
	wait(AimAbuseWait);
}

combo RapidFire {

    set_val(Fire,100);
    wait(RapidFireHold);
    set_val(Fire,0);
    wait(RapidFireWait);
}

combo AutoSprint {

	set_val(Sprint,100);
	wait(40);
	set_val(Sprint,0);
	wait(40);
}

combo QuickRollL {	

	set_val(Ads,100);
	set_val(LX,-100);
	set_val(LY,get_ival(LY));	
	set_val(Jump,100);
	wait(80);
	set_val(LX,-100);
	set_val(LY,get_ival(LY));	
	wait(600);
	wait(3200);
}

combo QuickRollR {	

	set_val(Ads,100);
	set_val(LX,100);	
	set_val(LY,get_ival(LY));
	set_val(Jump,100);
	wait(80);
	set_val(LX,100);
	set_val(LY,get_ival(LY));	
	wait(600);	
	wait(3200);
}

combo FastSnackVIP {

	set_val(InvMenu,100);
	wait(400);
	wait(50);
	set_val(Down,100);
	wait(50);
	wait(50);
	set_val(Down,100);
	wait(50);
	wait(50);
	set_val(Down,100);
	wait(50);
	wait(50);
	set_val(Sprint,100);
	wait(50);
	wait(50);
	set_val(Down,100);
	wait(50);
	wait(50);	
	set_val(Down,100);
	wait(50);
	wait(50);	
	set_val(Down,100);
	wait(50);
	wait(50);	
	set_val(Down,100);
	wait(50);
	wait(50);	
	set_val(Sprint,100);
	wait(50);
	wait(50);
	set_val(Down,100);
	wait(50);
	wait(50);	
	set_val(Sprint,100);
	wait(100);
	wait(350);
	set_val(InvMenu,100);
	wait(400);
}

combo FastArmourVIP {
	
	set_val(InvMenu,100);
	wait(400);
	wait(50);
	set_val(Down,100);
	wait(50);
	wait(50);
	set_val(Down,100);
	wait(50);
	wait(50);
	set_val(Down,100);
	wait(50);
	wait(50);
	set_val(Sprint,100);
	wait(50);
	wait(50);
	set_val(Down,100);
	wait(50);
	wait(50);
	set_val(Down,100);
	wait(50);
	wait(50);
	set_val(Down,100);
	wait(50);
	wait(50);
	set_val(Sprint,100);
	wait(50);
	wait(50);
	set_val(Up,100);
	wait(50);
	wait(50);
	set_val(Up,100);
	wait(50);
	wait(50);
	set_val(Up,100);
	wait(50);
	wait(50);
	set_val(Sprint,100);
	wait(50);
	wait(50);
	set_val(InvMenu,100);
	wait(400);
}

combo FastSnack_4{

	set_val(InvMenu,100);
	wait(400);
	wait(50);
	set_val(Down,100);
	wait(50);
	wait(50);
	set_val(Down,100);
	wait(50);
	wait(50);
	set_val(Down,100);
	wait(50);
	wait(50);
	set_val(Down,100);
	wait(50);
	wait(50);
	set_val(Sprint,100);
	wait(50);
	wait(50);
	set_val(Down,100);
	wait(50);
	wait(50);	
	set_val(Down,100);
	wait(50);
	wait(50);	
	set_val(Down,100);
	wait(50);
	wait(50);	
	set_val(Down,100);
	wait(50);
	wait(50);	
	set_val(Sprint,100);
	wait(50);
	wait(50);
	set_val(Down,100);
	wait(50);
	wait(50);	
	set_val(Sprint,100);
	wait(100);
	wait(350);
	set_val(InvMenu,100);
	wait(400);
}

combo FastArmour_4 {
	
	set_val(InvMenu,100);
	wait(400);
	wait(50);
	set_val(Down,100);
	wait(50);
	wait(50);
	set_val(Down,100);
	wait(50);
	wait(50);
	set_val(Down,100);
	wait(50);
	wait(50);
	set_val(Down,100);
	wait(50);
	wait(50);
	set_val(Sprint,100);
	wait(50);
	wait(50);
	set_val(Down,100);
	wait(50);
	wait(50);
	set_val(Down,100);
	wait(50);
	wait(50);
	set_val(Down,100);
	wait(50);
	wait(50);
	set_val(Sprint,100);
	wait(50);
	wait(50);
	set_val(Up,100);
	wait(50);
	wait(50);
	set_val(Up,100);
	wait(50);
	wait(50);
	set_val(Up,100);
	wait(50);
	set_val(Sprint,100);
	wait(50);
	wait(50);
	set_val(InvMenu,100);
	wait(400);
}




combo FastPassive {

	set_val(InvMenu,100);
	wait(400);
	wait(50);
	set_val(Up,100);
	wait(50);
	wait(50);
	set_val(Sprint,100);
	wait(50);
	wait(50);
	set_val(InvMenu,100);
	wait(400);
}

combo InstaDeath {

	set_val(InvMenu,100);
	wait(400);
	wait(50);
	set_val(Up,100);
	wait(50);
	wait(50);
	set_val(Up,100);
	wait(50);
	wait(50);	
	set_val(Sprint,100);
	wait(50);
	wait(50);
	set_val(InvMenu,100);
	wait(400);
}

combo InstaVehicle {

	set_val(InvMenu,100);
	wait(400);
	wait(50);
	set_val(Down,100);
	wait(50);
	wait(50);
	set_val(Down,100);
	wait(50);
	wait(50);
	set_val(Down,100);
	wait(50);
	wait(50);
	set_val(Down,100);
	wait(50);
	wait(50);	
	set_val(Sprint,100);
	wait(50);
	wait(50);
	set_val(Sprint,100);
	wait(50);
	wait(50);	
	set_val(InvMenu,100);
	wait(400);
}

combo InstaAircraft {

	set_val(InvMenu,100);
	wait(400);
	wait(50);
	set_val(Down,100);
	wait(50);
	wait(50);
	set_val(Down,100);
	wait(50);
	wait(50);
	set_val(Down,100);
	wait(50);
	wait(50);
	set_val(Down,100);
	wait(50);
	wait(50);	
	set_val(Sprint,100);
	wait(50);
	wait(50);
	set_val(Down,100);
	wait(50);
	wait(50);	
	set_val(Sprint,100);
	wait(50);
	wait(50);	
	set_val(InvMenu,100);
	wait(400);
}

combo InstaVehicleVIP {

	set_val(InvMenu,100);
	wait(400);
	wait(50);
	set_val(Down,100);
	wait(50);
	wait(50);
	set_val(Down,100);
	wait(50);
	wait(50);
	set_val(Down,100);
	wait(50);
	wait(50);
	set_val(Down,100);
	wait(50);
	wait(50);
	set_val(Down,100);
	wait(50);
	wait(50);	
	set_val(Sprint,100);
	wait(50);
	wait(50);
	set_val(Sprint,100);
	wait(50);
	wait(50);	
	set_val(InvMenu,100);
	wait(400);
}

combo InstaAircraftVIP {

	set_val(InvMenu,100);
	wait(400);
	wait(50);
	set_val(Sprint,100);
	wait(50);
	wait(50);
	set_val(Down,100);
	wait(50);
	wait(50);
	set_val(Down,100);
	wait(50);
	wait(50);
	set_val(Down,100);
	wait(50);
	wait(50);
	set_val(Down,100);
	wait(50);
	wait(50);	
	set_val(Down,100);
	wait(50);
	wait(50);	
	set_val(Sprint,100);
	wait(50);
	wait(50);
	set_val(Down,100);
	wait(50);
	wait(50);	
	set_val(Down,100);
	wait(50);
	wait(50);	
	set_val(Down,100);
	wait(50);
	wait(50);	
	set_val(Down,100);
	wait(50);
	wait(50);	
	set_val(Sprint,100);
	wait(50);
	wait(50);	
	set_val(InvMenu,100);
	wait(400);
}

combo InstaVehicle_4 {

	set_val(InvMenu,100);
	wait(400);
	wait(50);
	set_val(Down,100);
	wait(50);
	wait(50);
	set_val(Down,100);
	wait(50);
	wait(50);
	set_val(Down,100);
	wait(50);
	wait(50);
	set_val(Down,100);
	wait(50);
	wait(50);
	set_val(Down,100);
	wait(50);
	wait(50);	
	set_val(Sprint,100);
	wait(50);
	wait(50);
	set_val(Sprint,100);
	wait(50);
	wait(50);	
	set_val(InvMenu,100);
	wait(400);
}

combo InstaAircraft_4 {

	set_val(InvMenu,100);
	wait(400);
	wait(50);
	set_val(Sprint,100);
	wait(50);
	wait(50);
	set_val(Down,100);
	wait(50);
	wait(50);
	set_val(Down,100);
	wait(50);
	wait(50);
	set_val(Down,100);
	wait(50);
	wait(50);
	set_val(Down,100);
	wait(50);
	wait(50);	
	set_val(Down,100);
	wait(50);
	wait(50);	
	set_val(Sprint,100);
	wait(50);
	wait(50);
	set_val(Down,100);
	wait(50);
	wait(50);	
	set_val(Down,100);
	wait(50);
	wait(50);	
	set_val(Down,100);
	wait(50);
	wait(50);	
	set_val(Down,100);
	wait(50);
	wait(50);	
	set_val(Sprint,100);
	wait(50);
	wait(50);	
	set_val(InvMenu,100);
	wait(400);
}

combo Chopper {
	
	set_val(LY,-100);
	wait(250);
	set_val(LY,get_ival(LY));
	wait(250);
}

combo Plane {
	
	set_val(LY,20);
	wait(250);
	set_val(LY,get_ival(LY));
	wait(250); 
}

combo QuickMap {	

	set_val(Options,100);
	wait(50);
	wait(100);
	set_val(Sprint,100);
	wait(50);
}

combo QuickOff {	

	set_val(Reload,100);
	wait(50);
	set_val(Reload,0);
	wait(50);	
	set_val(Reload,100);
	wait(50);
}

combo Boot {
        
        wait(Slot);
    if (Slot == 20000)    
        cls_oled(0);
        
        if (Slot) {
            cls_oled(0);
            printf(5,10,0,1,MiscString[3]);
            printf(5,25,0,1,MiscString[4]);
            printf(18,45,0,1,MiscString[5]);
            NumX = 32; NumY = 15; NumS = 0;
            FindDigit(get_slot(),DigitValue(get_slot()));
            Slot = Off;
        }    
        
        wait(20000);
        cls_oled(0);
        Clear = On;
        Saver = On;
        ScreenTime = On;
}

combo VibrateBlink {
    
    if (Modled) {
        set_rgb(0,255,0);
        set_rumble(RUMBLE_A,15);
    }    
        else {
            set_rgb(255,0,0);
            set_rumble(RUMBLE_B,15);
        }
     	
     	wait(150);
    	set_rgb(0,0,0);
    	wait(150);
    	reset_rumble();    
    
    if (Modled)
        set_rgb(0,255,0);
    
        else
            set_rgb(255,0,0);
	
		wait(150);
		reset_leds();
}

/* 
 .~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 
(                   Functions                        ) 
 `-~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-* 
*/ 

function Toggle(ModT,ModP) {
    
    if (combo_running(Boot))    
        combo_stop(Boot);
       
        Modled = ModT;
        ToggleT = 0;
        ToggleTime = On;
	    combo_run(VibrateBlink);
    
    if (ToggleName) {
        Saver = 0;
        cls_oled(0);
        printf(5,2,0,1,MiscString[8]);
        rect_oled(0,11,128,20,0,1);    
        rect_oled(2,13,124,16,0,1);
        rect_oled(0,32,128,20,0,1);
        rect_oled(2,34,124,16,0,1);
        printf(5,17,0,1,ModP);

        if (ModT) {
            printf(41,38,0,1,MiscString[6]);    
        }
            else {
                printf(36,38,0,1,MiscString[7]);
            }
                ToggleName = Off;
    }
}

function TimeToggle() {
        
    ToggleT += get_rtime();
    
        if (ToggleT >= 7000) {
            cls_oled(0);
            ToggleTime = Off;
            ToggleT = 0;
            Saver = On;
            ScreenTime = On;
    }
}

function LedFlow () {

    Rgb += get_rtime();
        
    if (Rgb == 120) {
        set_rgb(Colour / LedBrightness,Colour[1] / LedBrightness,Colour[2] / LedBrightness);
        Colour[LedDec] -= 2; 
        Colour[LedInc] += 2;

        if (!Colour[LedDec]) { 
            LedInc = (LedInc + 1) % 3; 
            LedDec = (LedDec + 1) % 3; 
        }
            Rgb = 0;    
    }
}

function Saver () {
    
    if (Saver) { 

		TimeL += get_rtime();
	
		if(TimeL == 30) {            
  			pixel_oled(X_POS1,Y_POS1,1);
        	pixel_oled(X_POS2,Y_POS2,1);
             
             	TimerP += 1;    Length -= 1;
             	TimerE += 1;    Length -= 1;
                
            	if(XorY1)  X_POS1 +=Dir1;
            	if(XorY2)  X_POS2 +=Dir2;
            	if(!XorY1) Y_POS1 +=Dir1;
            	if(!XorY2) Y_POS2 +=Dir2;
 
            if(Y_POS1 < 1)   Y_POS1 = 63;
            if(Y_POS2 < 1)   Y_POS2 = 63;
            if(X_POS1 < 1)   X_POS1 = 127;
            if(X_POS2 < 1)   X_POS2 = 127;
            if(Y_POS1 > 63)  Y_POS1 = 1;
            if(Y_POS2 > 63)  Y_POS2 = 1;
            if(X_POS1 > 127) X_POS1 = 1;
            if(X_POS2 > 127) X_POS2 = 1;
    
    	if(Length < 1) {
        	cls_oled(0);
        	Y_POS2 = random(1,64);
        	Y_POS1 = random(1,64);
        	X_POS1 = random(1,128);
        	X_POS2 = random(1,128);
        	Steps1 = random(5,25);
        	Steps2 = random(5,25);
        	Length = random(200,1000);
    	}
    
        	if(TimerP > Steps1) { 
            	TimerP = 0;
            	Steps1 = random(5,25);
            	XorY1 = !XorY1;
            	Dir1 = random(1,3);
    
           	 		if(Dir1 == 2) Dir1 = -1;
        	} 

		if(TimerE > Steps2)    {
			TimerE = 0;
            Steps2 = random(5,25);
            XorY2 = !XorY2;
            Dir2 = random(1,3);
    
				if(Dir2 == 2) Dir2 = -1;
		}                                    
        	TimeL = 0;
     	}
 	}   
	
		if (!Saver)
			cls_oled(0);
}

function ScreenTime () { 

     if (Clear) {
         Ms = 0;    Sec = 0; Min = 0;
         Clear = Off;
     }

    if (ScreenTime) { 
        Ms += get_rtime(); 
         
        if(Ms >= 1000) { 
            Ms = 0; 
             Sec +=1 
        }     
            if(Sec == 60) { 
                Sec = 0; 
                Min += 1; 
            } 
                if(Min == TimeoutLimit) { 
                    Saver = 0; 
                    Ms = 0; 
                    Sec = 0; 
                    Min = 0; 
                    ScreenTime = 0; 
                    cls_oled(0); 
                } 
    } 
} 

function BlockButton (Button) { 

	if (!get_ival(Button))
		return; 
		set_val(Button,Off);
} 
  
function MenuToggle (Main,Vals,Indx,Print,Toggle) { 

	cls_oled(0); 
	MainMenu    = Main; 
	MenuValues  = Vals;
	ModIndex    = Indx;
	Update      = Print;
	MenuSwitch  = Toggle;
	MenuTimeout = Off;

        if (!MainMenu) { 
            ScreenTime = 1; 
            Saver = 1; 
            Clear = On;
        } 
}
  
function PrintMod (ModVal,ModValMin,ModValMax,ModValInc,IndexMin,IndexMax,ModValLbl) { 

	if (Update) { 
 
		rect_oled(2,2,127,46,1,0); 
		Grid  (); 
		printf(6,25,0,1,MiscString[0]);
		NumX = -43; NumY = 10; NumS = -1; 
		FindDigit(ModIndex,DigitValue(ModIndex));
		printf(5,8,0,1,ModValLbl); 

		if (MenuValues) {

			NumX = 0; NumY = 0; NumS = 0;
			FindDigit(ModVal,DigitValue(ModVal));
		} 
			if (MenuSwitch) { 
 
				if (ModVal) {
 
					printf(51,24,1,1,MiscString[1]); 
				}  
    			else { 
					printf(46,24,1,1,MiscString[2]); 
				} 
			} 
		Update = Off; 
	} 

	if (event_press(Up) || get_ival (Up) && get_ptime (Up) >= 450) {
 
		Update = On;
		ModVal += ModValInc;

            if (ModVal >= ModValMax){ 
                return ModValMax;
            }
	} 
 
		if (event_press(Down) || get_ival (Down) && get_ptime (Down) >= 450) { 

			Update = On;
			ModVal -= ModValInc;

				if (ModVal <= ModValMin){
					return ModValMin;
				}
		}

	if (event_press(Right)) {

		Update = On;
		ModIndex += 1;
 
			if (ModIndex > IndexMax) ModIndex = IndexMin;
	}
  
		if (event_press(Left)) {
			Update = On;
			ModIndex -= 1; 
 
				if (ModIndex < IndexMin) ModIndex = IndexMax;
		} 
	return ModVal;
} 
    
function Grid () { 
  
	line_oled(126,20,2,20,2,1);
	rect_oled(1,1,127,63,0,1); 
	line_oled(126,46,2,46,2,1);
	line_oled(28,20,28,46,2,1);
}
 
function Scroll () {

		ScrollTime += get_rtime();

	if (ScrollTime >= ScrollWait) {
		ScrollWait = ScrollSpeed;
 
		for(ScrollIndex = 1; ScrollIndex <= 17; ScrollIndex++) { 
 
			if(ScrollIndex + ScrollLine >= sizeof(Scroll)) {
				putc_oled(ScrollIndex,Scroll[ScrollIndex + (ScrollLine - sizeof(Scroll))]); 
			} 
				else {  
					putc_oled(ScrollIndex,Scroll[ScrollIndex + ScrollLine]);
				} 
		} 
			puts_oled(ScrollX,ScrollY,0,ScrollIndex,1);
			ScrollLine++; 
 
	if(ScrollLine >= sizeof(Scroll)) {
		ScrollLine = 0;
	} 
		ScrollChar--; 
 
		if(ScrollChar < 1) {
			ScrollChar = 17; 
			ScrollWait = ScrollDelay;
		}
		ScrollTime = 0; 
	} 
}  
    
function FindDigit (Digit,Digits) { 
 
	if (Digit < 0) {  
		putc_oled(Number,45);
		Number += 1;
		Digit = abs(Digit);
		Count = 1;
	} 
	else  
		Count = 0;
    
	if (Digits == 5) {  
		putc_oled(Number,FontDigits[Digit / 10000]);
		Digit = Digit % 10000;
		Number +=  1;
	} 
	if (Digits >= 4) {
		putc_oled(Number,FontDigits[Digit / 1000]);
		Digit = Digit % 1000; 
		Number += 1;
	}  
	if (Digits >= 3) { 
		putc_oled(Number,FontDigits[Digit / 100]); 
		Digit = Digit % 100; 
		Number +=  1; 
	}  
	if (Digits >= 2) { 
		putc_oled(Number,FontDigits[Digit / 10]); 
		Digit = Digit % 10;
		Number += 1; 
	} 
		putc_oled(Number,FontDigits[Digit]); 
		puts_oled(CenterMod(Digits + Count,1) + NumX,25 + NumY,1 + NumS,Number,1);
		Number = 1; 
}   
    
function DigitValue (Number) { 
   
    	Number = abs(Number);
	if (Number / 10000 > 0) return 5;
	if (Number /  1000 > 0) return 4; 
	if (Number /   100 > 0) return 3; 
	if (Number /    10 > 0) return 2; 
		return 1;
} 
   
function CenterMod (Character,Font) { 
    Position = Character * FontSize[Font][0];
    Position = (127 - Position) / 2;
		return Position;
} 
   
/* 
 .~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 
(                   ASCII Table                      ) 
 `-~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-* 
*/

define SPACE       =  32; /*¦¦       ¦¦*/	define  _0 = 48,  A = 65, K = 75, U =  85, e = 101, o = 111, y = 121; 
define EXCLAMATION =  33; /*¦¦   !   ¦¦*/	define  _1 = 49,  B = 66, L = 76, V =  86, f = 102, p = 112, z = 122; 
define QUOTE       =  34; /*¦¦   "   ¦¦*/	define  _2 = 50,  C = 67, M = 77, W =  87, g = 103, q = 113; 
define HASH        =  35; /*¦¦   #   ¦¦*/	define  _3 = 51,  D = 68, N = 78, X =  88, h = 104, r = 114; 
define DOLLAR      =  36; /*¦¦   $   ¦¦*/	define  _4 = 52,  E = 69, O = 79, Y =  89, i = 105, s = 115; 
define PERCENT     =  37; /*¦¦   %   ¦¦*/	define  _5 = 53,  F = 70, P = 80, Z =  90, j = 106, t = 116; 
define AND         =  38; /*¦¦   &   ¦¦*/	define  _6 = 54,  G = 71, Q = 81, a =  97, k = 107, u = 117; 
define APOSTROPHE  =  39; /*¦¦       ¦¦*/	define  _7 = 55,  H = 72, R = 82, b =  98, l = 108, v = 118; 
define O_BRACKET   =  40; /*¦¦   (   ¦¦*/	define  _8 = 56,  I = 73, S = 83, c =  99, m = 109, w = 119; 
define C_BRACKET   =  41; /*¦¦   )   ¦¦*/	define  _9 = 57,  J = 74, T = 84, d = 100, n = 110, x = 120; 
define ASTERISK    =  42; /*¦¦   *   ¦¦*/ 
define PLUS        =  43; /*¦¦   +   ¦¦*/ 
define COMMA       =  44; /*¦¦   ,   ¦¦*/ 
define MINUS       =  45; /*¦¦   -   ¦¦*/ 
define FULLSTOP    =  46; /*¦¦   .   ¦¦*/ 
define F_SLASH     =  47; /*¦¦   /   ¦¦*/ 
define COLON       =  58; /*¦¦   :   ¦¦*/ 
define SEMICOLON   =  59; /*¦¦   ;   ¦¦*/ 
define B_ARROW     =  60; /*¦¦   <   ¦¦*/ 
define EQUAL       =  61; /*¦¦   =   ¦¦*/ 
define F_ARROW     =  62; /*¦¦   >   ¦¦*/ 
define QUESTION    =  63; /*¦¦   ?   ¦¦*/ 
define AT          =  64; /*¦¦   @   ¦¦*/ 
define O_SQUARE    =  91; /*¦¦   [   ¦¦*/ 
define b_SLASH     =  92; /*¦¦   \   ¦¦*/ 
define C_SQUARE    =  93; /*¦¦   ]   ¦¦*/ 
define U_ARROW     =  94; /*¦¦   ^   ¦¦*/ 
define UNDERSCORE  =  95; /*¦¦   _   ¦¦*/ 
define TICK        =  96; /*¦¦   `   ¦¦*/ 
define O_CURLY     = 123; /*¦¦   {   ¦¦*/ 
define BAR         = 124; /*¦¦   |   ¦¦*/ 
define C_CURLY     = 125; /*¦¦   }   ¦¦*/ 
define WAVE        = 126; /*¦¦   ~   ¦¦*/ 
define CROSS       = 127; /*¦¦   PS  ¦¦*/ 
define CIRCLE      = 128; /*¦¦   PS  ¦¦*/ 
define SQUARE      = 129; /*¦¦   PS  ¦¦*/ 
define TRIANGLE    = 130; /*¦¦   PS  ¦¦*/ 
define UP          = 131; /*¦¦ PS+XB ¦¦*/ 
define DOWN        = 132; /*¦¦ PS+XB ¦¦*/ 
define LEFT        = 133; /*¦¦ PS+XB ¦¦*/ 
define RIGHT       = 134; /*¦¦ PS+XB ¦¦*/ 
define VIEW        = 135; /*¦¦   XB  ¦¦*/ 
define MENU        = 136; /*¦¦   XB  ¦¦*/ 

/* 
 .~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 
(                   Scroll Array                     ) 
 `-~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-* 
*/

const uint8 Scroll[] = {/* 
 ¦*/
    SPACE   ,  SPACE   ,   CIRCLE  ,   SPACE   ,     O     ,     r     ,   SPACE   ,     B     ,   SPACE   ,     T     ,     o     ,   SPACE   ,     E     ,     x     ,     i     ,     t     ,   SPACE   , 
    SPACE   ,  CROSS   ,   SPACE   ,     O     ,     r     ,   SPACE   ,     A     ,   SPACE   ,     T     ,     o     ,   SPACE   ,     N     ,     e     ,     x     ,     t     ,   SPACE   ,    MENU   , 
    SPACE   ,   UP     ,   SPACE   ,     O     ,     r     ,   SPACE   ,   DOWN    ,   SPACE   ,     T     ,     o     ,   SPACE   ,     A     ,     d     ,     j     ,     u     ,     s     ,     t     , 
    SPACE   ,  LEFT    ,   SPACE   ,     O     ,     r     ,   SPACE   ,   RIGHT   ,   SPACE   ,     N     ,     e     ,     x     ,     t     ,   SPACE   ,     M     ,     o     ,     d     ,   SPACE   };
    
 const int8 DamPolar [] = {
	100,100,100,100,100,100,100,100,99,99,99,99,98,98,97,97,97,96,95,95,94,94,93,92,92,91,90,89,89,88,87,86,85,84,83,82,81,80,79,78,77,75,74,73,72,71,70,69,67,66,65,63,62,61,59,58,56,55,53,52,50,49,47,46,44,43,41,40,38,36,35,33,31,30,28,26,25,23,21,20,18,16,14,13,11,9,7,6,4,2,0,-1,-3,-5,-7,-8,-10,-12,-13,-15,-17,-19,-20,-22,-24,-25,-27,-29,-30,-32,-34,-35,-37,-39,-40,-42,-43,-45,-46,-48,-50,-51,-53,-54,-55,-57,-58,  
	-60,-61,-62,-64,-65,-66,-68,-69,-70,-71,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-89,-90,-91,-92,-92,-93,-93,-94,-95,-95,-96,-96,-97,-97,-97,-98,-98,-99,-99,-99,-99,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-99,-99,-99,-98,-98,-98,-97,-97,-96,-96,-95,-94,-94,-93,-93,-92,-91,-90,-90,-89,-88,-87,-86,-85,-84,-83,-82,-81,-80,-79,-78,-77,-76,-75,-74,-72,-71,-70,
	-69,-67,-66,-65,-63,-62,-61,-59,-58,-56,-55,-53,-52,-50,-49,-47,-46,-44,-43,-41,-40,-38,-36,-35,-33,-31,-30,-28,-26,-25,-23,-21,-20,-18,-16,-14,-13,-11,-9,-7,-6,-4,-2,0,2,4,6,7,9,11,13,14,16,18,20,21,23,25,26,28,30,31,33,35,36,38,40,41,43,44,46,47,49,51,52,54,55,56,58,59,61,62,63,65,66,67,69,70,70,72,73,74,75,77,78,79,80,81,82,83,84,85,86,87,88,89,89,90,91,92,92,93,94,94,95,95,96,97,97,97,98,98,99,99,99,99,100,100,100,100,100,100,100};