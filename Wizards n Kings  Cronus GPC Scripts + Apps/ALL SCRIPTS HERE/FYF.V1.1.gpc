/*                                                          ///////////////////////////////////////////////////////////////////////////
───────────────██████████───────                            ///////////////////////////////////////////////////////////////////////////
──────────────████████████──────                            //	                           Instructions				                 //                
──────────────██────────██──────                            ///////////////////////////////////////////////////////////////////////////                
──────────────██▄▄▄▄▄▄▄▄▄█──────                            //									                                     //
──────────────██▀███─███▀█──────                            //                     	Aim Assist ---> ALWAYS ON                        //
█─────────────▀█────────█▀──────                            ///////////////////////////////////////////////////////////////////////////
██──────────────────█───────────                            //									                                     //
─█──────────────██──────────────                            //                Aim abuse (MagnetAimbot) ---> ALWAYS ON                //
█▄────────────████─██──████                                 //									                                     //
─▄███████████████──██──██████ ──                            ///////////////////////////////////////////////////////////////////////////
────█████████████──██──█████████                            //									                                     //
─────────────████──██─█████──███                            //      	Ghost peek ---> ALWAYS ON [ ADS (L2) + LEFT (Dpad-LEFT)]     //
──────────────███──██─█████──███                            //									                                     //
──────────────███─────█████████                             ///////////////////////////////////////////////////////////////////////////
──────────────██─────████████▀                              //									                                     //
────────────────██████████                                  //      100% Accuracy ---> ALWAYS ON [ ADS (L2) + LEFT (Dpad-LEFT)]      //
────────────────██████████                                  //									                                     //
─────────────────████████                                   ///////////////////////////////////////////////////////////////////////////
──────────────────██████████▄▄                              //									                                     //
────────────────────█████████▀                              //              Dropshot  ---> HOLD ADS + SQUARE TO ACTIVATE             //
─────────────────────████──███                              //									                                     //
────────────────────▄████▄──██                              ///////////////////////////////////////////////////////////////////////////                              
────────────────────██████───▀                              //									                                     //
────────────────────▀▄▄▄▄▀                                  //                Rapid Fire  ---> HOLD ADS + RIGHT TO ACTIVATE          //
✄▒█▀▀▀ ▒█▀▀▀█ ▒█▀▀█ ▀▀█▀▀ ▒█▄░▒█ ▀█▀ ▀▀█▀▀ ▒█▀▀▀ 　         //									                                     //
✄▒█▀▀▀ ▒█░░▒█ ▒█▄▄▀ ░▒█░░ ▒█▒█▒█ ▒█░ ░▒█░░ ▒█▀▀▀ 　         ///////////////////////////////////////////////////////////////////////////
✄▒█░░░ ▒█▄▄▄█ ▒█░▒█ ░▒█░░ ▒█░░▀█ ▄█▄ ░▒█░░ ▒█▄▄▄ 　         //									                                     //
✄              Done BY FUCKER`s                            //                        Insta edit  ---> ALWAYS ON                     //
✄▒█▀▀▀ ▒█░▒█ ▒█▀▀█ ▒█░▄▀ 　 ▒█░░▒█ ▒█▀▀▀█ ▒█░▒█ █           //									                                     //
✄▒█▀▀▀ ▒█░▒█ ▒█░░░ ▒█▀▄░ 　 ▒█▄▄▄█ ▒█░░▒█ ▒█░▒█ ▀           ///////////////////////////////////////////////////////////////////////////
✄▒█░░░ ░▀▄▄▀ ▒█▄▄█ ▒█░▒█ 　 ░░▒█░░ ▒█▄▄▄█ ░▀▄▄▀ ▄           ///////////////////////////////////////////////////////////////////////////



*/
////////Aim Assist Always on/////////////////////////////////////////////////////////////////
int AimAssist         = TRUE;      //Change "TRUE" to "FALSE" to turn off aim assist     ////
int AimAssistValues   = 23;        //AimAssist shake values (higher numbers = more shake)////
int delay             = 19;        //AimAssist speed (lower numbers = faster shake)      ////
/////////////////////////////////////////////////////////////////////////////////////////////

////////Aim Abuse////////////////////////////////////////////////////////////////////////////
int AimAbuse          = TRUE;     //Change "FALSE" to "TRUE" for no aim abuse            ////       
int ZoomInValues      = 290;      //Zoom in values                                       ////
int ZoomOutValues     = 36;       //Zoom out values                                      ////
/////////////////////////////////////////////////////////////////////////////////////////////

//Ghost Peek - L2 & Dpad-LEFT////////////////////////////////////////////////////////////////
int ghostpeek = TRUE;             //Need to crouch before doing it for                   //// 
int gpreset = 111;                //being invisible when doing ghost peek                ////
/////////////////////////////////////////////////////////////////////////////////////////////

//100% Accuracy - L2 & Dpad-LEFT/////////////////////////////////////////////////////////////   
int PerfectAccuracy = TRUE;                                                              ////
                                                                                         ////
/////////////////////////////////////////////////////////////////////////////////////////////
                                                                                            
//Dropshot - HOLD ADS + SQUARE TO ACTIVATE///////////////////////////////////////////////////
int DropShot = FALSE;                                                                    ////
int dsdown = 30;     // Time you are down                                                ////
int dsup   = 13;    // Time you are up                                                   ////
/////////////////////////////////////////////////////////////////////////////////////////////

//Rapid Fire - HOLD ADS + RIGHT TO ACTIVATE//////////////////////////////////////////////////
int RapidFire      = FALSE;                                                              ////
                                                                                         ////
/////////////////////////////////////////////////////////////////////////////////////////////

//INSTA EDIT & INSTA RESET///////////////////////////////////////////////////////////////////
int EDIT_BUTTON = 	/**/BUILD_BTN/**/; 	//Insta Edit!                                    ////
int EDIT_BUTTON_HOLD =  /**/TRUE/**///Does your edit button has a hold delay?            ////
int HOLD_TIME = 	/**/150/**/;  // Type the hold time which is shown in Fortnite settings//
int RESET_EDIT_BUTTON = /**/CROUCH_BTN/**///Insta Reset!                                 ////
int CONFIRM_BUTTON = BUILD_BTN; //Make sure this is set to your CONFIRM BUTTON           ////
/////////////////////////////////////////////////////////////////////////////////////////////

////LED//////////////////////////////////////////////////////////////////////////////////////
int a; int b;                                                                            ////
                                                                                         ////
/////////////////////////////////////////////////////////////////////////////////////////////

///BUTTON LAYOUT: BUILDER PRO////////////////////////////////////////////////////////////////
 define FIRE_BTN = 4; //XB1_RT //PS4_R2                                                  ////                                  
 define ADS_BTN = 7; //XB1_LT //PS4_L2                                                   ////
 define CROUCH_BTN = 5; //XB1_RS //PS4_R3                                                ////
 define SPRINT_BTN = 8; //XB1_LS //PS4_L3                                                ////
 define JUMP_BTN = 19; //XB1_A  //PS4_CROSS                                              ////
 define NEXT_PIECE = 3; //XB1_RT //PS4_R1                                                ////
 define LEFT_BUMP = 6; //XB1_LB //PS4_L1                                                 ////
 define RIGHT_BUMP = 3; // XB1_RB //PS4_R1                                               ////
 define SWAP_BTN = 17; //XB1_Y  //PS4_TRIANGLE                                           ////
 define BUILD_BTN = 18; //XB1_B  //PS4_CIRCLE                                            ////
 define WALL_BTN = 4; //XB1_RB //PS4_R2                                                  //// 
 define STAIRS_BTN = 7; //XB1_LB //PS4_L2                                                ////
 define FLOOR_BTN = 3; //XB1_RT //PS4_R1                                                 ////
 define ROOF_BTN = 6; //XB1_LT //PS4_L1                                                  ////
 define RELOAD_BTN = 20; //XB1_X //PS4_SQAURE                                            ////
 define R_X = 9; //XB1_RX //PS4_RX                                                       ////
 define R_Y = 10; //XB1_RY //PS4_RY                                                      ////
 define L_X = 11; //XB1_LX //PS4_LX                                                      ////
 define L_Y = 12; //XB1_LY //PS4_LY                                                      ////
 define UP = 13; //XB1_UP //PS4_UP                                                       ////
 define DOWN = 14; //XB1_DOWN //PS4_DOWN                                                 ////
 define LEFT = 15; //XB1_LEFT //PS4_LEFT                                                 ////
 define RIGHT = 16; //XB1_RIGHT //PS4_RIGHT                                              ////
 define MENU		= XB1_MENU;                                                          ////
 define VIEW_SHARE = PS4_SHARE;                                                          ////
 define MENU_OPTIONS = PS4_OPTIONS;                                                      ////
//End of Buttons Definitions Section/////////////////////////////////////////////////////////

/*ENTER ON BUILD MODE////////////////////////////////////////////////////////////////////////
                                                                                         ////
 #ENTER ON BUILD MODE DROPSHOT WILL DESACTIVATE   !                                      ////
 #ENTER ON BUILD MODE Rapid Fire WILL DESACTIVATE !                                      ////
                                                                                         ////
///////////////////////////////////////////////////////////////////////////////////////////*/




//-------------------------------------------------------------------------MAIN SECTION----------------------------------------------------------------------------//
main {

//InstaEdit & InstaReset/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
			if(EDIT_BUTTON_HOLD)                                                                                                   
			{
				if(get_val(EDIT_BUTTON) && get_ptime(EDIT_BUTTON) > HOLD_TIME)
				{
				edit = TRUE;
				}
			}
			else if(!EDIT_BUTTON_HOLD)
			{
				if(get_val(EDIT_BUTTON))
				{
				edit = TRUE;
				}
			}
	if (edit == TRUE) {
		if (get_val(BUILD_BTN)) {
		AimAssist = TRUE;
		AimAbuse = TRUE;
		}
		if (event_release(FIRE_BTN) || get_val(RESET_EDIT_BUTTON) || get_val(SWAP_BTN)) {
			set_click(CONFIRM_BUTTON, 1, 0);
			edit = FALSE;
		}
	}
	//Start of the clicker
	if (a) {
		if (i < num) {
			if (!combo_running(master)) {
				combo_run(master);
			}
		} else if (i > num) {
			a = FALSE;
		}
	}
	//End of the clicker

//Ghost Peek/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
if (get_val(ADS_BTN) && get_val(LEFT_BUMP)) {
  combo_run(ghostpeek_Hold);
  combo_run(Notify);a=4;b=2;
set_val(LEFT_BUMP, 0);
      } else {
  combo_stop(ghostpeek_Hold);
}

//100% ACCURACY///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
if (get_val(ADS_BTN) && get_val(LEFT_BUMP)) {
  PerfectAccuracy = !PerfectAccuracy
   combo_run(Notify);a=0;b=2;
  combo_run(PerfectAccuracy);
set_val(LEFT_BUMP, 0);
      } else {
  combo_stop(PerfectAccuracy);
}

//Rapidfire//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
if(get_val(ADS_BTN) && event_press(RIGHT)){
   rumble_A_if_true(RapidFire);
   RapidFire =! RapidFire;
   if(RapidFire == TRUE){combo_run(Notify);a=0;b=2;} 
   if(RapidFire == FALSE){combo_run(Notify);a=2;b=0;}
   }
   if(RapidFire){
     if(get_val(FIRE_BTN)){
        combo_run(Rapidfire);                                          
       } 
     }
     
//Dropshot///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
if(get_val(ADS_BTN) && event_press(RELOAD_BTN)){
   DropShot =! DropShot;
   if(DropShot == TRUE){combo_run(Notify);a=0;b=2;}
   if(DropShot == FALSE){combo_run(Notify);a=2;b=0;} 
   }
   if(DropShot){
      if(get_val(ADS_BTN)&&get_val(FIRE_BTN)){combo_run(DropShot);}
     if (event_press(18)){ DropShot = FALSE; }
     }

//AIM ASSIST/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
if (AimAssist) {
if (get_val(7)> 98){ combo_run(cAimAssist);}
}
if (abs(get_val(9)) > 19 || abs(get_val(10)) > 19){ 
combo_stop(cAimAssist);}

//AIM ABUSE//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
if(AimAbuse){                                                                            
      if(get_val(ADS_BTN)> 95){                                                          
      combo_run(AimAbuse);}                                                             
      if(event_release(ADS_BTN)){ combo_stop(AimAbuse);}
}  

//-----------------------------------------------------------------------------------------------------------------------------------------------------------------//
//-------------------------------------------------------------COMBO SECTION---------------------------------------------------------------------------------------//
//-----------------------------------------------------------------------------------------------------------------------------------------------------------------//
}
combo TAP 
	{
    doubleClick = TRUE;
	wait(400);
	doubleClick = FALSE;
	}
combo AA_XY {
	set_val(10,xy_val(10,aa__shake));
	wait(aa_delay);
	set_val(9,xy_val(9,aa__shake));
	set_val(11,xy_val(11,aa__shake));
	wait(aa_delay);
	set_val(10,xy_val(10,aa__shake * -1));
	wait(aa_delay);
	set_val(9,xy_val(9,aa__shake * -1));
	set_val(11,xy_val(11,aa__shake * -1));
	wait(aa_delay);
}
combo PerfectAccuracy {
set_val(FIRE_BTN,100);
wait(100);
wait(250);
set_val(FIRE_BTN,100);
}
combo Rapidfire {
set_val(FIRE_BTN, 100); 
wait(120);
set_val(FIRE_BTN, 0); 
wait(30);
}


combo cAimAssist {                                                                        
set_val(R_X, AimAssistValues);                                                            
wait(delay);                                                                                                                                                        
set_val(R_X, AimAssistValues*(-1));                                                      
wait(delay);                                                                             
}  

combo AimAbuse {                                                                         
set_val(ADS_BTN, 100);                                                                   
wait(ZoomInValues);                                                                      
set_val(ADS_BTN, 0);                                                                     
wait(ZoomOutValues);                                                                     
}   

combo ghostpeek_Hold {
set_val(5, 100);
wait(15); wait(15);
set_val(4, 100);
wait(15); wait(10);
set_val(5, 100);
wait(15); wait(gpreset);
}

combo DropShot{
set_val(5,100);
wait(dsdown);
wait(dsup);
set_val(5,100);
}

combo RUMBLE {
set_rumble(RMBLE, 100); wait(300);
reset_rumble(); }

combo Notify {
set_led(LED_1, 0);
set_led(LED_2, a);
set_led(LED_3, b);
set_led(LED_4, 0);
wait(550);
set_led(LED_1, 0);
set_led(LED_2, 0);
set_led(LED_3, 0);
set_led(LED_4, 0);
wait(250);
set_led(LED_1, 0);
set_led(LED_2, a);
set_led(LED_3, b);
set_led(LED_4, 0);
wait(250);
set_led(LED_1, 0);
set_led(LED_2, 0);
set_led(LED_3, 0);
set_led(LED_4, 0);
wait(250);
set_led(LED_1, 0);
set_led(LED_2, a);
set_led(LED_3, b);
set_led(LED_4, 0);
wait(250);
reset_leds();
}

combo VIBRATE {
    set_rumble(rumble_type, 100);
    wait(300);
    reset_rumble();
}
combo master {
	wait(WAIT);
	set_val(button, 100);
	wait(28);
	set_val(button, 0);
	wait(28);
	i = i + 1;
}
function resetPress(P0,P1,P2,P3,T,S) {                                              
if(!P0){pressedIt[0] = FALSE;}    else if(P0) {pressedIt[0] = TRUE;}                     
if(!P1){pressedIt[1] = FALSE;}    else if(P1) {pressedIt[1] = TRUE;}                        
if(!P2){pressedIt[2] = FALSE;}    else if(P2) {pressedIt[2] = TRUE;}                        
if(!P3){pressedIt[3] = FALSE;}    else if(P3) {pressedIt[3] = TRUE;}                      
}
function set_click(B, Num, Wait) {
	WAIT = Wait;
	i = 0;
	button = B;
	num = Num;
	a = TRUE;
}
int edit = FALSE;                                                                       
int pressedIt[6];                                                                       
int WAIT;                                                                                
int num, i;                                                                           
int button;
function rumble_A_if_true(var) {
}
//End/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////