
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////                                                                                                                                                  /////////////////
//////////////////                            ////////////////////////////      ///////     //////     ///////////////            ////////////         /////////    /////////////////
//////////////////                           ///////////////////////////       ///////     //////     /////////////////          //////////////       /////////     /////////////////
//////////////////                          //////////////////////////        ///////     //////     ///////     //////         ////////////////     /////////      /////////////////
//////////////////                         /////////////////////////         ///////     //////     ///////      //////        //////////////////   /////////       /////////////////
//////////////////                                    ////////////          ///////     //////     //////////////////         ///////// ////////// /////////        /////////////////
//////////////////                                  ////////////           ///////     //////     /////////////              /////////   //////////////////         /////////////////
//////////////////                                ////////////            ///////     //////     //////  ///////            /////////     ////////////////          /////////////////
//////////////////                              ////////////             //////////////////     //////    ///////          /////////       //////////////           /////////////////
//////////////////                            ////////////              //////////////////     //////      ///////        /////////         ////////////            /////////////////
//////////////////                          ////////////               //////////////////     //////        ///////      /////////           //////////             /////////////////
//////////////////                        ////////////                                                                                                              /////////////////
//////////////////                      /////////////////////////////////////////////////////////////////////////////////////////////////////////////////           /////////////////
//////////////////                    //////////////////////////////////////////////////// VERSION 2.8 /////////////////////////////////////////////////            /////////////////
//////////////////                  //////////////////////////////////////////////////////// BY CULAN /////////////////////////////////////////////////             /////////////////
//////////////////                ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////              /////////////////
//////////////////                                                                                                                                                  /////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////// BIG THANKS TO ALL SCRIPT TESTERS!  ////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////// without YOU, We wouldn't be where we are today! //////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////																																					/////////////////
//////////////////																																					/////////////////
//////////////////  																																				/////////////////
//////////////////		 ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	    /////////////////
//////////////////  	 /////																															/////		/////////////////
//////////////////		 /////										   				   ZURN																/////	    /////////////////
//////////////////		 /////										                 	~~																/////		/////////////////
//////////////////		 /////  The Script including Over 20 mods. Few of them you just can activate and its automaticaly works for your gameplay.		/////		/////////////////
//////////////////		 /////  The other ones you will need to assigne to an unassigned Button(POWER BUTTON), which you can define here in the Script. /////		/////////////////
//////////////////		 /////	You have 4 main(1/2/3/4) and 4 advanced(5/6/7/8) Power Buttons where you can assigne the Mods to.						/////		/////////////////
//////////////////		 /////	Most Mods you can adjust in the OLED Screen Menu of the ZEN.								                 			/////		/////////////////
//////////////////		 /////										                 																	/////		/////////////////
//////////////////		 /////	 for example:								                 															/////		/////////////////
//////////////////		 /////										                 																	/////		/////////////////
//////////////////		 /////	 If You press a Power Button, with a Kickoff Mod assigned, right after the Countdown of the beginning of a match,		/////		/////////////////
//////////////////		 /////	 it will make for you a complete Kickoff which have a good Chance to hit the Ball first. ;)  							/////		/////////////////
//////////////////		 /////										                 																	/////		/////////////////
//////////////////		 ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	    /////////////////
//////////////////  																																				/////////////////
//////////////////																																					/////////////////
//////////////////																																					/////////////////
//////////////////											   /////////////////////////////////////////////////////											    /////////////////
//////////////////											   /////									       /////											    /////////////////
//////////////////											   ///// DISCUSSION / HELP / FEEDBACK / GIVEAWAYS  /////											    /////////////////
//////////////////											   /////										   /////												/////////////////
//////////////////											   /////////////////////////////////////////////////////											    /////////////////
//////////////////      																																			/////////////////
//////////////////      																☟																			/////////////////
//////////////////																																					/////////////////
//////////////////				       			  	    ⮞  	    	------------------------------------------	     	 ⮜    										/////////////////
//////////////////				     				     ⮞⮞    		¦   									 ¦    	   ⮜⮜											/////////////////
//////////////////	       							     ⮞⮞⮞	 	¦  DISCORD - ROCKET LEAGUE ZURN SUPPORT  ¦	 	 ⮜⮜⮜									    	/////////////////
//////////////////			  	  ⮞⮞⮞⮞⮞⮞⮞⮞⮞⮞⮞⮞⮞⮞⮞⮞⮞⮞⮞⮞⮞⮞   	¦     									 ¦ 	   ⮜⮜⮜⮜⮜⮜⮜⮜⮜⮜⮜⮜⮜⮜⮜⮜⮜⮜⮜		                /////////////////
//////////////////		   							     ⮞⮞⮞	 	¦ 	  https://discord.gg/C5YHyMQXdw      ¦    	 ⮜⮜⮜						     				/////////////////
//////////////////	   			  					     ⮞⮞    		¦ 										 ¦         ⮜⮜  											/////////////////
//////////////////									    ⮞       	------------------------------------------  	     ⮜											/////////////////
//////////////////																																					/////////////////
//////////////////																		☝																			/////////////////
//////////////////																																					/////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////           																													 					/////////////////
//////////////////											    ////////////////////////////////////////////////////											    /////////////////
//////////////////											    /////										   /////											    /////////////////
//////////////////			💡💡💡💡💡💡💡💡💡💡💡💡💡			    /////  !!!💡!!!  INFO - READ FIRST  !!!💡!!!    /////	    💡💡💡💡💡💡💡💡💡💡💡💡💡		            /////////////////
//////////////////											    /////										   /////											    /////////////////
//////////////////											    ////////////////////////////////////////////////////											    /////////////////
//////////////////      																																			/////////////////
//////////////////                  	     !!IMPORTANT!!    ->>>>>      SCRIPT WORKS JUST INMATCH!		<<<<<-		!!IMPORTANT!!						        /////////////////
//////////////////           																													 					/////////////////
//////////////////	 	           !!! DUE TO DIFFERENT IN-GAME SETTINGS, SOME MODS MAY HAVE TO BE ADJUSTED FIRST BEFORE THEY WORK CORRECTLY. !!!					/////////////////
//////////////////           																													 					/////////////////
//////////////////    	         !!!       IF AUTOBALLCAM MOD IS ON, CHANGE INGAME BALLCAMERA FROM TOGGLE TO HOLD!(its still TOGGLE :))      !!!  				    /////////////////
//////////////////                        				    															                                    		/////////////////
//////////////////   !!    DRIFT_AFTER_JUMP/DODGE and SPEEDRIFT MOD sadly JUST AVALAIBLE FOR PLAYERS, WHO USING DRIFT & AIRROLL >>NOT<< ON THE SAME BUTTON    !!    /////////////////
//////////////////        																																		    /////////////////
//////////////////           																													 					/////////////////
//////////////////           								  ⮞⮞⮞	       PLEASE FOLLOW THE INSTRUCTIONS 	     ⮜⮜⮜												/////////////////
//////////////////           																													 					/////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////




int//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////										   //////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////              INSTRUCTIONS               //////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////										   //////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////											     																			   					   //////////////////
//////////////////																																				   //////////////////
//////////////////											     ///////////////////////////////////////////////////											   //////////////////
//////////////////											     /////										   /////											   //////////////////
//////////////////											     /////    ADD YOUR INGAME CONTROLLER LAYOUT    /////											   //////////////////
//////////////////											     /////										   /////											   //////////////////
//////////////////		  									     ///////////////////////////////////////////////////											   //////////////////
//////////////////																																				   //////////////////
//////////////////													~!~	ITS IMPORTANT TO BIND & MATCH ALL BUTTONS ~!~											   //////////////////
//////////////////																																				   //////////////////
/*//////////////*/														    DRIVE_FORWARDS_BUTTON 	= PS4_R2												   	   ,/////////////////
/*//////////////*/															DRIVE_BACKWARDS_BUTTON 	= PS4_L2	                                                   ,/////////////////
/*//////////////*/															JUMP_BUTTON				= PS4_CIRCLE                                              	   ,/////////////////
/*//////////////*/															BOOST_BUTTON 			= PS4_CROSS		 											   ,/////////////////
/*//////////////*/															POWERDRIFT_BUTTON		= PS4_L1										          	   ,/////////////////
/*//////////////*/															AIRROLL_BUTTON		    = PS4_L2                                             		   ,/////////////////
/*//////////////*/															BALLCAM_BUTTON 			= PS4_SQUARE                                 			  	   ,/////////////////
/*//////////////*/															AIRROLL_RIGHT_BUTTON	= PS4_L3		 	                                           ,/////////////////
/*//////////////*/															AIRROLL_LEFT_BUTTON 	= PS4_R3	 											       ,/////////////////
//////////////////																																				   //////////////////
//////////////////											     																			   					   //////////////////
//////////////////~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*   					  ~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~//////////////////
//////////////////~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*                      ~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~//////////////////
//////////////////											     																			   					   //////////////////
//////////////////																																				   //////////////////
//////////////////											     ///////////////////////////////////////////////////											   //////////////////
//////////////////											     /////										   /////											   //////////////////
//////////////////											     /////        DEFINE YOUR POWER-BUTTONS        /////											   //////////////////
//////////////////											     /////										   /////											   //////////////////
//////////////////											     ///////////////////////////////////////////////////											   //////////////////
//////////////////     																																		       //////////////////
//////////////////											     																			   					   //////////////////
//////////////////						/////////////////////////////////////////////////////////////////////////////////////////////////////					   //////////////////
//////////////////						/////										   													/////					   //////////////////
//////////////////						/////										   POWER BUTTONS  					    			/////					   //////////////////
//////////////////						/////										   	    ~~											/////					   //////////////////
//////////////////						/////    Define Buttons, which You normaly don't use during your Gameplay, as Power Buttons.    /////					   //////////////////
//////////////////						/////                        With those Buttons you will activate the MODS.                     /////					   //////////////////
//////////////////						/////                                                                                           /////					   //////////////////
//////////////////						/////			  You have 4 main (POWER 1/2/3/4) and 4 advanced (POWER 5/6/7/8) Power Buttons. /////					   //////////////////
//////////////////						/////		You can	choose between 1 or 2 Buttons as the Definition of a Power Button.	    	/////					   //////////////////
//////////////////						/////                                                                                           /////					   //////////////////
//////////////////						/// You will need to assign the Mods to your defined Power Buttons later in the OLED Screen Menu. ///   				   //////////////////
//////////////////						/////										   													/////					   //////////////////
//////////////////						/////////////////////////////////////////////////////////////////////////////////////////////////////					   //////////////////
//////////////////     																																		       //////////////////
//////////////////     																																		       //////////////////
//////////////////		   					            	 //~//		  ~~ HOW TO SET UP THE POWER BUTTONS ~~		  //~//	       							       //////////////////
//////////////////				  									~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~												   //////////////////
//////////////////     																																		       //////////////////
//////////////////						/////////////////////////////////////////////////////////////////////////////////////////////////////					   //////////////////
//////////////////						/////										   													/////					   //////////////////
//////////////////						/////									   1 BUTTON AS ACTIVATOR								/////					   //////////////////
//////////////////						/////								     ~~~~~~~~~~~~~~~~~~~~~~~~							    /////					   //////////////////
//////////////////						/////  For 1 Button as activator for a Power MOD, set the second Button to >OFF< (stays WHITE)   ////					   //////////////////
//////////////////						/////										   													/////					   //////////////////
//////////////////						/////   example: POWER_BUTTON_2 = PS4_TRIANGLE  /* , */   SECOND_POWER_BUTTON_2 = OFF	     	/////					   //////////////////
//////////////////						/////										   													/////					   //////////////////
//////////////////						/////	         POWER_BUTTON_6 = PS4_DOWN      /* , */   SECOND_POWER_BUTTON_6 = OFF	        /////					   //////////////////
//////////////////						/////										   													/////					   //////////////////
//////////////////						/////////////////////////////////////////////////////////////////////////////////////////////////////					   //////////////////
//////////////////     																																		       //////////////////
//////////////////											     						   ~~												   					   //////////////////
//////////////////     																																		       //////////////////
//////////////////						/////////////////////////////////////////////////////////////////////////////////////////////////////					   //////////////////
//////////////////						/////										   													/////					   //////////////////
//////////////////						/////									  2 BUTTONS AS ACTIVATOR   								/////					   //////////////////
//////////////////						/////									 ~~~~~~~~~~~~~~~~~~~~~~~~								/////					   //////////////////
//////////////////						// The SECOND MAIN Button MUST NOT be identical to the SECOND Button of the ADVANCED Power Button  //				   	   //////////////////
//////////////////						/////										   													/////					   //////////////////
//////////////////						/////	example: POWER_BUTTON_3 = PS4_LEFT      /* , */   SECOND_POWER_BUTTON_3 = OFF    	 	/////					   //////////////////
//////////////////						/////							   🠗 🠕			   								    🠗 🠕		 	/////					   //////////////////
//////////////////						/////					  💡 CAN BE THE SAME! 💡				        💡  MUST NOT BE THE SAME! 💡 /////					   //////////////////
//////////////////						/////							   🠗 🠕		   									    🠗 🠕			/////					   //////////////////
//////////////////						/////		     POWER_BUTTON_7 = PS4_LEFT      /* , */   SECOND_POWER_BUTTON_7 = PS4_R2        /////					   //////////////////
//////////////////						/////										   													/////					   //////////////////
//////////////////						/////////////////////////////////////////////////////////////////////////////////////////////////////					   //////////////////
//////////////////     																																		       //////////////////
//////////////////											     						   ~~												   					   //////////////////
//////////////////     																																		       //////////////////
//////////////////						/////////////////////////////////////////////////////////////////////////////////////////////////////					   //////////////////
//////////////////						/////										   													/////					   //////////////////
//////////////////						/////									   SET POWER BUTTON OFF   								/////					   //////////////////
//////////////////						/////									  ~~~~~~~~~~~~~~~~~~~~~~~~								/////					   //////////////////
//////////////////						/////	set both Buttons to >> OFF << if you like to deactivate a Power Button (stays WHITE)	/////					   //////////////////
//////////////////						/////										   													/////					   //////////////////
//////////////////						/////   example: POWER_BUTTON_5 = OFF           /* , */   SECOND_POWER_BUTTON_5 = PS4_OFF	    /////					   //////////////////
//////////////////						/////										   													/////					   //////////////////
//////////////////						/////										   													/////					   //////////////////
//////////////////						/////////////////////////////////////////////////////////////////////////////////////////////////////					   //////////////////
//////////////////											     																			   					   //////////////////
//////////////////											     						   ~~												   					   //////////////////
//////////////////											     						   													   					   //////////////////
//////////////////~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/     							      /~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~//////////////////
//////////////////											     																			   					   //////////////////
//////////////////											     																			   					   //////////////////
//////////////////										    ┏╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍┓		   					  		   //////////////////
//////////////////                                         ▕*//~//*//*//*//┏┷┷┷┷┷┷┷┷┷┷┷┷┷┷┷┷┷┷┷┷┷┷┷┷┷┷┷┷┷┷┷┷┷┷┓//~//*//*//~//*/┃                           			   //////////////////
//////////////////                                         ▕*//~//*//*//~//┃     POWER BUTTON 1 / 5       ┃//~//*//*//~//*/┃                	 			       //////////////////
//////////////////										   ▕*//~//*//*//~//┗┯┯┯┯┯┯┯┯┯┯┯┯┯┯┯┯┯┯┯┯┯┯┯┯┯┯┯┯┯┯┯┯┯┯┛//~//*//*//~//*/┃    							       //////////////////
//////////////////                         /*//~//*//*//~//*//*//~//*//~//*//*//~//*//*//~//*//~//*//*//~//*//*//~//*//*//~//*//*//~//*///                         //////////////////
//////////////////				   		   /*//~//																				  //*//~//					       //////////////////
/*////////////////						   **//**/ POWER_BUTTON_1 = PS4_DOWN      /**/ , /**/  SECOND_POWER_BUTTON_1 = OFF  	  /**//**/			  	           ,/////////////////
//////////////////						   /*//*//																				  //*//*//					       //////////////////
//////////////////						   /~//*//*//*//~//*//*//~//*//~//*//*//~//*//*//~//*//~//*//*//~//*//*//~//*//*//~//*//*///~//*//      			       //////////////////
//////////////////						   /~//*//																				  //*//~//					   	   //////////////////
/*////////////////						   **//**/ POWER_BUTTON_5 = PS4_DOWN      /**/ , /**/  SECOND_POWER_BUTTON_5 = PS4_R2     /**//**/		  	               ,/////////////////
//////////////////					       /*//~//																				  //*//~//					   	   //////////////////
//////////////////					   	   /~//*//*//*//~//*//*//~//*//~//*//*//~//*//*//~//*//~//*//*//~//*//*//~//*//*//~//*//*//~//*///      			   	   //////////////////
//////////////////											     																			   					   //////////////////
//////////////////											     						   ~~												   					   //////////////////
//////////////////											     																			   					   //////////////////
//////////////////										    ┏╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍┓		   					  	  	   //////////////////
//////////////////                                         ▕*//~//*//*//*//┏┷┷┷┷┷┷┷┷┷┷┷┷┷┷┷┷┷┷┷┷┷┷┷┷┷┷┷┷┷┷┷┷┷┷┓//~//*//*//~//*/┃                           			   //////////////////
//////////////////                                         ▕*//~//*//*//~//┃     POWER BUTTON 2 / 6       ┃//~//*//*//~//*/┃       	         	 			       //////////////////
//////////////////										   ▕*//~//*//*//~//┗┯┯┯┯┯┯┯┯┯┯┯┯┯┯┯┯┯┯┯┯┯┯┯┯┯┯┯┯┯┯┯┯┯┯┛//~//*//*//~//*/┃    								   //////////////////
//////////////////                         /*//~//*//*//~//*//*//~//*//~//*//*//~//*//*//~//*//~//*//*//~//*//*//~//*//*//~//*//*//~//*///                         //////////////////
//////////////////				   		   /*//~//																				  //*//~//					       //////////////////
/*////////////////						   **//**/ POWER_BUTTON_2 = PS4_UP     	  /**/ , /**/  SECOND_POWER_BUTTON_2 = OFF		  /**//**/			  	           ,/////////////////
//////////////////						   /*//*//																				  //*//*//					       //////////////////
//////////////////						   /~//*//*//*//~//*//*//~//*//~//*//*//~//*//*//~//*//~//*//*//~//*//*//~//*//*//~//*//*///~//*//      			       //////////////////
//////////////////						   /~//*//																				  //*//~//					   	   //////////////////
/*////////////////						   **//**/ POWER_BUTTON_6 = PS4_UP		  /**/ , /**/  SECOND_POWER_BUTTON_6 = PS4_R2     /**//**/		  	               ,/////////////////
//////////////////					       /*//~//																				  //*//~//					   	   //////////////////
//////////////////					   	   /~//*//*//*//~//*//*//~//*//~//*//*//~//*//*//~//*//~//*//*//~//*//*//~//*//*//~//*//*//~//*///      			   	   //////////////////
//////////////////											     																			   					   //////////////////
//////////////////											     						  ~~												   					   //////////////////
//////////////////											     																			   					   //////////////////
//////////////////										    ┏╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍┓		   					  		   //////////////////
//////////////////                                         ▕*//~//*//*//*//┏┷┷┷┷┷┷┷┷┷┷┷┷┷┷┷┷┷┷┷┷┷┷┷┷┷┷┷┷┷┷┷┷┷┷┓//~//*//*//~//*/┃                           			   //////////////////
//////////////////                                         ▕*//~//*//*//~//┃     POWER BUTTON 3 / 7       ┃//~//*//*//~//*/┃   	             	 			       //////////////////
//////////////////										   ▕*//~//*//*//~//┗┯┯┯┯┯┯┯┯┯┯┯┯┯┯┯┯┯┯┯┯┯┯┯┯┯┯┯┯┯┯┯┯┯┯┛//~//*//*//~//*/┃    								   //////////////////
//////////////////                         /*//~//*//*//~//*//*//~//*//~//*//*//~//*//*//~//*//~//*//*//~//*//*//~//*//*//~//*//*//~//*///                         //////////////////
//////////////////				   		   /*//~//																				  //*//~//					       //////////////////
/*////////////////						   **//**/ POWER_BUTTON_3 = PS4_LEFT      /**/ , /**/  SECOND_POWER_BUTTON_3 = OFF 	  	  /**//**/			  	           ,/////////////////
//////////////////						   /*//*//																				  //*//*//					       //////////////////
//////////////////						   /~//*//*//*//~//*//*//~//*//~//*//*//~//*//*//~//*//~//*//*//~//*//*//~//*//*//~//*//*///~//*//      			       //////////////////
//////////////////						   /~//*//																				  //*//~//					   	   //////////////////
/*////////////////						   **//**/ POWER_BUTTON_7 = PS4_LEFT      /**/ , /**/  SECOND_POWER_BUTTON_7 = PS4_R2     /**//**/		  	               ,/////////////////
//////////////////					       /*//~//																				  //*//~//					   	   //////////////////
//////////////////					   	   /~//*//*//*//~//*//*//~//*//~//*//*//~//*//*//~//*//~//*//*//~//*//*//~//*//*//~//*//*//~//*///      			   	   //////////////////
//////////////////											     																			   					   //////////////////
//////////////////											     						   ~~												   					   //////////////////
//////////////////											     																			   					   //////////////////
//////////////////										    ┏╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍┓		   					   		   //////////////////
//////////////////                                         ▕*//~//*//*//*//┏┷┷┷┷┷┷┷┷┷┷┷┷┷┷┷┷┷┷┷┷┷┷┷┷┷┷┷┷┷┷┷┷┷┷┓//~//*//*//~//*/┃                              		   //////////////////
//////////////////                                         ▕*//~//*//*//~//┃     POWER BUTTON 4 / 8       ┃//~//*//*//~//*/┃               	 			           //////////////////
//////////////////										   ▕*//~//*//*//~//┗┯┯┯┯┯┯┯┯┯┯┯┯┯┯┯┯┯┯┯┯┯┯┯┯┯┯┯┯┯┯┯┯┯┯┛//~//*//*//~//*/┃    							       //////////////////
//////////////////                         /*//~//*//*//~//*//*//~//*//~//*//*//~//*//*//~//*//~//*//*//~//*//*//~//*//*//~//*//*//~//*///                         //////////////////
//////////////////				   		   /*//~//																				  //*//~//					       //////////////////
/*////////////////						   **//**/ POWER_BUTTON_4 = PS4_RIGHT     /**/ , /**/  SECOND_POWER_BUTTON_4 = OFF		  /**//**/			  	           ,/////////////////
//////////////////						   /*//*//																				  //*//*//					       //////////////////
//////////////////						   /~//*//*//*//~//*//*//~//*//~//*//*//~//*//*//~//*//~//*//*//~//*//*//~//*//*//~//*//*///~//*//      			       //////////////////
//////////////////						   /~//*//																				  //*//~//					   	   //////////////////
/*////////////////						   **//**/ POWER_BUTTON_8 = PS4_RIGHT     /**/ , /**/  SECOND_POWER_BUTTON_8 = PS4_R2     /**//**/		  	               ,/////////////////
//////////////////					       /*//~//																				  //*//~//					   	   //////////////////
//////////////////					   	   /~//*//*//*//~//*//*//~//*//~//*//*//~//*//*//~//*//~//*//*//~//*//*//~//*//*//~//*//*//~//*///      			   	   //////////////////
//////////////////											     																			   					   //////////////////
//////////////////											     						   ~~												   					   //////////////////
//////////////////											     																			   					   //////////////////
//////////////////~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/    					/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~//////////////////
//////////////////~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/						/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~//////////////////
//////////////////											     																			   					   //////////////////
//////////////////											     																			   					   //////////////////
//////////////////											     ///////////////////////////////////////////////////											   //////////////////
//////////////////											     /////										   /////											   //////////////////
//////////////////											     /////      HOW TO TURN SCRIPT ON OR OFF       /////											   //////////////////
//////////////////											     /////										   /////											   //////////////////
//////////////////											     ///////////////////////////////////////////////////											   //////////////////
//////////////////											     																			   					   //////////////////
//////////////////										    !! YOU WILL NEED TO TURN THE SCRIPT OFF AFTER MATCH/TRAINING !!										   //////////////////
//////////////////																																				   //////////////////
//////////////////                                      	/*//~//*//*//~//*//*//~//*//*//~//*//*//~//*//*//~//*//*//~//*/                           			   //////////////////
//////////////////                                      	/*//~//*//*//~//*//*//~//*//*//~//*//*//~//*//*//~//*//*//~//*/                           			   //////////////////
//////////////////                                          /*//~//*//*//~//*//*//~//*//*//~//*//*//~//*//*//~//*//*//~//*/                 	 				   //////////////////
//////////////////                                      								         		  		                                     			   //////////////////
//////////////////															OPTIONAL TO CHANGE BUTTONS	 		          										   //////////////////
//////////////////																						  		          										   //////////////////
/*//////////////*/														 TURN_ON_BUTTON 	   = PS4_L3		              			  				   			   ,/////////////////
/*//////////////*/														 TURN_OFF_BUTTON       = PS4_OPTIONS	          							  			   ,/////////////////
//////////////////																						  		         										   //////////////////
//////////////////                                      	/*//~//*//*//~//*//*//~//*//*//~//*//*//~//*//*//~//*//*//~//*/                           			   //////////////////
//////////////////                                      	/*//~//*//*//~//*//*//~//*//*//~//*//*//~//*//*//~//*//*//~//*/                           			   //////////////////
//////////////////                                      	/*//~//*//*//~//*//*//~//*//*//~//*//*//~//*//*//~//*//*//~//*/                           			   //////////////////
//////////////////																											 									   //////////////////
////////////////// 																																				   //////////////////
//////////////////																																				   //////////////////
//////////////////													       !! SCRIPT STARTS >> ON << !!															   //////////////////
//////////////////																																				   //////////////////
//////////////////																																			       //////////////////
//////////////////	    					 >>  OFF <<		= 	 TAP >>TURN_OFF_BUTTON<< ONCE	    ->			 RED LED, soft RUMBLE							   //////////////////
//////////////////																																				   //////////////////
//////////////////     						 >>	 ON  << 	= 	DOUBLE-TAP >>TURN_ON_BUTTON<<	    -> 			 BLINKS GREEN LED, strong RUMBLE		   		   //////////////////
//////////////////                                                                 		                                           								   //////////////////
//////////////////											     						  ~~												   					   //////////////////
//////////////////                                                                 		                                           								   //////////////////
//////////////////~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/    					/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~//////////////////
//////////////////~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/						/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~//////////////////
//////////////////                                                                 		                                           								   //////////////////
//////////////////                                                                 		                                           								   //////////////////
//////////////////									     /////////////////////////////////////////////////////////////////////									   //////////////////
//////////////////									     /////										                     /////									   //////////////////
//////////////////									     /////  HOW TO  OPEN / NAVIGATE / CLOSE / SAVE  OLED SCREEN MENU /////									   //////////////////
//////////////////									     /////										                     /////									   //////////////////
//////////////////									     /////////////////////////////////////////////////////////////////////									   //////////////////
//////////////////                                                                 		                                           								   //////////////////
//////////////////                                                                 		                                           								   //////////////////
//////////////////                                      	/*//~//*//*//~//*//*//~//*//*//~//*//*//~//*//*//~//*//*//~//*/                           			   //////////////////
//////////////////                                      	/*//~//*//*//~//*//*//~//*//*//~//*//*//~//*//*//~//*//*//~//*/                           			   //////////////////
//////////////////                                          /*//~//*//*//~//*//*//~//*//*//~//*//*//~//*//*//~//*//*//~//*/                 	 				   //////////////////
//////////////////                                      	        							         		                                     			   //////////////////
//////////////////											        		OPTIONAL TO CHANGE BUTTONS	 		          										   //////////////////
//////////////////											        											          										   //////////////////
/*//////////////*/											        		MENU_OPEN_BUTTON_1 = PS4_L2			          			  				   			   ,/////////////////
/*//////////////*/											        		MENU_OPEN_BUTTON_2 = PS4_OPTIONS	          							  			   //////////////////
//////////////////											        											          										   //////////////////
//////////////////                                      	/*//~//*//*//~//*//*//~//*//*//~//*//*//~//*//*//~//*//*//~//*/                           			   //////////////////
//////////////////                                      	/*//~//*//*//~//*//*//~//*//*//~//*//*//~//*//*//~//*//*//~//*/                           			   //////////////////
//////////////////                                      	/*//~//*//*//~//*//*//~//*//*//~//*//*//~//*//*//~//*//*//~//*/                           			   //////////////////
//////////////////                                                                 		                                           								   //////////////////
//////////////////																																				   //////////////////
//////////////////                                                                 		                                           								   //////////////////
//////////////////							      //~//			    ~~ HOW TO OPEN/NAVIGATE/CLOSE OLED SCREEN MENU ~~			//~//						       //////////////////
//////////////////												    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~											   //////////////////
//////////////////	 																																			   //////////////////
//////////////////										>> OPEN  <<  			=	HOLD >> MENU_OPEN_BUTTON_1 + MENU_OPEN_BUTTON_2 <<					   		   //////////////////
//////////////////																																				   //////////////////
//////////////////						  			>> NAVIGATE PAGES <<		=   RIGHT & LEFT BUTTONS													       //////////////////
//////////////////																																				   //////////////////
//////////////////						   	>> NAVIGATE POWERMODS/OPTIONS <<	=   UP & DOWN BUTTONS															   //////////////////
//////////////////																																				   //////////////////
//////////////////							 		   >> CLOSE  <<	  			=	PRESS CIRCLE BUTTON															   //////////////////
//////////////////				  																																   //////////////////
//////////////////	 																																			   //////////////////
//////////////////~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/								/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~//////////////////
//////////////////				  																																   //////////////////
//////////////////				  																																   //////////////////
//////////////////		   					     	 //~//		    ~~ HOW TO ASSIGNE/SAVE MODS TO POWER BUTTONS ~~			//~//	       					       //////////////////
//////////////////				  									~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~												   //////////////////
//////////////////				  																																   //////////////////
//////////////////			           ASSIGNE/SAVE MODS TO MAIN POWER BUTTONS 1/2/3/4	   	=	TRIANGLE BUTTON   ->  GREEN LED LIGHT ON THIS MOD				   //////////////////
//////////////////				  																																   //////////////////
//////////////////			         ASSIGNE/SAVE MODS TO ADVANCED POWER BUTTONS 5/6/7/8	=	SQUARE BUTTON     ->  VIOLETTE LED LIGHT ON THIS MOD			   //////////////////
//////////////////				  																																   //////////////////
//////////////////											     						   													   					   //////////////////
//////////////////				  																																   //////////////////
//////////////////~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/								/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~*/~//////////////////
//////////////////				  																																   //////////////////
//////////////////	 																																			   //////////////////
//////////////////							   //~//		  ~~ HOW TO OPEN/NAVIGATE/CLOSE/SAVE THE FINE ADJUSTMENTS ~~			//~//		      			   //////////////////
//////////////////	 											~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~											   //////////////////
//////////////////	 																																			   //////////////////
//////////////////	 							    	!!! FEW MODS YOU WILL NEED TO ADJUST BEFOR THEY WORKING CORRECTLY !!!									   //////////////////
//////////////////																																				   //////////////////
//////////////////			 			 	     !!!  With the Fine Adjustments You can change the the Values to your likning	!!!							       //////////////////
//////////////////																																				   //////////////////
//////////////////										>> OPEN  <<  				=	press CROSS on a MOD (if an adjustment are available)		 	  		   //////////////////
//////////////////																																				   //////////////////
//////////////////						  	>> NAVIGATE OPTIONS TO ADJUST <<		=   UP or DOWN BUTTONS													       //////////////////
//////////////////																																				   //////////////////
//////////////////						   	  >> ADJUST THE VALUE -1/+1 <<		    =   LEFT or RIGHT BUTTONS													   //////////////////
//////////////////																																				   //////////////////
//////////////////						     >> ADJUST THE VALUE -10/+10 <<	        =   LEFT or RIGHT BUTTONS + R2 					    						   //////////////////
//////////////////																																				   //////////////////
//////////////////			>> SAVE/CLOSE FINE ADJUSTMENTS & BACK TO MOD LIST  <<	=	PRESS CIRCLE BUTTON														   //////////////////
//////////////////																																				   //////////////////
//////////////////											     						    												   					   //////////////////
//////////////////																																				   //////////////////
//////////////////											     																			   					   //////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////




/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////																																								 														     	   //////////
//////////////////																		!!!!!!!!!					MOD-LIST					!!!!!!!!!!!						 														       	   //////////
//////////////////																																								 															       //////////
//////////////////																																																							       //////////
//////////////////    MODS:             	                                             WHAT THEY ARE DOING:                                                      HOW TO ACTIVATE:          												       //////////
////////////////// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  //////////
//////////////////	  FRONT-SPEEDFLIPS				 	--------		    PERFECT DIAGONAL-DODGES, LEFT & RIGHT     							------------  	    HOLD BOOST, HOLD LEFTSTICK IN DIAGONAL FORWARD DIRECTION AND DOUBLE TAP JUMP   //////////
//////////////////																																								 														     	   //////////
//////////////////    BACK-SPEEDFLIPS               	--------			FASTEST WAY TO TURN YOUR CAR	            						------------  		HOLD DRIVEBACKWARDS, HOLD LEFTSTICK BACKWARD AND DOUBLE TAP JUMP 			   //////////
//////////////////																																								 														     	   //////////
//////////////////	  CAMERASHAKE-BLOCKER           	--------			NO CAMERA SHAKE FOR  LOW CONTROLLER-STICK-DEADZONE					------------		AUTOMATIC			 												     	   //////////
//////////////////																																								 														     	   //////////
//////////////////    STALL					         	--------  			STALL(CHECK YOUTUBE)				        						------------     	PRESS YOUR DEFINED "STALL" BUTTON                             				   //////////
//////////////////																																								 														     	   //////////
//////////////////    AUTOBALLCAM(SHORT)          		--------     		RETURN TO BALLCAM AFTER 700ms AUTOMATICALLY 					 	------------      	TAP BALLCAMERA BUTTON ONCE (still possible to switch camera instantly manual)  //////////
//////////////////																																					>>>>>   FINE ADJUSTMENTS ON MENU	<<<<									   //////////
//////////////////																																								 														     	   //////////
//////////////////    AUTOBALLCAM(LONG)              	--------          	RETURN TO BALLCAM AFTER 10ec AUTOMATICALLY 							------------    	DOUBLE TAP BALLCAMERA BUTTON (still possible to switch camera instantly manual)//////////
//////////////////																																					>>>>>   FINE ADJUSTMENTS ON MENU		<<<<								   //////////
//////////////////																																								 														     	   //////////
//////////////////    SPEEDDRIFT                  		--------  			AUTOMATICALY DRIFT WHILE STEERING									------------       	HOLD LEFT-STICK MORE THEN 95% OF THE MAX RANGE, TO LEFT OR RIGHT               //////////
//////////////////																																								 														     	   //////////
//////////////////    STOP-CAR                  		--------          	STOPS INSTANTLY YOUR CAR                                      		------------  		HOLD YOUR DRIVE FORWARD & DRIVE BACKWARD BUTTONS 				               //////////
//////////////////																																								 														     	   //////////
//////////////////																																								 														     	   //////////   
//////////////////	  TAKEOFF							--------			FASTES WAY TO THE MOON												------------		PRESS YOUR DEFINED "TAKE_OFF" BUTTON                                           //////////
//////////////////																																					>>>>>   FINE ADJUSTMENTS ON MENU	<<<<								       //////////
//////////////////                                                                                                                                                  															 				   //////////
//////////////////	  MUSTY-FLICK						--------			"MUSTY-FLICK"(CHECK YOUTUBE)										------------		PRESS YOUR DEFINED "MUSTY_FLICK" BUTTON										   //////////
//////////////////																																								 														     	   //////////
//////////////////	  DRIFT-AFTER-JUMP/DODGE			--------			DRIFT DURRING JUMP AND LANDING										------------		JUMP FOR ACTIVAT, PRESS DRIVE_FORWARDS FOR STOP DRIFTING					   //////////
//////////////////	  																																																							   //////////
//////////////////	  																																				(NOT AVALAIBLE FOR PLAYERS, WHO USING AIRROLL & DRIFT ON THE SAME BUTTON)	   //////////
//////////////////																																																								   //////////
//////////////////	  L/R-KICKOFF						--------			full KICKOFF inc Boost and Speedflip 							    ------------		PRESS YOUR DEFINED L or R KICK OFF BUTTON AFTER THE COUNTDOWN	  			   //////////
//////////////////																																																								   //////////
//////////////////                                                                                                                                                  WHEN BALANCING THE BALL ON THE HOOD,			 						       //////////
//////////////////	  ZURN-SHOTS						--------			90°FLIPSHOT															------------		PRESS YOUR DEFINED "ZURN-SHOT" BUTTON									       //////////
//////////////////																																																								   //////////
//////////////////	  WAVEDASH							--------			"WAVEDASH"(CHECK YOUTUBE), BOOST									------------		PRESS YOUR DEFINED "WAVEDASH" BUTTON										   //////////
//////////////////																																					>>>>>   FINE ADJUSTMENTS ON MENU	<<<<								       //////////
//////////////////																																																								   //////////
//////////////////	  TORNADOSPIN 						--------   			TORNADOSPIN(CHECK YOUTUBE), BOOST									------------		PRESS YOUR DEFINED "LEFT OR RIGHT_TORNADO_SPIN								   //////////
//////////////////																																																					     		   //////////
//////////////////	  BOOST_SAVER						--------			STOP BOOSTING AFTER SUPERSONIC										------------		AUTOMATICALLY AFTER HOLDING THE BOOST BUTTON FOR A CERTAIN TIME				   //////////
//////////////////																																					>>>>>   FINE ADJUSTMENTS ON MENU	<<<<								   	   //////////
//////////////////																																																					     		   //////////
//////////////////	  FAST FLIP							--------			change FRONTFLIP TO A SPEEDFLIP										------------		DODGE STRAIGHT FORWARDS													   	   //////////
//////////////////																																																					     		   //////////
//////////////////	  FAR L/R-KICKOFFS		   	   	    --------		    full FAR KICKOFF inc Boost and Speedflip     						------------  	    PRESS YOUR DEFINED FAR L or RIGHT K-OFF BUTTON AFTER THE COUNTDOWN			   //////////
//////////////////																																								 														     	   //////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////













/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////              				                                                 																																								  ///////
///////               				                                                    	//////////////////////////////////////////////																											  ///////
///////        				               !!!!!!!!!!!!!!!!!!!!!!!!!                        //   !!!   NO CHANGES NEEDED BELOW   !!!    //                 !!!!!!!!!!!!!!!!!!!!!!!!!!!															   	  ///////
///////                 			     	                                                //////////////////////////////////////////////																										  	  ///////
///////																																																												  ///////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



















/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////																																								 													     	   //////////
//////////////////																			!!!!!!!!!					MANUEL					!!!!!!!!!!!					 														      	   //////////
//////////////////																																																							   //////////
//////////////////																							    FINE ADJUSTMENTS OF MODS																									   //////////
//////////////////																																																							   //////////
//////////////////																																																						       //////////
//////////////////    1000 = 1 SECOND :             	                                                     OF WHICH MOD:                                                      EXPLANATION OF FINE ADJUSTMENTS:          			   		   //////////
int/////////////// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  //////////
/*//////////////*/																																																							   //////////
/*//////////////*/																																												 											   //////////
/*//////////////*/		BOOST_SAFER_TIME_GROUND 		= 1200,					 //~~~~~~~~~~~~//					       BOOST_SAFER						//~~~~~~~~~~~~//		TIME TO STOP THE BOOST ON THE GROUND				       //////////
/*//////////////*/													 										  																					 								        	   //////////
/*//////////////*/		BOOST_SAFER_TIME_AIR			= 2500,					 //~~~~~~~~~~~~//						   BOOST_SAFER						//~~~~~~~~~~~~//		TIME TO STOP THE BOOST IN THE AIR	  			    	   //////////
/*//////////////*/																																							 														     	   //////////
/*//////////////*/		DRIFT_AFTER_JUMP_TIME 			= 1300,					 //~~~~~~~~~~~~// 						   DRIFT-AFTER-JUMP/DODGE  			//~~~~~~~~~~~~//		TIME OF DRIFT AFTER JUMP						           //////////
/*//////////////*/																																							 														     	   //////////
/*//////////////*/		DRIFT_AFTER_DODGE_TIME 			= 1300,					 //~~~~~~~~~~~~// 						   DRIFT-AFTER-JUMP/DODGE  			//~~~~~~~~~~~~//		TIME OF DRIFT AFTER DODGE							  	   //////////
/*//////////////*/																																								 													     	   //////////
/*//////////////*/ 		AIRROLL_TIME					= 200,					 //~~~~~~~~~~~~// 						   WALL JUMP			  			//~~~~~~~~~~~~//		THE TIME OF THE ROTATION AFTER JUMP						   //////////
/*//////////////*/																																								 													     	   //////////
/*//////////////*/		ANGLE_ALIGNENT_TIME				= 200,					 //~~~~~~~~~~~~// 						   WALL JUMP			  			//~~~~~~~~~~~~//		THE TIME FOR ANGLE OF ALIGNENT AFTER JUMP			       //////////
/*//////////////*/																																								 													     	   //////////
/*//////////////*/		AUTO_BALL_CAMERA_SHORT			= 700,					 //~~~~~~~~~~~~//						   AUTO BALL CAMERA					//~~~~~~~~~~~~//		TIME OF FOCUS ON CAR, BEFOR THE FOCUS SWITCH BACK TO BALL  //////////
/*//////////////*/		       																																																				   //////////
/*//////////////*/		AUTO_BALL_CAMERA_LONG			= 10000,				 //~~~~~~~~~~~~//						   AUTO BALL CAMERA					//~~~~~~~~~~~~//		TIME OF FOCUS ON CAR, AFTER DUOUBLETAP THE BALLCAM BUTTON  //////////
/*//////////////*/		       																																																				   //////////
/*//////////////*/		SPEEDDRIFT_POWER				= 40,					 //~~~~~~~~~~~~//						   SPEEDDRIFT						//~~~~~~~~~~~~//		THE POWER OF THE SPEEDDRIFT-EFFECT					   	   //////////
/*//////////////*/		       																																																				   //////////
/*//////////////*/		STRAIGHT_FLY_TIME				= 550,					 //~~~~~~~~~~~~//						   WAVEDASH							//~~~~~~~~~~~~//		THE TIME OF THE FIRST STRAIGHT FLEIGHT				   	   //////////
/*//////////////*/		       																																																				   //////////
/*//////////////*/		ANGLE_LY_TIME					= 310,					 //~~~~~~~~~~~~//						   WAVEDASH							//~~~~~~~~~~~~//		THE TIME OF Y ANGLE										   //////////
/*//////////////*/		       																																																				   //////////
/*//////////////*/		L_STRAIGHT_DRIVE_TIME			= 100,			    	 //~~~~~~~~~~~~//						   KICKOFFS							//~~~~~~~~~~~~//		THE TIME OF FIRST straight boost 						   //////////
/*//////////////*/		       																																																				   //////////
/*//////////////*/		L_ANGLE_TIME_KICKOFF			= 405,			 		 //~~~~~~~~~~~~//						   KICKOFFS						    //~~~~~~~~~~~~//		THE TIME OF X ANGLE BEFOR JUMPING						   //////////
/*//////////////*/		       																																																				   //////////
/*//////////////*/		R_STRAIGHT_DRIVE_TIME			= 100,			    	 //~~~~~~~~~~~~//						   KICKOFFS							//~~~~~~~~~~~~//		THE TIME OF FIRST straight boost 						   //////////
/*//////////////*/		       																																																				   //////////
/*//////////////*/		R_ANGLE_TIME_KICKOFF			= 405,			 		 //~~~~~~~~~~~~//						   KICKOFFS						    //~~~~~~~~~~~~//		THE TIME OF  X ANGLE BEFOR JUMPING						   //////////
/*//////////////*/		       																																																				   //////////
/*//////////////*/		L_STRAIGHT_BOOST_TIME			= 420,			    	 //~~~~~~~~~~~~//						   FAR KICKOFFS						//~~~~~~~~~~~~//		THE TIME OF FIRST straight boost 						   //////////
/*//////////////*/		       																																																				   //////////
/*//////////////*/		L_ANGLE_TIME_SPEEDFLIP			= 380,			 		 //~~~~~~~~~~~~//						   FAR KICKOFSS					    //~~~~~~~~~~~~//		THE TIME OF X ANGLE BEFOR JUMPING						   //////////
/*//////////////*/		       																																																				   //////////
/*//////////////*/		R_STRAIGHT_BOOST_TIME			= 420,			    	 //~~~~~~~~~~~~//						   FAR KICKOFFS						//~~~~~~~~~~~~//		THE TIME OF FIRST straight Boost 						   //////////
/*//////////////*/		       																																																				   //////////
/*//////////////*/		R_ANGLE_TIME_SPEEDFLIP			= 380,			 		 //~~~~~~~~~~~~//						   FAR KICKOFFS					    //~~~~~~~~~~~~//		THE TIME OF  X ANGLE BEFOR JUMPING						   //////////
/*//////////////*/		       																																																				   //////////
/*//////////////*/		TAKEOFF_HEIGHT       			= 450,					 //~~~~~~~~~~~~//						   TAKEOFF						    //~~~~~~~~~~~~//		BOOST TIME / HEIGHT OF TAKEOFF							   //////////
/*//////////////*/		       																																																				   //////////
/*//////////////*/		Y_ANGLE_TIME					= 150,					 //~~~~~~~~~~~~//						   TAKEOFF							//~~~~~~~~~~~~//		THE TIME OF THE LY AXIS, BEFOR SECOND JUMP				   //////////
/*//////////////*/		       																																																				   //////////
/*//////////////*/		ANGLE_X_TIME					= 100,					 //~~~~~~~~~~~~//						   ZURN SHOT						//~~~~~~~~~~~~//		THE TIME OF THE LX AXIS, BEFOR DODGE					   //////////
/*//////////////*/		       																																																				   //////////
/*//////////////*/		JUMP_HEIGHT						= 300					 //~~~~~~~~~~~~//						   ZURN SHOT						//~~~~~~~~~~~~//		HEIGHT OF FIRST JUMP									   //////////
/*//////////////*/		       																																																				   //////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

																									


define OFF = 300;


int onoff;
int TURN_SCRIPT_ON_OFF = TRUE;

	/* controller color vals */
	data( 2,0,0,0, 0,0,0,2, 2,0,2,0, 0,0,2,0, 0,2,2,0, 2,2,2,0, 0,2,0,0, 0,0,0,0 );
	
	define fm = OLED_FONT_MEDIUM_WIDTH;
	define fs = OLED_FONT_SMALL_WIDTH;

int P_A_S = 0; // POWERBUTTON_ADJUSTSTMENT_SYSTEM
int FINE_ADJUST_MENU = 0;
int FINE_ADJUST_MENU_A = 0;
int FINE_ADJUST_MENU_A_2 = 0;
int FINE_ADJUST_MENU_2 = 0;
int FINE_ADJUST_MOD = 0
int menu;
int build = 1;
int screen = 1, clear;
int POWER_BUTTONS = 0; 

int
FRONT_SPEEDFLIPS_MOD 	 	= FALSE,
BACK_SPEEDFLIPS_MOD 	 	= FALSE,
AUTO_BALLCAM_MOD		 	= FALSE,
SPEED_DRIFT_MOD				= FALSE,
STOP_CAR_MOD			 	= FALSE,
FAST_FLIPP_MOD				= FALSE,
CAMERA_SHAKE_BLOCK_MOD	 	= FALSE,
DRIFT_AFTER_JUMP_DODGE_MOD	= FALSE,
BOOST_SAVER_MOD				= FALSE;
								
define p_cycle_limit = 13; /* cycle limit for amount of pages you have in menu / void counting page 0 */
define p_1_opt_cycle_limit = 13; /* amount of options/toggles for page 1 */
define p_2_opt_cycle_limit = 13;
define p_3_opt_cycle_limit = 13;
define p_4_opt_cycle_limit = 13;
define p_5_opt_cycle_limit = 1;
define p_6_opt_cycle_limit = 1;
define p_7_opt_cycle_limit = 1;
define p_8_opt_cycle_limit = 1;
define p_9_opt_cycle_limit = 1;
define p_10_opt_cycle_limit = 1;
define p_11_opt_cycle_limit = 1;
define p_12_opt_cycle_limit = 1;
define p_13_opt_cycle_limit = 1;
define p_0 = 0; /* home page */
define p_1 = 1;
define p_2 = 2;
define p_3 = 3;
define p_4 = 4;
define p_5 = 5;
define p_6 = 6;
define p_7 = 7;
define p_8 = 8;
define p_9 = 9;
define p_10 = 10;
define p_11 = 11;
define p_12 = 12;
define p_13 = 13;
define PS4 	 = 1;
define PS5	 = 2;
define PC	 = 3;
define XB1	 = 4;
define XB_XS = 5;
int p_1_opt;
int p_2_opt;
int p_3_opt;
int p_4_opt;
int p_5_opt;
int p_6_opt;
int p_7_opt;
int p_8_opt;
int p_9_opt;
int p_10_opt;
int p_11_opt;
int p_12_opt;
int p_13_opt;


const string idx_txt[] = { /* text index for menu */
	"   ZURN",
	"POWER-BUTTONS",
	"POWER",
	"POWER",
	"POWER",
	"POWER",
	"FRONT SPEEDFLIPS",
	"BACK SPEEDFLIPS",
	"AUTO BALLCAM",
	"SPEED DRIFT",
	"STOP CAR",
	"FAST FLIP",
	"CAMERA SHAKE",
	"DRIFT JUMP/DODGE",
	"BOOST SAVER",
	"~ 2.8 ~"
};

const string idx_txt2[] = { /* text index for menu */
	"   ZURN","POWER-BUTTONS",
	"1/5",
	"2/6",
	"3/7",
	"4/8",
	"5",
	"6",
	"7",
	"8"
};

const string idx_opt[] = { /* option text index for menu */
	"OFF",
	"R ZURN SHOT",
	"L ZURN SHOT",
	"  TAKE OFF",
	" R KICK-OFF",
	" L KICK-OFF",
	"FAR R K-OFF",
	"FAR L K-OFF",
	"R WALL JUMP",
	"L WALL JUMP",
	" R TORNADO",
	"   STALL",
	"   MUSTY",
	"  WAVEDASH",
	"POWER"
};

const int16 BOOT_LOGO[] = {
 
127, 61,
    0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x001F,0xFFFF,0xFE07,0xF87E,0x0FFF,0xE001,0xFFC0,0x1FF0,
    0x003F,0xFFFF,0xFC0F,0xF0FC,0x1FFF,0xC003,0xFF80,0x3FE0,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x07FF,0xFFFF,0x80FE,0x07C1,0xFFFF,0x007F,0xFE03,0xFE00,
    0x0FFF,0xFFFF,0x01FC,0x0F83,0xFFFE,0x00FF,0xFC07,0xFC00,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x7FFF,0xFFE0,0x1FC1,0xF87F,0x83F0,0x07FF,0xF87F,0xC000,
    0xFFFF,0xFFC0,0x3F83,0xF0FF,0x07E0,0x0FFF,0xF0FF,0x8000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x001F,0xFFFF,0xF803,0xF83F,0x07F0,0x7F81,0xFFFF,0x8FF8,0x003F,
    0xFFFF,0xF007,0xF07E,0x0FE0,0xFF03,0xFFFF,0x1FF0,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x1FFE,0x007F,0x87E0,0xFFFF,0xC03F,0xF7FF,0xFF80,0x0000,
    0x3FFC,0x00FF,0x0FC1,0xFFFF,0x807F,0xEFFF,0xFF00,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0007,0xFF80,0x0FE0,0xFC1F,0xFF00,0x03FE,0x7FFF,0xF000,0x000F,
    0xFF00,0x1FC1,0xF83F,0xFE00,0x07FC,0xFFFF,0xE000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x01FF,0xE001,0xFE1F,0x83F3,0xF800,0x7F81,0xFFFE,0x0000,0x03FF,
    0xC003,0xFC3F,0x07E7,0xF000,0xFF03,0xFFFC,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x7FF8,0x007F,0xFFF0,0x7E3F,0xC01F,0xF807,0xFFC0,0x0000,0xFFF0,
    0x00FF,0xFFE0,0xFC7F,0x803F,0xF00F,0xFF80,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x001F,0xFE00,0x07FF,0xFE1F,0xC0FE,0x01FF,0x007F,0xF800,0x003F,0xFC00,
    0x0FFF,0xFC3F,0x81FC,0x03FE,0x00FF,0xF000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x07FF,0x8000,0x7FFF,0xC1F8,0x07F0,0x1FF0,0x07FF,0x0000,0x0FFF,0x0000,
    0xFFFF,0x83F0,0x0FE0,0x3FE0,0x0FFE,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0003,0xFFE0,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0007,0xFFC0,0x0000,
    0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x00FF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFE00,0x01FF,0xFFFF,0xFFFF,
    0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFC00,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x3FFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xE000,0x7FFF,0xFFFF,0xFFFF,
    0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xC000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x000F,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFE,0x001F,0xFFFF,0xFFFF,0xFFFF,
    0xFFFF,0xFFFF,0xFFFF,0xFFFC,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x01FF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFE0,0x03FF,0xFFFF,0xFFFF,0xFFFF,
    0xFFFF,0xFFFF,0xFFFF,0xFFC0,0x0000
    };
    
const string idx_opt2[] = { /* option text index for menu */
"OFF","ON", " "
}
const string idx_opt5[] = {/* option text index for menu */
"  ",
"POWER 1:",
"POWER 5:",
"POWER 2:",
"POWER 6:",
"POWER 3:",
"POWER 7:",
"POWER 4:",
"POWER 8:"
}

const string idx_opt4[] = { /* option text index for menu */
"(SAVED)"
}
const string V_ANGLE_ALIGNENT_TIME			=  "AIRROLLTIME"; // X ANGLE TIME ;)

const string V_AIRROLL_TIME				 	= "Y-ANGLETIME"; // AIRROLL TIME ;P

const string V_SPEEDDRIFT_POWER				= "DRIFT POWER";

const string V_STRAIGHT_FLY_TIME    		= "STRAIGHTFLY";

const string V_ANGLE_LY_TIME    			= "Y-ANGLETIME";

const string V_L_STRAIGHT_DRIVE_TIME    	= "BOOST-TIME";

const string V_L_ANGLE_TIME_KICKOFF    		= " L ANGLE";

const string V_R_ANGLE_TIME_KICKOFF    		= " R ANGLE";

const string V_R_STRAIGHT_DRIVE_TIME    	= "BOOST-TIME";

const string V_L_STRAIGHT_BOOST_TIME    	= "BOOST-TIME";

const string V_L_ANGLE_TIME_SPEEDFLIP   		= " R ANGLE";

const string V_R_ANGLE_TIME_SPEEDFLIP    		= " L ANGLE";

const string V_R_STRAIGHT_BOOST_TIME    	= "BOOST-TIME";

const string V_TAKEOFF_HEIGHT				= "HEIGHT";

const string V_Y_ANGLE_TIME					= "Y-ANGLETIME";

const string V_ANGLE_X_TIME					= "X-ANGLETIME";

const string V_JUMP_HEIGHT					= "HEIGHT";

const string V_BOOST_SAFER_TIME_GROUND		= "BOOSTGROUND";

const string V_BOOST_SAFER_TIME_AIR			= "BOOST AIR";

const string V_AUTO_BALL_CAMERA_SHORT 		= "SHORT TIME";

const string V_AUTO_BALL_CAMERA_LONG		= "LONG TIME";
int logoX,logoX2,logoY, logoY2;                       
int logoBit,logoOffset,logoData;



	 
int  AUTO_BALLCAMM_SAVER_SCRN,F_SPEEDFLIP_SAVER_SCRN,B_SPEEDFLIP_SAVER_SCRN,DRIFT_AFTER_J_D_SAVER_SCRN;
int	 CAMERA_S_SAVER_SCRN,STOP_C_SAVER_SCRN,SPEED_D_SAVER_SCRN,FAST_FLIP_SAVER_SCRN,BOOST_S_SAVER_SCRN;
int  AUTO_BALLCAMM,F_SPEEDFLIP,B_SPEEDFLIP,DRIFT_AFTER_J_D,CAMERA_S,STOP_C,SPEED_D,FAST_FLIP,BOOST_S,AIRROLL_TIME_S,ANGLE_ALIGNENT_TIME_S;
int  SPEEDDRIFT_POWER_S,ANGLE_LY_TIME_S,STRAIGHT_FLY_TIME_S,L_STRAIGHT_DRIVE_TIME_S,L_ANGLE_TIME_KICKOFF_S,R_ANGLE_TIME_KICKOFF_S;
int  R_STRAIGHT_DRIVE_TIME_S,L_STRAIGHT_BOOST_TIME_S,L_ANGLE_TIME_SPEEDFLIP_S,R_ANGLE_TIME_SPEEDFLIP_S,R_STRAIGHT_BOOST_TIME_S;
int  TAKEOFF_HEIGHT_S,Y_ANGLE_TIME_S,ANGLE_X_TIME_S,JUMP_HEIGHT_S,BOOST_SAFER_TIME_GROUND_S,BOOST_SAFER_TIME_AIR_S,AUTO_BALL_CAMERA_SHORT_S,AUTO_BALL_CAMERA_LONG_S

int  POWER_B_1,POWER_B_2,POWER_B_3,POWER_B_4,POWER_B_5,POWER_B_6,POWER_B_7,POWER_B_8;
	 
init {
	POWER_B_1					= get_pvar(SPVAR_1,  0,    13, 0);
	POWER_B_2					= get_pvar(SPVAR_2,  0,    13, 0);
	POWER_B_3					= get_pvar(SPVAR_3,  0,    13, 0);
	POWER_B_4					= get_pvar(SPVAR_4,  0,    13, 0);
    F_SPEEDFLIP 				= get_pvar(SPVAR_5,  0,     1, 0);      
	B_SPEEDFLIP 				= get_pvar(SPVAR_6,  0,     1, 0);    	
	AUTO_BALLCAMM				= get_pvar(SPVAR_7,  0,     1, 0);    	
	SPEED_D 					= get_pvar(SPVAR_8,  0,     1, 0);    	
	STOP_C 						= get_pvar(SPVAR_9,  0,     1, 0);    	
	FAST_FLIP					= get_pvar(SPVAR_10, 0,     1, 0);    	
	CAMERA_S					= get_pvar(SPVAR_11, 0,     1, 0);    	
	DRIFT_AFTER_J_D				= get_pvar(SPVAR_12, 0,     1, 0);    	
	BOOST_S						= get_pvar(SPVAR_13, 0,     1, 0);    	
	AIRROLL_TIME_S				= get_pvar(SPVAR_14, 0,  1000, 0);
	ANGLE_ALIGNENT_TIME_S		= get_pvar(SPVAR_15, 0,  1000, 0);
	SPEEDDRIFT_POWER_S			= get_pvar(SPVAR_16, 0,  1000, 0);
	STRAIGHT_FLY_TIME_S			= get_pvar(SPVAR_17, 0,  1000, 0);
	ANGLE_LY_TIME_S				= get_pvar(SPVAR_18, 0,  1000, 0);
	L_STRAIGHT_DRIVE_TIME_S		= get_pvar(SPVAR_19, 0,  1000, 0);
	L_ANGLE_TIME_KICKOFF_S		= get_pvar(SPVAR_20, 0,  1000, 0);
	R_ANGLE_TIME_KICKOFF_S		= get_pvar(SPVAR_21, 0,  1000, 0);
	R_STRAIGHT_DRIVE_TIME_S		= get_pvar(SPVAR_22, 0,  1000, 0);
	TAKEOFF_HEIGHT_S			= get_pvar(SPVAR_23, 0,  1000, 0);
	Y_ANGLE_TIME_S				= get_pvar(SPVAR_24, 0,  1000, 0);
	ANGLE_X_TIME_S				= get_pvar(SPVAR_25, 0,  1000, 0);
	JUMP_HEIGHT_S				= get_pvar(SPVAR_26, 0,  1000, 0);
	BOOST_SAFER_TIME_GROUND_S	= get_pvar(SPVAR_27, 0, 10000, 0);
	BOOST_SAFER_TIME_AIR_S		= get_pvar(SPVAR_28, 0, 10000, 0);
	L_STRAIGHT_BOOST_TIME_S		= get_pvar(SPVAR_29, 0,  1000, 0);
	L_ANGLE_TIME_SPEEDFLIP_S	= get_pvar(SPVAR_30, 0,  1000, 0);
	R_ANGLE_TIME_SPEEDFLIP_S	= get_pvar(SPVAR_31, 0,  1000, 0);
	R_STRAIGHT_BOOST_TIME_S		= get_pvar(SPVAR_32, 0,  1000, 0);
	POWER_B_5					= get_pvar(SPVAR_33, 0,    13, 0);
	POWER_B_6					= get_pvar(SPVAR_34, 0,    13, 0);
	POWER_B_7					= get_pvar(SPVAR_35, 0,    13, 0);
	POWER_B_8					= get_pvar(SPVAR_36, 0,    13, 0);
	AUTO_BALL_CAMERA_SHORT_S	= get_pvar(SPVAR_37, 0, 10000, 0);
	AUTO_BALL_CAMERA_LONG_S		= get_pvar(SPVAR_38, 0, 10000, 0);

    F_SPEEDFLIP_SAVER_SCRN 	    = F_SPEEDFLIP; 	
    B_SPEEDFLIP_SAVER_SCRN 		= B_SPEEDFLIP; 	
    AUTO_BALLCAMM_SAVER_SCRN	= AUTO_BALLCAMM;	
    SPEED_D_SAVER_SCRN			= SPEED_D; 		
    STOP_C_SAVER_SCRN 			= STOP_C; 			
    FAST_FLIP_SAVER_SCRN		= FAST_FLIP;		
    CAMERA_S_SAVER_SCRN			= CAMERA_S;		
    DRIFT_AFTER_J_D_SAVER_SCRN	= DRIFT_AFTER_J_D;	
    BOOST_S_SAVER_SCRN			= BOOST_S;			
}

main {
	if( menu > p_0 ){
	TURN_SCRIPT_ON_OFF = FALSE;
}
	if( build ){
	cls_oled( 1 ); 
	if( menu == p_0 ){
	cls_oled( 0 ); 
    draw_picture(0,0,0);/* home page */
	clear = 0; screen = 1; /* screen saver */
}
	if( menu ){
	vm_tctrl(10);
	rect_oled( 1, 1, 126, 30, 1, 0 ); /* page text, shapes, and options */
	if( menu == p_1 ){
	printf( posx( 17, fs ), 7, 1, 1, idx_txt[ 2 ] );
	printf( posx( -3, fs ), 5, 2, 1, idx_txt2[ 2 ] );
	if( p_1_opt == -1){
	cls_oled( 0 );
	rect_oled( 1, 1, 126, 60, 1, 0 );
	printf( posx( 10, fs ), 20, 0, 1, idx_opt[ POWER_B_1 ] );  
	printf( posx( 15, fs ), 5, 0, 1, idx_opt5[ 1 ] ); 
	printf( posx( -8, fs ), 1, 1, 1, idx_txt2[ 2 ] );
	printf( posx( 10, fs ), 50, 0, 1, idx_opt[ POWER_B_5 ] ); 
	printf( posx( 15, fs ), 35, 0, 1, idx_opt5[ 2 ] );
}
	P_B_N_1(0,3);
	P_B_N_1(1,11);
	P_B_N_1(2,11);
	P_B_N_1(3,11);
	P_B_N_1(4,11);
	P_B_N_1(5,11);
	P_B_N_1(6,11);
	P_B_N_1(7,11);
	P_B_N_1(8,11);
	P_B_N_1(9,11);
	P_B_N_1(10,11);
	P_B_N_1(11,11);
	P_B_N_1(12,11);
	P_B_N_1(13,11);
}
	if( menu == p_2 ){
	printf( posx( 17, fs ), 7, 1, 1, idx_txt[ 3 ] );
	printf( posx( -3, fs ), 5, 2, 1, idx_txt2[ 3 ] );
	if( p_2_opt == -1){
	cls_oled( 0 );
	rect_oled( 1, 1, 126, 60, 1, 0 );
	printf( posx( 10, fs ), 20, 0, 1, idx_opt[ POWER_B_2 ] );  
	printf( posx( 15, fs ), 5, 0, 1, idx_opt5[ 3 ] ); 
	printf( posx( -8, fs ), 1, 1, 1, idx_txt2[ 3 ] );	
	printf( posx( 10, fs ), 50, 0, 1, idx_opt[ POWER_B_6 ] ); 
	printf( posx( 15, fs ), 35, 0, 1, idx_opt5[ 4 ] );
}
	P_B_N_2(0,3);
	P_B_N_2(1,11);
	P_B_N_2(2,11);
	P_B_N_2(3,11);
	P_B_N_2(4,11);
	P_B_N_2(5,11);
	P_B_N_2(6,11);
	P_B_N_2(7,11);
	P_B_N_2(8,11);
	P_B_N_2(9,11);
	P_B_N_2(10,11);
	P_B_N_2(11,11);
	P_B_N_2(12,11);
	P_B_N_2(13,11);
}
	if( menu == p_3 ){
	printf( posx( 17, fs ), 7, 1, 1, idx_txt[ 4 ] );
	printf( posx( -3, fs ), 5, 2, 1, idx_txt2[ 4 ] );
	if( p_3_opt == -1){
	cls_oled( 0 );
	rect_oled( 1, 1, 126, 60, 1, 0 );
	printf( posx( 10, fs ), 20, 0, 1, idx_opt[ POWER_B_3 ] );  
	printf( posx( 15, fs ), 5, 0, 1, idx_opt5[ 5 ] ); 
	printf( posx( -8, fs ), 1, 1, 1, idx_txt2[ 4 ] );
	printf( posx( 10, fs ), 50, 0, 1, idx_opt[ POWER_B_7 ] ); 
	printf( posx( 15, fs ), 35, 0, 1, idx_opt5[ 6 ] );
}
	P_B_N_3(0,3);
	P_B_N_3(1,11);
	P_B_N_3(2,11);
	P_B_N_3(3,11);
	P_B_N_3(4,11);
	P_B_N_3(5,11);
	P_B_N_3(6,11);
	P_B_N_3(7,11);
	P_B_N_3(8,11);
	P_B_N_3(9,11);
	P_B_N_3(10,11);
	P_B_N_3(11,11);
	P_B_N_3(12,11);
	P_B_N_3(13,11);
}
	if( menu == p_4 ){
	printf( posx( 17, fs ), 7, 1, 1, idx_txt[ 5 ] );
	printf( posx( -3, fs ), 5, 2, 1, idx_txt2[ 5 ] );
	if( p_4_opt == -1){
	cls_oled( 0 );
	rect_oled( 1, 1, 126, 60, 1, 0 );
	printf( posx( 10, fs ), 20, 0, 1, idx_opt[ POWER_B_4 ] );  
	printf( posx( 15, fs ), 5, 0, 1, idx_opt5[ 7 ] ); 
	printf( posx( -8, fs ), 1, 1, 1, idx_txt2[ 5 ] );
	printf( posx( 10, fs ), 50, 0, 1, idx_opt[ POWER_B_8 ] ); 
	printf( posx( 15, fs ), 35, 0, 1, idx_opt5[ 8 ] );
}
	P_B_N_4(0,3);
	P_B_N_4(1,11);
	P_B_N_4(2,11);
	P_B_N_4(3,11);
	P_B_N_4(4,11);
	P_B_N_4(5,11);
	P_B_N_4(6,11);
	P_B_N_4(7,11);
	P_B_N_4(8,11);
	P_B_N_4(9,11);
	P_B_N_4(10,11);
	P_B_N_4(11,11);
	P_B_N_4(12,11);
	P_B_N_4(13,11);
}
	if( menu == p_5 ){
	printf( posx( 15, fs ), 9, 0 , 1, idx_txt[ 6 ] );
	if( p_5_opt == 0 ){
	printf( posx( 10, fm ), 37, 1, 0, idx_opt2[ 0 ] ); 
	F_SPEEDFLIP = 0;
	FRONT_SPEEDFLIPS_MOD = FALSE;
}
	if( p_5_opt == 1 ){
	printf( posx( 9, fm ), 37, 1, 0, idx_opt2[ 1 ] ); 
	F_SPEEDFLIP = 1;
}
}
	if( menu == p_6 ){
	printf( posx( 15, fs ), 9, 0 , 1, idx_txt[ 7 ] );
	if( p_6_opt == 0 ){
	printf( posx( 10, fm ), 37, 1, 0, idx_opt2[ 0 ] ); 
	B_SPEEDFLIP = 0;
	BACK_SPEEDFLIPS_MOD = FALSE;
}
	if( p_6_opt == 1 ){
	printf( posx( 9, fm ), 37, 1, 0, idx_opt2[ 1 ] ); 
	B_SPEEDFLIP = 1;
}
}
	if( menu == p_7 ){
	printf( posx( 13, fs ), 9, 0 , 1, idx_txt[ 8 ] );
	if( p_7_opt == 0 ){
	printf( posx( 10, fm ), 37, 1, 0, idx_opt2[ 0 ] ); 
	AUTO_BALLCAMM = 0;
	AUTO_BALLCAM_MOD = FALSE;
}
	if( p_7_opt == 1 ){
	printf( posx( 9, fm ), 37, 1, 0, idx_opt2[ 1 ] ); 
	AUTO_BALLCAMM = 1;  
}
}
	if( menu == p_8 ){
	printf( posx( 9, fs ), 9, 0 , 1, idx_txt[ 9 ] );
	if( p_8_opt == 0 ){
	printf( posx( 10, fm ), 37, 1, 0, idx_opt2[ 0 ] ); 
	SPEED_D = 0;
	SPEED_DRIFT_MOD = FALSE;
}
	if( p_8_opt == 1 ){
	printf( posx( 9, fm ), 37, 1, 0, idx_opt2[ 1 ] ); 
	SPEED_D = 1;  
}
}
	if( menu == p_9 ){
	printf( posx( 8, fs ), 9, 0, 1, idx_txt[ 10 ] );
	if( p_9_opt == 0 ){
	printf( posx( 10, fm ), 37, 1, 0, idx_opt2[ 0 ] ); 
	STOP_C = 0; 
	STOP_CAR_MOD = FALSE;
}
	if( p_9_opt == 1 ){
	printf( posx( 9, fm ), 37, 1, 0, idx_opt2[ 1 ] ); 
	STOP_C = 1; 
}
}
	if( menu == p_10 ){
	printf( posx( 8, fs ), 9, 0, 1, idx_txt[ 11 ] );
	if( p_10_opt == 0 ){
	printf( posx( 10, fm ), 37, 1, 0, idx_opt2[ 0 ] ); 
	FAST_FLIP = 0;
	FAST_FLIPP_MOD = FALSE;
}
	if( p_10_opt == 1 ){
	printf( posx( 9, fm ), 37, 1, 0, idx_opt2[ 1 ] ); 
	FAST_FLIP = 1; 
}
}
	if( menu == p_11 ){
	printf( posx( 11, fs ), 9, 0, 1, idx_txt[ 12 ] );
	if( p_11_opt == 0 ){
	printf( posx( 10, fm ), 37, 1, 0, idx_opt2[ 0 ] ); 
	CAMERA_S = 0;
	CAMERA_SHAKE_BLOCK_MOD = FALSE;
}
	if( p_11_opt == 1 ){
	printf( posx( 9, fm), 37, 1, 0, idx_opt2[ 1 ] ); 
	CAMERA_S = 1;  
}
}
	if( menu == p_12 ){
	printf( posx( 16, fs ), 9, 0, 1, idx_txt[ 13 ] );
	if( p_12_opt == 0 ){
	printf( posx( 10, fm ), 37, 1, 0, idx_opt2[ 0 ] ); 
	DRIFT_AFTER_J_D = 0;
	DRIFT_AFTER_JUMP_DODGE_MOD = FALSE;
}
	if( p_12_opt == 1 ){
	printf( posx( 9, fm), 37, 1, 0, idx_opt2[ 1 ] ); 
	DRIFT_AFTER_J_D = 1; 
}
}
	if( menu == p_13 ){
	printf( posx( 10, fs ), 9, 0, 1, idx_txt[ 14 ] );
	if( p_13_opt == 0 ){
	printf( posx( 10, fm ), 37, 1, 0, idx_opt2[ 0 ] ); 
	BOOST_S = 0;
	BOOST_SAVER_MOD = FALSE;
}
	if( p_13_opt == 1 ){
	printf( posx( 9, fm), 37, 1, 0, idx_opt2[ 1 ] ); 
	BOOST_S = 1; 
}
}
	screen = 0;
}
	build = 0;
}
	/* *ADVANCE* / controls / menu utilities / timings / screen saver + more */
	if( menu == p_0 ){
	if(get_val(MENU_OPEN_BUTTON_1) && get_val(MENU_OPEN_BUTTON_2)){
	menu = p_1;
	p_1_opt = -1;
	build = 1; 
} 
}

	if( menu){
	if( event_press(PS4_CIRCLE)){
	vm_tctrl(0);
	menu = p_0;
	TURN_SCRIPT_ON_OFF = TRUE;
	set_val(PS4_CIRCLE, 0);
	reset_leds();
	build = 1; 
}
} 
	/* if called upon from page option, tells it to play combo/script/mods */
	if((TURN_SCRIPT_ON_OFF)){
																											// Block Input [Unused = 38 - 43]
//   Var1,           BtnOff,        BtnGet1,         BtnGet2,         Var2,Val,       BtnGet3,          BtnGet4,    BkkBtn1,  BlkBtn2,         BlkBtn3, BlkBtn4, BlkBtn5,  ComboID's	
//Right Zurn Shot
Combos(POWER_B_1, 1, SECOND_POWER_BUTTON_5, POWER_BUTTON_1,SECOND_POWER_BUTTON_1,/**/POWER_B_5, 1, POWER_BUTTON_5, SECOND_POWER_BUTTON_5,/**/ PS4_LY,   PS4_LX,  POWER_BUTTON_1,      42,      43,   1,   1);  	
Combos(POWER_B_2, 1, SECOND_POWER_BUTTON_6, POWER_BUTTON_2,SECOND_POWER_BUTTON_2,/**/POWER_B_6, 1, POWER_BUTTON_6, SECOND_POWER_BUTTON_6,/**/ PS4_LY,   PS4_LX,  POWER_BUTTON_2,      42,      43,   1,   1);		
Combos(POWER_B_3, 1, SECOND_POWER_BUTTON_7, POWER_BUTTON_3,SECOND_POWER_BUTTON_3,/**/POWER_B_7, 1, POWER_BUTTON_7, SECOND_POWER_BUTTON_7,/**/ PS4_LY,   PS4_LX,  POWER_BUTTON_3,      42,      43,   1,   1);
Combos(POWER_B_4, 1, SECOND_POWER_BUTTON_8, POWER_BUTTON_4,SECOND_POWER_BUTTON_4,/**/POWER_B_8, 1, POWER_BUTTON_8, SECOND_POWER_BUTTON_8,/**/ PS4_LY,   PS4_LX,  POWER_BUTTON_4,      42,      43,   1,   1);
//Left Zurn Shot
Combos(POWER_B_1, 2, SECOND_POWER_BUTTON_5, POWER_BUTTON_1,SECOND_POWER_BUTTON_1,/**/POWER_B_5, 2, POWER_BUTTON_5, SECOND_POWER_BUTTON_5,/**/ PS4_LY,   PS4_LX,  POWER_BUTTON_1,      42,      43,   2,   2);
Combos(POWER_B_2, 2, SECOND_POWER_BUTTON_6, POWER_BUTTON_2,SECOND_POWER_BUTTON_2,/**/POWER_B_6, 2, POWER_BUTTON_6, SECOND_POWER_BUTTON_6,/**/ PS4_LY,   PS4_LX,  POWER_BUTTON_2,      42,      43,   2,   2);
Combos(POWER_B_3, 2, SECOND_POWER_BUTTON_7, POWER_BUTTON_3,SECOND_POWER_BUTTON_3,/**/POWER_B_7, 2, POWER_BUTTON_7, SECOND_POWER_BUTTON_7,/**/ PS4_LY,   PS4_LX,  POWER_BUTTON_3,      42,      43,   2,   2);
Combos(POWER_B_4, 2, SECOND_POWER_BUTTON_8, POWER_BUTTON_4,SECOND_POWER_BUTTON_4,/**/POWER_B_8, 2, POWER_BUTTON_8, SECOND_POWER_BUTTON_8,/**/ PS4_LY,   PS4_LX,  POWER_BUTTON_4,      42,      43,   2,   2);
//Take Off
Combos(POWER_B_1, 3, SECOND_POWER_BUTTON_5, POWER_BUTTON_1,SECOND_POWER_BUTTON_1,/**/POWER_B_5, 3, POWER_BUTTON_5, SECOND_POWER_BUTTON_5,/**/ POWER_BUTTON_1, 40, 41, 42, 43, 3, 3);
Combos(POWER_B_2, 3, SECOND_POWER_BUTTON_6, POWER_BUTTON_2,SECOND_POWER_BUTTON_2,/**/POWER_B_6, 3, POWER_BUTTON_6, SECOND_POWER_BUTTON_6,/**/ POWER_BUTTON_2, 40, 41, 42, 43, 3, 3);	
Combos(POWER_B_3, 3, SECOND_POWER_BUTTON_7, POWER_BUTTON_3,SECOND_POWER_BUTTON_3,/**/POWER_B_7, 3, POWER_BUTTON_7, SECOND_POWER_BUTTON_7,/**/ POWER_BUTTON_3, 40, 41, 42, 43, 3, 3);
Combos(POWER_B_4, 3, SECOND_POWER_BUTTON_8, POWER_BUTTON_4,SECOND_POWER_BUTTON_4,/**/POWER_B_8, 3, POWER_BUTTON_8, SECOND_POWER_BUTTON_8,/**/ POWER_BUTTON_4, 40, 41, 42, 43, 3, 3);
//Right Kickoff Flip
Combos(POWER_B_1, 4, SECOND_POWER_BUTTON_5, POWER_BUTTON_1,SECOND_POWER_BUTTON_1,/**/POWER_B_5, 4, POWER_BUTTON_5, SECOND_POWER_BUTTON_5,/**/ POWER_BUTTON_1, JUMP_BUTTON, PS4_LX, PS4_LY, 43, 4, 4);	
Combos(POWER_B_2, 4, SECOND_POWER_BUTTON_6, POWER_BUTTON_2,SECOND_POWER_BUTTON_2,/**/POWER_B_6, 4, POWER_BUTTON_6, SECOND_POWER_BUTTON_6,/**/ POWER_BUTTON_2, JUMP_BUTTON, PS4_LX, PS4_LY, 43, 4, 4);
Combos(POWER_B_3, 4, SECOND_POWER_BUTTON_7, POWER_BUTTON_3,SECOND_POWER_BUTTON_3,/**/POWER_B_7, 4, POWER_BUTTON_7, SECOND_POWER_BUTTON_7,/**/ POWER_BUTTON_3, JUMP_BUTTON, PS4_LX, PS4_LY, 43, 4, 4);
Combos(POWER_B_4, 4, SECOND_POWER_BUTTON_8, POWER_BUTTON_4,SECOND_POWER_BUTTON_4,/**/POWER_B_8, 4, POWER_BUTTON_8, SECOND_POWER_BUTTON_8,/**/ POWER_BUTTON_4, JUMP_BUTTON, PS4_LX, PS4_LY, 43, 4, 4);	
//Left Kickoff Flip
Combos(POWER_B_1, 5, SECOND_POWER_BUTTON_5, POWER_BUTTON_1,SECOND_POWER_BUTTON_1,/**/POWER_B_5, 5, POWER_BUTTON_5, SECOND_POWER_BUTTON_5,/**/ POWER_BUTTON_1, JUMP_BUTTON, PS4_LX, PS4_LY, 43, 6, 6);
Combos(POWER_B_2, 5, SECOND_POWER_BUTTON_6, POWER_BUTTON_2,SECOND_POWER_BUTTON_2,/**/POWER_B_6, 5, POWER_BUTTON_6, SECOND_POWER_BUTTON_6,/**/ POWER_BUTTON_2, JUMP_BUTTON, PS4_LX, PS4_LY, 43, 6, 6);
Combos(POWER_B_3, 5, SECOND_POWER_BUTTON_7, POWER_BUTTON_3,SECOND_POWER_BUTTON_3,/**/POWER_B_7, 5, POWER_BUTTON_7, SECOND_POWER_BUTTON_7,/**/ POWER_BUTTON_3, JUMP_BUTTON, PS4_LX, PS4_LY, 43, 6, 6);
Combos(POWER_B_4, 5, SECOND_POWER_BUTTON_8, POWER_BUTTON_4,SECOND_POWER_BUTTON_4,/**/POWER_B_8, 5, POWER_BUTTON_8, SECOND_POWER_BUTTON_8,/**/ POWER_BUTTON_4, JUMP_BUTTON, PS4_LX, PS4_LY, 43, 6, 6);
//Far Right Kickoff
Combos(POWER_B_1, 6, SECOND_POWER_BUTTON_5, POWER_BUTTON_1,SECOND_POWER_BUTTON_1,/**/POWER_B_5, 6, POWER_BUTTON_5, SECOND_POWER_BUTTON_5,/**/ POWER_BUTTON_1, POWER_BUTTON_5, PS4_LX, PS4_LY, JUMP_BUTTON, 7, 7);
Combos(POWER_B_2, 6, SECOND_POWER_BUTTON_6, POWER_BUTTON_2,SECOND_POWER_BUTTON_2,/**/POWER_B_6, 6, POWER_BUTTON_6, SECOND_POWER_BUTTON_6,/**/ POWER_BUTTON_2, POWER_BUTTON_6, PS4_LX, PS4_LY, JUMP_BUTTON, 7, 7);
Combos(POWER_B_3, 6, SECOND_POWER_BUTTON_7, POWER_BUTTON_3,SECOND_POWER_BUTTON_3,/**/POWER_B_7, 6, POWER_BUTTON_7, SECOND_POWER_BUTTON_7,/**/ POWER_BUTTON_3, POWER_BUTTON_7, PS4_LX, PS4_LY, JUMP_BUTTON, 7, 7);
Combos(POWER_B_4, 6, SECOND_POWER_BUTTON_8, POWER_BUTTON_4,SECOND_POWER_BUTTON_4,/**/POWER_B_8, 6, POWER_BUTTON_8, SECOND_POWER_BUTTON_8,/**/ POWER_BUTTON_4, POWER_BUTTON_8, PS4_LX, PS4_LY, JUMP_BUTTON, 7, 7);	
//Far Left Kickoff
Combos(POWER_B_1, 7, SECOND_POWER_BUTTON_5, POWER_BUTTON_1,SECOND_POWER_BUTTON_1,/**/POWER_B_5, 7, POWER_BUTTON_5, SECOND_POWER_BUTTON_5,/**/ POWER_BUTTON_1, POWER_BUTTON_5, PS4_LX, PS4_LY, JUMP_BUTTON, 8, 8);
Combos(POWER_B_2, 7, SECOND_POWER_BUTTON_6, POWER_BUTTON_2,SECOND_POWER_BUTTON_2,/**/POWER_B_6, 7, POWER_BUTTON_6, SECOND_POWER_BUTTON_6,/**/ POWER_BUTTON_2, POWER_BUTTON_6, PS4_LX, PS4_LY, JUMP_BUTTON, 8, 8);
Combos(POWER_B_3, 7, SECOND_POWER_BUTTON_7, POWER_BUTTON_3,SECOND_POWER_BUTTON_3,/**/POWER_B_7, 7, POWER_BUTTON_7, SECOND_POWER_BUTTON_7,/**/ POWER_BUTTON_3, POWER_BUTTON_7, PS4_LX, PS4_LY, JUMP_BUTTON, 8, 8);
Combos(POWER_B_4, 7, SECOND_POWER_BUTTON_8, POWER_BUTTON_4,SECOND_POWER_BUTTON_4,/**/POWER_B_8, 7, POWER_BUTTON_8, SECOND_POWER_BUTTON_8,/**/ POWER_BUTTON_4, POWER_BUTTON_8, PS4_LX, PS4_LY, JUMP_BUTTON, 8, 8);	
//Right Wall Jump
Combos(POWER_B_1, 8, SECOND_POWER_BUTTON_5, POWER_BUTTON_1,SECOND_POWER_BUTTON_1,/**/POWER_B_5, 8, POWER_BUTTON_5, SECOND_POWER_BUTTON_5,/**/ POWER_BUTTON_1, 40, 41, 42,  43, 9, 9);
Combos(POWER_B_2, 8, SECOND_POWER_BUTTON_6, POWER_BUTTON_2,SECOND_POWER_BUTTON_2,/**/POWER_B_6, 8, POWER_BUTTON_6, SECOND_POWER_BUTTON_6,/**/ POWER_BUTTON_2, 40, 41, 42,  43, 9, 9);
Combos(POWER_B_3, 8, SECOND_POWER_BUTTON_7, POWER_BUTTON_3,SECOND_POWER_BUTTON_3,/**/POWER_B_7, 8, POWER_BUTTON_7, SECOND_POWER_BUTTON_7,/**/ POWER_BUTTON_3, 40, 41, 42,  43, 9, 9);
Combos(POWER_B_4, 8, SECOND_POWER_BUTTON_8, POWER_BUTTON_4,SECOND_POWER_BUTTON_4,/**/POWER_B_8, 8, POWER_BUTTON_8, SECOND_POWER_BUTTON_8,/**/ POWER_BUTTON_4, 40, 41, 42,  43, 9, 9);	
//Left Wall Jump
Combos(POWER_B_1, 9, SECOND_POWER_BUTTON_5, POWER_BUTTON_1,SECOND_POWER_BUTTON_1,/**/POWER_B_5, 9, POWER_BUTTON_5, SECOND_POWER_BUTTON_5,/**/ POWER_BUTTON_1, 40, 41, 42,  43, 10, 10);
Combos(POWER_B_2, 9, SECOND_POWER_BUTTON_6, POWER_BUTTON_2,SECOND_POWER_BUTTON_2,/**/POWER_B_6, 9, POWER_BUTTON_6, SECOND_POWER_BUTTON_6,/**/ POWER_BUTTON_2, 40, 41, 42,  43, 10, 10);
Combos(POWER_B_3, 9, SECOND_POWER_BUTTON_7, POWER_BUTTON_3,SECOND_POWER_BUTTON_3,/**/POWER_B_7, 9, POWER_BUTTON_7, SECOND_POWER_BUTTON_7,/**/ POWER_BUTTON_3, 40, 41, 42,  43, 10, 10);
Combos(POWER_B_4, 9, SECOND_POWER_BUTTON_8, POWER_BUTTON_4,SECOND_POWER_BUTTON_4,/**/POWER_B_8, 9, POWER_BUTTON_8, SECOND_POWER_BUTTON_8,/**/ POWER_BUTTON_4, 40, 41, 42,  43, 10, 10);
//Right Tornado Spin
Combos(POWER_B_1, 10, SECOND_POWER_BUTTON_5, POWER_BUTTON_1,SECOND_POWER_BUTTON_1,/**/POWER_B_5, 10, POWER_BUTTON_5, SECOND_POWER_BUTTON_5,/**/ POWER_BUTTON_1, 40, 41, 42,  43, 11, 11);
Combos(POWER_B_2, 10, SECOND_POWER_BUTTON_6, POWER_BUTTON_2,SECOND_POWER_BUTTON_2,/**/POWER_B_6, 10, POWER_BUTTON_6, SECOND_POWER_BUTTON_6,/**/ POWER_BUTTON_2, 40, 41, 42,  43, 11, 11);
Combos(POWER_B_3, 10, SECOND_POWER_BUTTON_7, POWER_BUTTON_3,SECOND_POWER_BUTTON_3,/**/POWER_B_7, 10, POWER_BUTTON_7, SECOND_POWER_BUTTON_7,/**/ POWER_BUTTON_3, 40, 41, 42,  43, 11, 11);
Combos(POWER_B_4, 10, SECOND_POWER_BUTTON_8, POWER_BUTTON_4,SECOND_POWER_BUTTON_4,/**/POWER_B_8, 10, POWER_BUTTON_8, SECOND_POWER_BUTTON_8,/**/ POWER_BUTTON_4, 40, 41, 42,  43, 11, 11);	
//Stall
Combos(POWER_B_1, 11, SECOND_POWER_BUTTON_5, POWER_BUTTON_1,SECOND_POWER_BUTTON_1,/**/POWER_B_5, 11, POWER_BUTTON_5, SECOND_POWER_BUTTON_5,/**/ POWER_BUTTON_1, POWER_BUTTON_5, PS4_LX, PS4_LY,  43, 12, 12);
Combos(POWER_B_2, 11, SECOND_POWER_BUTTON_6, POWER_BUTTON_2,SECOND_POWER_BUTTON_2,/**/POWER_B_6, 11, POWER_BUTTON_6, SECOND_POWER_BUTTON_6,/**/ POWER_BUTTON_2, POWER_BUTTON_6, PS4_LX, PS4_LY,  43, 12, 12);
Combos(POWER_B_3, 11, SECOND_POWER_BUTTON_7, POWER_BUTTON_3,SECOND_POWER_BUTTON_3,/**/POWER_B_7, 11, POWER_BUTTON_7, SECOND_POWER_BUTTON_7,/**/ POWER_BUTTON_3, POWER_BUTTON_7, PS4_LX, PS4_LY,  43, 12, 12);
Combos(POWER_B_4, 11, SECOND_POWER_BUTTON_8, POWER_BUTTON_4,SECOND_POWER_BUTTON_4,/**/POWER_B_8, 11, POWER_BUTTON_8, SECOND_POWER_BUTTON_8,/**/ POWER_BUTTON_4, POWER_BUTTON_8, PS4_LX, PS4_LY,  43, 12, 12);
//Stall Running	
if (combo_running(STALL)) {
Combos(POWER_B_1, 11, SECOND_POWER_BUTTON_5, POWER_BUTTON_1,SECOND_POWER_BUTTON_1,/**/POWER_B_5, 11, POWER_BUTTON_5, SECOND_POWER_BUTTON_5,/**/ POWER_BUTTON_1, AIRROLL_BUTTON, PS4_LX, PS4_LY,  43, 13, 13);
Combos(POWER_B_2, 11, SECOND_POWER_BUTTON_6, POWER_BUTTON_2,SECOND_POWER_BUTTON_2,/**/POWER_B_6, 11, POWER_BUTTON_6, SECOND_POWER_BUTTON_6,/**/ POWER_BUTTON_2, AIRROLL_BUTTON, PS4_LX, PS4_LY,  43, 13, 13);
Combos(POWER_B_3, 11, SECOND_POWER_BUTTON_7, POWER_BUTTON_3,SECOND_POWER_BUTTON_3,/**/POWER_B_7, 11, POWER_BUTTON_7, SECOND_POWER_BUTTON_7,/**/ POWER_BUTTON_3, AIRROLL_BUTTON, PS4_LX, PS4_LY,  43, 13, 13);
Combos(POWER_B_4, 11, SECOND_POWER_BUTTON_8, POWER_BUTTON_4,SECOND_POWER_BUTTON_4,/**/POWER_B_8, 11, POWER_BUTTON_8, SECOND_POWER_BUTTON_8,/**/ POWER_BUTTON_4, AIRROLL_BUTTON, PS4_LX, PS4_LY,  43, 13, 13);	
}
//Musty Flick
Combos(POWER_B_1, 12, SECOND_POWER_BUTTON_5, POWER_BUTTON_1,SECOND_POWER_BUTTON_1,/**/POWER_B_5, 12, POWER_BUTTON_5, SECOND_POWER_BUTTON_5,/**/ POWER_BUTTON_1,PS4_LX, PS4_LY, 42,  43, 14, 14);
Combos(POWER_B_2, 12, SECOND_POWER_BUTTON_6, POWER_BUTTON_2,SECOND_POWER_BUTTON_2,/**/POWER_B_6, 12, POWER_BUTTON_6, SECOND_POWER_BUTTON_6,/**/ POWER_BUTTON_2,PS4_LX, PS4_LY, 42,  43, 14, 14);
Combos(POWER_B_3, 12, SECOND_POWER_BUTTON_7, POWER_BUTTON_3,SECOND_POWER_BUTTON_3,/**/POWER_B_7, 12, POWER_BUTTON_7, SECOND_POWER_BUTTON_7,/**/ POWER_BUTTON_3,PS4_LX, PS4_LY, 42,  43, 14, 14);
Combos(POWER_B_4, 12, SECOND_POWER_BUTTON_8, POWER_BUTTON_4,SECOND_POWER_BUTTON_4,/**/POWER_B_8, 12, POWER_BUTTON_8, SECOND_POWER_BUTTON_8,/**/ POWER_BUTTON_4,PS4_LX, PS4_LY, 42,  43, 14, 14);
//Wave Dash
Combos(POWER_B_1, 13, SECOND_POWER_BUTTON_5, POWER_BUTTON_1,SECOND_POWER_BUTTON_1,/**/POWER_B_5, 13, POWER_BUTTON_5, SECOND_POWER_BUTTON_5,/**/ POWER_BUTTON_1, PS4_LY, 41, 42,  43, 15, 15);
Combos(POWER_B_2, 13, SECOND_POWER_BUTTON_6, POWER_BUTTON_2,SECOND_POWER_BUTTON_2,/**/POWER_B_6, 13, POWER_BUTTON_6, SECOND_POWER_BUTTON_6,/**/ POWER_BUTTON_2, PS4_LY, 41, 42,  43, 15, 15);
Combos(POWER_B_3, 13, SECOND_POWER_BUTTON_7, POWER_BUTTON_3,SECOND_POWER_BUTTON_3,/**/POWER_B_7, 13, POWER_BUTTON_7, SECOND_POWER_BUTTON_7,/**/ POWER_BUTTON_3, PS4_LY, 41, 42,  43, 15, 15);
Combos(POWER_B_4, 13, SECOND_POWER_BUTTON_8, POWER_BUTTON_4,SECOND_POWER_BUTTON_4,/**/POWER_B_8, 13, POWER_BUTTON_8, SECOND_POWER_BUTTON_8,/**/ POWER_BUTTON_4, PS4_LY, 41, 42,  43, 15, 15);


	if(combo_running(RIGHT_KICKOFF_SPEEDFLIP) || combo_running(LEFT_KICKOFF_SPEEDFLIP) || combo_running(RIGHT_SPEEDFLIP) || combo_running(LEFT_SPEEDFLIP)){ 
	set_val(PS4_LY, 0);
	set_val(PS4_LX, 0);
	set_val(PS4_RX, 0);
	set_val(PS4_RY, 0);	
}
	if(F_SPEEDFLIP){
	FRONT_SPEEDFLIPS_MOD = TRUE;
}
	if(B_SPEEDFLIP){
	BACK_SPEEDFLIPS_MOD = TRUE;
}
	if(AUTO_BALLCAMM){
	AUTO_BALLCAM_MOD = TRUE;
}
	if(SPEED_D){
	SPEED_DRIFT_MOD = TRUE;
}
	if(STOP_C){
	STOP_CAR_MOD = TRUE;
}
	if(FAST_FLIP){
	FAST_FLIPP_MOD = TRUE;
}
	if(CAMERA_S){
	CAMERA_SHAKE_BLOCK_MOD = TRUE;
}
	if(DRIFT_AFTER_J_D){
	DRIFT_AFTER_JUMP_DODGE_MOD = TRUE;
}
	if(BOOST_S){
	BOOST_SAVER_MOD = TRUE;
}
}
	if( menu ){
	block_all_inputs(); /* blocks inputs from cronus to console but not from controller to cronus */
	if(event_press(PS4_RIGHT)){
	p_1_opt = -1;
	p_2_opt = -1;
	p_3_opt = -1;
	p_4_opt = -1;
	p_5_opt = -1;
	p_6_opt = -1;
	p_7_opt = -1;
	p_8_opt = -1;
	menu++; 
	if( menu > p_cycle_limit ) {
	P_A_S = 0;
	menu = 1;
}	build = 1; /* main menu option nav */
} 
	if( event_press(PS4_LEFT)){
	p_1_opt = -1;
	p_2_opt = -1;
	p_3_opt = -1;
	p_4_opt = -1;
	p_5_opt = -1;
	p_6_opt = -1;
	p_7_opt = -1;
	p_8_opt = -1;
	menu--; 
	
	if( menu < 1 ){
	P_A_S = 0;
	menu = p_cycle_limit; 
} 	build = 1; /**/
}
	if( menu == p_1 ){ /* page 1 options nav */
	if( event_press( 14 )){
	p_1_opt++; 
	if( p_1_opt > p_1_opt_cycle_limit ){
	p_1_opt = 0; 
}	build = 1; 
}
	if( event_press( 13 )){
	p_1_opt--; 
	if( p_1_opt < 0){
	p_1_opt = p_1_opt_cycle_limit; 
}	build = 1; 
}
}
	if( menu == p_2 ){ /* page 2 options nav */
	if( event_press( 14 ) ) {
	p_2_opt++; 
	if( p_2_opt > p_2_opt_cycle_limit ) {
	p_2_opt = 0; 
} 	build = 1; 
}
	if( event_press( 13 )){
	p_2_opt--;
	if( p_2_opt < 0 ){
	p_2_opt = p_2_opt_cycle_limit; 
} 	build = 1; 
}
}
	if( menu == p_3 ){ /* page 3 options nav */
	if( event_press( 14 ) ) {
	p_3_opt++; 
	if( p_3_opt > p_3_opt_cycle_limit ) {
	p_3_opt = 0; 
} 	build = 1; 
}
	if( event_press( 13 )){
	p_3_opt--; if( p_3_opt < 0 ){
	p_3_opt = p_3_opt_cycle_limit; 
} 	build = 1; 
}
}
	if( menu == p_4 ){ /* page 4 options nav */
	if( event_press( 14 ) ) {
	p_4_opt++; 
	if( p_4_opt > p_4_opt_cycle_limit ) {
	p_4_opt = 0; 
} 	build = 1; 
}
	if( event_press( 13 )){
	p_4_opt--; if( p_4_opt < 0 ){
	p_4_opt = p_4_opt_cycle_limit; 
} 	build = 1; 
}
}
} /* screen saver timer / control display */
	FINE_ADJUSTEMENTS_MENU (1,101,102,2,13) // ZURNSHOT
	FINE_ADJUSTEMENTS_MENU (2,101,102,2,13) // ZURNSHOT
	FINE_ADJUSTEMENTS_MENU (3,301,302,2,13) // TAKEOFF
	FINE_ADJUSTEMENTS_MENU (4,401,402,2,13) // KICKOFFS
	FINE_ADJUSTEMENTS_MENU (5,501,502,2,13) // KICKOFFS
 	FINE_ADJUSTEMENTS_MENU (6,601,602,2,13) // SPEEDFLIPS // FAR KICKOFFS
	FINE_ADJUSTEMENTS_MENU (7,701,702,2,13) // SPEEDFLIPS // FAR KICKOFFS
	FINE_ADJUSTEMENTS_MENU (13,1301,1302,2,13) // WAVEDASH
	FINE_ADJUSTEMENTS_MENU (8,801,802,2,13) // WALLJUMPS
	FINE_ADJUSTEMENTS_MENU (9,801,802,2,13) // WALLJUMPS
//////////////
	FINE_ADJUSTEMENTS_MENU_A_2 (7,1,1701,1702,8,1,10) // AUTO BALLCAM
	FINE_ADJUSTEMENTS_MENU_A   (8,1,18,9,1,9) // SPEED DRIFT
	FINE_ADJUSTEMENTS_MENU_A_2 (13,1,2201,2202,14,1,10) // BOOST SAVER
	
//////////////	
	if (FINE_ADJUST_MENU){
	cls_oled(0);
	menu = FALSE;
    FINE_ADJUST_MENU_2 = FALSE;
    }
   	if (FINE_ADJUST_MENU_2){
	cls_oled(0);
	menu = FALSE;
    FINE_ADJUST_MENU = FALSE;
    }
    
//////////////////////////	
	if (FINE_ADJUST_MOD == 801){	
	if (FINE_ADJUST_MENU){
    number_to_string(AIRROLL_TIME,find_digits(AIRROLL_TIME)); 
 	printf(center_x(sizeof(V_AIRROLL_TIME) - -5, OLED_FONT_SMALL_WIDTH),7,OLED_FONT_MEDIUM,OLED_WHITE,V_AIRROLL_TIME[0]);
}	
	AIRROLL_TIME = ValAdjust(AIRROLL_TIME,1,0,1000,FINE_ADJUST_MENU,AIRROLL_TIME_S);
}
//////////////////////////	
	if (FINE_ADJUST_MOD == 802){
	if (FINE_ADJUST_MENU_2){
    number_to_string(ANGLE_ALIGNENT_TIME,find_digits(ANGLE_ALIGNENT_TIME)); 
 	printf(center_x(sizeof(V_ANGLE_ALIGNENT_TIME) - -5, OLED_FONT_SMALL_WIDTH),7,OLED_FONT_MEDIUM,OLED_WHITE,V_ANGLE_ALIGNENT_TIME[0]);
 }
	ANGLE_ALIGNENT_TIME = ValAdjust(ANGLE_ALIGNENT_TIME,1,0,1000,FINE_ADJUST_MENU_2,ANGLE_ALIGNENT_TIME_S);
}
//WAVEDASH
//////////////////////////
	if (FINE_ADJUST_MOD == 1301){
	if (FINE_ADJUST_MENU){
    number_to_string(STRAIGHT_FLY_TIME,find_digits(STRAIGHT_FLY_TIME)); 
 	printf(center_x(sizeof(V_STRAIGHT_FLY_TIME) - -5, OLED_FONT_SMALL_WIDTH),7,OLED_FONT_MEDIUM,OLED_WHITE,V_STRAIGHT_FLY_TIME[0]);
}	
	STRAIGHT_FLY_TIME = ValAdjust(STRAIGHT_FLY_TIME,1,0,1000,FINE_ADJUST_MENU,STRAIGHT_FLY_TIME_S);
}
//////////////////////////
if (FINE_ADJUST_MOD == 1302){
	if (FINE_ADJUST_MENU_2){
    number_to_string(ANGLE_LY_TIME,find_digits(ANGLE_LY_TIME)); 
 	printf(center_x(sizeof(V_ANGLE_LY_TIME) - -5, OLED_FONT_SMALL_WIDTH),7,OLED_FONT_MEDIUM,OLED_WHITE,V_ANGLE_LY_TIME[0]);
} 	
	ANGLE_LY_TIME = ValAdjust(ANGLE_LY_TIME,1,0,1000,FINE_ADJUST_MENU_2,ANGLE_LY_TIME_S);
}
//KICKOFFS
///////////////////////////////////////////////////////
	if (FINE_ADJUST_MOD == 401){
	if (FINE_ADJUST_MENU){
    number_to_string(R_STRAIGHT_DRIVE_TIME,find_digits(R_STRAIGHT_DRIVE_TIME)); 
 	printf(center_x(sizeof(V_R_STRAIGHT_DRIVE_TIME) - -5, OLED_FONT_SMALL_WIDTH),7,OLED_FONT_MEDIUM,OLED_WHITE,V_R_STRAIGHT_DRIVE_TIME[0]);
}
	R_STRAIGHT_DRIVE_TIME = ValAdjust(R_STRAIGHT_DRIVE_TIME,1,0,1000,FINE_ADJUST_MENU,R_STRAIGHT_DRIVE_TIME_S);
}
///////////////////////////////////////////////////////
	if (FINE_ADJUST_MOD == 402){
	if (FINE_ADJUST_MENU_2){
    number_to_string(R_ANGLE_TIME_KICKOFF,find_digits(R_ANGLE_TIME_KICKOFF)); 
 	printf(center_x(sizeof(V_R_ANGLE_TIME_KICKOFF) - -5, OLED_FONT_SMALL_WIDTH),7,OLED_FONT_MEDIUM,OLED_WHITE,V_R_ANGLE_TIME_KICKOFF[0]);
}	
	R_ANGLE_TIME_KICKOFF = ValAdjust(R_ANGLE_TIME_KICKOFF,1,0,1000,FINE_ADJUST_MENU_2,R_ANGLE_TIME_KICKOFF_S);
}	
////////////////////////////////////////////////////
	if (FINE_ADJUST_MOD == 501){
	if (FINE_ADJUST_MENU){
    number_to_string(L_STRAIGHT_DRIVE_TIME,find_digits(L_STRAIGHT_DRIVE_TIME)); 
 	printf(center_x(sizeof(V_L_STRAIGHT_DRIVE_TIME) - -5, OLED_FONT_SMALL_WIDTH),7,OLED_FONT_MEDIUM,OLED_WHITE,V_L_STRAIGHT_DRIVE_TIME[0]);
}	
	L_STRAIGHT_DRIVE_TIME = ValAdjust(L_STRAIGHT_DRIVE_TIME,1,0,1000,FINE_ADJUST_MENU,L_STRAIGHT_DRIVE_TIME_S);
}
////////////////////////////////////////////////////
	if (FINE_ADJUST_MOD == 502){
	if (FINE_ADJUST_MENU_2){
    number_to_string(L_ANGLE_TIME_KICKOFF,find_digits(L_ANGLE_TIME_KICKOFF)); 
 	printf(center_x(sizeof(V_L_ANGLE_TIME_KICKOFF) - -5, OLED_FONT_SMALL_WIDTH),7,OLED_FONT_MEDIUM,OLED_WHITE,V_L_ANGLE_TIME_KICKOFF[0]);
}
	L_ANGLE_TIME_KICKOFF = ValAdjust(L_ANGLE_TIME_KICKOFF,1,0,1000,FINE_ADJUST_MENU_2,L_ANGLE_TIME_KICKOFF_S);
}
///////////////////////////////////////////////////////
	if (FINE_ADJUST_MOD == 601){
	if (FINE_ADJUST_MENU){
    number_to_string(R_STRAIGHT_BOOST_TIME,find_digits(R_STRAIGHT_BOOST_TIME)); 
 	printf(center_x(sizeof(V_R_STRAIGHT_BOOST_TIME) - -5, OLED_FONT_SMALL_WIDTH),7,OLED_FONT_MEDIUM,OLED_WHITE,V_R_STRAIGHT_BOOST_TIME[0]);
}	
	R_STRAIGHT_BOOST_TIME = ValAdjust(R_STRAIGHT_BOOST_TIME,1,0,1000,FINE_ADJUST_MENU,R_STRAIGHT_BOOST_TIME_S);
}
///////////////////////////////////////////////////////
	if (FINE_ADJUST_MOD == 602){
	if (FINE_ADJUST_MENU_2){
    number_to_string(R_ANGLE_TIME_SPEEDFLIP,find_digits(R_ANGLE_TIME_SPEEDFLIP)); 
 	printf(center_x(sizeof(V_R_ANGLE_TIME_SPEEDFLIP) - -5, OLED_FONT_SMALL_WIDTH),7,OLED_FONT_MEDIUM,OLED_WHITE,V_R_ANGLE_TIME_SPEEDFLIP[0]);
}
	R_ANGLE_TIME_SPEEDFLIP = ValAdjust(R_ANGLE_TIME_SPEEDFLIP,1,0,1000,FINE_ADJUST_MENU_2,R_ANGLE_TIME_SPEEDFLIP_S);
}
////////////////////////////////////////////////////
	if (FINE_ADJUST_MOD == 701){
	if (FINE_ADJUST_MENU){
    number_to_string(L_STRAIGHT_BOOST_TIME,find_digits(L_STRAIGHT_BOOST_TIME)); 
 	printf(center_x(sizeof(V_L_STRAIGHT_BOOST_TIME) - -5, OLED_FONT_SMALL_WIDTH),7,OLED_FONT_MEDIUM,OLED_WHITE,V_L_STRAIGHT_BOOST_TIME[0]);
}
	L_STRAIGHT_BOOST_TIME = ValAdjust(L_STRAIGHT_BOOST_TIME,1,0,1000,FINE_ADJUST_MENU,L_STRAIGHT_BOOST_TIME_S);
}
////////////////////////////////////////////////////
	if (FINE_ADJUST_MOD == 702){
	if (FINE_ADJUST_MENU_2){
    number_to_string(L_ANGLE_TIME_SPEEDFLIP,find_digits(L_ANGLE_TIME_SPEEDFLIP)); 
 	printf(center_x(sizeof(V_L_ANGLE_TIME_SPEEDFLIP) - -5, OLED_FONT_SMALL_WIDTH),7,OLED_FONT_MEDIUM,OLED_WHITE,V_L_ANGLE_TIME_SPEEDFLIP[0]);
}	
	L_ANGLE_TIME_SPEEDFLIP = ValAdjust(L_ANGLE_TIME_SPEEDFLIP,1,0,1000,FINE_ADJUST_MENU_2,L_ANGLE_TIME_SPEEDFLIP_S);
}
////////////////////////////////////////////////////
	if (FINE_ADJUST_MENU_A){
 	cls_oled(0);
    number_to_string(SPEEDDRIFT_POWER,find_digits(SPEEDDRIFT_POWER)); 
    menu = FALSE;
    FINE_ADJUST_MENU_2 = FALSE;
 	printf(center_x(sizeof(V_SPEEDDRIFT_POWER) - -5, OLED_FONT_SMALL_WIDTH),7,OLED_FONT_MEDIUM,OLED_WHITE,V_SPEEDDRIFT_POWER[0]);

	SPEEDDRIFT_POWER = ValAdjust(SPEEDDRIFT_POWER,1,0,1000,FINE_ADJUST_MENU_A,SPEEDDRIFT_POWER_S);
}	
///////////////////////////////////////////////////
	if (FINE_ADJUST_MOD == 301){
	if (FINE_ADJUST_MENU){
    number_to_string(TAKEOFF_HEIGHT,find_digits(TAKEOFF_HEIGHT)); 
 	printf(center_x(sizeof(V_TAKEOFF_HEIGHT) - -5, OLED_FONT_SMALL_WIDTH),7,OLED_FONT_MEDIUM,OLED_WHITE,V_TAKEOFF_HEIGHT[0]);
}	
	TAKEOFF_HEIGHT = ValAdjust(TAKEOFF_HEIGHT,1,0,1000,FINE_ADJUST_MENU,TAKEOFF_HEIGHT_S);
}
///////////////////////////////////////////////////
	if (FINE_ADJUST_MOD == 302){
	if (FINE_ADJUST_MENU_2){
    number_to_string(Y_ANGLE_TIME,find_digits(Y_ANGLE_TIME)); 
 	printf(center_x(sizeof(V_Y_ANGLE_TIME) - -5, OLED_FONT_SMALL_WIDTH),7,OLED_FONT_MEDIUM,OLED_WHITE,V_Y_ANGLE_TIME[0]);
}
	Y_ANGLE_TIME = ValAdjust(Y_ANGLE_TIME,1,0,1000,FINE_ADJUST_MENU_2,Y_ANGLE_TIME_S);
}
/////////////////////////////////////////////////
	if (FINE_ADJUST_MOD == 101){
	if (FINE_ADJUST_MENU){
    number_to_string(JUMP_HEIGHT,find_digits(JUMP_HEIGHT)); 
 	printf(center_x(sizeof(V_JUMP_HEIGHT) - -5, OLED_FONT_SMALL_WIDTH),7,OLED_FONT_MEDIUM,OLED_WHITE,V_JUMP_HEIGHT[0]);
}	
	JUMP_HEIGHT = ValAdjust(JUMP_HEIGHT,1,0,10000,FINE_ADJUST_MENU,JUMP_HEIGHT_S);
}	
/////////////////////////////////////////////////
	if (FINE_ADJUST_MOD == 102){
	if (FINE_ADJUST_MENU_2){
    number_to_string(ANGLE_X_TIME,find_digits(ANGLE_X_TIME)); 
 	printf(center_x(sizeof(V_ANGLE_X_TIME) - -5, OLED_FONT_SMALL_WIDTH),7,OLED_FONT_MEDIUM,OLED_WHITE,V_ANGLE_X_TIME[0]);
}
	ANGLE_X_TIME = ValAdjust(ANGLE_X_TIME,1,0,10000,FINE_ADJUST_MENU_2,ANGLE_X_TIME_S);
}
/////////////////////////////////////////////////
	if (FINE_ADJUST_MOD == 2201){
	if (FINE_ADJUST_MENU){
 	cls_oled(0);
    number_to_string(BOOST_SAFER_TIME_GROUND,find_digits(BOOST_SAFER_TIME_GROUND)); 
    menu = FALSE;
    FINE_ADJUST_MENU_2 = FALSE;
 	printf(center_x(sizeof(V_BOOST_SAFER_TIME_GROUND) - -5, OLED_FONT_SMALL_WIDTH),7,OLED_FONT_MEDIUM,OLED_WHITE,V_BOOST_SAFER_TIME_GROUND[0]);
}
	BOOST_SAFER_TIME_GROUND = ValAdjust(BOOST_SAFER_TIME_GROUND,1,0,10000,FINE_ADJUST_MENU_2,BOOST_SAFER_TIME_GROUND_S);
}
/////////////////////////////////////////////////
	if (FINE_ADJUST_MOD == 2202){
	if (FINE_ADJUST_MENU_2){
 	cls_oled(0);
    number_to_string(BOOST_SAFER_TIME_AIR,find_digits(BOOST_SAFER_TIME_AIR)); 
    menu = FALSE;
    FINE_ADJUST_MENU = FALSE;
 	printf(center_x(sizeof(V_BOOST_SAFER_TIME_AIR) - -5, OLED_FONT_SMALL_WIDTH),7,OLED_FONT_MEDIUM,OLED_WHITE,V_BOOST_SAFER_TIME_AIR[0]);
}	
	BOOST_SAFER_TIME_AIR = ValAdjust(BOOST_SAFER_TIME_AIR,1,0,10000,FINE_ADJUST_MENU_2,BOOST_SAFER_TIME_AIR_S);
}
/////////////////////////////////////////////////
	if (FINE_ADJUST_MOD == 1701){
	if (FINE_ADJUST_MENU){
 	cls_oled(0);
    number_to_string(AUTO_BALL_CAMERA_SHORT,find_digits(AUTO_BALL_CAMERA_SHORT)); 
    menu = FALSE;
    FINE_ADJUST_MENU_2 = FALSE;
 	printf(center_x(sizeof(V_AUTO_BALL_CAMERA_SHORT) - -5, OLED_FONT_SMALL_WIDTH),7,OLED_FONT_MEDIUM,OLED_WHITE,V_AUTO_BALL_CAMERA_SHORT[0]);
}
	AUTO_BALL_CAMERA_SHORT = ValAdjust(AUTO_BALL_CAMERA_SHORT,1,0,10000,FINE_ADJUST_MENU_2,AUTO_BALL_CAMERA_SHORT_S);
}
/////////////////////////////////////////////////
	if (FINE_ADJUST_MOD == 1702){
	if (FINE_ADJUST_MENU_2){
 	cls_oled(0);
    number_to_string(AUTO_BALL_CAMERA_LONG,find_digits(AUTO_BALL_CAMERA_LONG)); 
    menu = FALSE;
    FINE_ADJUST_MENU = FALSE;
 	printf(center_x(sizeof(V_AUTO_BALL_CAMERA_LONG) - -5, OLED_FONT_SMALL_WIDTH),7,OLED_FONT_MEDIUM,OLED_WHITE,V_AUTO_BALL_CAMERA_LONG[0]);
}	
	AUTO_BALL_CAMERA_LONG = ValAdjust(AUTO_BALL_CAMERA_LONG,1,0,10000,FINE_ADJUST_MENU_2,AUTO_BALL_CAMERA_LONG_S);
}
////////////////////////////////////
	if( screen ){
	clear += get_rtime(); 
	if( clear >= 8000 ) {
	cls_oled( 0 );  
	screen = 0; 
} 
}

///////////////////////////////
///  ASSIGNE / SAVE SYSTEM  ///
///////////////////////////////
	if(menu){
	if (menu == p_1 || p_2 || p_3 || p_4){
P_B_S(0);
P_B_S(1);
P_B_S(2);
P_B_S(3);
P_B_S(4);
P_B_S(5);
P_B_S(6);
P_B_S(7);
P_B_S(8);
P_B_S(9);
P_B_S(10);
P_B_S(11);
P_B_S(12);
P_B_S(13);
}
////////////////////
P_B_A_S(0);
P_B_A_S(1);
P_B_A_S(2);
P_B_A_S(3);
P_B_A_S(4);
P_B_A_S(5);
P_B_A_S(6);
P_B_A_S(7);
P_B_A_S(8);
P_B_A_S(9);
P_B_A_S(10);
P_B_A_S(11);
P_B_A_S(12);
P_B_A_S(13);

	if (event_press(PS4_CIRCLE)){
    if( FINE_ADJUST_MOD == 401 || 402){	    
    set_pvar(SPVAR_21, R_ANGLE_TIME_KICKOFF);
    set_pvar(SPVAR_22, R_STRAIGHT_DRIVE_TIME);
}
    if( FINE_ADJUST_MOD == 501 || 502){	
    set_pvar(SPVAR_19, L_STRAIGHT_DRIVE_TIME);
 	set_pvar(SPVAR_20, L_ANGLE_TIME_KICKOFF);
}
    if( FINE_ADJUST_MOD == 1201 || 1202){			
    set_pvar(SPVAR_30, L_ANGLE_TIME_SPEEDFLIP);
 	set_pvar(SPVAR_29, L_STRAIGHT_BOOST_TIME);
}
    if( FINE_ADJUST_MOD == 1301 || 1302){			
    set_pvar(SPVAR_32, R_STRAIGHT_BOOST_TIME);
 	set_pvar(SPVAR_31, R_ANGLE_TIME_SPEEDFLIP);
}
    if( FINE_ADJUST_MOD == 801 || 802 || 901 || 902){	
    set_pvar(SPVAR_14, AIRROLL_TIME);
 	set_pvar(SPVAR_15, ANGLE_ALIGNENT_TIME);
}
    if( FINE_ADJUST_MOD == 701 || 702){			
    set_pvar(SPVAR_17, STRAIGHT_FLY_TIME);
 	set_pvar(SPVAR_18, ANGLE_LY_TIME);
}
    if( FINE_ADJUST_MOD == 301 || 302){			
	set_pvar(SPVAR_23, TAKEOFF_HEIGHT);
    set_pvar(SPVAR_24, Y_ANGLE_TIME);
}
    if( FINE_ADJUST_MOD == 101 || 102 || 201 || 202){	
    set_pvar(SPVAR_26, JUMP_HEIGHT);
    set_pvar(SPVAR_25, ANGLE_X_TIME);
}
    if( FINE_ADJUST_MOD == 1701 || 1702){	
    set_pvar(SPVAR_37, AUTO_BALL_CAMERA_SHORT);
    set_pvar(SPVAR_38, AUTO_BALL_CAMERA_LONG);
}


}

//////////////////////////////////////////////////////////
	if ( menu == p_5 ){
	
		if (event_press(PS4_TRIANGLE)){
	
			if (p_5_opt){
	
				F_SPEEDFLIP_SAVER_SCRN = 1;
				F_SPEEDFLIP = 1;
				set_ledx(LED_3, 3)
			
			} else {

				F_SPEEDFLIP_SAVER_SCRN = 0;
				set_ledx(LED_2, 3)
			}
			set_pvar(SPVAR_5, F_SPEEDFLIP);
			combo_run(RUMBLE_ON);
		}
	}
//////////////////////////////////////////////////////////
	if ( menu == p_6 ){
		
		if (event_press(PS4_TRIANGLE)){
	
		    if (p_6_opt){
		    
		    	B_SPEEDFLIP_SAVER_SCRN = 1;
		    	B_SPEEDFLIP = 1;
		    	set_ledx(LED_3, 3)
		    
		    } else {
		    
		    	B_SPEEDFLIP_SAVER_SCRN = 0;
		    	set_ledx(LED_2, 3)
		    }
		    set_pvar(SPVAR_6, B_SPEEDFLIP);
		    combo_run(RUMBLE_ON);
		}
	}
/////////////////////////////////////////////////////////
	if ( menu == p_7 ){
		
		if (event_press(PS4_TRIANGLE)){
			
			if (p_7_opt){
	
				AUTO_BALLCAMM_SAVER_SCRN = 1;
				AUTO_BALLCAMM = 1;
				set_ledx(LED_3, 3)
			
			} else {
				
				AUTO_BALLCAMM_SAVER_SCRN = 0;
				set_ledx(LED_2, 3)
			}
			set_pvar(SPVAR_7, AUTO_BALLCAMM);
			combo_run(RUMBLE_ON);
		}
	}
/////////////////////////////////////////////////////////
	if ( menu == p_8 ){
		
		if (event_press(PS4_TRIANGLE)){		
			
			if (p_8_opt){
	
				SPEED_D_SAVER_SCRN = 1;
				set_pvar(SPVAR_16, SPEEDDRIFT_POWER);
				SPEED_D = 1;
				set_ledx(LED_3, 3)

			} else {
	
				SPEED_D_SAVER_SCRN = 0;
				set_ledx(LED_2, 3)
			}
			set_pvar(SPVAR_8, SPEED_D)
			combo_run(RUMBLE_ON);
		}
	}
/////////////////////////////////////////////////////////
	if ( menu == p_9 ){
	
		if (event_press(PS4_TRIANGLE)){
	
		    if (p_9_opt){
		    	
		    	STOP_C_SAVER_SCRN = 1;
		    	STOP_C = 1;
		    	set_ledx(LED_3, 3)
		    
		    } else {
		    
		    	STOP_C_SAVER_SCRN = 0; 
		    	set_ledx(LED_2, 3)
			}
			set_pvar(SPVAR_9, STOP_C);
			combo_run(RUMBLE_ON);
		}
	}
/////////////////////////////////////////////////////////
	if ( menu == p_10 ){
	
		if (event_press(PS4_TRIANGLE)){
			
			if (p_10_opt){
	
				FAST_FLIP_SAVER_SCRN = 1;
				FAST_FLIP = 1;
				set_ledx(LED_3, 3)
			
			} else {
				
				FAST_FLIP_SAVER_SCRN = 0;
				set_ledx(LED_2, 3)
			}
			set_pvar(SPVAR_10, FAST_FLIP);
			combo_run(RUMBLE_ON);
		}
	}

/////////////////////////////////////////////////////////
	if ( menu == p_11 ){
	
		if (event_press(PS4_TRIANGLE)){
			
			if (p_11_opt){

				CAMERA_S_SAVER_SCRN = 1;
				CAMERA_S = 1;
				set_ledx(LED_3, 3)
			
			} else {
				
				CAMERA_S_SAVER_SCRN = 0;
				set_ledx(LED_2, 3)
			}
			set_pvar(SPVAR_11, CAMERA_S);
			combo_run(RUMBLE_ON);
		}
	}
////////////////////////////////////////////////////////
	if ( menu == p_12 ){
	
		if (event_press(PS4_TRIANGLE)){
			
			if (p_12_opt){

				DRIFT_AFTER_J_D_SAVER_SCRN = 1;
				DRIFT_AFTER_J_D = 1;
				set_ledx(LED_3, 3)
			
			} else {
				
				DRIFT_AFTER_J_D_SAVER_SCRN = 0;
				set_ledx(LED_2, 3)
			}
			set_pvar(SPVAR_12, DRIFT_AFTER_J_D);
			combo_run(RUMBLE_ON);
		}
	}
/////////////////////////////////////////////////////////
	if ( menu == p_13 ){
		
		if (event_press(PS4_TRIANGLE)){
			
			if (p_13_opt){

				BOOST_S_SAVER_SCRN = 1;
	            set_pvar(SPVAR_27, BOOST_SAFER_TIME_GROUND);
                set_pvar(SPVAR_28, BOOST_SAFER_TIME_AIR);
	            BOOST_S = 1;
	            set_ledx(LED_3, 3)
			
			} else {
				
				BOOST_S_SAVER_SCRN = 0;
				set_ledx(LED_2, 3)
			}
			set_pvar(SPVAR_13, BOOST_S);
			combo_run(RUMBLE_ON);
		}
	}
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

	// ADJUSTMENT SCREEN SAVER //
}
///////////////////////////////////
	
	if(AIRROLL_TIME_S > 0){
	AIRROLL_TIME = AIRROLL_TIME_S;
	AIRROLL_TIME_S = 0;
}
	if(ANGLE_ALIGNENT_TIME_S > 0){
	ANGLE_ALIGNENT_TIME = ANGLE_ALIGNENT_TIME_S;
	ANGLE_ALIGNENT_TIME_S = 0;
}
	if(SPEEDDRIFT_POWER_S > 0){
	SPEEDDRIFT_POWER = SPEEDDRIFT_POWER_S;
	SPEEDDRIFT_POWER_S = 0;
}
	if(STRAIGHT_FLY_TIME_S > 0){
	STRAIGHT_FLY_TIME = STRAIGHT_FLY_TIME_S;
	STRAIGHT_FLY_TIME_S = 0;
}
	if(ANGLE_LY_TIME_S > 0){
	ANGLE_LY_TIME = ANGLE_LY_TIME_S;
	ANGLE_LY_TIME_S = 0;
}
	if(L_STRAIGHT_DRIVE_TIME_S > 0){
	L_STRAIGHT_DRIVE_TIME = L_STRAIGHT_DRIVE_TIME_S;
	L_STRAIGHT_DRIVE_TIME_S = 0;
}
	if(L_ANGLE_TIME_KICKOFF_S > 0){
	L_ANGLE_TIME_KICKOFF = L_ANGLE_TIME_KICKOFF_S;
	L_ANGLE_TIME_KICKOFF_S = 0;
}
	if(R_ANGLE_TIME_KICKOFF_S > 0){
	R_ANGLE_TIME_KICKOFF = R_ANGLE_TIME_KICKOFF_S;
	R_ANGLE_TIME_KICKOFF_S = 0
}
	if(R_STRAIGHT_DRIVE_TIME_S > 0){
	R_STRAIGHT_DRIVE_TIME = R_STRAIGHT_DRIVE_TIME_S;
	R_STRAIGHT_DRIVE_TIME_S = 0;
}
	if(L_STRAIGHT_BOOST_TIME_S > 0){
	L_STRAIGHT_BOOST_TIME = L_STRAIGHT_BOOST_TIME_S;
	L_STRAIGHT_BOOST_TIME_S = 0;
}
	if(L_ANGLE_TIME_SPEEDFLIP_S > 0){
	L_ANGLE_TIME_SPEEDFLIP = L_ANGLE_TIME_SPEEDFLIP_S;
	L_ANGLE_TIME_SPEEDFLIP_S = 0;
}
	if(R_ANGLE_TIME_SPEEDFLIP_S > 0){
	R_ANGLE_TIME_SPEEDFLIP = R_ANGLE_TIME_SPEEDFLIP_S;
	R_ANGLE_TIME_SPEEDFLIP_S = 0;
}
	if(R_STRAIGHT_BOOST_TIME_S > 0){
	R_STRAIGHT_BOOST_TIME = R_STRAIGHT_BOOST_TIME_S;
	R_STRAIGHT_BOOST_TIME_S = 0;
}
	if(TAKEOFF_HEIGHT_S > 0){
	TAKEOFF_HEIGHT = TAKEOFF_HEIGHT_S;
	TAKEOFF_HEIGHT_S = 0;
}
	if(Y_ANGLE_TIME_S > 0){
	Y_ANGLE_TIME = Y_ANGLE_TIME_S;
	Y_ANGLE_TIME_S = 0;
}
	if(JUMP_HEIGHT_S > 0){
	JUMP_HEIGHT = JUMP_HEIGHT_S;
	JUMP_HEIGHT_S = 0;
}
	if(ANGLE_X_TIME_S > 0){
	ANGLE_X_TIME = ANGLE_X_TIME_S;
	ANGLE_X_TIME_S = 0;
}
	if(BOOST_SAFER_TIME_GROUND_S > 0){
	BOOST_SAFER_TIME_GROUND = BOOST_SAFER_TIME_GROUND_S;
	BOOST_SAFER_TIME_GROUND_S = 0;
}
	if(BOOST_SAFER_TIME_AIR_S > 0){
	BOOST_SAFER_TIME_AIR = BOOST_SAFER_TIME_AIR_S;
	BOOST_SAFER_TIME_AIR_S = 0;
}
	if(AUTO_BALL_CAMERA_SHORT_S > 0){
	AUTO_BALL_CAMERA_SHORT = AUTO_BALL_CAMERA_SHORT_S;
	AUTO_BALL_CAMERA_SHORT_S = 0;
}
	if(AUTO_BALL_CAMERA_LONG_S > 0){
	AUTO_BALL_CAMERA_LONG = AUTO_BALL_CAMERA_LONG_S;
	AUTO_BALL_CAMERA_LONG_S = 0;
}
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	if (menu){
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
	if ( menu == p_5 ){
	
		F_SPEEDFLIP = Adjust(F_SPEEDFLIP);
		if (F_SPEEDFLIP) p_5_opt = 1; else p_5_opt = 0;
		
		if (F_SPEEDFLIP_SAVER_SCRN && p_5_opt) {
		
			printf( posx( 3, fm ), 37, 1, 0, idx_opt4[ 0 ] );
			set_ledx(LED_3, 3);
			
		} else if (!F_SPEEDFLIP_SAVER_SCRN && !p_5_opt) {
			
			printf( posx( 3, fm ), 37, 1, 0, idx_opt4[ 0 ] );
			set_ledx(LED_2, 3);
		}
	}
/////////////////////////////////////////////////////////////////////////

	if ( menu == p_6 ){
	
		B_SPEEDFLIP = Adjust(B_SPEEDFLIP);
		if (B_SPEEDFLIP) p_6_opt = 1; else p_6_opt = 0;
		
		if (B_SPEEDFLIP_SAVER_SCRN && p_6_opt) {
		
			printf( posx( 3, fm ), 37, 1, 0, idx_opt4[ 0 ] );
			set_ledx(LED_3, 3);
			
		} else if (!B_SPEEDFLIP_SAVER_SCRN && !p_6_opt) {
			
			printf( posx( 3, fm ), 37, 1, 0, idx_opt4[ 0 ] );
			set_ledx(LED_2, 3);
		}
	} 	
//////////////////////////////////////////////////////////////////////////// 
	if ( menu == p_7 ){
	
		AUTO_BALLCAMM = Adjust(AUTO_BALLCAMM);
		if (AUTO_BALLCAMM) p_7_opt = 1; else p_7_opt = 0;
		
		if (AUTO_BALLCAMM_SAVER_SCRN && p_7_opt) {
		
			printf( posx( 3, fm ), 37, 1, 0, idx_opt4[ 0 ] );
			set_ledx(LED_3, 3);
	
		} else if (!AUTO_BALLCAMM_SAVER_SCRN && !p_7_opt) {
			
			printf( posx( 3, fm ), 37, 1, 0, idx_opt4[ 0 ] );
			set_ledx(LED_2, 3);
		}
	}
////////////////////////////////////////////////////////////////////// 
	if ( menu == p_8 ){
	
		SPEED_D = Adjust(SPEED_D);
		if (SPEED_D) p_8_opt = 1; else p_8_opt = 0;
		
		if (SPEED_D_SAVER_SCRN && p_8_opt) {
		
			printf( posx( 3, fm ), 37, 1, 0, idx_opt4[ 0 ] );
			set_ledx(LED_3, 3);
	
		} else if (!SPEED_D_SAVER_SCRN && !p_8_opt) {
			
			printf( posx( 3, fm ), 37, 1, 0, idx_opt4[ 0 ] );
			set_ledx(LED_2, 3);
		}
	}	
////////////////////////////////////////////////////////////////////// 
	if ( menu == p_9 ){
	
		STOP_C = Adjust(STOP_C);
		if (STOP_C) p_9_opt = 1; else p_9_opt = 0;
		
		if (STOP_C_SAVER_SCRN && p_9_opt) {
		
			printf( posx( 3, fm ), 37, 1, 0, idx_opt4[ 0 ] );
			set_ledx(LED_3, 3);
	
		} else if (!STOP_C_SAVER_SCRN && !p_9_opt) {
			
			printf( posx( 3, fm ), 37, 1, 0, idx_opt4[ 0 ] );
			set_ledx(LED_2, 3);
		}
	}	
//////////////////////////////////////////////////////////////////
	if ( menu == p_10 ){
	
		FAST_FLIP = Adjust(FAST_FLIP);
		if (FAST_FLIP) p_10_opt = 1; else p_10_opt = 0;
		
		if (FAST_FLIP_SAVER_SCRN && p_10_opt) {
		
			printf( posx( 3, fm ), 37, 1, 0, idx_opt4[ 0 ] );
			set_ledx(LED_3, 3);
	
		} else if (!FAST_FLIP_SAVER_SCRN && !p_10_opt) {
			
			printf( posx( 3, fm ), 37, 1, 0, idx_opt4[ 0 ] );
			set_ledx(LED_2, 3);
		}
	}	
/////////////////////////////////////////////////////////
	if ( menu == p_11 ){
	
		CAMERA_S = Adjust(CAMERA_S);
		if (CAMERA_S) p_11_opt = 1; else p_11_opt = 0;
		
		if (CAMERA_S_SAVER_SCRN && p_11_opt) {
		
			printf( posx( 3, fm ), 37, 1, 0, idx_opt4[ 0 ] );
			set_ledx(LED_3, 3);
	
		} else if (!CAMERA_S_SAVER_SCRN && !p_11_opt) {
			
			printf( posx( 3, fm ), 37, 1, 0, idx_opt4[ 0 ] );
			set_ledx(LED_2, 3);
		}
	}	
//////////////////////////////////////////////////
	if ( menu == p_12 ){
	
		DRIFT_AFTER_J_D = Adjust(DRIFT_AFTER_J_D);
		if (DRIFT_AFTER_J_D) p_12_opt = 1; else p_12_opt = 0;
		
		if (DRIFT_AFTER_J_D_SAVER_SCRN && p_12_opt) {
		
			printf( posx( 3, fm ), 37, 1, 0, idx_opt4[ 0 ] );
			set_ledx(LED_3, 3);
	
		} else if (!DRIFT_AFTER_J_D_SAVER_SCRN && !p_12_opt) {
			
			printf( posx( 3, fm ), 37, 1, 0, idx_opt4[ 0 ] );
			set_ledx(LED_2, 3);
		}
	}
/////////////////////////////////////////////////////////////////
	if ( menu == p_13 ){
	
		BOOST_S = Adjust(BOOST_S);
		if (BOOST_S) p_13_opt = 1; else p_13_opt = 0;
		
		if (BOOST_S_SAVER_SCRN && p_13_opt) {
		
			printf( posx( 3, fm ), 37, 1, 0, idx_opt4[ 0 ] );
			set_ledx(LED_3, 3);
	
		} else if (!BOOST_S_SAVER_SCRN && !p_13_opt) {
			
			printf( posx( 3, fm ), 37, 1, 0, idx_opt4[ 0 ] );
			set_ledx(LED_2, 3);
		}
	}
}
//////////////////////////////////////////////////
if (menu){
LED_P_B_1(1,1);
LED_P_B_1(2,2);
LED_P_B_1(3,3);
LED_P_B_1(4,4);
LED_P_B_1(5,5);
LED_P_B_1(6,6);
LED_P_B_1(7,7);
LED_P_B_1(8,8);
LED_P_B_1(9,9);
LED_P_B_1(10,10);
LED_P_B_1(11,11);
LED_P_B_1(12,12);
LED_P_B_1(13,13);

LED_P_B_2(1,1);
LED_P_B_2(2,2);
LED_P_B_2(3,3);
LED_P_B_2(4,4);
LED_P_B_2(5,5);
LED_P_B_2(6,6);
LED_P_B_2(7,7);
LED_P_B_2(8,8);
LED_P_B_2(9,9);
LED_P_B_2(10,10);
LED_P_B_2(11,11);
LED_P_B_2(12,12);
LED_P_B_2(13,13);

LED_P_B_3(1,1);
LED_P_B_3(2,2);
LED_P_B_3(3,3);
LED_P_B_3(4,4);
LED_P_B_3(5,5);
LED_P_B_3(6,6);
LED_P_B_3(7,7);
LED_P_B_3(8,8);
LED_P_B_3(9,9);
LED_P_B_3(10,10);
LED_P_B_3(11,11);
LED_P_B_3(12,12);
LED_P_B_3(13,13);

LED_P_B_4(1,1);
LED_P_B_4(2,2);
LED_P_B_4(3,3);
LED_P_B_4(4,4);
LED_P_B_4(5,5);
LED_P_B_4(6,6);
LED_P_B_4(7,7);
LED_P_B_4(8,8);
LED_P_B_4(9,9);
LED_P_B_4(10,10);
LED_P_B_4(11,11);
LED_P_B_4(12,12);
LED_P_B_4(13,13);

LED_P_B_5(1,1);
LED_P_B_5(2,2);
LED_P_B_5(3,3);
LED_P_B_5(4,4);
LED_P_B_5(5,5);
LED_P_B_5(6,6);
LED_P_B_5(7,7);
LED_P_B_5(8,8);
LED_P_B_5(9,9);
LED_P_B_5(10,10);
LED_P_B_5(11,11);
LED_P_B_5(12,12);
LED_P_B_5(13,13);

LED_P_B_6(1,1);
LED_P_B_6(2,2);
LED_P_B_6(3,3);
LED_P_B_6(4,4);
LED_P_B_6(5,5);
LED_P_B_6(6,6);
LED_P_B_6(7,7);
LED_P_B_6(8,8);
LED_P_B_6(9,9);
LED_P_B_6(10,10);
LED_P_B_6(11,11);
LED_P_B_6(12,12);
LED_P_B_6(13,13);

LED_P_B_7(1,1);
LED_P_B_7(2,2);
LED_P_B_7(3,3);
LED_P_B_7(4,4);
LED_P_B_7(5,5);
LED_P_B_7(6,6);
LED_P_B_7(7,7);
LED_P_B_7(8,8);
LED_P_B_7(9,9);
LED_P_B_7(10,10);
LED_P_B_7(11,11);
LED_P_B_7(12,12);
LED_P_B_7(13,13);

LED_P_B_8(1,1);
LED_P_B_8(2,2);
LED_P_B_8(3,3);
LED_P_B_8(4,4);
LED_P_B_8(5,5);
LED_P_B_8(6,6);
LED_P_B_8(7,7);
LED_P_B_8(8,8);
LED_P_B_8(9,9);
LED_P_B_8(10,10);
LED_P_B_8(11,11);
LED_P_B_8(12,12);
LED_P_B_8(13,13);

}

//////////////////////////////
//                          //
//    TURN_SCRIPT_ON_OFF	//
//                          //
//////////////////////////////
	if ((TURN_SCRIPT_ON_OFF) && get_val(TURN_OFF_BUTTON)){
	TURN_SCRIPT_ON_OFF = FALSE;
	set_led(LED_2, 3)
	combo_run(RUMBLE_OFF);
	set_val(TURN_OFF_BUTTON, 0);

 } 

 
 		
 	if (!TURN_SCRIPT_ON_OFF) {
 	if (event_release(TURN_ON_BUTTON) && !combo_running(TURN_ON_TIMER)){
 	   	combo_run(TURN_ON_TIMER);
	   	TURN_SCRIPT_ON_OFF = FALSE;
 	   	set_val(TURN_ON_BUTTON, 0);
 	    
}      
	if (combo_running(TURN_ON_TIMER) && event_press(TURN_ON_BUTTON)){
        TURN_SCRIPT_ON_OFF = TRUE;
	   	set_ledx(LED_3, 3)
	   	combo_run(RUMBLE_ON);
	   	set_val(TURN_ON_BUTTON, 0);
	   	set_val(TURN_OFF_BUTTON, 0);
	    	
}
 	}
	if (TURN_SCRIPT_ON_OFF){
	
//////////////////////////////
//                          //
//   CAMERASHAKE BLOCKERS   //
//                          //
//////////////////////////////
	if((CAMERA_SHAKE_BLOCK_MOD) && abs(get_ival(PS4_RX)) <= 10 && abs(get_val(PS4_RY)) <= 10){
    set_val(PS4_RY, 0);
    set_val(PS4_RX, 0);
}

//////////////////////////
//                      //
//   BACK-SPEEDFLIPS    //
//                      //
//////////////////////////
    
    if  ((BACK_SPEEDFLIPS_MOD) && combo_running(TIMER_FOR_DODGE) && get_val(DRIVE_BACKWARDS_BUTTON) && get_val(PS4_LY) >= 21 && get_val(PS4_LX) >=-70 && get_val(PS4_LX) >=0 && !combo_running(INV_YX) && !combo_running(LEFT_SPEEDFLIP) && !combo_running(RIGHT_SPEEDFLIP) && combo_running(TIMER_AFTER_DODGE) && !combo_running(LEFT_BACK_SPEEDFLIP) && !combo_running(FAST_FLIPP)) {
    if	(get_val(JUMP_BUTTON)) {
        combo_run(LEFT_BACK_SPEEDFLIP);
        combo_stop(TIMER_FOR_DODGE);
        combo_stop(TIMER_AFTER_DODGE);
        combo_stop(RIGHT_SPEEDFLIP);
        combo_stop(LEFT_SPEEDFLIP);
        combo_stop(INV_YX);
        combo_stop(BOOST_SAFER);
        set_val(JUMP_BUTTON, 0);
        
    }
    }
    if  ((BACK_SPEEDFLIPS_MOD) && combo_running(TIMER_FOR_DODGE) && get_val(DRIVE_BACKWARDS_BUTTON)  && get_val(PS4_LY) >= 21 && get_val(PS4_LX) <=70 && get_val(PS4_LX) <=0 && !combo_running(INV_YX) && !combo_running(LEFT_SPEEDFLIP) && !combo_running(RIGHT_SPEEDFLIP) && combo_running(TIMER_AFTER_DODGE) && !combo_running(RIGHT_BACK_SPEEDFLIP) && !combo_running(FAST_FLIPP)) {
    if 	(get_val(JUMP_BUTTON)){
    	combo_run(RIGHT_BACK_SPEEDFLIP);
    	combo_stop(TIMER_FOR_DODGE);
        combo_stop(TIMER_AFTER_DODGE);
        combo_stop(RIGHT_SPEEDFLIP);
        combo_stop(LEFT_SPEEDFLIP);
        combo_stop(INV_YX);
        combo_stop(BOOST_SAFER);
        set_val(JUMP_BUTTON, 0);
    }
    }
    if  ((BACK_SPEEDFLIPS_MOD) && combo_running(TIMER_FOR_DODGE) && get_val(DRIVE_BACKWARDS_BUTTON) && get_val(PS4_LY) >= 70 && !combo_running(INV_YX) && !combo_running(LEFT_SPEEDFLIP) && !combo_running(RIGHT_SPEEDFLIP) && combo_running(TIMER_AFTER_DODGE) && !combo_running(LEFT_BACK_SPEEDFLIP) && !combo_running(RIGHT_BACK_SPEEDFLIP) && !combo_running(FAST_FLIPP)) {
    if  (get_val(JUMP_BUTTON)){
        combo_run(STRAIGHT_BACK_SPEEDFLIP);
        combo_stop(TIMER_FOR_DODGE);
        combo_stop(TIMER_AFTER_DODGE);
        combo_stop(RIGHT_SPEEDFLIP);
        combo_stop(LEFT_SPEEDFLIP);
        combo_stop(INV_YX);
        combo_stop(BOOST_SAFER);
        set_val(JUMP_BUTTON, 0);
        
    }
	}
	if 	(combo_running(STRAIGHT_BACK_SPEEDFLIP)){
		set_val(PS4_LX, 100);
	}

//////////////////////////
//                      //
//   	 FASFLIP        //
//                      //
//////////////////////////

 if  ((FAST_FLIPP_MOD) && !combo_running(FAST_FLIPP) && event_press(JUMP_BUTTON) && !combo_running(TIMER_FOR_DODGE) && get_val(PS4_LY) <= -96 && !combo_running(TIMER_BLOCK_DRIFT_CANCLE) && !combo_running(RIGHT_BACK_SPEEDFLIP) && !combo_running(LEFT_BACK_SPEEDFLIP)) {
        combo_run(FAST_FLIPP);
        combo_stop(INV_YX);
       	combo_stop(SPEEDDRIFT);
       	combo_stop(INV_YX);
    }
 if		(combo_running(FAST_FLIPP)){
 		set_val(JUMP_BUTTON, 0);
 		combo_stop(INV_YX);
 }

//////////////////////////
//                      //
//      SPEEDFLIPS      //
//                      //
//////////////////////////
  
    if  ((FRONT_SPEEDFLIPS_MOD) && event_press(JUMP_BUTTON) && get_val(BOOST_BUTTON) && combo_running(TIMER_FOR_DODGE) && get_val(PS4_LY) <= -20 && get_val(PS4_LX) >= -100 && get_val(PS4_LY) >= -100 && get_val(PS4_LX) <= -25 && combo_running(INV_YX) && !combo_running(LEFT_BACK_SPEEDFLIP)) {
        combo_run(F_LEFT_SPEEDFLIP);
        combo_stop(FAST_FLIPP);
        combo_stop(INV_YX);
        combo_stop(SPEEDDRIFT);
    }
	if 	(combo_running(RIGHT_SPEEDFLIP)){
		set_val(JUMP_BUTTON, 0);
		set_val(PS4_LX, 0)
	}
    if  ((FRONT_SPEEDFLIPS_MOD) && event_press(JUMP_BUTTON) && get_val(BOOST_BUTTON) && combo_running(TIMER_FOR_DODGE) && get_val(PS4_LY) <= -20 && get_val(PS4_LX) <= 100 && get_val(PS4_LY) >= -100 && get_val(PS4_LX) >= 25 && combo_running(INV_YX) && !combo_running(LEFT_BACK_SPEEDFLIP)) {
        combo_run(F_RIGHT_SPEEDFLIP);
        combo_stop(FAST_FLIPP);
        combo_stop(INV_YX);
       	combo_stop(SPEEDDRIFT);
    }
	if 	(combo_running(F_LEFT_SPEEDFLIP)){
		set_val(JUMP_BUTTON, 0);
		set_val(PS4_LX, 0)
	}

//////////////////////////
//                      //
//      INVERT AXES     //
//                      //
//////////////////////////

    if ((FRONT_SPEEDFLIPS_MOD) && event_press(JUMP_BUTTON) && get_val(PS4_LY) <= -25 && get_val(BOOST_BUTTON) && get_val(PS4_LX) >= -100 && get_val(PS4_LY) >= -100 && get_val(PS4_LX) <= -25 && !combo_running(TIMER_FOR_DODGE)){
        combo_run(INV_YX);
        combo_stop(BOOST_SAFER);
}
    if ((FRONT_SPEEDFLIPS_MOD) && event_press(JUMP_BUTTON) && get_val(PS4_LY) <= -25 && get_val(BOOST_BUTTON) && get_val(PS4_LX) <= 100 && get_val(PS4_LY) >= -100 && get_val(PS4_LX) >= 25 && !combo_running(TIMER_FOR_DODGE)){
        combo_run(INV_YX);
        combo_stop(BOOST_SAFER);
}
	if 	(combo_running(INV_YX)){
		set_val(PS4_LX, 0)
	}
//////////////////////////
//                      //
//      AUTOBALLCAM     //
//                      //
//////////////////////////
	if (AUTO_BALLCAM_MOD) {
    
        if  (!onoff && !combo_running(AUTO_CARCAM_LONG)) {
            combo_run(BALLCAM);    
        }
	    
		if  (event_press(BALLCAM_BUTTON) && combo_running(AUTO_CARCAM_SHORT))
        	combo_stop(BALLCAM);
        
        else if  (event_press(BALLCAM_BUTTON) && combo_running(BALLCAM) && !combo_running(AUTO_CARCAM_SHORT)) {
            combo_run(AUTO_CARCAM_SHORT); 
            combo_run(TIMER_AUTOBALLCAM_LONG);
        }
        
        if  (event_press(BALLCAM_BUTTON) && combo_running(AUTO_CARCAM_SHORT) && !combo_running(BALLCAM) && !combo_running(AUTO_CARCAM_LONG) && !combo_running(TIMER_AUTOBALLCAM_LONG)) {
            combo_run(STOP_AUTO_CARCAM);
            combo_stop(AUTO_CARCAM_SHORT);
            combo_stop(AUTO_CARCAM_LONG);
        } 
	    
        if  (event_press(BALLCAM_BUTTON) && combo_running(AUTO_CARCAM_LONG) && !combo_running(BALLCAM) && !combo_running(AUTO_CARCAM_SHORT)) {
            combo_run(STOP_AUTO_CARCAM);
            combo_stop(AUTO_CARCAM_LONG);
        }
	    
        if  (event_press(BALLCAM_BUTTON) && combo_running(AUTO_CARCAM_SHORT) && !combo_running(BALLCAM) && combo_running(TIMER_AUTOBALLCAM_LONG)) {
            combo_run(AUTO_CARCAM_LONG);
            combo_stop(BALLCAM);
            combo_stop(AUTO_CARCAM_SHORT);
            combo_stop(STOP_AUTO_CARCAM);
        }
	}

////////////////////////////////////////
//                                    //
//  JUMP & DRIFT-MOD-ACTIVATORS       //
//                                    //
////////////////////////////////////////

    if  (event_press(JUMP_BUTTON) && !combo_running(TIMER_FOR_DODGE) && !combo_running(LEFT_BACK_SPEEDFLIP) && !combo_running(RIGHT_BACK_SPEEDFLIP)) {
    	combo_run(TIMER_FOR_DODGE);
    	combo_run(TIMER_BLOCK_DRIFT_CANCLE);
    	combo_run(BOOST_SAFER_TIMER);
    	combo_run(TIMER_BLOCK_STOP_CAR_MOD);
    }
    else if  (event_press(JUMP_BUTTON) && !combo_running(FAST_FLIPP) && combo_running(TIMER_FOR_DODGE) && !combo_running(LEFT_SPEEDFLIP) && !combo_running(RIGHT_SPEEDFLIP) && !combo_running(LEFT_BACK_SPEEDFLIP) && !combo_running(RIGHT_BACK_SPEEDFLIP))
        combo_run(TIMER_AFTER_DODGE);
        
    if 	((DRIFT_AFTER_JUMP_DODGE_MOD) && event_press(JUMP_BUTTON) && !combo_running(DRIFT_AFTER_JUMP)) {
        combo_run(DRIFT_AFTER_JUMP);
    }
    else if  ((DRIFT_AFTER_JUMP_DODGE_MOD) && event_press(JUMP_BUTTON) && !combo_running(FAST_FLIPP) && combo_running(DRIFT_AFTER_JUMP) && !combo_running(LEFT_SPEEDFLIP) && !combo_running(RIGHT_SPEEDFLIP) && !combo_running(LEFT_BACK_SPEEDFLIP) && !combo_running(RIGHT_BACK_SPEEDFLIP))
        combo_run(DRIFT_AFTER_DODGE);
       
////////////////////////////////////////
//                                    //
//  		  SPEEDDRIFT    	      //
//                                    //
////////////////////////////////////////

	if((TURN_SCRIPT_ON_OFF) && (SPEED_DRIFT_MOD) && !get_ival(BOOST_BUTTON) && !combo_running(MUSTY_FLICK) && 
	    !combo_running(LEFT_ZURN_SHOT) && !combo_running(RIGHT_ZURN_SHOT) && !combo_running(LEFT_KICKOFF_SPEEDFLIP) && !combo_running(RIGHT_KICKOFF_SPEEDFLIP) 
	    && !combo_running(RIGHT_SPEEDFLIP) && !combo_running(LEFT_SPEEDFLIP) && abs(get_ival(PS4_LX)) > 95 ){
		combo_run(SPEEDDRIFT);
}

////////////////////////////////////////
//                                    //
//   		    STOP CAR 			  //
//                                    //
////////////////////////////////////////

    if  ((STOP_CAR_MOD) && get_val(DRIVE_BACKWARDS_BUTTON) && !combo_running(TIMER_BLOCK_STOP_CAR_MOD) && !combo_running(DRIFT_AFTER_JUMP) && !combo_running(TIMER_FOR_DODGE) && !combo_running(TIMER_AFTER_DODGE) && get_val(DRIVE_FORWARDS_BUTTON) && !combo_running(LEFT_BACK_SPEEDFLIP)) {
        set_val(DRIVE_FORWARDS_BUTTON, 0);
        set_val(BOOST_BUTTON, 0);
        
    }

////////////////////////////////////////
//                                    //
//         BOOST & DRIFTSTOP          //
//                                    //
////////////////////////////////////////
    
    if  (get_val(DRIVE_FORWARDS_BUTTON)){
        combo_run(FORWARDS);        
}
    if  (event_press(DRIVE_FORWARDS_BUTTON) && combo_running(DRIFT_AFTER_DODGE)){
         combo_stop(DRIFT_AFTER_DODGE);
}
    if  (get_val(BOOST_BUTTON) && !combo_running(TIMER_FOR_DODGE)&& !combo_running(TIMER_AFTER_DODGE) && !combo_running(DRIFT_AFTER_JUMP) && !combo_running(DRIFT_AFTER_DODGE)){
        combo_run(BOOST);
}
    if  (event_press(BOOST_BUTTON)){
        combo_stop(BOOST);
}


//////////////////////////
//                      //
//      BOOST-SAFER		//
//                      //
//////////////////////////

	if (BOOST_SAVER_MOD) {
	
	    if (!combo_running(SPEEDDRIFT) && !combo_running(TIMER_FOR_DODGE) && !combo_running(AUTO_TAKEOFF) && !combo_running(TIMER_AFTER_DODGE) && !combo_running(BOOST_SAFER_TIMER) && get_ptime(BOOST_BUTTON)> (BOOST_SAFER_TIME_GROUND)){
	    	combo_run(BOOST_SAFER);
	    	combo_stop(BOOST);
		}       
	    if (!combo_running(AUTO_TAKEOFF) && combo_running(BOOST_SAFER_TIMER) && get_ptime(BOOST_BUTTON)> (BOOST_SAFER_TIME_AIR)){
	    	combo_run(BOOST_SAFER);
		}       
	    if (combo_running(TIMER_FOR_DODGE) || combo_running(TIMER_AFTER_DODGE) || !combo_running(TIMER_FOR_DODGE) && !combo_running(AUTO_TAKEOFF) && !combo_running(TIMER_AFTER_DODGE) && !get_val(BOOST_BUTTON)){
	    	combo_stop(BOOST_SAFER);
		}       
    }

//////////////////////////
//                      //
//      COMBO RUN		//
//                      //
//////////////////////////

	if (Once1 && Combo1) {combo_run(RIGHT_ZURN_SHOT);Once1--;}
	if (Once2 && Combo2) {combo_run(LEFT_ZURN_SHOT);Once2--;}
	if (Once3 && Combo3) {
		set_val(PS4_LY, -100);
		combo_run(AUTO_TAKEOFF);
		combo_run(AUTO_TAKEOFF_BOOST_TIMER);
		combo_run(AUTO_TAKEOFF_BLOCK_CANCLE_TIMER);
		Once3--;
	}
	if (Once4 && Combo4) {
		set_val(PS4_LY, -100);
		set_val(PS4_LX, 0);
		combo_run(RIGHT_KICKOFF_SPEEDFLIP);
		set_val(DRIVE_FORWARDS_BUTTON, 100);
		set_val(BOOST_BUTTON, 100);
		Once4--;
}

	if (combo_running(RIGHT_KICKOFF_SPEEDFLIP) || combo_running(LEFT_KICKOFF_SPEEDFLIP) || combo_running(LEFT_SPEEDFLIP)|| combo_running(RIGHT_SPEEDFLIP)){
		set_val(PS4_LY, -100);
		set_val(PS4_LX, 0);
		set_val(BOOST_BUTTON, 100);
		set_val(DRIVE_FORWARDS_BUTTON, 100);
}
	if (Once6 && Combo6) {
		set_val(PS4_LY, -100);
		set_val(PS4_LX, 0);
	combo_run(LEFT_KICKOFF_SPEEDFLIP);
	set_val(BOOST_BUTTON, 100);
	set_val(DRIVE_FORWARDS_BUTTON, 100);
	Once6--;
	}
	if (Once7 && Combo7) {
		set_val(DRIVE_FORWARDS_BUTTON, 100);
		set_val(BOOST_BUTTON, 100);
		set_val(PS4_LY, -100);
		set_val(PS4_LX, 0);
	combo_run(RIGHT_SPEEDFLIP);
	Once14--;
}
	
	if (Once8 && Combo8) {
		set_val(DRIVE_FORWARDS_BUTTON, 100);
		set_val(BOOST_BUTTON, 100);
		set_val(PS4_LY, -100);
		set_val(PS4_LX, 0);
	combo_run(LEFT_SPEEDFLIP);
	Once15--;
}
	if (Once9 && Combo9) {combo_run(RIGHT_WALL_JUMP);Once9--;}
	if (Once10 && Combo10) {combo_run(LEFT_WALL_JUMP);Once10--;}
	if (Once11 && Combo11) {
	combo_run(RIGHT_TORNADOSPIN);
	combo_stop(AUTO_CARCAM_SHORT);
    combo_stop(AUTO_CARCAM_LONG);
	} 
	if (combo_running(RIGHT_TORNADOSPIN)){
	set_val(POWER_BUTTON_1, 0);
	set_val(POWER_BUTTON_2, 0);
	set_val(POWER_BUTTON_3, 0);
	set_val(POWER_BUTTON_4, 0);
	set_val(POWER_BUTTON_5, 0);
	set_val(POWER_BUTTON_6, 0);
	set_val(POWER_BUTTON_7, 0);
	set_val(POWER_BUTTON_8, 0);
	
	}
	if (Once12 && Combo12) {combo_run(STALL);Once12--;}
	if (Once14 && Combo14) {combo_run(MUSTY_FLICK);Once7--;}
	if (Once15 && Combo15){
		combo_run(WAVE_DASH);
		set_val(BOOST_BUTTON, 100);
		set_val(DRIVE_FORWARDS_BUTTON, 100);
	}
}
}
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
combo TIMER_FOR_DODGE {
    wait(1500);
}

combo TIMER_AFTER_DODGE {
    wait(1300);
}
combo STRAIGHT_BACK_SPEEDFLIP {
    set_val(PS4_LY, 100);
    set_val(PS4_LX, 100);
    wait(200);
    set_val(PS4_LY, -100);
    set_val(PS4_LX, 100);
    set_val(AIRROLL_LEFT_BUTTON, 100);
    set_val(AIRROLL_BUTTON, 100);
    set_val(BOOST_BUTTON, 100);
    wait(300);
	set_val(AIRROLL_BUTTON, 100);
    set_val(DRIVE_FORWARDS_BUTTON, 100);
    set_val(PS4_LX, 100);
    wait(100);
}
combo LEFT_BACK_SPEEDFLIP {
    set_val(PS4_LY, 100);
    set_val(POWERDRIFT_BUTTON, 100);
    wait(320);
    set_val(PS4_LY, -100);
    set_val(PS4_LX, 100);
    set_val(AIRROLL_LEFT_BUTTON, 100);
    set_val(AIRROLL_BUTTON, 100);
    set_val(BOOST_BUTTON, 100);
    wait(300);
    set_val(PS4_LY, -100);
    set_val(AIRROLL_BUTTON, 100);
    set_val(DRIVE_FORWARDS_BUTTON, 100);
    set_val(PS4_LX, 100);
    wait(100);
    set_val(AIRROLL_BUTTON, 100);
    set_val(JUMP_BUTTON, 100);
    set_val(DRIVE_FORWARDS_BUTTON, 100);
    set_val(PS4_LY, 0);
    set_val(POWERDRIFT_BUTTON, 100);
    wait(40);
    set_val(AIRROLL_BUTTON, 100);
    set_val(DRIVE_FORWARDS_BUTTON, 100);
    set_val(PS4_LX, 100);
    set_val(POWERDRIFT_BUTTON, 100);
    wait(50);
    set_val(POWERDRIFT_BUTTON, 100);
    set_val(PS4_LY, 100);
    wait(100);
}

combo RIGHT_BACK_SPEEDFLIP {
    set_val(PS4_LY, 100);
    set_val(AIRROLL_BUTTON, 100);
    wait(320);
    set_val(PS4_LY, -100);
    set_val(PS4_LX, -100);
    set_val(AIRROLL_RIGHT_BUTTON, 100);
    set_val(AIRROLL_BUTTON, 100);
    set_val(BOOST_BUTTON, 100);
    wait(300);
    set_val(PS4_LY, -100);
    set_val(AIRROLL_BUTTON, 100);
    set_val(DRIVE_FORWARDS_BUTTON, 100);
    set_val(PS4_LX, -100);
    wait(100);
    set_val(AIRROLL_BUTTON, 100);
    set_val(JUMP_BUTTON, 100);
    set_val(DRIVE_FORWARDS_BUTTON, 100);
    set_val(PS4_LY, 0);
    wait(40);
    set_val(AIRROLL_BUTTON, 100);
    set_val(DRIVE_FORWARDS_BUTTON, 100);
    set_val(PS4_LX, -100);
    wait(50);
    set_val(POWERDRIFT_BUTTON, 100);
    set_val(PS4_LX, -100);
    set_val(AIRROLL_BUTTON, 100);
    wait(100);
}

combo TIMER_BLOCK_DRIFT_CANCLE {
    wait(500);
}

combo TIMER_AUTOBALLCAM_LONG {
    wait(250);
}

combo FAST_FLIPP {	
	set_val(JUMP_BUTTON, 0);
	set_val(DRIVE_FORWARDS_BUTTON, 100);
	set_val(BOOST_BUTTON, 100);
	set_val(PS4_LX, 100);
	wait(80)	
	set_val(JUMP_BUTTON, 0);
	set_val(DRIVE_FORWARDS_BUTTON, 100);
	wait(100)
	set_val(JUMP_BUTTON, 100);
	set_val(PS4_LX, 25);
	set_val(PS4_LY, 100);
	set_val(BOOST_BUTTON, 100);
	set_val(DRIVE_FORWARDS_BUTTON, 100);
	set_val(POWERDRIFT_BUTTON, 100);
	wait(48);
	set_val(JUMP_BUTTON, 0);
    set_val(POWERDRIFT_BUTTON, 100);
    set_val(DRIVE_FORWARDS_BUTTON, 100);
	set_val(DRIVE_FORWARDS_BUTTON, 100);
    set_val(AIRROLL_BUTTON, 100);
    wait(32);
    set_val(POWERDRIFT_BUTTON, 100);
    set_val(JUMP_BUTTON, 100);
    set_val(PS4_LX, -100);
    set_val(PS4_LY, -100);
    set_val(AIRROLL_BUTTON, 100);
    set_val(BOOST_BUTTON, 100);
   	set_val(DRIVE_FORWARDS_BUTTON, 100);
    wait(40);
    set_val(POWERDRIFT_BUTTON, 100);
    set_val(JUMP_BUTTON, 0);
    set_val(PS4_LX, 100);
    set_val(PS4_LY, 80);
    set_val(AIRROLL_BUTTON, 100);
   	set_val(DRIVE_FORWARDS_BUTTON, 100);
    wait(600);
    set_val(PS4_LX, -100);
    set_val(AIRROLL_LEFT_BUTTON, 100);
    set_val(POWERDRIFT_BUTTON, 100);
    set_val(AIRROLL_BUTTON, 100);
   	set_val(DRIVE_FORWARDS_BUTTON, 100);
    wait(200);
    set_val(POWERDRIFT_BUTTON, 100);
    wait(450);	
}

combo F_RIGHT_SPEEDFLIP {
    set_val(PS4_LX, 0);
    set_val(PS4_LY, 0);
    set_val(JUMP_BUTTON, 0);
    set_val(DRIVE_FORWARDS_BUTTON, 100); 
    wait(40);
    set_val(POWERDRIFT_BUTTON, 100);
    set_val(JUMP_BUTTON, 100);
    set_val(PS4_LX, 100);
    set_val(PS4_LY, -80);
    set_val(AIRROLL_BUTTON, 100);
    wait(40);
    set_val(JUMP_BUTTON, 0);
    set_val(PS4_LX, -100);
    set_val(PS4_LY, 80);
    set_val(AIRROLL_BUTTON, 100);
    wait(600);
    set_val(PS4_LX, 100);
    set_val(AIRROLL_RIGHT_BUTTON, 100);
    set_val(AIRROLL_BUTTON, 100);
    wait(200);
    wait(100);
}

combo F_LEFT_SPEEDFLIP {
    set_val(PS4_LX, 0);
    set_val(PS4_LY, 0);
    set_val(JUMP_BUTTON, 0);
    set_val(DRIVE_FORWARDS_BUTTON, 100);
    wait(40);
    set_val(JUMP_BUTTON, 100);
    set_val(PS4_LX, -100);
    set_val(PS4_LY, -80);
    set_val(AIRROLL_BUTTON, 100);
    wait(40);
    set_val(JUMP_BUTTON, 0);
    set_val(PS4_LX, 100);
    set_val(PS4_LY, 80);
    set_val(AIRROLL_BUTTON, 100);
    wait(600);
    set_val(PS4_LX, -100);
    set_val(AIRROLL_BUTTON, 100);
    wait(200);
    wait(100);
}

combo INV_YX {
    set_val(PS4_LX, inv(get_val(PS4_LX)));
    set_val(PS4_LY, 30);
    wait(400);
}

combo BALLCAM {
    set_val(BALLCAM_BUTTON, 100);
}

combo AUTO_CARCAM_SHORT {
    set_val(BALLCAM_BUTTON, 0);
    wait(AUTO_BALL_CAMERA_SHORT);
}

combo AUTO_CARCAM_LONG {
    set_val(BALLCAM_BUTTON, 0);
    wait(AUTO_BALL_CAMERA_LONG);
}

combo STOP_AUTO_CARCAM {
    set_val(BALLCAM_BUTTON, 100);
}

combo DRIFT_AFTER_JUMP {
    set_val(POWERDRIFT_BUTTON, 100);
    wait(DRIFT_AFTER_JUMP_TIME);
}

combo BOOST {
    set_val(BOOST_BUTTON, 100);
}

combo FORWARDS {
    set_val(DRIVE_FORWARDS_BUTTON, 100);
}

combo TIMER_BLOCK_STOP_CAR_MOD {
 	wait(3000);
}

combo SPEEDDRIFT {
	set_val(POWERDRIFT_BUTTON, 50);
	wait(SPEEDDRIFT_POWER);
	wait(100);
	}

combo DRIFT_AFTER_DODGE {
    set_val(POWERDRIFT_BUTTON, 100);
    wait(DRIFT_AFTER_DODGE_TIME);
}

combo RIGHT_ZURN_SHOT {
	set_val(JUMP_BUTTON, 100);
	set_val(PS4_LX, 100);
	set_val(PS4_LY, 0);
	wait(JUMP_HEIGHT);
	set_val(JUMP_BUTTON, 0);
	set_val(PS4_LX, 100);
	set_val(PS4_LY, -30);
	wait(ANGLE_X_TIME);
	set_val(JUMP_BUTTON, 100);
	set_val(PS4_LY, 100);
	set_val(PS4_LX, -100);
	wait(20);
}
combo LEFT_ZURN_SHOT {
	set_val(JUMP_BUTTON, 100);
	set_val(PS4_LX, -100);
	set_val(PS4_LY, 0);
	wait(JUMP_HEIGHT);
	set_val(JUMP_BUTTON, 0);
	set_val(PS4_LX, -100);
	set_val(PS4_LY, -30);
	wait(ANGLE_X_TIME);
	set_val(JUMP_BUTTON, 100);
	set_val(PS4_LY, 100);
	set_val(PS4_LX, 100);
	wait(20);
	}
combo MUSTY_FLICK {
	set_val(JUMP_BUTTON, 100);
	set_val(BOOST_BUTTON, 0);
	set_val(PS4_LY, -100);
	wait(50)
	set_val(AIRROLL_BUTTON, 100);
	set_val(PS4_LY, -100);
	set_val(PS4_LX, 0)
	set_val(AIRROLL_BUTTON, 100);
	set_val(JUMP_BUTTON, 0);
	set_val(BOOST_BUTTON, 0);
	wait(520)
	set_val(JUMP_BUTTON, 100);
	set_val(PS4_LY, 100);
	set_val(PS4_LX, 0);
	set_val(AIRROLL_BUTTON, 100);
	wait(100)
	set_val(JUMP_BUTTON, 100);
	set_val(PS4_LY, 100);
	set_val(PS4_LX, 0);
	set_val(AIRROLL_BUTTON, 100);
	wait(250)
	set_val(AIRROLL_BUTTON, 100);
	set_val(PS4_LY, -100);
	set_val(AIRROLL_LEFT_BUTTON, 100);
	set_val(POWERDRIFT_BUTTON, 100);
	wait(100);
	set_val(PS4_LY, -100);
	wait(1000);
	wait(200);
	}	

combo AUTO_TAKEOFF {
	set_val(PS4_LY, 100);
	set_val(JUMP_BUTTON, 100);
	set_val(BOOST_BUTTON, 100);
	wait(200);
	set_val(PS4_LY, 100);
	set_val(JUMP_BUTTON, 0);
	set_val(BOOST_BUTTON, 100);
	wait(Y_ANGLE_TIME);
	set_val(JUMP_BUTTON, 0);
	set_val(BOOST_BUTTON, 100);
	wait(40);
	set_val(PS4_LY, 0);
	set_val(PS4_LX, 0);
	set_val(JUMP_BUTTON, 100);
	set_val(BOOST_BUTTON, 100);
	wait(50);
	set_val(JUMP_BUTTON, 100);
	set_val(BOOST_BUTTON, 100);
	wait(17);
	set_val(JUMP_BUTTON, 0);
	set_val(BOOST_BUTTON, 100);
	wait(TAKEOFF_HEIGHT);
	
}

combo AUTO_TAKEOFF_BOOST {
	set_val(BOOST_BUTTON, 100);
}

combo AUTO_TAKEOFF_BOOST_TIMER {
	wait(5000);
}	

combo AUTO_TAKEOFF_BLOCK_CANCLE_TIMER {
	wait(200);
}	

combo RIGHT_KICKOFF_SPEEDFLIP {
	set_val(JUMP_BUTTON, 0);
	set_val(PS4_LX, 0);
	set_val(PS4_LY, 0);
	set_val(BOOST_BUTTON, 100);
	set_val(DRIVE_FORWARDS_BUTTON, 100);
	wait(R_STRAIGHT_DRIVE_TIME);
	set_val(JUMP_BUTTON, 0);
	set_val(PS4_LX, 40);
	set_val(PS4_LY, -100);
	set_val(BOOST_BUTTON, 100);
	set_val(DRIVE_FORWARDS_BUTTON, 100);
	wait(R_ANGLE_TIME_KICKOFF);
	set_val(JUMP_BUTTON, 100);
	set_val(PS4_LX, 0);
	set_val(PS4_LY, 100);
	set_val(BOOST_BUTTON, 100);
	set_val(DRIVE_FORWARDS_BUTTON, 100);
	wait(96);
	set_val(JUMP_BUTTON, 0);
    set_val(DRIVE_FORWARDS_BUTTON, 100);
	set_val(BOOST_BUTTON, 100);
    set_val(PS4_LX, 0);
    set_val(PS4_LY, 0);
    wait(32);
    set_val(JUMP_BUTTON, 100);
    set_val(AIRROLL_LEFT_BUTTON, 100);
    set_val(PS4_LY, -100);
    set_val(PS4_LX, 0);
    set_val(BOOST_BUTTON, 100);
   	set_val(DRIVE_FORWARDS_BUTTON, 100);
    wait(32);
    set_val(JUMP_BUTTON, 0);
    set_val(AIRROLL_RIGHT_BUTTON, 100);
    set_val(PS4_LY, 100);
    set_val(PS4_LX, 0);
    set_val(BOOST_BUTTON, 100);
   	set_val(DRIVE_FORWARDS_BUTTON, 100);
    wait(96);
    set_val(JUMP_BUTTON, 0);
    set_val(AIRROLL_LEFT_BUTTON, 100);
    set_val(PS4_LY, 100);
    set_val(PS4_LX, -40);
    set_val(BOOST_BUTTON, 100);
   	set_val(DRIVE_FORWARDS_BUTTON, 100);
   	set_val(POWERDRIFT_BUTTON, 100);
    wait(1104);
}

combo LEFT_KICKOFF_SPEEDFLIP {
	set_val(JUMP_BUTTON, 0);
	set_val(PS4_LX, 0);
	set_val(PS4_LY, 0);
	set_val(BOOST_BUTTON, 100);
	set_val(DRIVE_FORWARDS_BUTTON, 100);
	wait(L_STRAIGHT_DRIVE_TIME);
	set_val(JUMP_BUTTON, 0);
	set_val(PS4_LX, -40);
	set_val(PS4_LY, -100);
	set_val(BOOST_BUTTON, 100);
	set_val(DRIVE_FORWARDS_BUTTON, 100);
	wait(L_ANGLE_TIME_KICKOFF);
	set_val(JUMP_BUTTON, 100);
	set_val(PS4_LX, 0);
	set_val(PS4_LY, 100);
	set_val(BOOST_BUTTON, 100);
	set_val(DRIVE_FORWARDS_BUTTON, 100);
	wait(96);
	set_val(JUMP_BUTTON, 0);
    set_val(DRIVE_FORWARDS_BUTTON, 100);
	set_val(BOOST_BUTTON, 100);
    set_val(PS4_LX, 0);
    set_val(PS4_LY, 0);
    wait(32);
    set_val(JUMP_BUTTON, 100);
    set_val(AIRROLL_RIGHT_BUTTON, 100);
    set_val(PS4_LY, -100);
    set_val(PS4_LX, 0);
    set_val(BOOST_BUTTON, 100);
   	set_val(DRIVE_FORWARDS_BUTTON, 100);
    wait(32);
    set_val(JUMP_BUTTON, 0);
    set_val(AIRROLL_LEFT_BUTTON, 100);
    set_val(PS4_LY, 100);
    set_val(PS4_LX, 0);
    set_val(BOOST_BUTTON, 100);
   	set_val(DRIVE_FORWARDS_BUTTON, 100);
    wait(96);
    set_val(JUMP_BUTTON, 0);
    set_val(AIRROLL_RIGHT_BUTTON, 100);
    set_val(PS4_LY, 100);
    set_val(PS4_LX, 40);
    set_val(BOOST_BUTTON, 100);
   	set_val(DRIVE_FORWARDS_BUTTON, 100);
   	set_val(POWERDRIFT_BUTTON, 100);
    wait(1104);
}


combo WAVE_DASH {
	set_val(JUMP_BUTTON, 100);
	set_val(AIRROLL_BUTTON, 0);
	wait(40);
	set_val(JUMP_BUTTON, 0);
	set_val(PS4_LY, 0);
	set_val(AIRROLL_BUTTON, 0);
	wait(STRAIGHT_FLY_TIME);
	set_val(JUMP_BUTTON, 0);
	set_val(BOOST_BUTTON, 0);
	set_val(PS4_LY, 100);
	set_val(PS4_LX, 0);
	wait(ANGLE_LY_TIME);
	set_val(JUMP_BUTTON, 100);
	set_val(BOOST_BUTTON, 100);
	set_val(PS4_LY, -100);
	set_val(PS4_LX, 0);
	set_val(AIRROLL_BUTTON, 0);
	set_val(DRIVE_FORWARDS_BUTTON, 100);
	wait(50);
	set_val(BOOST_BUTTON, 100);
	set_val(AIRROLL_BUTTON, 0);
	set_val(JUMP_BUTTON, 0);
	set_val(PS4_LY, 100);
	set_val(PS4_LX, 0);
	set_val(DRIVE_FORWARDS_BUTTON, 100);
	wait(50);
	set_val(BOOST_BUTTON, 0);
	set_val(AIRROLL_BUTTON, 0);
	set_val(JUMP_BUTTON, 0);
	set_val(DRIVE_FORWARDS_BUTTON, 100);
	set_val(PS4_LY, -100);
	set_val(PS4_LX, 0);
	wait(50);
	set_val(POWERDRIFT_BUTTON, 100);
	set_val(AIRROLL_BUTTON, 0);
	set_val(JUMP_BUTTON, 0);
	set_val(DRIVE_FORWARDS_BUTTON, 100);
	wait(150);
}

combo RIGHT_WALL_JUMP {
	set_val(JUMP_BUTTON, 100);
	set_val(PS4_LX, 0);
	set_val(PS4_LY, 0);
	wait(40);
	set_val(JUMP_BUTTON, 0);
	set_val(AIRROLL_RIGHT_BUTTON, 0);
	set_val(PS4_LY, 100);
	wait(AIRROLL_TIME);
	set_val(JUMP_BUTTON, 0);
	set_val(AIRROLL_RIGHT_BUTTON, 100);
	wait(ANGLE_ALIGNENT_TIME);
}

combo LEFT_WALL_JUMP {
	set_val(JUMP_BUTTON, 100);
	set_val(PS4_LX, 0);
	set_val(PS4_LY, 0);
	wait(40);
	set_val(JUMP_BUTTON, 0);
	set_val(AIRROLL_RIGHT_BUTTON, 0);
	set_val(PS4_LY, 100);
	wait(AIRROLL_TIME);
	set_val(JUMP_BUTTON, 0);
	set_val(AIRROLL_LEFT_BUTTON, 100);
	wait(ANGLE_ALIGNENT_TIME);
}

combo RIGHT_TORNADOSPIN {
	set_val(AIRROLL_RIGHT_BUTTON, 100);
	set_val(PS4_LX, -100);
	set_val(BOOST_BUTTON, 100);
}

combo BOOST_SAFER {
	set_val(BOOST_BUTTON, 0);
	set_val(DRIVE_FORWARDS_BUTTON, 100);
}

combo BOOST_SAFER_TIMER {
	wait(BOOST_SAFER_TIME_AIR)
}

combo SPEEDDRIFT_AIR_TIMER {
	wait(5000)
}

combo RUMBLE_OFF {
	set_rumble(RUMBLE_B, 50);
	wait(2000);
	reset_rumble();
}

combo RUMBLE_ON {
	set_rumble(RUMBLE_A, 100);
	wait(400);
	reset_rumble();	
}

combo TURN_ON_TIMER {
	wait(250);
}

combo STALL {
	set_val(JUMP_BUTTON, 0);
	wait(10);
 	set_val(PS4_LX, 100);
 	set_val(AIRROLL_LEFT_BUTTON, 100);
 	set_val(JUMP_BUTTON, 100);
 	wait(17)
}


combo RIGHT_SPEEDFLIP {
	set_val(JUMP_BUTTON, 0);
	set_val(PS4_LX, 0);
	set_val(PS4_LY, 0);
	set_val(BOOST_BUTTON, 100);
	set_val(DRIVE_FORWARDS_BUTTON, 100);
	wait(R_STRAIGHT_BOOST_TIME);
	set_val(JUMP_BUTTON, 0);
	set_val(PS4_LX, -40);
	set_val(PS4_LY, -100);
	set_val(BOOST_BUTTON, 100);
	set_val(DRIVE_FORWARDS_BUTTON, 100);
	wait(R_ANGLE_TIME_SPEEDFLIP);
	set_val(JUMP_BUTTON, 100);
	set_val(PS4_LX, 0);
	set_val(PS4_LY, 100);
	set_val(BOOST_BUTTON, 100);
	set_val(DRIVE_FORWARDS_BUTTON, 100);
	wait(96);
	set_val(JUMP_BUTTON, 0);
    set_val(DRIVE_FORWARDS_BUTTON, 100);
	set_val(BOOST_BUTTON, 100);
    set_val(PS4_LX, 0);
    set_val(PS4_LY, 0);
    wait(32);
    set_val(JUMP_BUTTON, 100);
    set_val(AIRROLL_RIGHT_BUTTON, 100);
    set_val(PS4_LY, -100);
    set_val(PS4_LX, 0);
    set_val(BOOST_BUTTON, 100);
   	set_val(DRIVE_FORWARDS_BUTTON, 100);
    wait(32);
    set_val(JUMP_BUTTON, 0);
    set_val(AIRROLL_LEFT_BUTTON, 100);
    set_val(PS4_LY, 100);
    set_val(PS4_LX, 0);
    set_val(BOOST_BUTTON, 100);
   	set_val(DRIVE_FORWARDS_BUTTON, 100);
    wait(96);
    set_val(JUMP_BUTTON, 0);
    set_val(AIRROLL_RIGHT_BUTTON, 100);
    set_val(PS4_LY, 100);
    set_val(PS4_LX, 40);
    set_val(BOOST_BUTTON, 100);
   	set_val(DRIVE_FORWARDS_BUTTON, 100);
   	set_val(POWERDRIFT_BUTTON, 100);
    wait(1104);
}

combo LEFT_SPEEDFLIP {
	set_val(JUMP_BUTTON, 0);
	set_val(PS4_LX, 0);
	set_val(PS4_LY, 0);
	set_val(BOOST_BUTTON, 100);
	set_val(DRIVE_FORWARDS_BUTTON, 100);
	wait(L_STRAIGHT_BOOST_TIME);
	set_val(JUMP_BUTTON, 0);
	set_val(PS4_LX, 40);
	set_val(PS4_LY, -100);
	set_val(BOOST_BUTTON, 100);
	set_val(DRIVE_FORWARDS_BUTTON, 100);
	wait(L_ANGLE_TIME_SPEEDFLIP);
	set_val(JUMP_BUTTON, 100);
	set_val(PS4_LX, 0);
	set_val(PS4_LY, 100);
	set_val(BOOST_BUTTON, 100);
	set_val(DRIVE_FORWARDS_BUTTON, 100);
	wait(96);
	set_val(JUMP_BUTTON, 0);
    set_val(DRIVE_FORWARDS_BUTTON, 100);
	set_val(BOOST_BUTTON, 100);
    set_val(PS4_LX, 0);
    set_val(PS4_LY, 0);
    wait(32);
    set_val(JUMP_BUTTON, 100);
    set_val(AIRROLL_LEFT_BUTTON, 100);
    set_val(PS4_LY, -100);
    set_val(PS4_LX, 0);
    set_val(BOOST_BUTTON, 100);
   	set_val(DRIVE_FORWARDS_BUTTON, 100);
    wait(32);
    set_val(JUMP_BUTTON, 0);
    set_val(AIRROLL_RIGHT_BUTTON, 100);
    set_val(PS4_LY, 100);
    set_val(PS4_LX, 0);
    set_val(BOOST_BUTTON, 100);
   	set_val(DRIVE_FORWARDS_BUTTON, 100);
    wait(96);
    set_val(JUMP_BUTTON, 0);
    set_val(AIRROLL_LEFT_BUTTON, 100);
    set_val(PS4_LY, 100);
    set_val(PS4_LX, -40);
    set_val(BOOST_BUTTON, 100);
   	set_val(DRIVE_FORWARDS_BUTTON, 100);
   	set_val(POWERDRIFT_BUTTON, 100);
    wait(1104);
}
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~//
int Combo,Combo1,Combo2,Combo3,Combo4,Combo5,Combo6,Combo7,Combo8,Combo9,Combo10,Combo11,Combo12,Combo13,Combo14,Combo15;
int Once,Once1,Once2,Once3,Once4,Once5,Once6,Once7,Once8,Once9,Once10,Once11,Once12,Once13,Once14,Once15;

function Combos(Varvar,Var1,BtnOff,BtnGet1,BtnGet2,/**/Var2,VarVal,BtnGet3,BtnGet4,/**/BlkBtn1,BlkBtn2,BlkBtn3,BlkBtn4,BlkBtn5,ComboA,Active){

	if (Active == ComboA) {
	    
	    if (Varvar == Var1 && get_val(BtnGet1) && BtnGet2 == OFF && !get_val(BtnOff) || Varvar == Var1 && get_val(BtnGet1) && get_val(BtnGet2) && !get_val(BtnOff) || Var2 == VarVal && (get_val(BtnGet3) && BtnGet4 == 300 || get_val(BtnGet3) && get_val(BtnGet4))) { 
	    
	    	
	    	if (event_press(BtnGet1) || event_press(BtnGet3)) Once[ComboA] = 1;
	    	
	    		Combo[ComboA] = 1;
	    		set_val(POWER_BUTTON_1, 0);
				set_val(POWER_BUTTON_2, 0);
				set_val(POWER_BUTTON_3, 0);
				set_val(POWER_BUTTON_4, 0);
				set_val(POWER_BUTTON_5, 0);
				set_val(POWER_BUTTON_6, 0);
				set_val(POWER_BUTTON_7, 0);
				set_val(POWER_BUTTON_8, 0);
	    } else if (Varvar == Var1 && !get_val(BtnGet1) && BtnGet2 == OFF && !get_val(BtnOff) || Varvar == Var1 && !get_val(BtnGet1) && !get_val(BtnGet2) && !get_val(BtnOff) || Var2 == VarVal && !get_val(BtnGet3) && !get_val(BtnGet4)) {
	    	
	    	
	    	Combo[ComboA] = 0;
	    }	
	if (event_release(BtnGet1) || event_release(BtnGet3))  Once[ComboA] = 0;
	}
}
function Adjust(Val) {

	if (event_press(XB1_UP)) {
		Val += 1;
		if (Val > 1)Val = 0;
		build = 1;
	}
	if (event_press(XB1_DOWN)) {
		Val -= 1;
		if (Val < 0)Val = 1;
		build = 1;
	}
	return Val;
}
function ValAdjust(Vals,Inc,Min,Max,Men,ValT) {
		
		if(event_press(PS4_LEFT)) {
		ValT = 0;
		Vals = clamp(Vals - 1,Min,Max);
		Men = 1;
	
	}
		if( event_press(PS4_RIGHT)) {
		ValT = 0;
		Vals = clamp(Vals + 1,Min,Max);
		Men = 1;
	
	}
		if(event_press(PS4_LEFT) && get_ival(PS4_R2)) {
		ValT = 0;
		Vals = clamp(Vals - 9,Min,Max);
		Men = 1;
	
	}
		if( event_press(PS4_RIGHT) && get_ival(PS4_R2)) {
		ValT = 0;
		Vals = clamp(Vals + 9,Min,Max);
		Men = 1;
	
	}
	return Vals;
}	
function LED_P_B_1(ADV_BTN,pag_opt) {
	if (p_1){
	if(POWER_B_1 == ADV_BTN && p_1_opt == pag_opt){
	set_ledx(LED_3,3);
}
}
}


function LED_P_B_2(ADV_BTN,pag_opt) {
	if (p_2){
	if(POWER_B_2 == ADV_BTN && p_2_opt == pag_opt){
	set_ledx(LED_3,3);
}
}
}
function LED_P_B_3(ADV_BTN,pag_opt) {
	if (p_3){
	if(POWER_B_3 == ADV_BTN && p_3_opt == pag_opt){
	set_ledx(LED_3,3);
}
}
}
function LED_P_B_4(ADV_BTN,pag_opt) {
	if (p_4){
	if(POWER_B_4 == ADV_BTN && p_4_opt == pag_opt){
	set_ledx(LED_3,3);
}
}
}
function LED_P_B_5(ADV_BTN,pag_opt) {
	if (p_1){
	if(POWER_B_5 == ADV_BTN && p_1_opt == pag_opt){
	set_ledx(LED_4,3);
}
}
}
function LED_P_B_6(ADV_BTN,pag_opt) {
	if (p_2){
	if(POWER_B_6 == ADV_BTN && p_2_opt == pag_opt){
	set_ledx(LED_4,3);
}
}
}
function LED_P_B_7(ADV_BTN,pag_opt) {
	if (p_3){
	if(POWER_B_7 == ADV_BTN && p_3_opt == pag_opt){
	set_ledx(LED_4,3);
}
}
}
function LED_P_B_8(ADV_BTN,pag_opt) {
	if (p_4){
	if(POWER_B_8 == ADV_BTN && p_4_opt == pag_opt){
	set_ledx(LED_4,3);
}
}
}
function P_B_S(P) {

    if(p_1_opt == P){
    if(event_press(PS4_TRIANGLE)){
    POWER_B_1 = P; 
    set_pvar(SPVAR_1,POWER_B_1);
    combo_run(RUMBLE_ON)
} 
} 
    if(p_2_opt == P){
    if(event_press(PS4_TRIANGLE)){
    POWER_B_2 = P; 
    set_pvar(SPVAR_2,POWER_B_2);
    combo_run(RUMBLE_ON);
} 
} 
    if(p_3_opt == P){
    if(event_press(PS4_TRIANGLE)){
    POWER_B_3 = P; 
    set_pvar(SPVAR_3,POWER_B_3);
    combo_run(RUMBLE_ON);
} 
}
    if(p_4_opt == P){
    if(event_press(PS4_TRIANGLE)){
    POWER_B_4 = P 
    set_pvar(SPVAR_4,POWER_B_4);
    combo_run(RUMBLE_ON);
} 
}
}
function P_B_A_S(P) {
	if(menu == p_1){
    if(p_1_opt == P){
    if(event_press(PS4_SQUARE)){
    POWER_B_5 = P;
    set_pvar(SPVAR_33,POWER_B_5);
    combo_run(RUMBLE_ON);  
} 
} 
}
	if(menu == p_2){
    if(p_2_opt == P){
    if(event_press(PS4_SQUARE)){
    POWER_B_6 = P;
    set_pvar(SPVAR_34,POWER_B_6);
  	combo_run(RUMBLE_ON);
} 
}
}
	if(menu == p_3){
    if(p_3_opt == P){
    if(event_press(PS4_SQUARE)){
    POWER_B_7 = P;
    set_pvar(SPVAR_35,POWER_B_7);
    combo_run(RUMBLE_ON);
} 
}
}
	if(menu == p_4){
    if(p_4_opt == P){
    if(event_press(PS4_SQUARE)){
    POWER_B_8 = P;
    set_pvar(SPVAR_36,POWER_B_8);
    combo_run(RUMBLE_ON);

} 
}
}
}
function FINE_ADJUSTEMENTS_MENU	(P_opt,ADJUST_MOD_1,ADJUST_MOD_2,screen_text,post_x){
	if(menu == p_1){
	if  (p_1_opt == P_opt){
	if (event_press(PS4_CROSS)){
	FINE_ADJUST_MENU = TRUE;
	FINE_ADJUST_MOD = ADJUST_MOD_1;
	menu = p_0;
	P_A_S = 1;
}
}
}
	if(menu == p_2){
	if  (p_2_opt == P_opt){
	if (event_press(PS4_CROSS)){
	FINE_ADJUST_MENU = TRUE;
	FINE_ADJUST_MOD = ADJUST_MOD_1;
	menu = p_0;
	P_A_S = 2;
}
}
}
	if(menu == p_3){
	if  (p_3_opt == P_opt){
	if (event_press(PS4_CROSS)){
	FINE_ADJUST_MENU = TRUE;
	FINE_ADJUST_MOD = ADJUST_MOD_1;
	menu = p_0;
	P_A_S = 3;
}
}
}
	if(menu == p_4){
	if  (p_4_opt == P_opt){
	if (event_press(PS4_CROSS)){
	FINE_ADJUST_MENU = TRUE;
	FINE_ADJUST_MOD = ADJUST_MOD_1;
	menu = p_0;
	P_A_S = 4;
}
}
}
	if (FINE_ADJUST_MOD == ADJUST_MOD_1){
	block_all_inputs();
	if (FINE_ADJUST_MENU){
	if (event_press(PS4_UP)){
	FINE_ADJUST_MENU_2 = TRUE;
	FINE_ADJUST_MENU = FALSE;
	FINE_ADJUST_MOD = ADJUST_MOD_2;
	menu = p_0;
}
}
}
	if (FINE_ADJUST_MOD == ADJUST_MOD_2){
	block_all_inputs();
	if (FINE_ADJUST_MENU_2){
	if (event_press(PS4_DOWN)){
	FINE_ADJUST_MENU = TRUE;
	FINE_ADJUST_MENU_2 = FALSE;
	FINE_ADJUST_MOD = ADJUST_MOD_1;
	menu = p_0;
}
}
}
	if(menu == 1 || 2 || 3 || 4){
	if	(FINE_ADJUST_MOD == ADJUST_MOD_1 || ADJUST_MOD_2 ){ 
	if (FINE_ADJUST_MENU || FINE_ADJUST_MENU_2){
	if (event_press(PS4_CIRCLE)){
	cls_oled(1);
	if(P_A_S == 1){
	menu = p_1;
	printf( posx( post_x, fs ), 7, 1, 1, idx_txt[ screen_text ] );
	printf( posx( -8, fs ), 5, 2, 1, idx_txt2[ 1 ] );
	printf( posx( 11, fm ), 37, 1, 0, idx_opt[ P_opt ] );
}
	if(P_A_S == 2){
	menu = p_2;
	printf( posx( post_x, fs ), 7, 1, 1, idx_txt[ screen_text ] );
	printf( posx( -8, fs ), 5, 2, 1, idx_txt2[ 2 ] );
	printf( posx( 11, fm ), 37, 1, 0, idx_opt[ P_opt ] );
}
	if(P_A_S == 3){
	menu = p_3;
	printf( posx( post_x, fs ), 7, 1, 1, idx_txt[ screen_text ] );
	printf( posx( -8, fs ), 5, 2, 1, idx_txt2[ 3 ] );
	printf( posx( 11, fm ), 37, 1, 0, idx_opt[ P_opt ] );
}
	if(P_A_S == 4){
	menu = p_4;
	printf( posx( post_x, fs ), 7, 1, 1, idx_txt[ screen_text ] );
	printf( posx( -8, fs ), 5, 2, 1, idx_txt2[ 4 ] );
	printf( posx( 11, fm ), 37, 1, 0, idx_opt[ P_opt ] );
}
	build = 1; 
	TURN_SCRIPT_ON_OFF = FALSE;
	FINE_ADJUST_MENU = 0;
	FINE_ADJUST_MENU_2 = 0;
	FINE_ADJUST_MOD = 0;
	P_A_S = 0;
}
}
}
}
}
function FINE_ADJUSTEMENTS_MENU_A_2	(PAGE,P_opt,ADJUST_MOD_1,ADJUST_MOD_2,screen_text,screen_mod_opt,post_x){
	if(menu == PAGE){
	if  (P_opt == P_opt){
	if (event_press(PS4_CROSS)){
	P_A_S = screen_text;
	FINE_ADJUST_MENU = TRUE;
	FINE_ADJUST_MOD = ADJUST_MOD_1;
	menu = p_0;
}
}
}

	if (FINE_ADJUST_MOD == ADJUST_MOD_1){
	block_all_inputs();
	if (FINE_ADJUST_MENU){
	if (event_press(PS4_UP)){
	FINE_ADJUST_MENU_2 = TRUE;
	FINE_ADJUST_MENU = FALSE;
	FINE_ADJUST_MOD = ADJUST_MOD_2;
	menu = p_0;
}
}
}
	if (FINE_ADJUST_MOD == ADJUST_MOD_2){
	block_all_inputs();
	if (FINE_ADJUST_MENU_2){
	if (event_press(PS4_DOWN)){
	FINE_ADJUST_MENU = TRUE;
	FINE_ADJUST_MENU_2 = FALSE;
	FINE_ADJUST_MOD = ADJUST_MOD_1;
	menu = p_0;
}
}
}

	if	(FINE_ADJUST_MOD == ADJUST_MOD_1 || ADJUST_MOD_2 ){ 
	if (FINE_ADJUST_MENU || FINE_ADJUST_MENU_2){
	block_all_inputs();
	if(P_A_S == screen_text){
	if (event_press(PS4_CIRCLE)){
	cls_oled(1);
	menu = PAGE;
	build = 1;
	printf( posx( post_x, fs ), 7, 1, 1, idx_txt[ screen_text ] );
	printf( posx( 11, fm ), 37, 1, 0, idx_opt2[ screen_mod_opt ] ); 
	TURN_SCRIPT_ON_OFF = FALSE;
	FINE_ADJUST_MENU = 0;
	FINE_ADJUST_MENU_2 = 0;
	FINE_ADJUST_MOD = 0;
	P_A_S = 0;
}
}
}
}
}

function FINE_ADJUSTEMENTS_MENU_A	(MOD,p_opt,ADJUST_MOD,screen_text,screen_opt,post_x){
	if(menu == MOD){
	if  (p_opt = p_opt){
	if (event_press(PS4_CROSS)){
	FINE_ADJUST_MENU_A = TRUE;
	FINE_ADJUST_MOD = ADJUST_MOD;
	menu = p_0;
}
}
}
	if	(FINE_ADJUST_MOD == ADJUST_MOD){ 
	if (FINE_ADJUST_MENU_A){
	block_all_inputs();
	if (event_press(PS4_CIRCLE)){
	cls_oled(1);
	menu = MOD;
	build = 1;
	printf( posx( post_x, fs ), 7, 1, 1, idx_txt[ screen_text ] ); 
	printf( posx( 9, fm ), 37, 1, 0, idx_opt2[ screen_opt ] );
	TURN_SCRIPT_ON_OFF = FALSE;
	FINE_ADJUST_MENU = 0;
	FINE_ADJUST_MENU_A = 0;
	FINE_ADJUST_MENU_2 = 0;
	FINE_ADJUST_MOD = 0;
}
}
}
} 

	function center_x(f_chars,f_font) {
	return (OLED_WIDTH / 2) - ((f_chars * f_font) / 2);
} 
function find_digits(f_num) {
    f_num = abs(f_num);
    if(f_num / 10000 > 0) return 5;
    if(f_num /  1000 > 0) return 4;
    if(f_num /   100 > 0) return 3;
    if(f_num /    10 > 0) return 2;
                          return 1;
}
// Constant bytes - Convert numbers array - ASCII_NUM[column number]
    const uint8 ASCII_NUM[] = 
//      0  1  2  3  4  5  6  7  8  9  (column numbers)
      {48,49,50,51,52,53,54,55,56,57};
// Variables for function number_to_string()\\ 
    int i;
    int c,c_val;
function number_to_string(value,f_digits){
	i = 1;  
	c_val = 10000;
    if(value < 0){          
    putc_oled(i,45);    
    i += 1;
    value = abs(value);
} 
    for(c = 5; c >= 1; c--){
    if(f_digits >= c){
    putc_oled(i,ASCII_NUM[value / c_val]);
    value = value % c_val;
    i +=  1; 
    if(c == 4){
    putc_oled(i,44);   
    i += 1;
}
}
   	c_val /= 10;
}   
    puts_oled(center_x(i - 1,OLED_FONT_LARGE_WIDTH),39,OLED_FONT_LARGE,i - 1,OLED_WHITE); 
}  

function draw_picture(x, y, invert) {  
    logoOffset = 2;                                    
    logoBit = 16;                                           
    for (logoY = 0; logoY < BOOT_LOGO[1]; logoY++) {         // Loop the Y axis 
        for (logoX = 0; logoX < BOOT_LOGO[0]; logoX++) {     // Loop the X axis 
            logoData = BOOT_LOGO[logoOffset]          
            logoX2 = x + logoX;                       
            logoY2 = y + logoY;                       
            if (logoX2 < 0 || logoX2 >= 128) {        
                logoX2 -= 128;                        
            }                                         
            if (logoY2 < 0 || logoY2 >= 64) {         
                logoY2 -= 64;                         
            }                                         
            if (test_bit(logoData, logoBit - 1)) {     
                pixel_oled(logoX2, logoY2, !invert);   
            }else{                                     
                pixel_oled(logoX2, logoY2, invert);    
            }                                            
            logoBit--;             // Decrement the bit flag, we are moving to the next bit 
            if (!logoBit) {     // Check if we have just handled the last bit  
                logoBit = 16;     // Reset the bit flag     
                logoOffset++;     // Move to the next value 
            }  
        }   
    }
	printf( posx( 7, fs ), 49, 0, 1, idx_txt[ 15 ] );
}


function posx( chars, font ) {
	return( OLED_WIDTH / 2 ) - ( ( chars * font ) / 2 ); 
}

function P_B_N_1 (P_opt,pos_x ) {
		if( p_1_opt == P_opt){
	printf( posx( pos_x, fm ), 37, 1, 0, idx_opt[ P_opt ] );  
}
}
function P_B_N_2 (P_opt,pos_x ) {
		if( p_2_opt == P_opt){
	printf( posx( pos_x, fm ), 37, 1, 0, idx_opt[ P_opt ] );  
}
}
function P_B_N_3 (P_opt,pos_x ) {
		if( p_3_opt == P_opt){
	printf( posx( pos_x, fm ), 37, 1, 0, idx_opt[ P_opt ] ); 
}
}
function P_B_N_4 (P_opt,pos_x ) {
		if( p_4_opt == P_opt){
	printf( posx( pos_x, fm ), 37, 1, 0, idx_opt[ P_opt ] ); 
}
}