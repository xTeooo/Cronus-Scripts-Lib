/*

 ──▄▀▀▀▄▄▄▄▄▄▄▀▀▀▄───
───█▒▒░░░░░░░░░▒▒█───
────█░░█░░░░░█░░█────
─▄▄──█░░░▀█▀░░░█──▄▄─
█░░█─▀▄░░░░░░░▄▀─█░░█
█▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀█
█░░╦─╦╔╗╦─╔╗╔╗╔╦╗╔╗░░█
█░░║║║╠─║─║─║║║║║╠─░░█
█░░╚╩╝╚╝╚╝╚╝╚╝╩─╩╚╝░░█
█▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄█
____________________________InstalKill _V2.2____ Fortnite Update 7.40 Working ____________________________________________


///   |------*/ int In_Game_Sens   = 5;     /*#######|------------------- SENSITIVITY OPTIMIZING! -------------------|                                                                                      ///

///  SETUP                                                                                 ///
///--------------------------------------------------------------------------------------------------------------------
///   /////CONTROLS/////				/////BEST SCRIPT /////											   ///                                            
///===================================================================================== 
///  
///=========================================================================================
///AIM ABUSE ADS + LEFT 
///============================================================================================
///DROPSHOT: ADS + RELOAD_BTN, the player lowers and rises quickly as he shoots                                                 ///                                                                                                                              
///============================================================================================
///ANTI RECOIL: always on                      
///============================================================================================
///RAPID FIRE: ADS + RIGHT                           
///============================================================================================
///HAIR TRIGGER: always On, This also allows super fast building.                                                              ///                                    
///============================================================================================
///PerfectAccuracy LT+RB
///============================================================================================
///Head Aimbot  ---> ALWAYS ON   
///============================================================================================
/// AimAssist Always ON
///============================================================================================
/// Sniper aim Improved
///============================================================================================
/// Aint Aim LT PLUS RIGHT STICK NEW 
///============================================================================================
/// 
///============================================================================================
///_______________________________________________________________________________________ ///_
*/
                                                                                    
//Rapid Fire (IMPROVED)
int RapidFire      = FALSE; 
 
//AntiAim
int AntiAim        = TRUE;
int Defense			= FALSE;
int Offense			= TRUE;

//Aim Abuse
int AimAbuse = FALSE;
int AimAbuse_HOLD = 280; //Try changing this value to lock on better the enemies
int AimAbuse_RELEASE = 22; //Try changing this value to lock on better the enemies

 
//Aim Assist
int OpAimAssist = FALSE;
int aav  = 22;// AIM ASSIST VALUES ( This will Shake your screen, turn it off if you dont want shake)
int AAV_delay  = 4;
//AIM ASSIST KILLZONE
int value  = 28;
int value2 =-28;
int delay  = 19;

//GHOST PEEK HOLD L2(LT) 
int Ghost_Peek = FALSE; // HOLD "LT" and Press "LB" for  ON_OFF
 

/////100% Accuracy//////////////////////////////////////////////////////////
int PerfectAccuracy  = TRUE; 
                                                                                                                    
//Drop Shot
int Drop_Shot = FALSE; // HOLD "ADS_BTN" and TAP "JUMP_BTN" for toggle ON_OFF
 
 //BUTTONS:
 
 
//RAPID FIRE BUTTON
int RAPID = 16; //RIGHT
 
 //GHOST PEEK BUTTON
define DROP = 6; //PS4_L1 XB1_LB

                                             ////
int Notify = TRUE     

////LED/////////////////////////////////////////////////////////////////////
int a; int b;
 
//----------------------------------------
// BUTTON LAYOUT: BUILDER PRO
 define FIRE_BTN = 4; //XB1_RT //PS4_R2
 define ADS_BTN = 7; //XB1_LT //PS4_L2
 define CROUCH_BTN = 5; //XB1_RS //PS4_R3
 define SPRINT_BTN = 8; //XB1_LS //PS4_L3
 define JUMP_BTN = 19; //XB1_A  //PS4_CROSS
 define NEXT_PIECE = 3; //XB1_RT //PS4_R1
 define LEFT_BUMP = 6; //XB1_LB //PS4_L1
 define RIGHT_BUMP = 3; // XB1_RB //PS4_R1
 define SWAP_BTN = 17; //XB1_Y  //PS4_TRIANGLE
 define BUILD_BTN = 18; //XB1_B  //PS4_CIRCLE
 define WALL_BTN = 4; //XB1_RB //PS4_R2
 define STAIRS_BTN = 7; //XB1_LB //PS4_L2
 define FLOOR_BTN = 3; //XB1_RT //PS4_R1
 define ROOF_BTN = 6; //XB1_LT //PS4_L1
 define RELOAD_BTN = 20; //XB1_X //PS4_SQAURE
 define R_X = 9; //XB1_RX //PS4_RX
 define R_Y = 10; //XB1_RY //PS4_RY
 define L_X = 11; //XB1_LX //PS4_LX
 define L_Y = 12; //XB1_LY //PS4_LY
 define UP = 13; //XB1_UP //PS4_UP
 define DOWN = 14; //XB1_DOWN //PS4_DOWN
 define LEFT = 15; //XB1_LEFT //PS4_LEFT
 define RIGHT = 16; //XB1_RIGHT //PS4_RIGHT
 define MENU		= XB1_MENU;








 //-------------------------------------------------------------------------------------------
 //COLOR IDENTIFICATION              
 define Blue = 1;
 define Red = 2;
 define Green = 3;
 define Pink = 4;
 define SkyBlue = 5;
 define Yellow = 6;
 define White = 7;
 data(1,
     2, 0, 0, 0, //1. Blue                                 
     0, 2, 0, 0, //2. Red                                  
     0, 0, 2, 0, //3. Green                                
     0, 0, 0, 2, //4. Pink                                 
     2, 0, 2, 0, //5. SkyBlue                              
     0, 2, 2, 0, //6. Yellow                               
     2, 2, 2, 2 //7. White 
 );
 int Col_ind;
 //END








 //Build Speed
 define build_speed = 50;
 define speed = 50;
 //END







 //-----------------------------------------------------
 // VARIABLES









 //ANTI RECOIL SETTINGS
 int ANTI_RECOIL; // For AntiRecoil combo
 int anti_recoil; // For AntiRecoil combo
 define AR_Release = 30;
 define ONLY_WITH_SCOPE = TRUE; // if TRUE Antirecoil IS ON only when scoping - if FALSE, is always ON
 //END








 //RUMBLE
 int rumble_type = RUMBLE_A;
 //END








 //JItter
 int tap; //ADVANCED JITTER
 int R2_block; //ADVANCED JITTER
 //END








 //AIM ASSIST HOLD & WAIT
 int aimabuse_hold;
 int aimabuse_rest;
 //END









 main { //--------------------------------- 
     /////////////////////////////////////////////////////////////////////////////////
     // ON-OFF SETTINGS:
  if (get_val(ADS_BTN)) {
         if (event_press(DROP)) {
             Ghost_Peek = !Ghost_Peek;
             RapidFire = FALSE;
             Drop_Shot = FALSE;
             rumble_A_if_true(Ghost_Peek);
         }
  
         if (event_press(RIGHT)) {
             RapidFire = !RapidFire;
             Ghost_Peek = FALSE;
             rumble_A_if_true(RapidFire);
         }
         if (event_press(RELOAD_BTN)) {
             Drop_Shot = !Drop_Shot;
             Ghost_Peek = FALSE;
             rumble_A_if_true(Drop_Shot);
         }
         
         set_val(DROP, 0);
         set_val(DOWN, 0);
         set_val(RIGHT, 0);
         set_val(SWAP_BTN, 0);
         set_val(JUMP_BTN, 0);
    }
    
    //100% ACCURACY
if (get_val(ADS_BTN) && get_val(RIGHT_BUMP)) {
  combo_run(PerfectAccuracy);
  combo_run(Notify);a=0;b=2;
set_val(RIGHT_BUMP, 0);
      } else {
  combo_stop(PerfectAccuracy);
}
     // HOLD L2(LT) and PRESS LEFT
     if (get_val(ADS_BTN) && event_press(LEFT)) {
         AimAbuse = !AimAbuse;
         rumble_A_if_true(AimAbuse);
     }
     // HOLD L2(LT) and PRESS UP
     if (get_val(ADS_BTN)) {
         if (event_press(UP)) {
             OpAimAssist = !OpAimAssist;
             rumble_A_if_true(OpAimAssist);
         }
         set_val(UP, 0);
     }
     /////////////////////////////////////////////////////////////////////////////////
     //  Color Identification
     if (RapidFire &&!Ghost_Peek ) colourled(Red); //EVERYTHING IS OFF
     if (Drop_Shot) colourled(White);
     if ((Ghost_Peek)) colourled(Yellow); //IF YELLOW Ghost Peeking IS ON


     /////////////////////////////////////////////////////////////////////////////////
     //Rapid Fire
     if (RapidFire) {
         if (get_val(ADS_BTN) && get_val(FIRE_BTN)) { // HOLD L2 AND R2 FOR RAPID (DONE LIKE THIS TO BE ABLE TO EDIT OBJECTS)
             combo_run(RAPID_FIRE);
             ANTI_RECOIL = 11;
         }
     }
     /////////////////////////////////////////////////////////////////////////////////
     // ANTI RECOIL
     if (get_val(ADS_BTN) && get_val(FIRE_BTN)) {
         ANTI_RECOIL = 8;
         combo_run(AntiRecoil);
     }
 
     /////////////////////////////////////////////////////////////////////////////////
     //SNEAK PEAK
     if (Ghost_Peek) {
         if (get_val(ADS_BTN)) {
             if (event_press(FIRE_BTN)) {
                 combo_run(AUTO_SNEAK_PEAK);
             }
             set_val(FIRE_BTN, 0);
         }
     }
     
     /////////////////////////////////////////////////////////////////////////////////
     //DROP SHOT
     if (Drop_Shot) {
         if (get_val(ADS_BTN) && get_val(FIRE_BTN)) {
             combo_run(DROP_SHOT);
         }
     }
     /////////////////////////////////////////////////////////////////////////////////
     //HAIR TRIGGER
     if (get_val(FIRE_BTN)) { // IF YOU PRESS AT LEAST 1% OF FIRE BTN IT'LL HAVE AN OUTPUT OF 100
         set_val(FIRE_BTN, 100);
     }
     ///////////////////////////////////////////////////////////////////////////////// 
 //AIM ASSIST

 //AIMASSIST
 if (OpAimAssist) {
 if (get_val(ADS_BTN)) {
 combo_run(OpAimAssist);}}
 if (get_val(R_X)<value2||get_val(R_X)>value||get_val(R_Y)<value2||get_val(R_Y)>value||get_val(R_X)<value2||get_val(R_X)>value||get_val(R_Y)<value2||get_val(R_Y)>value){
         combo_stop(OpAimAssist);}

if(AimAbuse){
   if(get_val(ADS_BTN)> 95){
      combo_run(AimAbuse);}
   if(event_release(ADS_BTN)){ combo_stop(AimAbuse);}
	  }
	



//AntiAim
   if(get_val(ADS_BTN) && event_press(CROUCH_BTN)){
   AntiAim =! AntiAim;
   if(AntiAim == TRUE){combo_run(Notify);a=0;b=2;}
   if(AntiAim == FALSE){combo_run(Notify);a=2;b=0;} 
   }
   if(AntiAim){
      if(Defense){if(get_val(FIRE_BTN)==0&&get_rumble(RUMBLE_A)||get_rumble(RUMBLE_B)){combo_run(AntiAim);}}
      if(Offense){if(get_val(ADS_BTN)&&get_val(FIRE_BTN)){combo_run(AntiAim);}}
      }
   }










 // COMBO BLOCKS 
combo AA_XY {
	set_val(15,xy_val(15,aa__shake 30));
	wait(aa_delay);
	set_val(20,xy_val(9, aa__shake 30));
	set_val(20,xy_val(14,aa__shake 30));
	wait(aa_delay);
	set_val(20,xy_val(23,aa__shake 30 * -1));
	wait(aa_delay);
	set_val(9,xy_val(8,aa__shake  30 * -1));
	set_val(11,xy_val(14,aa__shake 30 * -1));
	wait(aa_delay);
}

combo OpAimAssist  {
set_val(R_Y, (aav)); wait(delay)
set_val(R_X, (aav)); wait(delay)
set_val(R_Y, aav * -1); wait(delay)
set_val(R_X, aav * -1); wait(delay)}


combo AUTO_SNEAK_PEAK {
     set_val(CROUCH_BTN, 100);
     wait(15);
     wait(15);
     set_val(FIRE_BTN, 100);
     wait(15);
     wait(10); //INCREASE THIS IF YOU SHOOT THE STAIRS
     set_val(CROUCH_BTN, 100);
     wait(15);
     wait(95);
 } // END


combo AntiAim{
set_val(CROUCH_BTN,100);
wait(25);
wait(25);
set_val(CROUCH_BTN,100);
}


 
combo AimAbuse {
set_val(ADS_BTN, 100);
wait(AimAbuse_HOLD);
set_val(ADS_BTN, 0);
wait(AimAbuse_RELEASE);
} 


 combo RAPID_FIRE {
     set_val(FIRE_BTN, 100);
     wait(10);
     set_val(FIRE_BTN, 0);
     wait(10);
 } //end
 
 combo Notify {
if(Notify){set_rumble(RUMBLE_B,65);}
set_led(LED_1, 0);
set_led(LED_2, a);
set_led(LED_3, b);
set_led(LED_4, 0);
wait(550);
set_led(LED_1, 0);
set_led(LED_2, 0);
set_led(LED_3, 0);
set_led(LED_4, 0);
wait(250);
set_led(LED_1, 0);
set_led(LED_2, a);
set_led(LED_3, b);
set_led(LED_4, 0);
wait(250);
set_led(LED_1, 0);
set_led(LED_2, 0);
set_led(LED_3, 0);
set_led(LED_4, 0);
wait(250);
set_led(LED_1, 0);
set_led(LED_2, a);
set_led(LED_3, b);
set_led(LED_4, 0);
wait(250);
reset_leds();
}


 combo DROP_SHOT {
     set_val(CROUCH_BTN, 140);
     wait(50);
     wait(50); // how long to wait until next drop 
 }
 
 combo PerfectAccuracy {
set_val(FIRE_BTN,100);
wait(100);
wait(250);
set_val(FIRE_BTN,100);
}

 combo VIBRATE {
     set_rumble(rumble_type, 100);
     wait(300);
     reset_rumble();
 } //end

 combo RumbleOnce {
    set_rumble(RUMBLE_A, 100);
    wait(250);
    reset_rumble();}
    
    combo RumbleTwice {
    set_rumble(RUMBLE_A, 100);
    wait(250);
    set_rumble(RUMBLE_A, 0);
    wait(250);
    set_rumble(RUMBLE_A, 100);
    wait(250);
    reset_rumble();}
 
 combo AntiRecoil {
     anti_recoil = get_val(R_Y) + ANTI_RECOIL;
     if (anti_recoil > 100) anti_recoil = 100;
     set_val(R_Y, anti_recoil);
 }


 function rumble_A_if_true(var) {
     if (var) rumble_type = RUMBLE_A;
     else rumble_type = RUMBLE_B;
     combo_run(VIBRATE);
 }
 // COLOR LED function                                
 //--------------------------------------------------------------
 function colourled(Colour) {
     Col_ind = (Colour * 4) - 3;
     set_led(LED_1, dbyte(Col_ind));
     set_led(LED_2, dbyte(Col_ind + 1));
     set_led(LED_3, dbyte(Col_ind + 2));
     set_led(LED_4, dbyte(Col_ind + 3));
 }
 
 ///---DEV---//
//-SayNoBro-//
//-Lxuieee-//
///---Testers---//
// Thanks For The Testers That Tested For This  So Thankful :) //