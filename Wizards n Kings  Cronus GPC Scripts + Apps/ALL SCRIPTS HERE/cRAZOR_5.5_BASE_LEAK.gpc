
/*
  ____________________________RAZOR SCRIPT BASE V 5.5 Leak By: AUXZIFY'SDADDY#2081 __________
///                                                                                        ///
///                                                                                        ///
/// AIM ASSIST: always on  																   ///                                            
///  AUTO RUN: alway on but for disable L2+UP       									   ///
/// 100% ACCURACY: L2/LT +RB/R1                                                            ///
///  AIM ABUSE: hold L2/LT                                                      		   ///                                                                                                                              
///  GHOST PEEK: L2/LT + LB/L1, allows you to shoot behind the guards   				   ///                   
/// DROPSHOT: L2/LT + SQAURE, the player lowers and rises quickly as he shoots             ///                      
///  ANTI RECOIL: always on                                                                ///                                    
///  RAPID FIRE: L2/LT + RIGHT                                                             ///
/// HAIR TRIGGER: always On, fast build  				                                   ///                  
/// JITTER: L2 + DOWN (Enable)  						                                   ///                                                                               
/// 																					   ///
/// 																	   				   ///
///_______________________________________________________________________________________ ///


*/
                                                                                                                                        
int Razor6 = TRUE;                                                   
int Razor7  = 21;                                   
int Razor10 =-19;                                    
int Razor13 =190;
int Razor62=7;
int Razor4      = 28;
int Razor3      = 20; 
int Razor14 = 19;                                                                       
int Razor9  = 19;
int Razor58    = 19;      
int Razor59        = 25;        
int Razor60    = -25;        
int Razor61    = -9;
int Razor5           = 12;                                                         
int Razor11  =19;                                                       
int Razor8 = -21;                                                                        
int Razor15  = TRUE; 
int Razor1     = FALSE;                                             
int Razor2 
int Razor12 = TRUE;                                                 
int Razor35 = FALSE;
int Razor39      = FALSE;  
int Razor36=FALSE;                                              
int Razor37=TRUE                                                    
int Razor45 = TRUE                              
int Razor38    = TRUE;                           
int Razor43 = TRUE;                          
int Razor44 = RUMBLE_A;                                                                       
int Razor42 
int Razor40 = 6;											
int Razor41;
int Razor46 = FALSE;
int Razor57 = TRUE;    
int a; int b;	                                          
define Razor16 = 4; 
define Razor17 = 7; 
define Razor18 = 5; 
define Razor19 = 20; 
define Razor20 = 8; 
define Razor21 = 19; 
define Razor22 = 3; 
define Razor23 = 3; 
define Razor24 = 6;
define Razor25 = 17; 
define Razor26 = 18; 
define Razor27 = 9;
define Razor28 = 10; 
define Razor29 = 11; 
define Razor30 = 12; 
define Razor31 = 13; 
define Razor32 = 14; 
define Razor33 = 15; 
define Razor34 = 16;                                                                                                                                            
                                          

 main {
 
if(Razor38){ 
   if(get_val(Razor16))
   set_val(Razor16, 100);
   }
if (Razor6) {
   if (get_val(Razor17)) {
   combo_run(Razor6);}}
   if (get_val(Razor27)<Razor10||get_val(Razor27)>Razor9||get_val(Razor28)<Razor10||get_val(Razor28)>Razor9||get_val(Razor27)<Razor10||get_val(Razor27)>Razor9||get_val(Razor28)<Razor10||get_val(Razor28)>Razor9){
         combo_stop(Razor6);}         

   if(get_val(Razor17) && event_press(Razor34)){
   Razor39 =! Razor39;
   if(Razor39 == TRUE){combo_run(Razor45);a=0;b=2;}
   if(Razor39 == FALSE){combo_run(Razor45);a=2;b=0;} 
   }
   if(Razor39){
     if(get_val(Razor16)){
        combo_run(Razor39);                                          
       } 
     } 
if (get_val(Razor17) && get_val(Razor23)) {
  combo_run(Razor15);
  combo_run(Razor45);a=4;b=2;
set_val(Razor23, 0);
      } else {
  combo_stop(Razor15);
}
if(Razor1){
  if(get_val(Razor16)){combo_run(Razor1);}
  if(get_rumble(RUMBLE_A) <= 50){Razor2 = Razor3;}
  if(get_rumble(RUMBLE_A) > 50){Razor2 = Razor4;}
  if(abs(get_val(Razor28)) >= Razor2+ 10){combo_stop(Razor1);}}     
if(get_val(Razor17) && event_press(Razor33)){
   Razor12 =! Razor12; 
   if(Razor12 == TRUE){combo_run(Razor45);a=0;b=2;} 
   if(Razor12 == FALSE){combo_run(Razor45);a=2;b=0;}
    rumble_A_if_true(Razor12);
}
if(Razor12){
   if(get_val(Razor17)> 95){
      combo_run(Razor12);}
   if(event_release(Razor17)){ combo_stop(Razor12);
}
if (get_val(Razor17)) {
         if (event_press(Razor24)) {
                combo_run( GhostPeek);
                combo_run(Razor45);a=0;b=2;
       }
         set_val(Razor24, 0);
         }

if (get_val(Razor17) && event_press(Razor32)) {
        Razor46 = !Razor46;
    }
    
    if (event_press(Razor22) || event_press(Razor24) || event_press(Razor17)) {
        Razor46 = FALSE;
    }
 
if (Razor46) {
        if(get_val(Razor16)){
            set_val(Razor16, 0);
            combo_run(Razor46);
        } else {
            combo_stop(Razor46);
        }
       }    
       

if(Razor43){if(get_val(Razor30) <= -20){set_val(Razor20, 100);}



    
if(get_val(Razor17) && event_press(Razor19)){
   Razor35 =! Razor35;
   if(Razor35 == TRUE){combo_run(Razor45);a=0;b=2;}
   if(Razor35 == FALSE){combo_run(Razor45);a=2;b=0;} 
   }
   if(Razor35){
      if(Razor36){if(get_val(Razor16)==0&&get_rumble(RUMBLE_A)||get_rumble(RUMBLE_B)){combo_run(Razor35);}}
      if(Razor37){if(get_val(Razor17)&&get_val(Razor16)){combo_run(Razor35);}}
      }
   }}
}


//LEDs.
// If the LED3 flashes Green, you have enabled a modification.
// If the LED4 flashes Red, you have disabled a modification.
// If the LED5 flashes Yellow, you are using an un-togglable modification.

combo Razor45 {
if(Razor45){set_rumble(RUMBLE_B,65);}
set_led(LED_1, 0);
set_led(LED_2, a);
set_led(LED_3, b);
set_led(LED_4, 0);
wait(550);
set_led(LED_1, 0);
set_led(LED_2, 0);
set_led(LED_3, 0);
set_led(LED_4, 0);
wait(250);
set_led(LED_1, 0);
set_led(LED_2, a);
set_led(LED_3, b);
set_led(LED_4, 0);
wait(250);
set_led(LED_1, 0);
set_led(LED_2, 0);
set_led(LED_3, 0);
set_led(LED_4, 0);
wait(250);
set_led(LED_1, 0);
set_led(LED_2, a);
set_led(LED_3, b);
set_led(LED_4, 0);
wait(250);
reset_leds();
}

combo Razor35{
set_val(Razor18,100);
wait(40);
wait(200);
set_val(Razor18,100);
}

combo Razor6 {
set_val(Razor28, (Razor7));
wait(Razor11)
set_val(Razor27, (Razor7));
wait(Razor11)
set_val(Razor28, (Razor8));
wait(Razor11)
set_val(Razor27, (Razor8));
wait(Razor11)
set_val(Razor28, (Razor7));
wait(Razor11)
set_val(Razor27, (Razor7));
wait(Razor11)
set_val(Razor28, (Razor8));
wait(Razor11)
set_val(Razor27, (Razor8));
wait(Razor11)

}
combo Razor15 {
set_val(Razor16,100);
wait(100);
wait(250);
set_val(Razor16,100);
}

combo Razor12 {
set_val(Razor17, 100);
wait(Razor13);
set_val(Razor17, 0);
wait(Razor14);
}


	
combo Razor39 {
      set_val(Razor16, 100); 
      wait(Razor41);
      set_val(Razor16, 0); 
}

combo Razor46 {                    
    set_val(Razor16,  100);     
    wait(200);     
    set_val(Razor23,100);     
    wait(320);     
    set_val(Razor16,100);    
    wait(200);
    set_val(Razor24,100)
    wait(320)
}

combo GhostPeek {
set_val(Razor18, 100);
wait(15);
set_val(Razor18, 0);
wait(15);
set_val(Razor16, 100);
wait(15);
set_val(Razor16, 0);
wait(50);
set_val(Razor18, 100);
wait(15);
set_val(Razor18, 0);
}


combo Vibrate {
set_rumble(Razor44, 100);
wait(300);
reset_rumble();
}

combo Razor1 {
set_val(Razor28, Razor2);
wait(Razor5);
set_val(Razor28, Razor2);
wait(Razor5);
}

function rumble_A_if_true(var) {
if (var) Razor44 = RUMBLE_A;
else Razor44 = RUMBLE_B;
combo_run(Vibrate);
}


            