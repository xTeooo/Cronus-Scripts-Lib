/*

 ──▄▀▀▀▄▄▄▄▄▄▄▀▀▀▄───
───█▒▒░░░░░░░░░▒▒█───                                         Join --->            Discord https://discord.gg/WurEh9Z
────█░░█░░░░░█░░█────
─▄▄──█░░░▀█▀░░░█──▄▄─
█░░█─▀▄░░░░░░░▄▀─█░░█
█▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀█
█░░╦─╦╔╗╦─╔╗╔╗╔╦╗╔╗░░█
█░░║║║╠─║─║─║║║║║╠─░░█
█░░╚╩╝╚╝╚╝╚╝╚╝╩─╩╚╝░░█
█▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄█
____________________________InstalKill _V3____ Fortnite Update 7.40 Working ____________________________________________


///   |------*/ int In_Game_Sens   = 5;     /*#######|------------------- SENSITIVITY OPTIMIZING! -------------------|                                                                                      ///

///  SETUP                                                                                 ///
///--------------------------------------------------------------------------------------------------------------------
///   /////CONTROLS/////				/////BEST SCRIPT /////											   ///                                            
///===================================================================================== 
///Insta Edit / Insta Reset              ///
///=========================================================================================
///AIM ABUSE: L2+Y/TRIANGLE
///============================================================================================
///OP AIM ASSIST: RB+LB                                               ///                                                                                                                              
///============================================================================================
///ANTI RECOIL: always on                      
///============================================================================================
///RAPID FIRE: ADS + RIGHT                           
///============================================================================================
///HAIR TRIGGER: always On, This also allows super fast building.                                                              ///                                    
///============================================================================================
///PERFECT ACCURACY: L2+R1
///============================================================================================
///Head Aimbot  ---> ALWAYS ON   
///============================================================================================
///AimAssist Always ON
///============================================================================================
///Sniper aim Improved
///============================================================================================
///DROPSHOT: L2+SQUARE 
///============================================================================================
///GHOST PEEK: L2+L1
///============================================================================================
///_______________________________________________________________________________________ ///_
*/

//----------------------------------------
// BUTTON LAYOUT: BUILDER PRO
 define FIRE_BTN = 4; //XB1_RT //PS4_R2
 define ADS_BTN = 7; //XB1_LT //PS4_L2
 define CROUCH_BTN = 5; //XB1_RS //PS4_R3
 define SPRINT_BTN = 8; //XB1_LS //PS4_L3
 define JUMP_BTN = 19; //XB1_A  //PS4_CROSS
 define NEXT_PIECE = 3; //XB1_RT //PS4_R1
 define LEFT_BUMP = 6; //XB1_LB //PS4_L1
 define RIGHT_BUMP = 3; // XB1_RB //PS4_R1
 define SWAP_BTN = 17; //XB1_Y  //PS4_TRIANGLE
 define BUILD_BTN = 18; //XB1_B  //PS4_CIRCLE
 define WALL_BTN = 4; //XB1_RB //PS4_R2
 define STAIRS_BTN = 7; //XB1_LB //PS4_L2
 define FLOOR_BTN = 3; //XB1_RT //PS4_R1
 define ROOF_BTN = 6; //XB1_LT //PS4_L1
 define RELOAD_BTN = 20; //XB1_X //PS4_SQAURE
 define R_X = 9; //XB1_RX //PS4_RX
 define R_Y = 10; //XB1_RY //PS4_RY
 define L_X = 11; //XB1_LX //PS4_LX
 define L_Y = 12; //XB1_LY //PS4_LY
 define UP = 13; //XB1_UP //PS4_UP
 define DOWN = 14; //XB1_DOWN //PS4_DOWN
 define LEFT = 15; //XB1_LEFT //PS4_LEFT
 define RIGHT = 16; //XB1_RIGHT //PS4_RIGHT
 define MENU		= XB1_MENU;

//Aim Correction Aim Assist Booster
int AIM__CORRECT=TRUE;		// WHEN TRUE, AIM ASSIST WILL BE STRONGER WHEN YOU AIM AND STRONGEST WHEN YOU AIM & FIRE

//AIM CORRECTION SENSITIVITY VALUES:  
int ADS_SENS, GEN_SENS=100, HIP_SENS=100, ADS_FIRE_SENS, Use_sens, midpoint=50;
int adss = 95; //PUT WHAT YOU WOULD NORMALLY USE IN GAME FOR ADS AKA CONTROLLER TARGETING SENSITIVITY

//TFUE Ghost Peek - L2/LT & L1/LB
int ghostpeek = TRUE;
int gpreset = 111;

//RUMBLE
int rumble_type = RUMBLE_A;

//100% Accuracy - L2/LT & R1/RB
int PerfectAccuracy  = TRUE;

//--Rapidfire - LT/L2 + Right
int RapidFire      = FALSE;

//--Dropshot - LT/L2 + A/X
int DropShot       = FALSE;
int dsdown = 34;     // Time you are down
int dsup   = 136;    // Time you are up

//Incremental Aim Assist - RB + LB
int STICKY__AIM	= TRUE;                                                                            
int aa__shake=18;
int aa_delay=21;
int release=22;

//Aim Assist - Default/Starting
int AimAssist = TRUE;
int aav  = 20;// AIM ASSIST VALUES
int delay  = 19;

//Other Aim Assist - Pump/SMG Values
int oAimAssist = FALSE;
int oaav  = 23;// AIM ASSIST VALUES
int odelay  = 10;

//Aim Abuse - Default/Staring Values
int AimAbuse = TRUE;
int AimAbuse_HOLD = 265; 				//How long you HOLD ADS Button
int AimAbuse_RELEASE = 17;
int AimAbuse_HOLD_ORIGINAL = 265;		//MAKE SURE THIS MATCHES AimAbuse_HOLD
int AimAbuse__RELEASE_ORIGINAL = 17;	//MAKE SURE THIS MATCHES AimAbuse_RELEASE

//Aim Abuse Pump/SMG Values
int AimAbusePump = FALSE;
int AimAbuse_HOLD_Pump = 20; //How long you HOLD ADS Button
int AimAbuse_RELEASE_Pump = 1;//How long you release ADS Button

//SSCAim Abuse - L2/LT + Y/Triangle
int SSCAimAbuse = FALSE;
int SSCAimAbuse_HOLD = 260; //How long you HOLD ADS Button
int SSCAimAbuse_RELEASE = 22;//How long you release ADS Button

//Insta Edit
int EDIT_BUTTON       = /**/LEFT/**/;	//Insta edit will allow you to confirm the edit quickly. Make sue the is set to your EDIT BUTTON\
int RESET_EDIT_BUTTON = /**/CROUCH_BTN/**/;	//Insta Reset will allow you to confirm the edit reset quickly
int CONFIRM_BUTTON    = LEFT; 			//Make sure this is set to your CONFIRM BUTTON



//Stuff
int edit = FALSE;
int aimMod = TRUE;
int wasActive;
int doubleClick = FALSE;
//--------------------------------------------------------------------------------------------------------MAIN SECTION----------------------------------------------------------------------------------------------------//
main {

ADS_SENS = ((adss / 2) + 50);
ADS_FIRE_SENS = (((adss / 2) + 50) - 7);

//Aim Correction
if(AIM__CORRECT){ 
Aim__Correction (Use_sens);
}

//Insta Edit
if(get_val(EDIT_BUTTON))
	{
	edit = TRUE;
	}
if (edit == TRUE) {
	if (get_val(BUILD_BTN)) {
		aimMod = TRUE;
	}
	if (event_release(FIRE_BTN) || get_val(RESET_EDIT_BUTTON) || get_val(SWAP_BTN)) {
		set_val(ADS_BTN, 0);
		set_val(CONFIRM_BUTTON, 100);
		edit = FALSE;
		}
}
if (event_press(BUILD_BTN)) 
{
	aimMod = !aimMod;
	edit = FALSE;
}	
if (get_val(SWAP_BTN)) 
{
	aimMod = TRUE;
}	
//TFUE Ghost Peek
if (ghostpeek) { 
if (get_val(7)) {if (get_val(6)) {
combo_run(ghostpeek_Hold); }
set_val(6, 0);
}}

//100% ACCURACY
if (get_val(ADS_BTN) && get_val(RIGHT_BUMP)) {
  PerfectAccuracy = !PerfectAccuracy
  combo_run(PerfectAccuracy);
set_val(RIGHT_BUMP, 0);
      } else {
  combo_stop(PerfectAccuracy);
}


//--Rapidfire
if(get_val(ADS_BTN) && event_press(RIGHT)){
   rumble_A_if_true(RapidFire);
   RapidFire =! RapidFire;
   }
   if(RapidFire){
     if(get_val(FIRE_BTN)){
        combo_run(Rapidfire);                                          
       } 
     }  
//--Dropshot
if(get_val(ADS_BTN) && event_press(RELOAD_BTN)){
   rumble_A_if_true(DropShot);
   DropShot =! DropShot;
   }
   if(DropShot){
      if(get_val(ADS_BTN)&&get_val(FIRE_BTN)){combo_run(DropShot);}
     if (event_press(18)){ DropShot = FALSE; }
     }

//Incremental Aim Assist
if(get_val(RIGHT_BUMP) && event_press(LEFT_BUMP)){
   rumble_A_if_true(STICKY__AIM);
   STICKY__AIM =! STICKY__AIM;
   }
if(STICKY__AIM){
	if(get_val(ADS_BTN) > 98 && (abs(get_val(9)) > 19 ^^ abs(get_val(10)) > 19)) combo_run(AA_XY);
	else combo_stop(AA_XY);
}

//AIM ASSIST
if (AimAssist) {
if (get_val(7)> 98){ combo_run(AimAssist);}
}
if (abs(get_val(9)) > 19 || abs(get_val(10)) > 19){ 
combo_stop(AimAssist);}

//oAimAssist
if (oAimAssist) {
if (get_val(7) > 98) { combo_run(oAimAssist);}
}
if (abs(get_val(9)) > 19 || abs(get_val(10)) > 19){ 
combo_stop(oAimAssist);}

//SSCAIM ABUSE
if(get_val(ADS_BTN) && event_press(SWAP_BTN)){
   rumble_A_if_true(SSCAimAbuse);
   SSCAimAbuse =! SSCAimAbuse;
   funcSSCAB(SSCAimAbuse)
   }
if(SSCAimAbuse){
   if(get_val(ADS_BTN)> 95){
      combo_run(SSCAimAbuse);}
   if(event_release(ADS_BTN)){ combo_stop(SSCAimAbuse);
   }
}

//AIM ABUSE
if(AimAbuse){
	AB_CNG(AimAbuse)
   if(get_val(ADS_BTN)> 95){
      combo_run(AimAbuse);}
   if(event_release(ADS_BTN)){ combo_stop(AimAbuse);
}
}

//AIM ABUSE for PUMP/SMG
if(AimAbusePump){
   if(get_val(ADS_BTN)> 95){
      combo_run(AimAbusePump);}
   if(event_release(ADS_BTN)){ combo_stop(AimAbusePump);
}
}
}
//--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------//
//--------------------------------------------------------------------------------------------------------COMBO SECTION-----------------------------------------------------------------------------------------------------------------//
//--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------//
combo TAP 
	{
    doubleClick = TRUE;
	wait(400);
	doubleClick = FALSE;
	}
combo AA_XY {
	set_val(10,xy_val(10,aa__shake));
	wait(aa_delay);
	set_val(9,xy_val(9,aa__shake));
	set_val(11,xy_val(11,aa__shake));
	wait(aa_delay);
	set_val(10,xy_val(10,aa__shake * -1));
	wait(aa_delay);
	set_val(9,xy_val(9,aa__shake * -1));
	set_val(11,xy_val(11,aa__shake * -1));
	wait(aa_delay);
}
combo ghostpeek_Hold {
set_val(5, 100);
wait(15); wait(15);
set_val(4, 100);
wait(15); wait(10);
set_val(5, 100);
wait(15); wait(gpreset);
}
combo PerfectAccuracy {
set_val(FIRE_BTN,100);
wait(100);
wait(250);
set_val(FIRE_BTN,100);
}
combo Rapidfire {
set_val(FIRE_BTN, 100); 
wait(120);
set_val(FIRE_BTN, 0); 
wait(30);
}
combo VIBRATE {
    set_rumble(rumble_type, 100);
    wait(300);
    reset_rumble();
}
function rumble_A_if_true(var) {
    if (var) rumble_type = RUMBLE_A;
    else rumble_type = RUMBLE_B;
    combo_run(VIBRATE);
}
combo DropShot{
set_val(CROUCH_BTN,100);
wait(dsdown);
wait(dsup);
set_val(CROUCH_BTN,100);
}
combo AimAssist {
set_val(9, (aav)); wait(delay)
set_val(9, aav * -1); wait(delay)}
combo oAimAssist {
set_val(9, (oaav)); wait(odelay);
set_val(9, oaav * -1); wait(odelay); }
combo AimAbuse {
set_val(ADS_BTN, 100);
wait(AimAbuse_HOLD);
set_val(ADS_BTN, 0);
wait(AimAbuse_RELEASE);
}
combo AimAbusePump {
set_val(ADS_BTN, 100);
wait(AimAbuse_HOLD_Pump);
set_val(ADS_BTN, 0);
wait(AimAbuse_RELEASE_Pump);
}
combo SSCAimAbuse {
set_val(7, 100); wait(SSCAimAbuse_HOLD);
set_val(7, 0);   wait(SSCAimAbuse_RELEASE);
set_val(7, 100); wait(15);
}
function pumpsmgfunc(ps) {
 if (ps) {
    AimAbuse = FALSE;
    AimAbusePump = TRUE;
    SSCAimAbuse = FALSE;
    AimAssist = FALSE;
    oAimAssist = TRUE;
    } else {
    AimAbuse = TRUE;
    
    SSCAimAbuse = FALSE;
    AimAssist = TRUE;
    oAimAssist = FALSE;
    }
   }
function funcSSCAB(sscab) {
 if (sscab) {
    SSCAimAbuse = TRUE;
    AimAbuse = FALSE;
    AimAbusePump = FALSE;
    STICKY__AIM	= FALSE;
    oAimAssist = FALSE;
    AimAssist = TRUE;
    } else {
    SSCAimAbuse = FALSE;
    AimAbuse = TRUE;
    AimAbusePump = FALSE;
    STICKY__AIM	= TRUE;
    oAimAssist = FALSE;
    AimAssist = TRUE;
    }
   }

function xy_val(f_axis,f_val) {
	if(abs(get_val(f_axis)) < release)
	return f_val;
	return get_val(f_axis);
}
function AB_CNG(reduce) {
	if (reduce) { 
	if (abs(get_val(9)) < 19 ^^ abs(get_val(10)) < 19) {
	AimAbuse_HOLD = AimAbuse_HOLD;
	AimAbuse_RELEASE = AimAbuse_RELEASE;}
	if (abs(get_val(9)) > 19 < 60 ^^ (abs(get_val(10)) > 19 < 60)) {
	AimAbuse_HOLD = AimAbuse_HOLD * (2/3);
	AimAbuse_RELEASE = AimAbuse_RELEASE * (2/3);}
	if (abs(get_val(9)) > 60 ^^ (abs(get_val(10)) > 60)) {
	AimAbuse_HOLD = AimAbuse_HOLD * (1/3);
	AimAbuse_RELEASE = AimAbuse_RELEASE * (1/3);}  
	if (abs(get_val(9)) < 19 ^^ abs(get_val(10)) < 19) {
	AimAbuse_HOLD = AimAbuse_HOLD_ORIGINAL;
	AimAbuse_RELEASE = AimAbuse__RELEASE_ORIGINAL;}
}}
function get_double(B1,B2) 
	{
    if(get_val(B1) && event_press(B2) && !doubleClick) combo_run(TAP);
    if(get_val(B1) && event_press(B2) &&  doubleClick) return TRUE;
    return FALSE;
	}
function Aim__Correction (Use_sens){  
  if(get_val(FIRE_BTN) && get_val(ADS_BTN)) { 
	Use_sens = ADS_FIRE_SENS;
  }
  if(get_val(FIRE_BTN) && !get_val(ADS_BTN)) { 
	Use_sens = HIP_SENS;
  }
  if(!get_val(FIRE_BTN) && !get_val(ADS_BTN)) {
	Use_sens = GEN_SENS;
  }
  if(!get_val(FIRE_BTN) && get_val(ADS_BTN)) {
	Use_sens = ADS_SENS;
  } 
	sensitivity(9, midpoint ,Use_sens);
	sensitivity(10, midpoint ,Use_sens);
}