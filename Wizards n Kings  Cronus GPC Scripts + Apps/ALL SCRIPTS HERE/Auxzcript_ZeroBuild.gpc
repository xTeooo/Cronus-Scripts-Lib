/*
      _____                                    .__        __          
     /  _  \  __ _____  ___________ ___________|__|______/  |_        
    /  /_\  \|  |  \  \/  /\___   // ___\_  __ \  \____ \   __\       
   /    |    \  |  />    <  /    /\  \___|  | \/  |  |_> >  |         
   \____|__  /____//__/\_ \/_____ \\___  >__|  |__|   __/|__|         
           \/            \/      \/    \/         |__|                
__________                           __________      .__.__       .___
\____    /___________  ____          \______   \__ __|__|  |    __| _/
  /     // __ \_  __ \/  _ \   ______ |    |  _/  |  \  |  |   / __ | 
 /     /\  ___/|  | \(  <_> ) /_____/ |    |   \  |  /  |  |__/ /_/ | 
/_______ \___  >__|   \____/          |______  /____/|__|____/\____ | 
        \/   \/                              \/                    \/ 
        
        Welcome, you are using Version 1 of Auxzcript: Zero-Build
        -
        Version 1 notes:
        As this script progresses through it's updates you will see more features get added,
        this is the standard version and I soon plan to add more features!
        
______ _____  ___ ______   
| ___ \  ___|/ _ \|  _  \_ 
| |_/ / |__ / /_\ \ | | (_)
|    /|  __||  _  | | | |    Please set your in-game right stick deadzone to 0.25 - this is very imporant!
| |\ \| |___| | | | |/ / _ 
\_| \_\____/\_| |_/___/ (_)
                           
                           
                            
        */
        
//Aim Assist V3 (Linear + Exponential)
int ZB_Aimbot = 26;
int ZB_AimbotNEG = -26;
int ZB_HipfireAimbotNEG = 27;
int ZB_HipfireAimbot = -27;
int Delay = 20;
int Release = 25;
  
  
main{

if(get_val(ADS_BTN)) combo_run(AS);
if(get_val(FIRE_BTN)) combo_run(AS2);

if (abs(get_val(XB1_LY)) < 0 && abs(get_val(XB1_LX)) < 0 ){ 
set_val(XB1_LY,0); 
set_val(XB1_LX,0); 
} 
if (abs(get_val(XB1_RY)) < 0 && abs(get_val(XB1_RX)) < 0 ){ 
set_val(XB1_RY,0); 
set_val(XB1_RX,0); 
}}

combo AS { 
set_val(10,a_f(10,ZB_Aimbot));
wait(Delay)
set_val(9,a_f(9,ZB_Aimbot));
wait(Delay)
set_val(10,a_f(10,ZB_AimbotNEG));
wait(Delay)
set_val(9,a_f(9,ZB_AimbotNEG));
wait(Delay)}

combo AS2 { 
set_val(10,a_f(10,ZB_HipfireAimbotNEG));
wait(Delay)
set_val(9,a_f(9,ZB_HipfireAimbotNEG));
wait(Delay)
set_val(10,a_f(10,ZB_HipfireAimbot));
wait(Delay)
set_val(9,a_f(9,ZB_HipfireAimbot));
wait(Delay)}

//Keybinds
define FIRE_BTN = 4;    //XB1_RB //PS4_R2
define ADS_BTN = 7;     //XB1_LB //ADS_BTN
define CROUCH_BTN = 5;  //XB1_RS //PS4_R3
define RELOAD_BTN = 20; //XB1_X //PS4_SQAURE
define SPRINT_BTN = 8;  //XB1_LS //PS4_L3
define JUMP_BTN = 19;   //XB1_A  //PS4_CROSS
define NEXT_PIECE = 3;  //XB1_RT //PS4_R1
define RIGHT_BUMP = 3;  // XB1_RB //PS4_R1
define LEFT_BUMP = 6;   //ADS_BTN //PS4_L1
define SWAP_BTN = 17;   //XB1_Y  //PS4_TRIANGLE
define BUILD_BTN = 18;  //XB1_B  //PS4_CIRCLE
define R_X = 9;         //XB1_R_X //PS4_R_X
define R_Y = 10;        //XB1_R_Y //PS4_R_Y
define L_X = 11;        //XB1_L_X //PS4_L_X
define L_Y = 12;        //XB1_L_Y //PS4_L_Y
define UP = 13;         //XB1_UP //PS4_UP
define DOWN = 14;       //XB1_DOWN //PS4_DOWN
define LEFT = 15;       //XB1_LEFT //PS4_LEFT
define RIGHT = 16;      //XB1_RIGHT //PS4_RIGHT
function a_f(p,m) {
if(abs(get_val(p)) < Release)
return m;
return get_val(p);}