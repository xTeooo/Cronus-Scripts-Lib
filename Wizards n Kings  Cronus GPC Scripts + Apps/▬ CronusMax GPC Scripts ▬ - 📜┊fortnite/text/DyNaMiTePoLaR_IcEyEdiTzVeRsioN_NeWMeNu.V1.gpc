/*		    36936936936936936
            36936936936936936				8888888b.            .d8888b.       88888888888 888               8888888888 d8b  .d8888b.  888  88888888888       8888888b. 
            369369369369369369				888  "Y88b          d88P  Y88b          888     888               888        Y8P d88P  Y88b 888      888           888   Y88b
           36936936936936933693				888    888          888    888          888     888               888            888    888 888      888           888    888
		  3693693693693693693693			888    888  .d88b.  888        88888888 888     88888b.   .d88b.  8888888    888 888        88888b.  888   .d88b.  888   d88P
         369369369369369369369369			888    888 d88""88b 888  88888    d88P  888     888 "88b d8P  Y8b 888        888 888  88888 888 "88b 888  d8P  Y8b 8888888P"
         3693693693693693693693699			888    888 888  888 888    888   d88P   888     888  888 88888888 888        888 888    888 888  888 888  88888888 888 T88b
        3693693693693693693693699369		888    888 888  888 888    888  d88     888     888  888 888""""  888        888 888    888 888  888 888  888""""  888  T88b
       36936939693693693693693693693693		8888888P"   "Y88P"   "Y8888P88 88888888 888     888  888  "Y8888  888        888  "Y8888P88 888  888 888   "Y8888  888   T88b
     3693693693693693693693693693693636936	 \|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||/
   36936936936936936936936936936   369369369  \|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||/
  36936   369336936369369369369        36936   \|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||/
 36936   36936 369369336936936					\|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||/
36933   36936  36936   3693636					 \|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||/
693    36936  36936     369363					  \|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||/	
      36936  36936      369369					   \|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||/
     36936   36936       36936
     36936   36936        36936
     36936   36936        36936
      369    36936          369
		   	  369

\|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||/
 \|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||/
  \|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||/
*/	data(18, sizeof(AIMASSISTPOSI) + 18, 
	sizeof(AIMASSISTPOSI) + sizeof(AIMASSISTNEGI) + 18,
	sizeof(AIMASSISTPOSI) + sizeof(AIMASSISTNEGI) + sizeof(AIMASSISTWAIT) + 18,
	sizeof(AIMASSISTPOSI) + sizeof(AIMASSISTNEGI) + sizeof(AIMASSISTWAIT) + sizeof(AIMABUSEHOLD)  + 18,
	sizeof(AIMASSISTPOSI) + sizeof(AIMASSISTNEGI) + sizeof(AIMASSISTWAIT) + sizeof(AIMABUSEHOLD) + sizeof(AIMABUSERELEASE) + 18,
	sizeof(AIMASSISTPOSI) + sizeof(AIMASSISTNEGI) + sizeof(AIMASSISTWAIT) + sizeof(AIMABUSEHOLD) + sizeof(AIMABUSERELEASE) + sizeof(DYNAMIC) + 18,
	sizeof(AIMASSISTPOSI) + sizeof(AIMASSISTNEGI) + sizeof(AIMASSISTWAIT) + sizeof(AIMABUSEHOLD) + sizeof(AIMABUSERELEASE) + sizeof(DYNAMIC) + sizeof(POLARRADIUS) + 18,
	sizeof(AIMASSISTPOSI) + sizeof(AIMASSISTNEGI) + sizeof(AIMASSISTWAIT) + sizeof(AIMABUSEHOLD) + sizeof(AIMABUSERELEASE) + sizeof(DYNAMIC) + sizeof(POLARRADIUS) + sizeof(BUNNYHOP) + 18,
	sizeof(AIMASSISTPOSI) + sizeof(AIMASSISTNEGI) + sizeof(AIMASSISTWAIT) + sizeof(AIMABUSEHOLD) + sizeof(AIMABUSERELEASE) + sizeof(DYNAMIC) + sizeof(POLARRADIUS) + sizeof(BUNNYHOP) + sizeof(RAPIDFIRE) + 18,
	sizeof(AIMASSISTPOSI) + sizeof(AIMASSISTNEGI) + sizeof(AIMASSISTWAIT) + sizeof(AIMABUSEHOLD) + sizeof(AIMABUSERELEASE) + sizeof(DYNAMIC) + sizeof(POLARRADIUS) + sizeof(BUNNYHOP) + sizeof(RAPIDFIRE) + sizeof(DROPSHOT) + 18,
	sizeof(AIMASSISTPOSI) + sizeof(AIMASSISTNEGI) + sizeof(AIMASSISTWAIT) + sizeof(AIMABUSEHOLD) + sizeof(AIMABUSERELEASE) + sizeof(DYNAMIC) + sizeof(POLARRADIUS) + sizeof(BUNNYHOP) + sizeof(RAPIDFIRE) + sizeof(DROPSHOT) + sizeof(STRAFE) + 18,
	sizeof(AIMASSISTPOSI) + sizeof(AIMASSISTNEGI) + sizeof(AIMASSISTWAIT) + sizeof(AIMABUSEHOLD) + sizeof(AIMABUSERELEASE) + sizeof(DYNAMIC) + sizeof(POLARRADIUS) + sizeof(BUNNYHOP) + sizeof(RAPIDFIRE) + sizeof(DROPSHOT) + sizeof(STRAFE) + sizeof(GHOSTPEEK) + 18,
	sizeof(AIMASSISTPOSI) + sizeof(AIMASSISTNEGI) + sizeof(AIMASSISTWAIT) + sizeof(AIMABUSEHOLD) + sizeof(AIMABUSERELEASE) + sizeof(DYNAMIC) + sizeof(POLARRADIUS) + sizeof(BUNNYHOP) + sizeof(RAPIDFIRE) + sizeof(DROPSHOT) + sizeof(STRAFE) + sizeof(GHOSTPEEK) + sizeof(RAMPRUSH) + 18,
	sizeof(AIMASSISTPOSI) + sizeof(AIMASSISTNEGI) + sizeof(AIMASSISTWAIT) + sizeof(AIMABUSEHOLD) + sizeof(AIMABUSERELEASE) + sizeof(DYNAMIC) + sizeof(POLARRADIUS) + sizeof(BUNNYHOP) + sizeof(RAPIDFIRE) + sizeof(DROPSHOT) + sizeof(STRAFE) + sizeof(GHOSTPEEK) + sizeof(RAMPRUSH) + sizeof(POLARASSIST) + 18, 
	sizeof(AIMASSISTPOSI) + sizeof(AIMASSISTNEGI) + sizeof(AIMASSISTWAIT) + sizeof(AIMABUSEHOLD) + sizeof(AIMABUSERELEASE) + sizeof(DYNAMIC) + sizeof(POLARRADIUS) + sizeof(BUNNYHOP) + sizeof(RAPIDFIRE) + sizeof(DROPSHOT) + sizeof(STRAFE) + sizeof(GHOSTPEEK) + sizeof(RAMPRUSH) + sizeof(POLARASSIST) + sizeof(PROGASSIST) + 18,
	sizeof(AIMASSISTPOSI) + sizeof(AIMASSISTNEGI) + sizeof(AIMASSISTWAIT) + sizeof(AIMABUSEHOLD) + sizeof(AIMABUSERELEASE) + sizeof(DYNAMIC) + sizeof(POLARRADIUS) + sizeof(BUNNYHOP) + sizeof(RAPIDFIRE) + sizeof(DROPSHOT) + sizeof(STRAFE) + sizeof(GHOSTPEEK) + sizeof(RAMPRUSH) + sizeof(POLARASSIST) + sizeof(PROGASSIST)+ sizeof(DYNAIMABUSE) + 18,
	sizeof(AIMASSISTPOSI) + sizeof(AIMASSISTNEGI) + sizeof(AIMASSISTWAIT) + sizeof(AIMABUSEHOLD) + sizeof(AIMABUSERELEASE) + sizeof(DYNAMIC) + sizeof(POLARRADIUS) + sizeof(BUNNYHOP) + sizeof(RAPIDFIRE) + sizeof(DROPSHOT) + sizeof(STRAFE) + sizeof(GHOSTPEEK) + sizeof(RAMPRUSH) + sizeof(POLARASSIST) + sizeof(PROGASSIST)+ sizeof(DYNAIMABUSE) + sizeof(PCMODE) + 18);
	
	const string AIMASSISTPOSI   = "AIMASSIST+";
	const string AIMASSISTNEGI   = "AIMASSIST-";
	const string AIMASSISTWAIT   = "ASSISTWAIT";
	const string AIMABUSEHOLD    = "ABUSE HOLD";
	const string AIMABUSERELEASE = "ABUSE WAIT";
	const string DYNAMIC         = " DYNAMIC+";
	const string POLARRADIUS     = "  RADIUS";
	const string BUNNYHOP        = " BUNNYHOP";
	const string RAPIDFIRE       = "RAPIDFIRE";
	const string DROPSHOT        = " DROPSHOT";
	const string STRAFE          = "  STRAFE";
	const string GHOSTPEEK       = "GHOSTPEEK";
	const string RAMPRUSH        = " RAMPRUSH";
	const string POLARASSIST     = "POLAR AIM";
	const string PROGASSIST      = " PROG AIM";
	const string DYNAIMABUSE     = "AIM ABUSE";
	const string PCMODE          = " PC MODE";
	const string SHOTGUNABUSE    = "SHOTGUNHIT";
	
	int idx = 1;  int print_label;
    int print_AIMASSISTPOSI =  0;  int print_AIMASSISTNEGI =  1;  int print_AIMASSISTWAIT =  2;  int print_AIMABUSEHOLD =  3;  int print_AIMABUSERELEASE =  4; 
    int print_DYNAMIC       =  5;  int print_POLARRADIUS   =  6;  int print_BUNNYHOP      =  7;  int print_RAPIDFIRE    =  8;  int print_DROPSHOT        =  9;  
    int print_STRAFE        = 10;  int print_GHOSTPEEK     = 11;  int print_RAMPRUSH      = 12;  int print_POLARASSIST	= 13;  int print_PROGASSIST      = 14;  
    int print_DYNAIMABUSE	= 15;  int print_PCMODE		   = 16;  int print_SHOTGUNABUSE  = 17;
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	const string DoGzTheFiGhTeR  = "DoGzTheFiGhTeR";
	const string DyNaMiTePoLaR   = "DyNaMiTePoLaR";
	const string VeRsIoN         = "VeRsIoN IcEy";
	const string Hold            = "MENU HOLD RIGHT";
	const byte FONT_STATS[][] = {{ 7, 10, 18 },{ 11, 18, 11 },{ 16, 26, 7 }}; 
	const byte REFERENCE[]    = {48,49,50,51,52,53,54,55,56,57};
    define OLED_W = 128; define OLED_H = 64; define SMALL =  0; define MEDIUM = 1; define LARGE  = 2; define FONT_W = 0, FONT_H = 1, FONT_L = 2;
	define BLACK  =   0; define WHITE  =  1; define NEG   = 45; int NO        = 1; int BANNER = 0;    int BORDER = 0;	 int MENU,COUNT,ADJUST,ADJUSTA;
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// 	
  	define PS    =  0;   define SHARE    =  1;  define OPTIONS =  2;  define R1    =  3;  define R2     =  4;  define R3    =  5;  define L1    =  6; define L2   =  7;
  	define L3    =  8;   define RX       =  9;  define RY      = 10;  define LX    = 11;  define LY     = 12;  define UP    = 13;  define DOWN  = 14; define LEFT = 15;
  	define RIGHT = 16;   define TRIANGLE = 17;  define CIRCLE  = 18;  define CROSS = 19;  define SQUARE = 20;  define TOUCH = 27;
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	define EDIT  = 18;   define EDIT1  = 27;	define EDIT2   = 8;   define RESET = 5;   define CONFIRM = 18; define RESET1 = 27; define SELECT =  4;  
  	define BUILD = 18;	 define INVENT = 13;	define PICKAXE = 17;  define AIM   = 7;   define FIRE    = 4;  define CROUCH =  5; define JUMP   = 19;
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  	define AAmin = -15;  define AAmax = 15;     define Inc = 2;       define WAmin = 1;   define WAmax = 2;    define In = 1; 
  	int AS = AAmin;      int AW = WAmin;        int val_idx;          int AAS      = 1;   int AAD      = 1;		   
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	define PXS = 90;     define PXSE = 270;     define PVSI = 20;     define PVS = 20;    define PYS = -200;   define PYSE = 200;
	int PPFX = PXS;      int PPFY = PYS;        int PVID;             int PFD = 1;        int PPFD = 1;		   int RX1,RY1,a,i;
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	
	int SHOTGUNSHOT = 1; int BuildTrack = 0;    int BuildMods = 0;    int release = 35;   int WAIT,num,button; int PA,run_combo;   int DoGzRuSH = 0;    int edit = 0;
	int AAR = 30;		 int AAH = 330;			int STFW = 150;		  int LW = 150;       int GPW = 125;       int JSW = 250;      int RFW = 30;		int DSD = 50;
	int PWL = 1;         int PFLR = 1;          int PC = 1; 	      int STF=0; 	      int GP = 1;          int JS = 0;         int RF = 0;          int DS = 0;
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	int AIMASSISTPOS= 0; int AIMASSISTNEG = 0;	int ASSISTWAIT = 0;	  int AIMABUSE = 330; int AIMABUSEWAIT=40; int DYNA = 0;       int RADIUS=30;
	int PROGRESSION = 1; int DYNAMICABUSE = 1;  int POLAR      = 1;
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/*-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+*
| | | | | | | | |I|N|I|T|I|A|L|I|Z|A|T|I|O|N| | | | | | | | | | | | | | | | | | | | | | | |
*-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+*/  
 init{
	 cls_oled(0);
	 combo_run (LOGO);
	 AIMASSISTPOS = get_pvar(PVAR_1,  -30,  30,   0); 
     AIMASSISTNEG = get_pvar(PVAR_2,  -30,  30,   0);
     ASSISTWAIT   = get_pvar(PVAR_3,    0,  50,   0);
     AIMABUSE     = get_pvar(PVAR_4,   20, 600, 330);
     AIMABUSEWAIT = get_pvar(PVAR_5,    1, 100,  40);
     DYNA		  = get_pvar(PVAR_6, -300, 300,   0);
   
} 
/*-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+*
| | | | | | | | |M|A|I|N| |B|L|O|C|K| |S|T|A|R|T|S| |H|E|R|E| | | | | | | | | | | | | | | |
*-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+*/  
 	main {
 		if (PC) swap (SHARE,TOUCH);	
//════════════════════════════════════════════════════════════════════════════════════════╣
// Border																				  ║
//════════════════════════════════════════════════════════════════════════════════════════╣
			
		if (BORDER){
			line_oled(0,63,0,0,7,1);// left bar
			line_oled(127,0,0,0,7,1);//top bar
			line_oled(127,58,0,58,8,1);//bottom bar
			line_oled(122,0,122,63,7,1);//right side

			}

//════════════════════════════════════════════════════════════════════════════════════════╣
// Banner																				  ║
//════════════════════════════════════════════════════════════════════════════════════════╣		
		
		if(BANNER){
			cls_oled(0);
			printf(14, 08, 0, 1,DoGzTheFiGhTeR[0]); 
    		printf(20, 18, 0, 1,DyNaMiTePoLaR[0]);
    		printf(22, 30, 0, 1,VeRsIoN[0]);
    		printf(11, 48, 0, 1,Hold[0]);
    		}

//════════════════════════════════════════════════════════════════════════════════════════╣
// Main Menu (Adjustable)																  ║
//════════════════════════════════════════════════════════════════════════════════════════╣    		

		if (get_val(RIGHT) && get_ptime(RIGHT)>550){ 				// HOLD RIGHT FOR 550ms TO ENTER MOD MENU (IT WILL FLASH WHILE IN MOD MENU MODE) <<<<<<
	 		ADJUSTA =  TRUE;
	 		ADJUST  =  TRUE;
	 		MENU    =  TRUE;
	 		BORDER  =  TRUE;
	 		BANNER  = FALSE:
	 		}
    	if (ADJUSTA || MENU){
    	if (event_press(LEFT)||event_press(TRIANGLE)){				// PRESS LEFT OR TRIANGLE TO EXIT MOD MENU <<<<<<<<<<<<<<<<<
       		ADJUSTA = FALSE;
    		ADJUST  = FALSE;
    		MENU    = FALSE;
    		BORDER  = FALSE;
    		BANNER  =  TRUE:
    		}
    	if (event_press(CROSS)){									// PRESS CROSS TO SWAP BETWEEN MOD VALUES <<<<<<
        	idx += 1;
        if (idx > 18) idx = 1; 
        	MENU   =  TRUE;
        	BANNER = FALSE:
        	}
   		if (MENU){
           	cls_oled (0);
        	printf (10,38,1,1,dbyte(print_label[idx]));
        	MENU = FALSE;
        	}
        if (idx == 1){
        if (event_press(UP)){										// PRESS UP TO ADD VALUE <<<<<<<<<<<
            AIMASSISTPOS +=    1;
            MENU          = TRUE;
            save_pvars ()
            }
        if (event_press(DOWN)){										// PRESS DOWN TO REDUCE VALUE <<<<<<
            AIMASSISTPOS -=    1;
            MENU          = TRUE;
            save_pvars ()
            }	
        	EDITNUMBER(AIMASSISTPOS,NUMBER(AIMASSISTPOS));
    		MENU = FALSE;
    		}
    	if (idx == 2){
        if (event_press(UP)){
            AIMASSISTNEG +=    1;
            MENU          = TRUE;
            save_pvars ()
            }
        if (event_press(DOWN)){
            AIMASSISTNEG -=    1;
            MENU          = TRUE;
            save_pvars ()
            }	
        	EDITNUMBER(AIMASSISTNEG,NUMBER(AIMASSISTNEG));
    		MENU = FALSE;
    		}
    	if (idx == 3) {
        if (event_press(UP)){
            ASSISTWAIT +=    1;
            MENU        = TRUE;
            save_pvars ()
            }
        if (event_press(DOWN)){
            ASSISTWAIT -=   1;
            MENU        = TRUE;
            save_pvars ()
            }	
        	EDITNUMBER(ASSISTWAIT,NUMBER(ASSISTWAIT));
    		MENU = FALSE;
    		}
    	if (idx == 4){
        if (event_press(UP)){
            AIMABUSE +=    5;
            MENU      = TRUE;
            save_pvars ()
            }
        if (event_press(DOWN)){
            AIMABUSE -=    5;
            MENU      = TRUE;
            save_pvars ()
            }	
        	EDITNUMBER(AIMABUSE,NUMBER(AIMABUSE));
    		MENU = FALSE;
    		}	
    	if (idx == 5){
        if (event_press(UP)){
            AIMABUSEWAIT +=    1;
            MENU          = TRUE;
            save_pvars ()
            }
        if (event_press(DOWN)){
            AIMABUSEWAIT -=    1;
            MENU          = TRUE;
            save_pvars ()
            }	
        	EDITNUMBER(AIMABUSEWAIT,NUMBER(AIMABUSEWAIT));
    		MENU = FALSE;
    		}
    	if (idx == 6){
        if (event_press(UP)){
            DYNA +=   1;
            MENU    = TRUE;
            save_pvars ()
            }
        if (event_press(DOWN)){
            DYNA -=   2;
            MENU    = TRUE;
            save_pvars ()
            }	
        	EDITNUMBER(DYNA,NUMBER(DYNA));
    		MENU = FALSE;
    		}
    	if (idx == 7){
        if (event_press(UP)){
            RADIUS += 1;
            MENU    = TRUE;
            //save_pvars ()
            }
        if (event_press(DOWN)){
            RADIUS -= 1;
            MENU    = TRUE;
            //save_pvars ()
            }	
        	EDITNUMBER(RADIUS,NUMBER(RADIUS));
    		MENU = FALSE;
       		}
       	if (idx == 8){
        if (event_press(UP)){
            JSW += 10;
            MENU    = TRUE;
            //save_pvars ()
            }
        if (event_press(DOWN)){
            JSW -= 10;
            MENU    = TRUE;
            //save_pvars ()
            }	
        	EDITNUMBER(JSW,NUMBER(JSW));
    		MENU = FALSE;
       		}
       	if (idx == 9){
        if (event_press(UP)){
            RFW += 1;
            MENU    = TRUE;
            //save_pvars ()
            }
        if (event_press(DOWN)){
            RFW -= 1;
            MENU    = TRUE;
            //save_pvars ()
            }	
        	EDITNUMBER(RFW,NUMBER(RFW));
    		MENU = FALSE;
       		}		
       	if (idx == 10){
        if (event_press(UP)){
            DSD += 1;
            MENU    = TRUE;
            //save_pvars ()
            }
        if (event_press(DOWN)){
            DSD -= 1;
            MENU    = TRUE;
            //save_pvars ()
            }	
        	EDITNUMBER(DSD,NUMBER(DSD));
    		MENU = FALSE;
       		}			
       	if (idx == 11){
        if (event_press(UP)){
            STFW += 1;
            MENU    = TRUE;
            //save_pvars ()
            }
        if (event_press(DOWN)){
            STFW -= 1;
            MENU    = TRUE;
            //save_pvars ()
            }	
        	EDITNUMBER(STFW,NUMBER(STFW));
    		MENU = FALSE;
       		}				
       	if (idx == 12){
        if (event_press(UP)){
            GPW += 1;
            MENU    = TRUE;
            //save_pvars ()
            }
        if (event_press(DOWN)){
            GPW -= 1;
            MENU    = TRUE;
            //save_pvars ()
            }	
        	EDITNUMBER(GPW,NUMBER(GPW));
    		MENU = FALSE;
       		}
       	if (idx == 13){
        if (event_press(UP)){
            DoGzRuSH = 1;
            MENU    = TRUE;
            //save_pvars ()
            }
        if (event_press(DOWN)){
            DoGzRuSH = 0;
            MENU    = TRUE;
            //save_pvars ()
            }	
        	EDITNUMBER(DoGzRuSH,NUMBER(DoGzRuSH));
    		MENU = FALSE;
       		}
       		
       		
       		
       		
       		
       		
       		BLOCK(CROSS); BLOCK(RIGHT); BLOCK(DOWN); BLOCK(UP);}	//<<<<<< BLOCKED IN MOD MENU MODE
		if (ADJUSTA || MENU)
			combo_run (LEDFLOW);
		else
			combo_stop (LEDFLOW);
			

//════════════════════════════════════════════════════════════════════════════════════════╣
//      //////+-+-+-+-+!!!!!******>>>>> EDIT MODS <<<<<******!!!!!+-+-+-+-+\\\\\\		  ║
//════════════════════════════════════════════════════════════════════════════════════════╣    

		if (a){
		if (i < num){
		if (!combo_running(master)){
    			combo_run(master);}}
		else if 
   				(i > num) {a = FALSE;}}
		if (a){
		if (i < num){
		if (!combo_running(master)){
    			combo_run(master);}}
		else if 
   				(i > num) {a = FALSE;}}
   		if(get_val(EDIT1)){                                                         
    			edit = TRUE; 
   				combo_run(RESET);}
   		if(get_val(EDIT) && get_ptime(EDIT)>150 || event_press(EDIT2)){
            	edit = TRUE;
            	BuildTrack = TRUE;} 		
		if(edit == TRUE) {
		  		BuildMods = FALSE;
		if(get_val(RESET) || get_val(RESET1)){  
       			set_click(CONFIRM, 1,100);
       			set_val(CONFIRM,0);
    			edit = FALSE;
    			BuildTrack = FALSE;}}
		if(edit == TRUE) {
		if(event_release(SELECT)){
				combo_run(CONFIRM);
				edit = FALSE;
				BuildTrack = FALSE;}
		if(get_val(R1)){
				combo_run(SINGLE);
				edit = FALSE;
				BuildTrack = FALSE;}
		if(get_val(L1)){
				combo_run(DOUBLE);
				edit = FALSE;
				BuildTrack = FALSE;}
		if(get_val(L2) && get_val(SHARE)){
				BLOCK (SHARE);
				combo_run (SingleEditShot);
				edit = FALSE;}
		if(get_val(L2) && get_val(OPTIONS)){
				BLOCK (OPTIONS);
				combo_run (SingleEdit);
				edit = FALSE;}
		if(get_val (L2)){
				combo_run (DoGzFLiP);}
		if(event_press(PICKAXE)||event_press(SQUARE)||event_release(L1)||event_release(R1)||event_release(L2)){
				edit = FALSE;
				BuildTrack = FALSE;
				reset_leds();}}
		if(edit)
				combo_run (LEDFLOW2);
		else
				combo_stop (LEDFLOW2);
				reset_leds();

//════════════════════════════════════════════════════════════════════════════════════════╣
//    //////+-+-+-+-+!!!!!******>>>>> MODE MONITOR <<<<<******!!!!!+-+-+-+-+\\\\\\	      ║
//════════════════════════════════════════════════════════════════════════════════════════╣

		if(event_press(BUILD)){ 
        		BuildTrack=!BuildTrack;
        		BuildMods =!BuildMods;}
		if(event_press(PICKAXE)){
				BuildTrack = FALSE;
				BuildMods  = FALSE;
				edit       = FALSE;}
		if(BuildTrack == TRUE)
				combo_run (LEDFLOW1);
		else
				combo_stop (LEDFLOW1);
				reset_leds();
		if (!BuildTrack && !BuildMods){
	
//════════════════════════════════════════════════════════════════════════════════════════╣
//  ////+-+-+-+-+!!!!!******>>>>> PROGRESSION AIM ASSIST <<<<<******!!!!!+-+-+-+-+\\\\	  ║
//════════════════════════════════════════════════════════════════════════════════════════╣	
	
		if(PROGRESSION){   	
		    	set_val(30,AS / 10);
    			set_val(31,AW / 10);
    	if(get_val(L2) > 40){
    	if(!combo_running(AAS)) {
            	AS = progression(AS,AAmin+AIMASSISTNEG,AAmax+AIMASSISTPOS,Inc,AAS,1);
            	AW = progression(AW,WAmin,WAmax+ASSISTWAIT,In,AAD,2);
            	combo_run(AAS);}}}

//════════════════════════════════════════════════════════════════════════════════════════╣
//  ////+-+-+-+-+!!!!!******>>>>> PROGRESSION POLAR FLOW <<<<<******!!!!!+-+-+-+-+\\\\	  ║
//════════════════════════════════════════════════════════════════════════════════════════╣

		if(POLAR){		
				RX1 = PS4_RX;	RY1 = PS4_RY; 
				RX1 =   PPFX;	RY1 =   PPFY; 
    	if(get_val(PS4_L2) > 90){
    	if(abs(get_val(XB1_RX) < 30)) 
    	if(abs(get_val(XB1_RY) < 20)) 
    	if(abs(get_val(XB1_RX) > -30)) 
    	if(abs(get_val(XB1_RY) > -20)){
				PPFX = PolarFlow(PPFX,PXS,PXSE,PVSI,PFD,1);
        		PPFY = PolarFlow(PPFY,PYS,PYSE,PVS,PPFD,2);
       	    	set_polar(RADIUS,PPFX);
    			set_polar(RADIUS,PPFY);
    			}}}
    			
//════════════════════════════════════════════════════════════════════════════════════════╣
//      //////+-+-+-+-+!!!!!******>>>>> AIM ABUSE <<<<<******!!!!!+-+-+-+-+\\\\\\		  ║
//════════════════════════════════════════════════════════════════════════════════════════╣	

		if(get_val(L2) && event_press(LEFT)){
				DYNAMICABUSE = !DYNAMICABUSE;
				BLOCK (L2);
			 	BLOCK (LEFT);}
   		if(DYNAMICABUSE){
				DYNAMICAIMABUSE(DYNAMICABUSE);
  	 	if(get_val(L2)>90){
				combo_run(AA);}
		else if 
				(!combo_running(AA)){
				combo_stop(AA);}}

//════════════════════════════════════════════════════════════════════════════════════════╣
//      //////+-+-+-+-+!!!!!******>>>>> SHOTGUN SHOT <<<<<******!!!!!+-+-+-+-+\\\\\\	  ║
//════════════════════════════════════════════════════════════════════════════════════════╣		
		
		if(get_val(R2)&& get_ptime(R2)<150){
				SHOTGUNSHOT = !SHOTGUNSHOT;
				combo_run(SHOTGUNSHOT);}	
			
//════════════════════════════════════════════════════════════════════════════════════════╣
//      //////+-+-+-+-+!!!!!******>>>>> INSTANT PICKAXE <<<<<******!!!!!+-+-+-+-+\\\\\\	  ║
//════════════════════════════════════════════════════════════════════════════════════════╣

		if(get_val(PICKAXE)){
				PA = TRUE;}
		if(event_press(L2)|| get_val(R1)|| get_val(L1)){
				PA = FALSE;}                                                                                                                   
		if(get_val(PICKAXE)){
				PA = TRUE;}
		if(PA == TRUE){
		if(get_val(BUILD)){
			}
		if(event_release(R2)){
				set_click(PICKAXE, 1, 0);
				PA = FALSE;}}

//════════════════════════════════════════════════════════════════════════════════════════╣
//      //////+-+-+-+-+!!!!!******>>>>> DROP SHOT <<<<<******!!!!!+-+-+-+-+\\\\\\		  ║
//════════════════════════════════════════════════════════════════════════════════════════╣
  	 	
		if(get_val(L2) && event_press(R3)){
				DS = !DS;
				combo_run(VIBRATE);}
		if(event_press(CROSS)){
				DS = FALSE;}
		if(DS)
		if(get_val(R2)){
				combo_run(DS);}
			
//════════════════════════════════════════════════════════════════════════════════════════╣
//      //////+-+-+-+-+!!!!!******>>>>> SMART SHOT <<<<<******!!!!!+-+-+-+-+\\\\\\		  ║
//════════════════════════════════════════════════════════════════════════════════════════╣			
		
		if(get_val(LEFT) && event_press(R1)){ 
				BLOCK(LEFT);
				BLOCK(R1);
				STF = !STF;
				combo_run(VIBRATE);}
		if(STF) 
		if(get_val(L2) && get_val(R2)) {                                   
				combo_run(STF);combo_run(DS);
		if(abs(get_val(LX))>40 || abs(get_val(LY))>40){ 
				combo_stop(STF);}}
			
//════════════════════════════════════════════════════════════════════════════════════════╣
//      //////+-+-+-+-+!!!!!******>>>>> RAPID FIRE <<<<<******!!!!!+-+-+-+-+\\\\\\		  ║
//════════════════════════════════════════════════════════════════════════════════════════╣

		if(get_val(LEFT) && event_press(R2)){ 
				BLOCK (LEFT);
				BLOCK (R2);
				RF = !RF;
				combo_run(VIBRATE);}                                                      
		if(RF)                                                                             
		if (get_val(L2) && get_val(R2)){                                   
				combo_run(RF);}
			
//════════════════════════════════════════════════════════════════════════════════════════╣
//      //////+-+-+-+-+!!!!!******>>>>> BUNNYHOP <<<<<******!!!!!+-+-+-+-+\\\\\\		  ║
//════════════════════════════════════════════════════════════════════════════════════════╣		
		
		if(get_val(L2) && get_val(CROSS) && get_ptime(CROSS)>250){
    			JS = !JS;
    			combo_run(VIBRATE);}
    	if(event_press(R3)){
				JS = FALSE;}		
    	if(JS){
    	if(abs(get_val(LX))>40 || abs(get_val(LY))>40){
       			run_combo = 5;}
    	if(run_combo && !combo_running (JS)){
    			run_combo = run_combo - 1;
    			combo_restart (JS);}}

//════════════════════════════════════════════════════════════════════════════════════════╣
//      //////+-+-+-+-+!!!!!******>>>>> LED MOD MONITOR <<<<<******!!!!!+-+-+-+-+\\\\\\	  ║
//════════════════════════════════════════════════════════════════════════════════════════╣

		if((JS) || (RF) || (STF) || (DS))
    			set_led(LED_3, 2);
    	else reset_leds();

//════════════════════════════════════════════════════════════════════════════════════════╣
//      //////+-+-+-+-+!!!!!******>>>>> GHOST PEEK <<<<<******!!!!!+-+-+-+-+\\\\\\		  ║
//════════════════════════════════════════════════════════════════════════════════════════╣
    	if(get_val(L2) && get_val(DOWN)){
				BLOCK(DOWN);
				GP = !GP;
				combo_run(GP);}
				
//════════════════════════════════════════════════════════════════════════════════════════╣
//      //////+-+-+-+-+!!!!!******>>>>> PUMP-WALL <<<<<******!!!!!+-+-+-+-+\\\\\\		  ║
//════════════════════════════════════════════════════════════════════════════════════════╣

		if(get_val(L2) && get_val(R1)){
				BLOCK(R1);
				PWL = !PWL;
				combo_run(PUMPWALL);}				

//════════════════════════════════════════════════════════════════════════════════════════╣
//      //////+-+-+-+-+!!!!!******>>>>> PUMP-FLOOR <<<<<******!!!!!+-+-+-+-+\\\\\\		  ║
//════════════════════════════════════════════════════════════════════════════════════════╣

		if(get_val(L2) && get_val(PS)){
				BLOCK (PS);
				PFLR = !PFLR;
				combo_run(PUMPFLOOR);}

//════════════════════════════════════════════════════════════════════════════════════════╣
//      //////+-+-+-+-+!!!!!******>>>>> EDIT SHOT/MODS <<<<<******!!!!!+-+-+-+-+\\\\\\	  ║
//════════════════════════════════════════════════════════════════════════════════════════╣			
    	
    	if(get_val(L2) && get_val(SHARE)){
				BLOCK (SHARE);
				combo_run (SingleEditShot);
				edit = FALSE;}
		if(get_val(L2) && get_val(OPTIONS)){
				BLOCK (OPTIONS);
				combo_run (SingleEdit);
				edit = FALSE;}	
    		
//════════════════════════════════════════════════════════════════════════════════════════╣
      	}	//END OF BUILDTRACK	  														  ║
//════════════════════════════════════════════════════════════════════════════════════════╣   		

    	if(BuildMods){
        if(get_val(R2)){                 
		     	combo_run(WALL);}                
		if(get_val(R1)){                 
	         	combo_run(FLOOR);}                
		if(get_val(L2)){                 
		     	combo_run(STAIRS);}               
    	if(get_val(L1)){                 
	         	combo_run(ROOF);}
		if(get_val(SQUARE)){                 
		     	combo_run(TRAP);}
		if(get_val (L2) && get_ptime(L2)>500){
				DoGzRuSH = TRUE;
				combo_stop  (STAIRS);
				combo_run (DoGzRuSH);}
		if(DoGzRuSH){
		if(abs(get_val(RX))>65 || abs(get_val(RY))>65 || event_release (L2)){		
				DoGzRuSH = FALSE;
				combo_stop (DoGzRuSH);}}     	
		if(get_val(L2) && get_val(SHARE)){
				BLOCK (SHARE);
				combo_run (SingleEditShot);}
		if(get_val(L2) && get_val(OPTIONS)){
				BLOCK (OPTIONS);
				combo_run (SingleEdit);}

//════════════════════════════════════════════════════════════════════════════════════════╣
      	}	//END OF BUILDMODS	  														  ║
//════════════════════════════════════════════════════════════════════════════════════════╣
//════════════════════════════════════════════════════════════════════════════════════════╣
      	}	//END OF MAIN	  														      ║
//════════════════════════════════════════════════════════════════════════════════════════╣			


/*+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-*
| | | | |C|O|M|B|O| |S|E|C|T|I|O|N| | | | | | | | | | | | | | | | | | | | | | | | | | | 
*-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+*/	
	combo AAS{
		set_val(RY, 1 * - AS);
		wait(AW);
		set_val(RX, 1 * - AS);
		wait(AW);
		set_val(RY,xy_val(10,AS));
		wait(AW);
		set_val(RX,xy_val(9,AS));
		wait(AW);
}
	combo AA {
		set_val(AIM, 100);
		wait(AAH);
		set_val(AIM, 0);
		wait(AAR);
}
	combo SHOTGUNSHOT {
       	combo_run(AAS);
       	combo_run(AA);
		set_val(FIRE, 100);
		wait(30);	
       	set_val(FIRE, 0);
    	wait(20);
}
	combo PUMPWALL {
		combo_run(AAS);
		combo_run(AA);
		wait((AAH+AAR)/2);
		set_val(FIRE,100);
		wait(25);
        set_val(FIRE,0);
        set_val(BUILD,100);
        wait(20);
        set_val(R2,100);
        wait(50);
        set_val(BUILD,100);
        wait(50);
}
 	combo PUMPFLOOR {    
       	combo_run(AAS);
		combo_run(AA);
		wait(AAH+AAR/2);
		set_val(FIRE,100);
		wait(20);	
       	set_val(BUILD,100);
		wait(20);
		set_val(JUMP,100);
		wait(25);
		set_val(R1,100);
		wait(25);
		set_val(R2,100);
		wait(50);
		set_val(BUILD,100);
		wait(50);
		set_val(BUILD,0);
}
	combo CONFIRM{
		set_val(CONFIRM, 100);
		wait(28);
		set_val(CONFIRM, 0);
}
	combo SINGLE {
		set_val(SELECT, 100);
		wait(30);	
       	set_val(SELECT, 0);
    	wait(20);
    	set_val(CONFIRM, 100);
		wait(28);
		set_val(CONFIRM, 0);
}
	combo DOUBLE {
		set_val(SELECT, 100);
		wait(20);
		set_val(SELECT, 0);
		set_val(CONFIRM, 100);
		wait(28);
		set_val(CONFIRM, 0);
		wait(12);
		wait(100);
		set_val(EDIT2, 100);
		wait(20);
		set_val(SELECT, 100);
		wait(12);
		set_val(SELECT, 0);
		set_val(EDIT2, 0);
		wait(8);
		set_val(CONFIRM, 100);
		wait(28);
		set_val(CONFIRM, 0);
}
	combo GP {
		set_val(CROUCH, 100);
		wait(45);
		set_val(CROUCH ,0);
		combo_run(AAS);
		combo_run(AA);
   		wait(65);
		set_val(FIRE, 100);
		wait(15); 
		wait(10);
		set_val(CROUCH, 100);
		wait(15);
		set_val(CROUCH,0); 
		wait(GPW);
}
	combo RF{                                                                            
		set_val(FIRE, 100);                                                                     
		wait(120);                                                                                   
		set_val(FIRE, 0);                                                                       
		wait(RFW);
}
	combo STF {
    	set_val(LX,80);
   		wait(STFW);
    	set_val(LX,-80);
   		wait(STFW);
}
	combo DS{
    	wait (50)
		set_val(CROUCH,100);		
		wait(DSD);
		set_val(CROUCH,0);
}
	combo JS{
    	set_val(JUMP,100);
    	wait(JSW);
    	set_val(JUMP,0);
}
	combo WALL{
   		set_val(R2, 100);
   		wait (50);
   		set_val(R2, 0);
   		wait (50);
}
	combo FLOOR{
   		set_val(R1, 100);
   		wait (50);
   		set_val(R1, 0);
   		wait (50);
}
	combo STAIRS{
   		set_val(L2, 100);
   		wait (50);
   		set_val(L2, 0);
   		wait (50);
}
	combo ROOF{
   		set_val(L1,100);
   		wait (50);
   		set_val(L1,0);
   		wait (50);
}
	combo TRAP{
   		set_val(SQUARE,100);
   		wait (50);
   		set_val(SQUARE,0);
   		wait (50);
}
	combo SingleEdit {
		set_val(EDIT2,100);
		wait(12);
		set_val(SELECT,100);
		wait(12);
		set_val(SELECT,0);
		set_val(EDIT2,0);
		wait(12);
		set_val(CONFIRM,100);
		wait(12);
		set_val(CONFIRM,0);
		set_click(PICKAXE,1,0);
		wait(12);
		set_click(PICKAXE,1,0);
}
	combo SingleEditShot {
    	set_val(EDIT2, 100);
    	wait(220);
    	set_val(SELECT, 100);
    	set_val(EDIT2, 0);
    	wait(50);
    	set_val(SELECT, 0);
    	wait(50);
       	combo_run(AA);
    	set_val(FIRE, 100);
       	wait(700);
    	set_val(FIRE, 0);
    	set_val(AIM, 0);
    	set_val(CONFIRM, 100);
    	wait(40);
    	set_val(CONFIRM, 0);
    	wait(50);
    	set_val(SELECT, 100);
    	wait(40);
    	set_val(SELECT, 0);
    	set_val(EDIT2, 100);
    	wait(50);
    	set_val(EDIT2, 0);
    	wait(40);
    	set_val(RESET, 100);
    	wait(40);
    	set_val(RESET, 0);
    	set_val(CONFIRM, 100);
   	 	wait(40);
    	set_val(CONFIRM, 0);
    	wait(10);
    	set_val(PICKAXE, 100);
    	wait(40);
    	set_val(PICKAXE, 0);
    	wait(40);
    	set_val(PICKAXE, 100);
    	wait(40);
    	set_val(PICKAXE, 0);
    	wait(20);
}
	combo DoGzRuSH {
		set_val(L2, 100);
		wait(30);
		set_val(L2, 0);
		set_val(L2, 100);
		wait(30);
		set_val(L2, 0);
		set_val(L2, 100);
		wait(30);
		set_val(L2, 0);
		set_val(L2, 100);
		wait(30);
		set_val(L2, 0);
		wait(30);
		set_val(L1,100);
		wait(350);
		set_val(EDIT2,100);
		wait(30);
		set_val(EDIT2,0);
		wait(30);
		set_val(SELECT, 100);
		wait(30);	
		set_val(SELECT, 0);
    	wait(20);
    	set_val(CONFIRM, 100);
		wait(30);
		set_val(CONFIRM, 0);
		set_val(L2, 100);
		wait(30);
		set_val(L2, 0);
		set_val(L2, 100);
		wait(30);
		set_val(L2, 0);
		set_val(L2, 100);
		wait(30);
		set_val(L2, 0);
		set_val(L2, 100);
		wait(30);
		set_val(L2, 0);
		wait(30);
		set_val(L2, 100);
		wait(30);
		set_val(L2, 0);
		set_val(L2, 100);
		wait(30);
		set_val(L2, 0);
		set_val(L2, 100);
		wait(30);
		set_val(L2, 0);
		set_val(L2, 100);
		wait(30);
		set_val(L2, 0);
		wait(30);	
		set_val(L2, 100);
		wait(30);
		set_val(L2, 0);
		set_val(L2, 100);
		wait(30);
		set_val(L2, 0);
		set_val(L2, 100);
		wait(30);
		set_val(L2, 0);
		set_val(L2, 100);
		wait(30);
		set_val(L2, 0);
		wait(30);
		set_val(L1,100);
		wait(350);
		set_val(EDIT2,100);
		wait(30);
		set_val(EDIT2,0);
		wait(30);
		set_val(SELECT, 100);
		wait(30);	
    	set_val(SELECT, 0);
    	wait(20);
    	set_val(CONFIRM, 100);
		wait(30);
		set_val(CONFIRM, 0);
		set_val(L2, 100);
		wait(300);
}
	combo DoGzFLiP {
  		set_val(EDIT2,100);
  		wait(30);
    	set_val(SELECT,100);
        set_val(RY,100);
   	    wait(110);
    	set_val(SELECT,100);
    	set_val(RX,80);
    	wait(90);
    	set_val(SELECT,100);
    	set_val(RY,-100);
    	wait(90);
    	set_val(SELECT,100);
    	set_val(RX,-80);
    	wait(90);
    	set_val(SELECT,0);
     	set_val(CONFIRM,100);
		wait(30);
		set_val(CONFIRM,0);
}
	combo RESET{
		set_val(EDIT2, 100);
		wait (50)
		set_val(RESET,100);		
		wait(50);
		set_val(RESET,0); 	  
}
	combo master {
		wait(WAIT);
		set_val(button, 100);
		wait(28);
		set_val(button, 0);
		wait(28);
		i = i + 1;
}
	combo LEDFLOW {
    	LED(2,0,2,0);
    	wait(100);
    	LED(0,0,0,0);
    	wait(100);
    	LED(0,0,0,2);
    	wait(100);
    	LED(0,0,0,0);
    	wait(100);
    	LED(0,2,2,0);
    	wait(100);
    	LED(0,0,0,0);
    	wait(100);
    	LED(2,0,0,2);
    	wait(100);
    	LED(0,0,0,0);
    	wait(100);
    	LED(2,0,0,0);
    	wait(100);
    	LED(0,0,0,0);
    	wait(100);
    	LED(2,2,2,0);
    	wait(100);
    	LED(0,0,0,0);
    	wait(100);
    	LED(2,2,2,2);
    	wait(100);
}
	combo LEDFLOW1 {
    	LED(2,0,2,0);
    	wait(100);
       	LED(0,0,0,2);
    	wait(100);
       	LED(0,2,2,0);
    	wait(100);
}
	combo LEDFLOW2 {
       	LED(2,0,0,2);
    	wait(100);
       	LED(2,0,0,0);
    	wait(100);
    	LED(2,2,2,0);
    	wait(100);
       	LED(2,2,2,2);
    	wait(100);
}
	combo VIBRATE{
     	wait(150);
     	set_rumble(1,80);
     	wait(520);
     	reset_rumble();
} 
	combo LOGO{	
		rect_oled(12,10,10,10,1,1);	
		rect_oled(21,10,10,10,1,1);	
		rect_oled(31,10,10,10,1,1);	
		rect_oled(40,10,10,10,1,1);
		line_oled(12,52,40,20,10,1);
		rect_oled(12,51,10,10,1,1);
		rect_oled(21,51,10,10,1,1);
		rect_oled(31,51,10,10,1,1);
		rect_oled(40,51,10,10,1,1);	
		rect_oled(52,10,10,10,1,1);
		rect_oled(62,10,10,10,1,1);
		rect_oled(72,10,10,10,1,1);
		rect_oled(52,20,10,10,1,1);	
		rect_oled(52,22,10,10,1,1);		
		rect_oled(52,31,10,10,1,1);
		rect_oled(62,31,10,10,1,1);
		rect_oled(72,31,10,10,1,1);
		rect_oled(52,40,10,10,1,1);
		rect_oled(52,42,10,10,1,1);	
		rect_oled(52,51,10,10,1,1);
		rect_oled(62,51,10,10,1,1);
		rect_oled(72,51,10,10,1,1);
		rect_oled(84,51,10,10,1,1);
		rect_oled(84,50,10,10,1,1);
		rect_oled(84,40,10,10,1,1);
		rect_oled(84,30,10,10,1,1);
		rect_oled(84,20,10,10,1,1);
		rect_oled(84,10,10,10,1,1);
		line_oled(110,60,88,10,10,1);
		rect_oled(112,10,10,10,1,1);
		rect_oled(112,20,10,10,1,1);
		rect_oled(112,30,10,10,1,1);
		rect_oled(112,40,10,10,1,1);
		rect_oled(112,45,10,10,1,1);
		rect_oled(112,50,10,10,1,1);
		wait (4000);
		BANNER = TRUE;
}			
/*-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
| | | | | | | | |F|U N|C|T|I|O|N S| | | | | | | | | | | | | | | | | | | | | | | | | | |  
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+*/

	function DYNAMICAIMABUSE(ABUSE) {  
	if (ABUSE) {
	if (abs(get_val(9)) < 20 || abs(get_val(10)) < 20) {
		 AAH = AIMABUSE;
		 AAR = AIMABUSEWAIT;
}
	if (abs(get_val(9)) > 20 < 40 || (abs(get_val(10)) > 20 < 40)) {
		 AAH = AIMABUSE - 9 + DYNA;
		 AAR = AIMABUSEWAIT - 8 + DYNA;
}
	if (abs(get_val(9)) > 40 < 60 || (abs(get_val(10)) > 40 < 60)) {
		AAH = AIMABUSE - 25 + DYNA;
		AAR = AIMABUSEWAIT - 12 + DYNA;
}
	if (abs(get_val(9)) > 60 < 80 || (abs(get_val(10)) > 60 < 80)) {
		AAH = AIMABUSE - 35 + DYNA;
		AAR = AIMABUSEWAIT - 22 + DYNA;
}
	if (abs(get_val(9)) > 80 || (abs(get_val(10)) > 80)) {
		AAH = AIMABUSE - 60 + DYNA;
		AAR = AIMABUSEWAIT - 10 + DYNA;
}
	if (abs(get_val(9)) < 20 || abs(get_val(10)) < 20) {
		AAH = AIMABUSE;
		AAR = AIMABUSEWAIT;}}
}
	function set_click(B, Num, Wait) {
		WAIT = Wait;
		i = 0;
		button = B;
		num = Num;
		a = TRUE;
}     		
	function progression(f_val,f_min,f_max,f_inc,f_dir,f_idx) {
    if(f_dir) {
        f_val += f_inc;
    if(f_val <= f_max)  
    return f_val;
    if(f_val > f_max) {
        val_idx[f_idx] = 0;
    return f_val - f_inc;}
}
	else{
        f_val -= f_inc;    
    if(f_val >= f_min)  
    	return f_val;
    if(f_val < f_min) {
   		 val_idx[f_idx] = 1;
         return f_val + f_inc;}
} 
   		 return FALSE;    
}
	function xy_val(f_axis,f_val) {
    if(abs(get_val(f_axis)) < release)
       	 return f_val;
    return get_val(f_axis);
}
function PolarFlow(PFB,PSV,PFV,PV,PF,PID) {
    	if(PF) {
       		PFB += PV;
    	if(PFB <= PFV)  
    	return PFB;
    	if(PFB > PFV) {
        	PVID[PID] = 0;
    	return PFB - PV;}
}
		else{
        	PFB -= PV;    
    	if(PFB >= PSV)  
    	return PFB;
    	if(PFB < PSV) {
    		PVID[PID] = 1; 
        return PFB + PV;}
} 
   		return FALSE;    
}  
	function save_pvars () {
 	if (ADJUST){
       	set_pvar(PVAR_1,AIMASSISTPOS);
		set_pvar(PVAR_2,AIMASSISTNEG);
		set_pvar(PVAR_3,ASSISTWAIT);
		set_pvar(PVAR_4,AIMABUSE);
		set_pvar(PVAR_5,AIMABUSEWAIT);
		set_pvar(PVAR_6,DYNA);

		}	    
}
	function BLOCK (BUTTON) {
    if (!get_val(BUTTON)) 
    return; 
    	set_val(BUTTON, 0);
}
    function LED(a,b,c,d) {
    	set_led(LED_1,a);
    	set_led(LED_2,b);
    	set_led(LED_3,c);
    	set_led(LED_4,d);
}
	function EDITNUMBER(DIGIT,FDIGIT){
	if(DIGIT < 0) {
		putc_oled(NO,NEG);
		NO += 1;
		DIGIT = abs(DIGIT);
		COUNT = 1;
		}
	else COUNT = 0;
	if(FDIGIT == 4){
		putc_oled(NO,REFERENCE[DIGIT / 1000]);
		DIGIT = DIGIT % 1000;
		NO +=  1;
}
	if(FDIGIT >= 3){
		putc_oled(NO,REFERENCE[DIGIT / 100]);
		DIGIT = DIGIT % 100;
		NO +=  1;
}
	if(FDIGIT >= 2){
		putc_oled(NO,REFERENCE[DIGIT / 10]);
		DIGIT = DIGIT % 10;
		NO += 1;
		}
		putc_oled(NO,REFERENCE[DIGIT]);
		puts_oled(CENTER(FDIGIT + COUNT,1),10,2,NO,1);    
		NO = 1;
} 
	function NUMBER(NUM){
    	NUM = abs(NUM);
    if(NUM / 1000 > 0) return 4;
    if(NUM /  100 > 0) return 3;
    if(NUM /   10 > 0) return 2;
    return 1;
}    
	function CENTER(CHAR,SIZE){
    	ADJUST =  CHAR * FONT_STATS[SIZE][FONT_W];
    	ADJUST = (OLED_W - ADJUST) / 2;
    return ADJUST;
}
/*
					  $$$$$$$$
			   $$$$$$$________$$$$$$$$$
_____________$$________________________$$$$
____________$$_____________________________$$
___________$__________________________________$$
___________$$___________________________________$$
__________$$__$$______________________$$__________$$
________$$__$$___$$$$_________$$$$____$$__________$$$$
______$$___$$__$$$$__$$_____$$$$__$$_$$_____________$$$
______$$___$$____$$$$_________$$$$___$$_______________$$
______$$___$$________________________$$_______________$$
______$$____$$_______________________$$_____________$$
________$$__$$____$$$$$$_____________$$___________$$$
________$$__$$__$$______$$___________$$_________$$
________$$__$$__$$______$$___________$$_______$$
__________$$$$____$$$$$$_____________$$$$____$$$$
__________$$$$_____________________$$__$$____$$$
___________$$_$$$$$$$$$$$$_____$$$$______$$$$_$$
_____________$$___$$______$$$$$_______________$$
_____________$$_____$$$$$$$____________________$$
_____________$$________________________________$$
____________$$_________________________________$$
____________$$_________________________________$$
____________$$___________________________________$
____________$$___________________________________$$
__________$$_________________________$$___________$
__________$$__________$$___________$$_____________$$
________$$__$$________$$_________$$_______________$$
______$$____$$__________$$_______$$_______________$$
______$$____$$____________$$___$$_________________$$
____$$______$$_____________$$_$$_______$$_________$$
____$$______$$________$$____$$$________$$_________$$
____$$______$$________$$____$$$_______$$__________$$
____$$______$$________$$_______________$$__________$$
____$$______$$________$$_______________$$____________$
_$$$$_______$$________$$_______________$$____________$$
$___$$______$$________$$$$___________$$$$____________$$
$___$$______$$________$$__$$_______$$__$$____________$$
_$$$$$______$$________$$____$$___$$_____$$___________$$
____$$______$$________$$______$$_______$$___________$$
____$$______$$________$$_____$$________$$___________$$
__$$________$$________$$$$$$$$___$$$$$$__$$_________$$
__$$________$$________$$______$$$______$$$$_________$$
$$________$$__________$$_________$$$$$$__$$__________$
$$______$$__________$$$$$$$$$$$$$$$______$$__________$
$$_$$_$$$__________$$_____________$$$$$$$__$$_________$
_$$$$$$$___________$$______________________$$________$$
_____$$__$$__$$__$$_$______________________$$__________$$
______$$$$__$___$__$$______________________$$____________$
_______$$___$___$__$________________________$$_$__$$__$$__$
_________$$$$$$$$$$__________________________$$_$_$$$$$$$$
*/