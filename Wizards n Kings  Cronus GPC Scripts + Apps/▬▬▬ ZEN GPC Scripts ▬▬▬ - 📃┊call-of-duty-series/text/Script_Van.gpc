/* This Script Created by Library Cronus Scripts on youtube *========================
Check Our VIDEO about this script any new version will be release there in our channel

https://youtu.be/naq4Zzm2Ur8


 Call of Duty Vanguard  V2 by Library Cronus Scripts on youtube
=======================


*For inquiries or help, follow me on Instagram
https://www.instagram.com/lcscripts/
                     
-1___ Aim Assist   AUTO
===================  
   
-2___ Anti Recoil  AUTO  
===================

-3___ Rapid Fire  L2 + UP
===================

-4___ Auto Run   L2 + DOWN
===================

-5__ Target Tracker AUTO
===================

-6__ Drop Shot L2 + RIGHT
===================

 7__ Half Drop Shot L2 + LEFT
===================


*/
int toms_Target_Tracker = TRUE;
 int AR_Release; 
    int anti_recoil;
    int anti_recoil_left= -10;
    int anti_recoil_right= 1; 

    define ANTI_RECOIL       = 20;
    define ANTI_RECOIL_LEFT  =  10; 
    define ANTI_RECOIL_RIGHT =  7; 
    
    
    
    
    int Y = 80; int PS_Toggle = FALSE; int BF_Speed = 340; int BF_Toggle = FALSE; define CIRCLE = 18; int Crouch_Button = CIRCLE; int COS_Toggle = FALSE; int C = FALSE; int Trigger_Swap = FALSE; int Q = TRUE; int A = TRUE int D = 30;
Â int B = FALSE; int Auto_Run = FALSE; int Speed = 80; int HOLD = 80; main { if(C) if(get_val(4) && get_val(7)) combo_run(DropShot);} combo DropShot { set_val(18,100); wait(HOLD); set_val(18,0); wait(Speed);} main { vm_tctrl(-9); if(Trigger_Swap) { swap(PS4_R1, PS4_R2); swap(PS4_L1, PS4_L2); } if(toms_Target_Tracker){ if(get_val(PS4_L2) && get_val(PS4_R2)){ sensitivity(PS4_RX,0,tt_aim_speed); sensitivity(PS4_RY,0,tt_aim_speed); } } if(get_val(PS4_L2) && event_press(PS4_RIGHT)) { C=!C; if(C){ combo_run(Flash_ON); } else combo_run(Flash_OFF); } if(get_val(PS4_L2) && event_press(PS4_DOWN)) { Auto_Run=!Auto_Run; if(Auto_Run){ combo_run(Flash_ON); } else combo_run(Flash_OFF); } if(get_val(PS4_L2) && event_press(PS4_LEFT)) { COS_Toggle=!COS_Toggle; if(COS_Toggle){ combo_run(Flash_ON); } else combo_run(Flash_OFF); } if(PS_Toggle && get_val(PS4_R2) && get_ptime(PS4_R2) > Y) set_val(CIRCLE,100); if(BF_Toggle && get_val(PS4_R2)) combo_run(BF); if(COS_Toggle && event_press(PS4_R2)) { combo_run(COS); } if (Auto_Run) { if((get_val(PS4_LY)) < -95) { combo_run(Auto_Run); }} if (A) { if (get_val(PS4_L2)) combo_run(Auto_Aimm); else combo_stop(Auto_Aimm); if(get_val(4)) { combo_run(AntiRecoil); } AR_Release = ANTI_RECOIL + 20; if(abs(get_val(9)) > 21 || abs(get_val(10)) > 21) { combo_stop (AntiRecoil); combo_stop(Auto_Aimm); } } if (Q) { if(get_val(PS4_L2) && get_val(PS4_R2)) { SnapShot_hold = 140; SnapShot_rest = 0; combo_run(SnapShot);} else if (combo_running(SnapShot)) { combo_stop(SnapShot);} } if(get_val(PS4_L2) && event_press(PS4_UP)) { combo_run (vibrate); B=!B; if(B){ combo_run(Flash_ON); } else combo_run(Flash_OFF); } if(B) { if(get_val(PS4_R2)) { combo_run (B); }} if(get_val(PS4_R2)>=1) set_val(PS4_R2, 100); if(get_val(PS4_L2)>=1) set_val(PS4_L2, 100); hold_time = 500 / RATE_OF_FIRE; rest_time = hold_time - 20; if(rest_time < 0) rest_time = 0;} combo vibrate{ wait(300); reset_rumble(); } combo BF { set_val(PS4_R2,100); wait(40); set_val(PS4_R2,0); wait(100); set_val(PS4_R2,100); wait(40); set_val(PS4_R2,0); wait(100); set_val(PS4_R2,100); wait(40); set_val(PS4_R2,0); wait(BF_Speed);} combo COS { set_val(Crouch_Button,100); wait(100);} combo B { set_val(PS4_R2, 100); wait(hold_time); set_val(PS4_R2, 0); wait(rest_time); set_val(PS4_R2, 0); } combo Auto_Aimm { set_val(10, D * -1); wait(20) set_val(9, D); wait(20) set_val(10, D); wait(20) set_val(9, D * -1); wait(20) } combo Auto_Run { set_val(PS4_L3, 100); wait(40); set_val(PS4_L3, 0); wait(40); set_val(PS4_L3, 0); } combo SnapShot { set_val(PS4_L2, 100); wait(SnapShot_hold); set_val(PS4_L2, 0); wait(SnapShot_rest);} combo AntiRecoil { anti_recoil = get_val(10) + ANTI_RECOIL; if(anti_recoil > 100) anti_recoil = 100;set_val(10, anti_recoil); anti_recoil_left = get_val(9) -ANTI_RECOIL_LEFT; if(anti_recoil_left > 100) anti_recoil_left = 100;set_val(9, anti_recoil_left); anti_recoil_right = get_val(9) +ANTI_RECOIL_RIGHT; if(anti_recoil_right > 100) anti_recoil_right = 100;set_val(9, anti_recoil_right); } int tt_aim_speed = 95; int RATE_OF_FIRE = 50; int Col_ind; int hold_time; int rest_time; int SnapShot_hold; int SnapShot_rest; combo Flash_ON { LED(0,0,2,0); set_rumble(RUMBLE_A,100); wait(400); reset_rumble(); reset_leds();} combo Flash_OFF { LED(0,2,0,0); set_rumble(RUMBLE_B,100); wait(200); reset_rumble(); LED(0,0,0,0); wait(100); set_rumble(RUMBLE_B,100); LED(0,2,0,0); wait(200); reset_rumble(); reset_leds();} function LED(a,b,c,d) { set_led(LED_1,a); set_led(LED_2,b); set_led(LED_3,c); set_led(LED_4,d);}
