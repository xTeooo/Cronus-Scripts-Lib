/* 		  		F O R  Z E N  O N L Y -  V E R S I O N  3
____o__  ____o__  ____o__  ____o__  ____o__  ____o__  ____o__  ____o__  ____o__  ____o__

	 _____ _____ ____     _____ __    _____ _____ _____    _____ _____ _____ _ 
	|     |     |    \   | __  |  |  |  _  |     |  |  |  |     |  _  |   __|_|
	|   --|  |  |  |  |  | __ -|  |__|     |   --|    -|  |  |  |   __|__   |_ 
	|_____|_____|____/   |_____|_____|__|__|_____|__|__|  |_____|__|  |_____|_|
			    __________  __    ____     _       _____    ____ 
			   / ____/ __ \/ /   / __ \   | |     / /   |  / __ \
			  / /   / / / / /   / / / /   | | /| / / /| | / /_/ /
			 / /___/ /_/ / /___/ /_/ /    | |/ |/ / ___ |/ _, _/ 
			 \____/\____/_____/_____/     |__/|__/_/  |_/_/ |_|  
  __   ___  __   ___  ___  __  ___                     ___  __    ___    __       
 |__) |__  |__) |__  |__  /  `  |      /\  |  |\/|    |__  |  \ |  |  | /  \ |\ | 
 |    |___ |  \ |    |___ \__,  |     /~~\ |  |  |    |___ |__/ |  |  | \__/ | \|                                                               
                             
 		 A  M O D E R N  W A R F A R E  C R O S S  O V E R  S C R I P T 
 		 
____o__  ____o__  ____o__  ____o__  ____o__  ____o__  ____o__  ____o__  ____o__  ____o__

		  T H E  N O .  1  C O D  S C R I P T   W O R L D W I D E
		  
		          SUPREME BOT V3 (UNIVERSAL WARZONE-COLD WAR) 
		  
		                    SUPREME-WZ (YOUTUBE)
		 _______  ______ _______ _______ _______ _______ __   _ _______
		 
____o__  ____o__  ____o__  ____o__  ____o__  ____o__  ____o__  ____o__  ____o__  ____o__

INSTRUCTIONS/MANUAL		 : SCROLL DOWN! READ THE GOD-DAMN-MANUAL!
BUTTON / STICK LAYOUT    : ALL BUTTON & STICK LAYOUTS ARE SUPPORTED
BUMPERS / TRIGGERS       : DEFAULT & FLIPPED ARE SUPPORTED
PLATFORMS                : XBOX ONE, PS4 (works on both consoles)
DISCORD/FAQ			     : https://discord.gg/9zdb8fTZD2
OLED MENU/DISPLAY		 : NOT SUPPORTED, HENCE ADVANCED USERS ONLY 
____o__  ____o__  ____o__  ____o__  ____o__  ____o__  ____o__  ____o__  ____o__  ____o__

	  						  S T I C K Y  A I M 
							  O P T I M I S E D   
							  
			B E S T  A I M  A S S I S T  O N  C O D  B O  C O L D  W A R 
    	W A N T  P R O O F?  L O O K  I N  M Y  D I S C O R D  C H A N N E L !
____o__  ____o__  ____o__  ____o__  ____o__  ____o__  ____o__  ____o__  ____o__  ____o__

THIS IS THE BEST AIM ASSIST ON COD. THE SECERET BEHIND IT? 
WELL IT IS NOT EVEN A SECRET TO BEGIN WITH. IT IS THE COMBINATION WITH THE AIM CORRECTIONS
THAT DOES THE TRICK. SO MAKE SURE YOU FOLLOW THE INSTRUCTIONS TO ENJOY THE BEST AIM ASSIST 
AVAILABLE ON BOTH ZEN & MAX. 
____o__  ____o__  ____o__  ____o__  ____o__  ____o__  ____o__  ____o__  ____o__  ____o__


"...your script by far is the best I’ve used."


"I just tested your new easy recoil setup on Cold War and holy sheeeeesh dude. You can get 
almost a laser beam with it"


"You truly have the best script out there bro, I’ve been using many scripts that are scams 
and yours is truly genuine. I’ll definitely donate to you my man. All i had to do was be 
patient, took my time adjusting the values to my play style and it turned out perfect"


"Gotta say... that is one of the strongest AA ive seen in a script (with default settings)"


"Just donated another 20 bro. Only downloaded the script last night, blown my mind since.. great work!"


____o__  ____o__  ____o__  ____o__  ____o__  ____o__  ____o__  ____o__  ____o__  ____o__

 
 
 %AppData%\CronusZen
								
____o__  ____o__  ____o__  ____o__  ____o__  ____o__  ____o__  ____o__  ____o__  ____o__

						
    _ _____ _____ ___ _  _ _____ ___ ___  _  _   _ _  
   /_\_   _|_   _| __| \| |_   _|_ _/ _ \| \| | | | | 
  / _ \| |   | | | _|| .` | | |  | | (_) | .` | |_|_| 
 /_/ \_\_|   |_| |___|_|\_| |_| |___\___/|_|\_| (_|_) 
              
			  ___ ___   _   ___  
			 | _ \ __| /_\ |   \ 
			 |   / _| / _ \| |) |
			 |_|_\___/_/ \_\___/ 
			 |_   _| || |_ _/ __|
			   | | | __ || |\__ \
			   |_| |_||_|___|___/
 
BEFORE ANYTHING CLEAN YOUR ZEN DEVICE MEMORY AND PREFORM A FACTORY RESET.
NOW ALSO CLEAN YOUR ZEN WINDOWS FOLDER. YOU CAN USE THIS TO SCRUB YOUR 
WINDOWS FOLDER:

https://tinyurl.com/scrub-zen

YOU MAY IGNORE THE WARNINGS YOU GET FROM WINDOWS - THIS SCRUBBER IS 
COMPLETELY SAVE AND HARMLESS (WINDOWS DOESN`T REGOGNIZE IT HENCE THE WARNINGS). 

IF YOU FAIL TO DO TO SCRUB AND CLEAN YOUR ZEN DEVICE, THEN YOU WILL RUN INTO 
PROBLEMS WITH THIS OR ANY OTHER SCRIPTS FOR THAT MATTER. 

YOU CAN ALSO DELETE THE FOLDER MANUALLY:

To find it use "Type hear to search" 

Search for:

%AppData%\CronusZen
                                                                                                
RRRRRRRRRRRRRRRRR   EEEEEEEEEEEEEEEEEEEEEE               AAA               DDDDDDDDDDDDD        
R::::::::::::::::R  E::::::::::::::::::::E              A:::A              D::::::::::::DDD     
R::::::RRRRRR:::::R E::::::::::::::::::::E             A:::::A             D:::::::::::::::DD   
RR:::::R     R:::::REE::::::EEEEEEEEE::::E            A:::::::A            DDD:::::DDDDD:::::D  
  R::::R     R:::::R  E:::::E       EEEEEE           A:::::::::A             D:::::D    D:::::D 
  R::::R     R:::::R  E:::::E                       A:::::A:::::A            D:::::D     D:::::D
  R::::RRRRRR:::::R   E::::::EEEEEEEEEE            A:::::A A:::::A           D:::::D     D:::::D
  R:::::::::::::RR    E:::::::::::::::E           A:::::A   A:::::A          D:::::D     D:::::D
  R::::RRRRRR:::::R   E:::::::::::::::E          A:::::A     A:::::A         D:::::D     D:::::D
  R::::R     R:::::R  E::::::EEEEEEEEEE         A:::::AAAAAAAAA:::::A        D:::::D     D:::::D
  R::::R     R:::::R  E:::::E                  A:::::::::::::::::::::A       D:::::D     D:::::D
  R::::R     R:::::R  E:::::E       EEEEEE    A:::::AAAAAAAAAAAAA:::::A      D:::::D    D:::::D 
RR:::::R     R:::::REE::::::EEEEEEEE:::::E   A:::::A             A:::::A   DDD:::::DDDDD:::::D  
R::::::R     R:::::RE::::::::::::::::::::E  A:::::A               A:::::A  D:::::::::::::::DD   
R::::::R     R:::::RE::::::::::::::::::::E A:::::A                 A:::::A D::::::::::::DDD     
RRRRRRRR     RRRRRRREEEEEEEEEEEEEEEEEEEEEEAAAAAAA                   AAAAAAADDDDDDDDDDDDD        
                                                                                                                        
                                                                                                
TTTTTTTTTTTTTTTTTTTTTTTHHHHHHHHH     HHHHHHHHHIIIIIIIIII   SSSSSSSSSSSSSSS                      
T:::::::::::::::::::::TH:::::::H     H:::::::HI::::::::I SS:::::::::::::::S                     
T:::::::::::::::::::::TH:::::::H     H:::::::HI::::::::IS:::::SSSSSS::::::S                     
T:::::TT:::::::TT:::::THH::::::H     H::::::HHII::::::IIS:::::S     SSSSSSS                     
TTTTTT  T:::::T  TTTTTT  H:::::H     H:::::H    I::::I  S:::::S                                 
        T:::::T          H:::::H     H:::::H    I::::I  S:::::S                                 
        T:::::T          H::::::HHHHH::::::H    I::::I   S::::SSSS                              
        T:::::T          H:::::::::::::::::H    I::::I    SS::::::SSSSS                         
        T:::::T          H:::::::::::::::::H    I::::I      SSS::::::::SS                       
        T:::::T          H::::::HHHHH::::::H    I::::I         SSSSSS::::S                      
        T:::::T          H:::::H     H:::::H    I::::I              S:::::S                     
        T:::::T          H:::::H     H:::::H    I::::I              S:::::S                     
      TT:::::::TT      HH::::::H     H::::::HHII::::::IISSSSSSS     S:::::S                     
      T:::::::::T      H:::::::H     H:::::::HI::::::::IS::::::SSSSSS:::::S                     
      T:::::::::T      H:::::::H     H:::::::HI::::::::IS:::::::::::::::SS                      
      TTTTTTTTTTT      HHHHHHHHH     HHHHHHHHHIIIIIIIIII SSSSSSSSSSSSSSS                        
                                                                                                

____o__  ____o__  ____o__  ____o__  ____o__  ____o__  ____o__  ____o__  ____o__  ____o__
													   
						   ___ ___   _   ___  
						  | _ \ __| /_\ |   \ 
						  |   / _| / _ \| |) |
						  |_|_\___/_/ \_\___/ 
						  |_   _| || |_ _/ __|
						    | | | __ || |\__ \
						    |_| |_||_|___|___/                    

						   EASY RECOIL SET-UP
							   version 1.2
					(update: improved reading time values,
						  removed rumble input)

---> start a custom game with your weapon (and attachments) of choice

Step 1: Acticate the recoil profile you want to edit. 

Step 2: Hold d_pad down to enter "edit menu" (led will switch off once active)

Step 3: Set up recoil values (in edit mode):

1. double tap d-pad down (led will blink)
2. hold ads and fire your weapon until the clip is empty (this calibrates time value)
3. Now, hold ads and then fire at a wall. 

   #### and whilst firing: counter the recoil you experience with you thumbsticks 
   (like you would normally do when you play without a script) #####

4. when your clip is empty, release fire btn whilst you reload 

And repeat step 3 & 4 as many times as needed: with each clip you will
come closer and closer to the correct values

5.. Ready? Tap D-pad UP to exit. 

---> both horizontal as vertical values are autosaved to the activated recoil profile.

Hint: you can still set the values manually on the fly, or even use the on the fly to
fine tune/tweak your anti recoil settings.

____o__  ____o__  ____o__  ____o__  ____o__  ____o__  ____o__  ____o__  ____o__  ____o__


							  ___ ___   _   ___  
							 | _ \ __| /_\ |   \ 
							 |   / _| / _ \| |) |
							 |_|_\___/_/ \_\___/ 
							 |_   _| || |_ _/ __|
							   | | | __ || |\__ \
							   |_| |_||_|___|___/
							                     
IF YOU ARE GOING TO USE THIS SCRIPT, THEN THESE ARE THE SETTINGS FOR YOUR IN-GAME-MENU 
(MAKE THE CHANGES BEFORE YOU PLAY):

-1- HOLD PRONE TO SLIDE (IN COD MW ONLY)
-2- HIGHER YOUR GENERAL SENSITIVTY ON BOTH STICKS (INCREASE WITH AT LEAST 3 POINTS I WOULD SAY, YOU HAVE TO TRY HOW MUCH 
  	YOU INCREASE THIS EXACTLY. TIP: COMPILE THIS SCRIPT 2 OR 3 TIMES ON DIFFERENT SLOTS SO YOU CAN TRY WHICH SLOT WORKS BEST))
-3- DO NOT CHANGE ANY OTHER SENSITIVITY SETTINGS IN THE GAME MENU: MY SCRIPT DOES IT FOR YOU, AND IT  
  	DOES IT SOO MUCH BETTER. BESIDES, THE SCRIPT CONTROLS YOUR SENSITIVITY ALSO
  	THROWING GRENADES, TACTICAL GRENADES AND HELP YOU LOCK DOWN EVEN BETTER ON YOUR ENEMY ONCE
  	YOU OPEND FIRE - SO FOLLOW MY INSTRCUTIONS, TRUST ME I GOT YOU COVERED. AND DON`T BE A PUSSY, 
  	HIGHER YOUR IN-GAME-SENS AS I EXPLAINED (SEE FURTHER DETAILS BELOW). 
-4- DEPENDING ON THE VERSION, ALSO ACTIVATE VIBRATIONS IN THE GAME MENU (JUST LOOK IF THERE ARE ANY INSTRUCTIONS
  	BELOW THAT TELL YOU TO SWITCH THIS ON OR OFF).
  	
  	NUMBERS 2, 3 & 4 ON BOTH COLD WARE AND MODERN WARFARE. 

____o__  ____o__  ____o__  ____o__  ____o__  ____o__  ____o__  ____o__  ____o__  ____o__

IMPORTANT NOTES:

This script will NOT function as expected when you don`t follow through with the instructions.
For example: the cancel reload requires you to calibrate the time value.
If you fail to do this, the cancel reload will not work.
This script is only recommended for advanced users, because I am not supporting OLED display features. 

And, for those who are in doubt: this script is developped for both COD BOCW as for COD MW. That is
the idea behind a cross over script, you should be able to use it for both games. That said, always 
compile one script for COD BOCW and one for COD MW because of the seperate settings, mods and features
for each of the two games.  

COD PAE will advance your gameplay with the highest accuracy and best practice game-control without ever
losing pace. 

Key words: mobility, movement speed, recoil control, aim assist and aim stability – all mods in this script
are custom to the specific COD game mechanics. And: no other script and no game pack does a better job than 
this script (depending on your game style, if you are using this script whilst you only sit in corners - thus
in other words if you are only camping - then you have downloaded the wrong script. This script is written 
for good players and for players that want to become better: only they will benefit the most. 

COD PAE: Perfected over more than 5 years, PAE was written from the ground up with every new COD release to 
make the essential mods for COD play out seemingly with your personal play style.

COD PAE will never, never ever, under no circumstances let you down. That is guaranteed.

THE #1 SCRIPT FOR CALL OF DUTY - 5 MILLION DOWNLOADS WORLDWIDE - THE PERFECT AIM EDITION
_______________________________________

_______________________________________

USER CONFIGURATION
     _              ___
 ___| |_ ___ ___   |_  |
|_ -|  _| -_| . |   _| |_
|___|_| |___|  _|  |_____|
USER CONFIG |_|Sticks, Buttons
CHECK THE STICKS & BUTTONS LAYOUTS BELOW. MAKE SURE THAT YOU FILL 
OUT THE CORRESPONDING NUMBER THAT MATCHES WITH YOUR BUTTON AND STICK LAYOUT
*/
define Buttons = 1;//FILL OUT THE CORRESPONDING NUMBER FROM BELOW
define Sticks = 0; //FILL OUT THE CORRESPONDING NUMBER FROM BELOW
/*
BUTTONS:    DEFAULT=0 || TACTICAL=1 || LEFTY=2 || NOM4D=3 || CHARLIE=4 || ONE HAND GUNSLINGER=5
            BUMPER JUMPER=6 || BUMPER JUMPER TACTICAL=7 || STICK & MOVE=8        

SWAPPED:    DEFAULT=9 || TACTICAL=10 || LEFTY=11 || NOM4D=12 || CHARLIE=13
            ONE_HAND_GUNSLINGER=14 || BUMPER JUMPER=15 || BUMPER JUMPER TACTICAL=16
            STICK & MOVE=17
                  
STICKS:     DEFAULT=0 || SOUTHPAW=1 || LEGACY=2 || LEGACY SOUTHPAW=3 
     _              ___
 ___| |_ ___ ___   |_  |
|_ -|  _| -_| . |  |  _|
|___|_| |___|  _|  |___|
USER CONFIG |_| Mod Menu
  & Settings
*/
int    in_game_menu_sens=14; //PLEASE READ "AIM CORRECTIONS" BELOW ABOUT THIS VALUE
//------------------ -- - --- -   ---- -- -- --    ----  --- -   ---- -- -- --     ---- 
define aim_sens_corrections=1; // [0 = OFF / 1 = ON] ++++++++++do not combine with dynasens++++++++++++++
define dynasens_on=0; // [0 = OFF / 1 = ON] ++++++++++++do not combine with aim_sens_corrections++++++++++++++
// DYNASENS WILL BE REMOVED IN FUTURE SCRIPTS (IT IS A SHIT FOR COD, USE MY AIM CORRECTIONS INSTEAD)
//------------------ -- - --- -   ---- -- -- --     ----  --- -   ---- -- -- --     ---- 
define sticky_aim_assist=1;//[0 = OFF / 1 = ON] strongest aim assist for COD BLACK OPS COLD WAR I tested so far!
int _v=22;//---If you have screen shake lower this value (aim assist value, ps4 users should try 18, or 20
define smart_reload=1;//[0 = OFF / 1 = ON] cancel reload with fire or ads - calibrate reload times to make it work (see below)
int enemy_ping=1; //[0 = OFF / 1 = ON]  on request I added auto ping. 
define ping_type=2; // 0=ping on ADS, 1=ping on fire, 2=ping on ads &fire
define BTN_PING = PS4_LEFT;//button used for ping
define hairtriggers = 1; // [0 = OFF / 1 = ON] 
define default_pr_or_cur_state=0; // [0= when switching recoil profile, recoil is on. 1= when switching, current state = on]
//-----Current state: for example if you were plaving with secondary rapid fire and you would change recoil profile, then the script will
//-----switch to recoil on (and switch rapid fire off). If you fill out 1, instead of 0, the state will not change, only the recoil profile. 
//------------------ -- - --- -   ---- -- -- --     ----  -- - --- -   ---- -- -- --     ---- 
define smart_thumb_stick=2;//[1= Easy Sprint ON / 2 = Easy Sprint ON & Easy Melee, Easy Jump or Easy Prone is ON]
int 	l_stick_click = XB1_B; //[FILL OUT THE BUTTON THAT NEEDS TO BE PRESSED under left stick click]
								// if no other button is suppossed to be pressed then smart_thumb_stick=1!
//------------------ -- - --- -   ---- -- -- --     ----  -- - --- -   ---- -- -- --     ---- 

define walk_tresh= -50;//Easy sprint stick treshhold (-75 = pressed more than 75%)
define StickNoise=10; //Dead Zone value for your thumbsticks (this deadzone value will only active when you fire, 
//--------------------- allowing micro aiming)

define dynamic_RF=0; // do not change this, there is no other option yet in the script. (work in progres)
define in_game_rumble=1; // -hint: do not change! again - work in progress (rumbles in game menu NOT needed at this time)

//-- -- ------- ---- --- COD MW -------------------- -- ------- ---- --- COD MW ------------------
define sprint_cncl_reload=0; // !! see instructions further below !! Playing Cold War? 0/OFF  
define cancel_slide=0;//[0 = OFF / 1 = ON] Whilst sprinting, tap prone to slide. Tap Prone again to cancel slide. 
//						In the game menu activate hold prone to slide. (Modern Warfare Only)/*
define s=0; //Auto Dead Silence (Modern Warfare Only)
//-- -- ------- ---- --- END COD MW -------------------- -- ------- ---- --- END COD MW --------------

/*-- -- ------- ---- --- END OF USER CONFIG ------ -- ------- ---- --- END OF USER CONFIG  -----------


- -- ------- ---- --- INSTRUCTIONS ------ -- ------- ---- --- INSTRUCTIONS  ------------- --- ---- ---

                                                                                                
                                                                                                
RRRRRRRRRRRRRRRRR   EEEEEEEEEEEEEEEEEEEEEE               AAA               DDDDDDDDDDDDD        
R::::::::::::::::R  E::::::::::::::::::::E              A:::A              D::::::::::::DDD     
R::::::RRRRRR:::::R E::::::::::::::::::::E             A:::::A             D:::::::::::::::DD   
RR:::::R     R:::::REE::::::EEEEEEEEE::::E            A:::::::A            DDD:::::DDDDD:::::D  
  R::::R     R:::::R  E:::::E       EEEEEE           A:::::::::A             D:::::D    D:::::D 
  R::::R     R:::::R  E:::::E                       A:::::A:::::A            D:::::D     D:::::D
  R::::RRRRRR:::::R   E::::::EEEEEEEEEE            A:::::A A:::::A           D:::::D     D:::::D
  R:::::::::::::RR    E:::::::::::::::E           A:::::A   A:::::A          D:::::D     D:::::D
  R::::RRRRRR:::::R   E:::::::::::::::E          A:::::A     A:::::A         D:::::D     D:::::D
  R::::R     R:::::R  E::::::EEEEEEEEEE         A:::::AAAAAAAAA:::::A        D:::::D     D:::::D
  R::::R     R:::::R  E:::::E                  A:::::::::::::::::::::A       D:::::D     D:::::D
  R::::R     R:::::R  E:::::E       EEEEEE    A:::::AAAAAAAAAAAAA:::::A      D:::::D    D:::::D 
RR:::::R     R:::::REE::::::EEEEEEEE:::::E   A:::::A             A:::::A   DDD:::::DDDDD:::::D  
R::::::R     R:::::RE::::::::::::::::::::E  A:::::A               A:::::A  D:::::::::::::::DD   
R::::::R     R:::::RE::::::::::::::::::::E A:::::A                 A:::::A D::::::::::::DDD     
RRRRRRRR     RRRRRRREEEEEEEEEEEEEEEEEEEEEEAAAAAAA                   AAAAAAADDDDDDDDDDDDD        
                                                                                                
                                               
                                                                                                
                                                                                                
TTTTTTTTTTTTTTTTTTTTTTTHHHHHHHHH     HHHHHHHHHIIIIIIIIII   SSSSSSSSSSSSSSS                      
T:::::::::::::::::::::TH:::::::H     H:::::::HI::::::::I SS:::::::::::::::S                     
T:::::::::::::::::::::TH:::::::H     H:::::::HI::::::::IS:::::SSSSSS::::::S                     
T:::::TT:::::::TT:::::THH::::::H     H::::::HHII::::::IIS:::::S     SSSSSSS                     
TTTTTT  T:::::T  TTTTTT  H:::::H     H:::::H    I::::I  S:::::S                                 
        T:::::T          H:::::H     H:::::H    I::::I  S:::::S                                 
        T:::::T          H::::::HHHHH::::::H    I::::I   S::::SSSS                              
        T:::::T          H:::::::::::::::::H    I::::I    SS::::::SSSSS                         
        T:::::T          H:::::::::::::::::H    I::::I      SSS::::::::SS                       
        T:::::T          H::::::HHHHH::::::H    I::::I         SSSSSS::::S                      
        T:::::T          H:::::H     H:::::H    I::::I              S:::::S                     
        T:::::T          H:::::H     H:::::H    I::::I              S:::::S                     
      TT:::::::TT      HH::::::H     H::::::HHII::::::IISSSSSSS     S:::::S                     
      T:::::::::T      H:::::::H     H:::::::HI::::::::IS::::::SSSSSS:::::S                     
      T:::::::::T      H:::::::H     H:::::::HI::::::::IS:::::::::::::::SS                      
      TTTTTTTTTTT      HHHHHHHHH     HHHHHHHHHIIIIIIIIII SSSSSSSSSSSSSSS                        
                             
                             (scroll down)                                                                
 
   							  ___ ___   _   ___  
							 | _ \ __| /_\ |   \ 
							 |   / _| / _ \| |) |
							 |_|_\___/_/ \_\___/ 
							 |_   _| || |_ _/ __|
							   | | | __ || |\__ \
							   |_| |_||_|___|___/
							   
______________________________________ MENU ADS ___________________________________________


WITH ADS AND ONE OF THE FOUR D-PAD DIRECTION BUTTONS (UP, DOWN, RIGHT, LEFT) YOU CAN EASILY SELECT DIFFERENT LOAD OUTS
TO MATCH WITH YOU CLASSES IN THE GAME. SO, JUST TO GIVE YOU AN IDEA OF HOW TO USE THE LOADOUT AND COMBINE THEM TO YOUR
CLASSES, HERE SOME EXAMPLES:

LOAD OUT 1(ADS + LEFT)
- 1ST AUTOMATIC WPN (FOR EXAMPLE SMG, ASSAULT)
- 2ND PISTOL (WITH RAPID FIRE)

LOAD OUT 2 (ADS + HOLD LEFT)*
- 1ST AUTOMATIC WPN FOR WHICH YOU WANT TO USE ANTI RECOIL
- 2ND PISTOL  (WITH RAPID FIRE)

LOAD OUT 3: (ADS + UP)
- 1ST AUTOMATIC WPN FOR WHICH YOU WANT TO USE ANTI RECOIL
- 2ND LAUNCHER OR ANYTHING OF CHOICE (BUT WITHOUT ANY MODS)

LOAD OUT 4 (ADS + RIGHT)
- 1ST SEMI-AUTO WPN WITH RAPID FIRE
- 2ND empty OR ANY OTHER WPN THAT YOU USE WITH RAPID FIRE

LOAD OUT 6 (ADS + HOLD RIGHT)*
- 1ST SEMI-AUTO WPN WITH RAPID FIRE AND ANTI RECOIL
- 2ND empty OR ANY OTHER WPN THAT YOU USE WITH RAPID FIRE

LOAD OUT 7: (ADS + DOWN) - THIS IS YOUR NEUTRAL LOADOUT, SO FIRE MODS AND RECOIL ARE OFF
- 1ST ANY WPN WITHOUT ANTI RECOIL AND WITHOUT RAPID FIRE
- 2ND: empty OR SIMILIAR TO PRIMARY 

LOAD OUT 8: (ADS + HOLD DOWN)*
- 1ST SNIPER WITH AUTO BREATH
* = HOLD UNTIL IT RUMBLES FOR THE SECOND TIME
 
 Check out the link for an easy sketch of the loadouts.                                              
     _           _      _   _   _                _ _ 
 ___| |_ ___ ___| |_   | |_| |_|_|___    _ _ ___| |_|
|  _|   | -_|  _| '_|  |  _|   | |_ -|  | | |  _| |_ 
|___|_|_|___|___|_,_|  |_| |_|_|_|___|  |___|_| |_|_|
                                                     

https://tinyurl.com/menu-ads-zen

SO TO RECAP THE LOADS OUT ABOVE, THE D-PAD BUTTONS ARE ORGANISED LIKE THIS:

HOLD ADS +
- TAP UP            = ANTI RECOIL ON / RAPID FIRE OFF (LED: SKYBLUE; PINK; GREEN; OR YELLOW (DEPENDING ON THE PROFILE)
- TAP RIGHT         = RAPID FIRE ON / ANTI RECOIL OFF (LED: RED)
- HOLD RIGHT		= RAPID FIRE ON / ANTI RECOIL ON (LED: COLOR OF SELECTED RECOIL PROFILE, AND BLINK RED WHEN FIRE IS PRESSED)
- TAP LEFT          = RAPID FIRE SECONDARY ON / ANTI RECOIL OFF (blue led = primary wpn, red led is secondary wpn (with RF)
- HOLD LEFT         = RAPID FIRE SECONFARY ON + ANTI RECOIL ON (recoil profile color = primary wpn, red led is secondary wpn (with RF)
- TAP VIEW/SHARE	= AKIMBO ON (you can only switch this on after activating secondary rapid fire (ADS+LEFT) Led flashes 5 times when on.
- TAP DOWN          = RAPID FIRE OFF / ANTI RECOIL OFF / SNIPER OFF (blue led)
- HOLD DOWN		 	= RAPID FIRE OFF / ANTI RECOIL OFF / SNIPER ON (TWO RUMBLES WHEN SWITCHED ON)
- HOLD VIEW/SHARE   = RESET DEFAULTS (to reset aim correction value and reload time value)
- TAP MENU/OPTIONS  = AUTO PING ON/OFF

PRO TIP:
USING RAPID FIRE ON YOUR SECONDARY WEAPON ONLY? RESPAWN WITH THE RELOAD BUTTON EVERYTIME YOU DIE.
THIS WAY YOU WILL ALWAYS BE IN SYNC.

WHEN RAPID FIRE SECONDARY = ON

- TAP "SWITCH WEAPON" shortly TO SWITCH BETWEEN RAPID FIRE AND NORMAL FIRE (RED LED = RAPID FIRE)
- TAP "RELOAD" shortly TO RELOAD
- TO RESET TO YOUR PRIMARY AND SYNC LED COLORS IF YOU DIED USING YOUR SECONDARY WEAPON: HOLD "RELOAD" FOR >250ms
- TO SYNC LEDS AT ANY GIVEN TIME: HOLD SWITCH WEAPON BUTTON FOR LONGER THAN 300ms TO CCLE BETWEEN PRIMARY AND SECONDARY LEDS
- ANY COLOR OTHER THAN THE 2 BELOW     = ANTI RECOIL IS ON
- RED                                  = RAPID FIRE IS ON
- OFF                                  = EDIT MODE IS ON (to enter hold d-pad down until led switches off, to exit tap d-pad up)
- BLUE                                 = NEUTRAL (RAPID FIRE & ANTI RECOIL BOTH OFF)


									  ___ ___   _   ___  
									 | _ \ __| /_\ |   \ 
									 |   / _| / _ \| |) |
									 |_|_\___/_/ \_\___/ 
									 |_   _| || |_ _/ __|
									   | | | __ || |\__ \
									   |_| |_||_|___|___/
                     

____________________________ ANTI RECOIL ________________________________________________

HOLD D_PAD DOWN +
- TAP A / CROSS    -> Profile  2
- TAP B / CIRCLE   -> Profile  3
- TAP X / SQUARE   -> Profile  1 
- TAP Y / TRIANGLE -> Profile  4
When you select a profile - it will rumble the profile number accordingly. 

HOW TO CHANGE ANTI RECOIL VALUES ON THE FLY:

1. ACTIVATE THE ANTI RECCOIL PROFILE YOU WANT TO MODIFY
2. START ANTI RECOIL IF IT IS SWITCHED OFF (HOLD ADS + TAP UP)
3. ENTER THE EDIT MENU -> IN EDIT MODE THE LED WILL BE OFF
4. EDIT VALUES (SEE BELOW)
5. LEAVE EDIT MENU

--> TIME VALUE USING CALIBRATION (option one):

HOLD D-PAD DOWN UNTIL THE LED SWITCHES OFF. NOW DOUBLE TAP DOWN. 
If the led flashes four times and you feel a rumble it means that
you are ready to calibrate. Now all you have to do is AIM + FIRE.
Hold fire until your last bullet, then quickly before the reload animation
starts, release the FIRE button. It falshes 2 times and rumbles to confirm
a succesfull calibration.

--> TIME VALUE (option 2, if you want to do it manually):

HOLD D-PAD DOWN, HOLD THE Y BTN / TRIANGLE AND:

- TAP L1/LB: -100
- TAP L2/LT: -1000
- TAP R1/RB: +100
- TAP R2/RT: +1000

Recommend for many assault & smg`s: 2000/2200
!!! If you skip this step, anti recoil will not work at all !!!

--> START VALUE VERTICAL:
HOLD D-PAD DOWN AND HOLD THE X / SQUARE BUTTON AND:

- TAP L1/LB: -1
- TAP L2/LT: -10
- TAP R1/RB: +1
- TAP R2/RT: +10

Recommend to start your experiment with a value around 30. And the end value around 40.

--> END VALUE VERTICAL:
HOLD D-PAD DOWN AND HOLD THE A / CROSS BUTTON AND:

- TAP L1/LB: -1
- TAP L2/LT: -10
- TAP R1/RB: +1
- TAP R2/RT: +10

--> HORIZONTAL VALUE:
HOLD D-PAD DOWN AND HOLD THE B / CIRCLE BUTTON AND:

- TAP L1/LB: -1
- TAP L2/LT: -10
- TAP R1/RB: +1
- TAP R2/RT: +10

!!!! led ---> FLASHES LED WITH EACH TAP
- FLASH 1x if a value changes by plus or minus 1 (0R 100)
- FLASH 2x if changed by plus or minus 10 (OR 1000)

SAVE VALUES
Values are auto saved - NOT NEED TO SAVE ANYHING MANUALLLY. 
Once finished end the edit menu with a tap on the d-pad UP button.
The Led will come back on again if you do. 


									  ___ ___   _   ___  
									 | _ \ __| /_\ |   \ 
									 |   / _| / _ \| |) |
									 |_|_\___/_/ \_\___/ 
									 |_   _| || |_ _/ __|
									   | | | __ || |\__ \
									   |_| |_||_|___|___/
									                     


____________________________ RELOAD TIME CALIBRATION ________________________________________________

IMPORTANT: THE SCRIPT WILL NOT FUNCTION PROPERLY IF YOU DO NOT CALIBRATE THE RELOAD TIME
SO DO NOT SKIP THIS STEP

     _         _   _     _                
  __| | ___   | |_| |__ (_)___            
 / _` |/ _ \  | __| '_ \| / __|           
| (_| | (_) | | |_| | | | \__ \           
 \__,_|\___/   \__|_| |_|_|___/           
                                          
     _           _ _         _    _       
  __| | ___  _ _( ) |_   ___| | _(_)_ __  
 / _` |/ _ \| '_ \| __| / __| |/ / | '_ \ 
| (_| | (_) | | | | |_  \__ \   <| | |_) |
 \__,_|\___/|_| |_|\__| |___/_|\_\_| .__/ 
                                   |_|    


THIS TIME VALUE IS USED FOR:
- 	AUTO CANCEL RELOAD (to cancel out of a reload press fire or press ads)
- 	(Modern Warfare:) PREVENT "SPRINT CANCEL RELOAD" WHEN EASY_RUN (AUTO SPRINT) IS ON

TO CALIBRATE THE RELOAD & SPRINT CANCEL TIME VALUE:

- BEFORE RELOADING; HOLD D-PAD DOWN
- THEN PRESS RELOAD TO START RELOADING AND HOLD DOWN THE RELOAD BTN DURING RELOAD ANIMATION
- IT WILL RUMBLE ONCE AFTER 500ms TO CONFIRM THAT YOU ARE CALIBRATING
- RELEASE THE RELOAD BTN EXACTLY AT THE END OF THE RELOAD ANIMATION
- IT WILL RUMBLE TWICE TO CONFIRM SUCCESSFULL CALIBRATION
- NOW YOU CAN RELEASE ALSO THE D_PAD DOWN BTN

AGAIN: THE RELOAD TIME YOU JUST CALIBRATED PREVENTS "SPRINT CANCEL RELOAD" (MW) BUT IT IS
ALSO IS THE TIME IN WHICH YOU CAN CANCEL OUT OF A RELOAD BY FIRING OR AIMING YOUR WEAPON

								
								  ___ ___   _   ___  
								 | _ \ __| /_\ |   \ 
								 |   / _| / _ \| |) |
								 |_|_\___/_/ \_\___/ 
								 |_   _| || |_ _/ __|
								   | | | __ || |\__ \
								   |_| |_||_|___|___/
								                     

____________________________ AIM CORRECTIONS ________________________________________________

AIM CORRECTIONS INTRODUCTION:

THE IDEA BEHIND AIM CORRECTIONS IS THAT YOU HIGHER YOUR IN-GAME SENSITIVITY WITH 2 OR 3
CLICKS. THIS WILL ALLOW YOU TO TURN AROUND FAST WITHOUT LOSING CONTROL OVER YOUR AIM:
THE SCRIPT WILL LOWER YOUR SENSITIVITY WHEN YOU AIM AND EVEN MORE WHEN YOU AIM & FIRE
SO THAT YOU CAN LOCK ON TARGET. SO FOR EXAMPLE: IF YOU PLAY NORMALLY WITH SENS 8 IN THE
GAME, SET YOUR SENSITIVITY TO 11 IN THE GAME MENU. THIS IS IMPORTANT IF YOU WANT TO GET 
THE MOST OUT OF THIS SCRIPT. OKAY, LET`S DO THIS STEP BY STEP. FOLLOW THE STEPS BELOW.

1) HIGHER YOUR IN-GAME-STICK SENSIVITY. RECOMMENDED: 3 OR 4 CLICKS. 
2) IN THIS SCRIPT FILL OUT THE IN-GAME STICK SENSITIVITY YOU JUST CONFIGURED. 
   YOU FILL THIS OUT UNDER "USER CONFIG STEP 2". 
3) THAT`S IT! YOU`RE ALL SET AND GOOD TO GO!

AIM CORRECTIONS IS NOW AUTOMATICALLY OPTIMIZED TO YOUR IN GAME SENSITIVITY, MAKING THE
AIM ASSIST STRONGER. IT WILL TAKE A FEW ROUNDS TO ADJUST, BUT IF YOU FEEL THAT THE AIM
CORRECTIONS ARE NOT "RIGHT" FOR YOU TWEAK THE VALUES ON THE FLY:

TO TWEAK AIM CORRECTIONS ON THE FLY (auto saved - but scrub you CPU using the .bat file!!)

- HOLD D-PAD DOWN + TAP SHARE / VIEW (-1)
- HOLD D-PAD DOWN + TAP MENU / OPTIONS (+1)

TO GIVE YOU A RANDOM EXAMPLE: BEFORE THIS SCRIPT I WAS PLAYING ON SENS 8 IN THE GAME MENU.
I STARTED USING THIS SCRIPT WITH IN THE GAME SENS AT 11, AND FILLED OUT 11 IN THIS SCRIPT.
AFTER TWEAKING THE VALUE, I DISCOVERED THAT 11/14 (11 IN THE GAME MENU, 14 IN THE SCRIPT) 
WORKS PERFECT FOR ME. AGAIN, I TRULY RECOMMEND YOU TO FOLLOW THESE INSTRUCTIONS TO THE 
LETTER. YES, YOU WILL HAVE A COUPLE OF GAMES THAT YOU ARE OUT OF YOUR COMFORT ZONE, BECAUSE
YOUR MOVEMENT SENS IS HIGHER THAN WHAT YOU ARE USED TO, BUT 100% GUARANTEED YOU WILL BENEFIT
LIKE YOU NEVER IMAGINED BEFORE ONCE YOU GET USED TO IT: IT WILL BOOST YOUR GAME PLAY TO THE NEXT
LEVEL AND YOU WILL EXPERIENCE THE BEST POSSIBLE AIM ASSIST IN COD. THIS IS NO BULLSHIT, BELIEVE
ME - I KNOW WHAT I AM TALKING ABOUT (I WAS WORKING DIRECTLY WITH XDOT22, HE INVENTED THE AIM
ASSIST IN COD, I LEARNED A GREAT DEAL FROM HIM). I ADDED AIM ASSIT TO MY SCRIPT SINCE BLACK OPS 3
AND UNTIL KNOW IT REMAINS UNBEATEN WHEN IT COMES TO IT`S STRENGTH. YES, THE CODE IS THE SAME
AS ALL THE OTHERS ARE USING, BUT THE DIFFERENCE IS BECAUSE OF THE AIM CORRECTION WHICH I INVENTED
TO GAIN THE MOST OUT OF AIM ASSIST AT HIGHER SENSITIVITY LEVELS. 


____________________________ DYNAMIC RAPID FIRE________________________________________________

DYNAMIC RAPID FIRE: FIRE RATE INCREASES WITH THE AMOUNT OF PRESSURE APPLIED TO THE TRIGGER
------------------------------------------------------------------------------------------

____________________________ CANCEL SLIDE (MODERN WARFARE ONLY - do not use on Cold War)______________

RELEASE PRONE TO CANCEL SLIDE
IN THE GAME MENU YOU NEED TO ACTIVATE HOLD PRONE FOR SLIDE.
-----------------------------------------------------------------------------------------------

						   ----------------------------

				SCRIPT STARTS HERE / MAKE NO CHANGES UNLESS INDICATED
_________________________________________________________________________________________________________*/
define Off = 8; define Blue = 1; define Red = 2; define Green = 3; define Pink = 4; define SkyBlue = 5; define Yellow = 6; define White = 7; data(1, 2,0,0,0, 0,2,0,0, 0,0,2,0, 0,0,0,2, 2,0,2,0, 0,2,2,0, 2,2,2,2, 0,0,0,0 ); const int8 CONFIG_1[][]={{_4,_7,_8,_6,_3,_18,_19,_5},{_4,_7,_8,_6,_3,_5,_19,_18}, {_7,_4,_5,_3,_6,_18,_19,_8},{_4,_6,_8,_6,_7,_18,_19,_5},{_4,_3,_8,_6,_7,_18,_19,_5}, {_6,_7,_8,_3,_4,_18,_19,_5},{_4,_7,_8,_19,_3,_18,_6,_5},{_4,_7,_8,_19,_3,_5,_6,_18}, {_4,_7,_8,_6,_3,_18,_5,_19},{_3,_6,_8,_7,_4,_18,_19,_5},{_3,_6,_8,_7,_4,_5,_19,_18}, {_6,_3,_5,_4,_7,_18,_19,_8},{_3,_7,_8,_7,_6,_18,_19,_5},{_3,_4,_8,_7,_6,_18,_19,_5}, {_7,_6,_8,_4,_3,_18,_19,_5},{_3,_6,_8,_19,_4,_18,_7,_5},{_3,_6,_8,_19,_4,_5,_7,_18}, {_3,_6,_8,_7,_4,_18,_5,_19}}; const int8 CONFIG_2[][]={{_12,_11,_9,_10},{_10,_9,_11,_12},{_12,_9,_11,_10},{_10,_11,_9,_12}}; define STICKS_DEFAULT=0,STICKS_SOUTHPAW=1,STICKS_LEGACY=2,STICKS_LEGACY_SOUTHPAW=3; define BUTTONS_DEFAULT=0,BUTTONS_TACTICAL=1,BUTTONS_LEFTY=2,BUTTONS_NOM4D=3,BUTTONS_CHARLIE=4, BUTTONS_ONE_HAND_GUNSLINGER=5,BUTTONS_BUMPER_JUMPER=6,BUTTONS_BUMPER_JUMPER_TACTICAL=7, BUTTONS_STICK_AND_MOVE=8,BUTTONS_DEFAULT_SWAP=9,BUTTONS_TACTICAL_SWAP=10,BUTTONS_LEFTY_SWAP=11, BUTTONS_NOM4D_SWAP=12,BUTTONS_CHARLIE_SWAP=13,BUTTONS_ONE_HAND_GUNSLINGER_SWAP=14, BUTTONS_BUMPER_JUMPER_SWAP=15,BUTTONS_BUMPER_JUMPER_TACTICAL_SWAP=16,BUTTONS_STICK_AND_MOVE_SWAP=17; int WALK,STRAFE,AIM_X,AIM_Y,FIRE,ADS,SPRINT,TAC_G,LETHAL,PRONE,JUMP,MELEE; define _0=XB1_XBOX,_1 = XB1_VIEW,_2=XB1_MENU,_3=XB1_RB,_4=XB1_RT,_5=XB1_RS,_6=XB1_LB, _7=XB1_LT,_8=XB1_LS,_9=XB1_RX,_10=XB1_RY,_11=XB1_LX,_12=XB1_LY,_13=XB1_UP,_14=XB1_DOWN, _15 = XB1_LEFT, _16 = XB1_RIGHT, _17 = XB1_Y, _18 = XB1_B, _19 = XB1_A, _20 = XB1_X, _28 = XB1_SYNC; int ar_sY_[5], ar_eY_[5], ar_sX_[5], ar_tm_[5]; int Recoil_Pr=1; int dynasens_limit=60; int dynasens_restart=40; int dynasens_max_sens=100; int dynasens_increase_rate=1; int dynasens_initial_sens; int sens_x; int sens_y; int sens_xcnt,sens_ycnt; int interval, iteration_point; int i_, i_count; int AR_V; int RY, RX; int record; int current_x, current_y; int edit = FALSE; int no_recoil=TRUE; int switch=TRUE; int ads_grenade_sens, ads_fire_sens, Sens, actual_sens; int auto_run=0; int sY_eY_cor, sY_eY_cor2; int sX_cor; int y_ambit = 10; int x_ambit = 10; int y_input[25]; int x_input[25]; int idX,rx_avg; int idx,ry_avg, idx2, ry_avg2; int newv, newv1, newv2; int Col_ind; int Profile_clr; int notify, notifier; int wpn_holster=FALSE; int d_click; int sniper = FALSE; int rld_time, b_reload=FALSE; int rapid_fire=FALSE; int slot; int once=1; int wtime; int recoil_RF; int R_C, N_R_C, c_reload, c_rel=50; int newt; int dflt_lo; int pin=222, code; int game_sens; int Akimbo; int P_f, flasher; function s_v(id,fval){set_val(id,fval);} function e_p(id){return event_press(id);} function e_r(id){return event_release(id);} function g_i(id){return get_ival(id);} function g_pv(id,min,max,fval){return get_pvar(id,min,max,fval);} function s_pv(id,fval){set_pvar(id,fval);} function ht(){if(g_i(0x7)){s_v(0x7, 0x64);}if(g_i(0x4)){s_v(0x4, 0x64);}} init { set_led(-1,0); set_led(0,0); set_led(1,0); set_led(2,0); set_led(3,0); set_led(4,0); set_led(5,0); set_led(6,0); rld_time= g_pv(SPVAR_3, 0, 4000, 1200); slot = get_slot (); l(); code = get_pvar(SPVAR_42, 1, 2000, 222); if (code == pin){load_sens()}else game_sens= get_pvar(SPVAR_41, 3, 20, game_sens); } main { display(ar_tm_,ar_sY_,ar_eY_,ar_sX_, flasher, P_f) if (hairtriggers) { ht(); } WALK = CONFIG_2[Sticks][0]; STRAFE = CONFIG_2[Sticks][1]; AIM_X = CONFIG_2[Sticks][2]; AIM_Y = CONFIG_2[Sticks][3]; FIRE = CONFIG_1[Buttons][0]; ADS = CONFIG_1[Buttons][1]; SPRINT = CONFIG_1[Buttons][2]; TAC_G = CONFIG_1[Buttons][3]; LETHAL = CONFIG_1[Buttons][4]; PRONE = CONFIG_1[Buttons][5]; JUMP = CONFIG_1[Buttons][6]; MELEE = CONFIG_1[Buttons][7]; if(d_click) {d_click -= get_rtime();} if (g_i (FIRE)) { current_x = dz(AIM_X,0); current_y = dz(AIM_Y,0); } if (cancel_slide) { if((get_ival(WALK) < -60) || (get_ival(WALK) > 60) || (get_ival(STRAFE) < -60) || (get_ival(STRAFE) > 60)) { if(event_release(PRONE)) { combo_run(CNL_SLIDE); } } } if(dynasens_on) { dynasens_initial_sens = 100 - (in_game_menu_sens); { if(g_i(ADS) || g_i(LETHAL) || g_i(TAC_G)) { if(abs(g_i(AIM_X)) <= abs(dynasens_limit) && abs(g_i(AIM_Y)) <= abs(dynasens_limit) && !g_i(FIRE)) { deadzone(AIM_X, AIM_Y, 15, 15); set_sens(); sensitivity(AIM_X, 80, 100); sensitivity(AIM_Y, 80, 100); } } } } if(g_i(ADS) && !edit) { if(e_p(PS4_DOWN)) { switch=FALSE; rapid_fire=FALSE; notify (rapid_fire); wpn_holster=FALSE; no_recoil=FALSE; sniper =FALSE; dflt_lo=FALSE; Akimbo=FALSE; } if(e_p(PS4_UP)) { dflt_lo=TRUE; notify (dflt_lo); } if(e_p(PS4_RIGHT)) { switch=FALSE rapid_fire=TRUE; notify (rapid_fire); wpn_holster=FALSE; no_recoil=FALSE; sniper =FALSE; recoil_RF=FALSE; dflt_lo=FALSE; Akimbo=FALSE; } if(e_p(PS4_LEFT)) { switch = TRUE rapid_fire=TRUE; wpn_holster=TRUE; notify (wpn_holster); no_recoil=FALSE; sniper =FALSE; recoil_RF=FALSE; dflt_lo=FALSE; Akimbo=FALSE; } if (g_i (XB1_LEFT)) { if (e_p(XB1_A)) { Akimbo=TRUE; P_f=5; } btn (PS4_CROSS); btn (PS4_LEFT); } if (g_i (PS4_LEFT)&& get_ptime (PS4_LEFT) > 800 && once == 1) { no_recoil=TRUE; notify (no_recoil); once = once - 1; } if (g_i (PS4_DOWN)&& get_ptime (PS4_DOWN) > 800 && once == 1) { sniper=TRUE; notify (sniper); once = once - 1; } if (g_i (PS4_RIGHT)&& get_ptime (PS4_RIGHT) > 800 && once == 1) { no_recoil=TRUE; switch=TRUE; recoil_RF=TRUE; notify (no_recoil); once = once - 1; } if(e_r (WII_PLUS)) { enemy_ping = !enemy_ping; notify (enemy_ping); } if(e_r (XB1_VIEW)&& wpn_holster) { Akimbo=TRUE; notify (Akimbo); P_f=5; } btn (PS4_SHARE);btn (PS4_LEFT); btn (PS4_RIGHT);btn (PS4_UP); btn (PS4_DOWN);btn (WII_HOME); btn (WII_PLUS);btn (XB1_VIEW); } if (dflt_lo) { switch=TRUE; rapid_fire=FALSE; wpn_holster=FALSE; no_recoil=TRUE; sniper =FALSE; recoil_RF=FALSE; Akimbo=FALSE; } if (once < 1 && e_r (XB1_LEFT)) {once = 1;} if (once < 1 && e_r (XB1_DOWN)) {once = 1;} if (once < 1 && e_r (XB1_RIGHT)){once = 1;} if(!edit && g_i(XB1_DOWN) && g_i (XB1_X) && get_ptime (XB1_X)>500 && !record) { record = TRUE; notify (record);edit=FALSE; } if (record) {edit=FALSE; rld_time = get_ptime(XB1_X); if (e_r (XB1_X)) { record = FALSE; s_pv(SPVAR_3, rld_time); e (); } } if(e_r(XB1_X) && get_ptime(XB1_X) < 300) b_reload = rld_time; if(smart_reload && b_reload &&!edit ) { b_reload -= get_rtime(); if(b_reload < 0) b_reload = 0; if(e_p(FIRE) || e_p(ADS)) combo_run(CANCEL_RLD); } if(e_r(XB1_Y) && get_ptime(XB1_Y) < 300 && wpn_holster) { combo_run (Switch_Weapons); switch = !switch; notify (switch); } if(g_i (XB1_Y) && get_ptime(XB1_Y) > 300 && wpn_holster && once == 1) { switch = !switch; notify (switch); once = once - 1; } if(g_i(XB1_Y) && wpn_holster) { btn(XB1_Y); } if (once < 1 && e_r (XB1_Y)) {once = 1;} if (record==FALSE &&wpn_holster && g_i (XB1_X) && get_ptime(XB1_X) > 250 && once == 1) { switch = TRUE; notify (!switch); once = once - 1; } if (once < 1 && e_r (XB1_X)) once = 1; if (rapid_fire) { wtime = 125 - (g_i(FIRE)); { if (!switch && wpn_holster || !switch &&!wpn_holster || recoil_RF) { if (g_i (FIRE) && rapid_fire) { c_reload -= get_rtime(); if (c_reload >= 0) { R_C = get_rumble (RUMBLE_B); if (R_C > N_R_C) N_R_C = R_C; } combo_run (RAPID_FIRE); } else if(combo_running(RAPID_FIRE)) { combo_stop(RAPID_FIRE); } if(e_r(FIRE)) { c_reload=c_rel; } if (g_i (FIRE) && rapid_fire && Akimbo){ if(g_i(FIRE) ^^ g_i(ADS)) { s_v(FIRE, 100); s_v(ADS, 100); combo_run (RAPID_FIRE_AKIMBO); } else if(combo_running(RAPID_FIRE_AKIMBO)) { combo_stop(RAPID_FIRE_AKIMBO); } } } } } if(enemy_ping) { if(ping_type == 0) { if(e_p(ADS)) combo_run(auto_ping); } if(ping_type == 1) { if(e_p(FIRE)) combo_run(auto_ping); } if(ping_type == 2) { if(g_i(ADS) && e_p(FIRE)) combo_run(auto_ping); } } if(aim_sens_corrections) { ads_grenade_sens=100-(game_sens); ads_fire_sens=96-(game_sens); actual_sens=100; if(!g_i(ADS) && !g_i(FIRE) && !g_i(LETHAL) && !g_i (TAC_G)) { Sens=actual_sens; } else if(g_i(ADS) && !g_i(FIRE)) { Sens=ads_grenade_sens; } else if(!g_i(ADS) && g_i(FIRE)) { Sens=actual_sens; } else if(g_i(ADS) && g_i(FIRE)) { Sens=ads_fire_sens; } else if(g_i(TAC_G) || g_i (LETHAL)) { Sens=ads_grenade_sens; } if(Sens > 100) Sens = 100; sensitivity(AIM_X, NOT_USE, Sens); sensitivity(AIM_Y, NOT_USE, Sens); } if (g_i(XB1_DOWN)) { if (e_p(XB1_VIEW)) { game_sens --; notify(1); s_pv (SPVAR_41, game_sens); } if (e_p(XB1_MENU)) { game_sens ++; notify(1); s_pv (SPVAR_41, game_sens); } btn (XB1_VIEW); btn(XB1_MENU); } if (smart_thumb_stick > 0) auto_run=1; if (smart_thumb_stick == 2 && g_i(XB1_LS)&& !sniper) { s_v(l_stick_click, 100); } if (sprint_cncl_reload == 1) { if (auto_run) if (!b_reload && !g_i(ADS)&& g_i(WALK) < (walk_tresh)) { if (s) { combo_run (silent); } combo_run (EASY_RUN); } } if (sprint_cncl_reload == 0) { if (auto_run) if (!g_i(ADS)&& g_i(WALK) < (walk_tresh)) { if (s) { combo_run (silent); } combo_run (EASY_RUN); } } if (sticky_aim_assist) { if(g_i(ADS)){ combo_run(STICKY_AIM); } else{ combo_stop(STICKY_AIM); } } if(sniper) { if( g_i(ADS) ) s_v(SPRINT, 100); } if(g_i(XB1_DOWN) && !g_i(ADS) && !edit) { if (default_pr_or_cur_state) { if(e_r(XB1_X) && get_ptime (XB1_X)<500) {Recoil_Pr=1; l();} if(e_r(XB1_A)) {Recoil_Pr=2; l();} if(e_r(XB1_B)) {Recoil_Pr=3; l();} if(e_r(XB1_Y)) {Recoil_Pr=4; l();} } else { if(e_r(XB1_X) && get_ptime (XB1_X)<500) {Recoil_Pr=1; dflt_lo=TRUE; l();} if(e_r(XB1_A)) {Recoil_Pr=2; dflt_lo=TRUE; l();} if(e_r(XB1_B)) {Recoil_Pr=3; dflt_lo=TRUE; l();} if(e_r(XB1_Y)) {Recoil_Pr=4; dflt_lo=TRUE; l();} } btn(XB1_B);btn (XB1_A);btn (XB1_Y); btn (XB1_LB); btn (XB1_RB); btn (XB1_RS); } if (!g_i (XB1_X) && !record){ if (g_i (PS4_DOWN)){ if (get_ptime (PS4_DOWN) > 2500 && once == 1 && !g_i (XB1_X)) {edit = 1; once--;} if (e_p(XB1_XBOX)) { Recoil_Pr = Recoil_Pr + 1; if (Recoil_Pr == 5) { Recoil_Pr = 1; } if (Recoil_Pr) { notify_pr(Recoil_Pr); } } } } if (edit) { if (g_i (FIRE) && g_i(ADS) && newt) { ar_tm_[Recoil_Pr] = ar_tm_[Recoil_Pr] + get_rtime(); } if (e_r (FIRE)&& newt) { save__(); P_f=2; newt =0; notify (!newt); newv=1; newv1 = ar_tm_[Recoil_Pr]/2; newv2 = ar_tm_[Recoil_Pr]/2; } if (g_i (XB1_UP)){edit=0; newv=0;} if (e_p(XB1_DOWN)&& d_click) { newt =1; ar_tm_[Recoil_Pr] = 0; notify (newt); P_f=4; } else if (e_p(XB1_DOWN)&& !d_click) { d_click = 350; newt =0; } if (newv==1){ if (e_r(FIRE)) {save__(); P_f=2; { if (idx >0 || idx2 > 0 || idX > 0 ) { idx = 0; ry_avg = 0; idx2 = 0; ry_avg2 = 0; idX = 0; rx_avg = 0;} } } if (e_r (FIRE)&& newv) newv1=newv2; if(g_i(ADS) && g_i(FIRE)) { newv1 = newv1 - get_rtime(); if (newv1 > 0){ if(abs(current_y) >= y_ambit) { y_input[idx] = current_y; idx += 1; if(idx == 25) { for(idx = 0;idx <= 24;idx++) { ry_avg += y_input[idx]; } ry_avg /= 25; sY_eY_cor += ry_avg / 10; ry_avg = 0; idx = 0; } }/*--end if (newv1 > 0)*/}else if(abs(current_y) >= y_ambit) { y_input[idx2] = current_y; idx2 += 1; if(idx2 == 25) { for(idx2 = 0;idx2 <= 24;idx2++) { ry_avg2 += y_input[idx2]; } ry_avg2 /= 25; sY_eY_cor2 += ry_avg2 / 10; ry_avg2 = 0; idx2 = 0; } } if(abs(current_x) >= x_ambit) { x_input[idX] = current_x; idX += 1; if(idX == 25) { for(idX = 0;idX <= 24;idX++) { rx_avg += x_input[idX]; } rx_avg /= 25; sX_cor += rx_avg / 10; rx_avg = 0; idX = 0; } } ar_sX_[Recoil_Pr]= sX_cor; ar_sY_[Recoil_Pr] = sY_eY_cor; ar_eY_[Recoil_Pr] = sY_eY_cor2; } } if (g_i (XB1_DOWN)){ if(g_i(XB1_X)){ if (e_p(XB1_RB) && Recoil_Pr) { ar_sY_[Recoil_Pr] = ar_sY_[Recoil_Pr] + 1; save__(); P_f=1;} if (e_p(XB1_LB) && Recoil_Pr) {ar_sY_[Recoil_Pr] = ar_sY_[Recoil_Pr] - 1; save__(); P_f=1;} if (e_p(XB1_LT) && Recoil_Pr){ ar_sY_[Recoil_Pr] = ar_sY_[Recoil_Pr] - 10; save__(); P_f=2;} if (e_p(XB1_RT) && Recoil_Pr) { ar_sY_[Recoil_Pr] = ar_sY_[Recoil_Pr] + 10; save__(); P_f=2;} } if(g_i(XB1_A)){ if (e_p(XB1_RB) && Recoil_Pr) { ar_eY_[Recoil_Pr] = ar_eY_[Recoil_Pr] + 1; save__(); P_f=1;} if (e_p(XB1_LB) && Recoil_Pr) {ar_eY_[Recoil_Pr] = ar_eY_[Recoil_Pr] - 1; save__(); P_f=1;} if (e_p(XB1_LT) && Recoil_Pr){ ar_eY_[Recoil_Pr] = ar_eY_[Recoil_Pr] - 10; save__(); P_f=2;} if (e_p(XB1_RT) && Recoil_Pr) { ar_eY_[Recoil_Pr] = ar_eY_[Recoil_Pr] + 10; save__(); P_f=2;} } if(g_i(XB1_B)){ if (e_p(XB1_RB) && Recoil_Pr) { ar_sX_[Recoil_Pr] = ar_sX_[Recoil_Pr] + 1; save__(); P_f=1;} if (e_p(XB1_LB) && Recoil_Pr) {ar_sX_[Recoil_Pr] = ar_sX_[Recoil_Pr] - 1; save__(); P_f=1;} if (e_p(XB1_LT) && Recoil_Pr){ ar_sX_[Recoil_Pr] = ar_sX_[Recoil_Pr] - 10; save__(); P_f=2;} if (e_p(XB1_RT) && Recoil_Pr) { ar_sX_[Recoil_Pr] = ar_sX_[Recoil_Pr] + 10; save__(); P_f=2;} } if(g_i(XB1_Y)){ if (e_p(XB1_RB) && Recoil_Pr) { ar_tm_[Recoil_Pr] = ar_tm_[Recoil_Pr] + 100; save__(); P_f=1;} if (e_p(XB1_LB) && Recoil_Pr) {ar_tm_[Recoil_Pr] = ar_tm_[Recoil_Pr] - 100; save__(); P_f=1;} if (e_p(XB1_LT) && Recoil_Pr){ ar_tm_[Recoil_Pr] = ar_tm_[Recoil_Pr] - 1000; save__(); P_f=2;} if (e_p(XB1_RT) && Recoil_Pr) { ar_tm_[Recoil_Pr] = ar_tm_[Recoil_Pr] + 1000; save__(); P_f=2;} if (ar_tm_[Recoil_Pr] <=0) ar_tm_[Recoil_Pr] = 0; } btn (XB1_B); btn(XB1_Y); btn (XB1_XBOX); btn (XB1_X); btn (XB1_A);btn (XB1_RT);btn (XB1_RB); btn (XB1_LT);btn (XB1_LB); } } if(Recoil_Pr == 1) {ar_sY_[0] = ar_sY_[1]; ar_eY_[0] = ar_eY_[1]; ar_sX_[0] = ar_sX_[1]; ar_tm_[0] = ar_tm_[1]; Profile_clr = SkyBlue;} if(Recoil_Pr == 2) {ar_sY_[0] = ar_sY_[2]; ar_eY_[0] = ar_eY_[2]; ar_sX_[0] = ar_sX_[2]; ar_tm_[0] = ar_tm_[2]; Profile_clr = Green;} if(Recoil_Pr == 3) {ar_sY_[0] = ar_sY_[3]; ar_eY_[0] = ar_eY_[3]; ar_sX_[0] = ar_sX_[3]; ar_tm_[0] = ar_tm_[3]; Profile_clr = Pink;} if(Recoil_Pr == 4) {ar_sY_[0] = ar_sY_[4]; ar_eY_[0] = ar_eY_[4]; ar_sX_[0] = ar_sX_[4]; ar_tm_[0] = ar_tm_[4]; Profile_clr = Yellow;} if (no_recoil && switch) { if(ar_sY_ < ar_eY_) interval = 1; else interval = -1; iteration_point = (ar_tm_ / 10) / (abs(ar_sY_ - ar_eY_)); if(!get_lval(FIRE)) { AR_V = ar_sY_; i_count = 0; i_ = 0; } if(g_i(FIRE)) { AntiRecoil(AIM_X, ar_sX_); if(!p()) AR_V = c(); else AR_V = (ar_eY_); AntiRecoil(AIM_Y, AR_V) } } if (!get_ledx()) { if(edit==TRUE) colourled (Off); else if (recoil_RF && g_i (FIRE)) set_ledx(rapid_fire, 1); else if (slot > 0 && wpn_holster && !switch||slot > 0 && !wpn_holster && rapid_fire && !switch) colourled (Red); else if (no_recoil) colourled (Profile_clr); else colourled (Blue); } if(notify) { notifier += get_rtime(); if(notifier < 150) set_rumble(1,75); else if(notifier < 400) reset_rumble(); else { notify -= 1; notifier = 0; } } if (P_f >0) {flasher += get_rtime(); if (flasher >=0 && flasher <= (P_f*400)) combo_run (Profile_flash); else if(flasher>=(P_f*400)) {P_f=0;} } if (P_f==0 && combo_running (Profile_flash)) {combo_stop (Profile_flash); reset_leds(); flasher=0;} if(in_game_rumble == 0) { block_rumble(); } } combo STICKY_AIM { s_v(AIM_Y,xy_val(AIM_Y, _v)); wait(20); s_v(AIM_X,xy_val(AIM_X, _v)); s_v(STRAFE,xy_val(STRAFE, _v)); wait(20); s_v(AIM_Y,xy_val(AIM_Y, _v * -1)); wait(20); s_v(AIM_X,xy_val(AIM_X, _v * -1)); s_v(STRAFE,xy_val(STRAFE, _v * -1)); wait(20); } combo Profile_flash{ colourled (Off); wait (200); colourled (Profile_clr); wait (200); } combo CNL_SLIDE{ s_v(PRONE, 100); wait(120); s_v(PRONE, 0); wait(60); s_v(PRONE, 100); wait(50); set_val(PRONE, 100); set_val(JUMP, 100); wait(60); set_val(PRONE, 0); set_val(JUMP, 100); wait(10); set_val(JUMP, 0); } combo RAPID_FIRE { s_v(FIRE,100); wait(wtime); s_v(FIRE, 0); wait(wtime); } combo RAPID_FIRE_AKIMBO { s_v(ADS,100); wait(wtime); s_v(ADS, 0); wait(wtime); } combo e { wait (50) edit=FALSE; notify (edit); } combo auto_ping { s_v(BTN_PING,100); wait(20); s_v(BTN_PING,0); wait(20); s_v(BTN_PING,100); wait(20); s_v(BTN_PING,0); } combo silent { s_v(TAC_G, 100); s_v(LETHAL,100); wait (30); wait (30000); } combo Switch_Weapons { s_v(XB1_Y, 100); wait (100); s_v(XB1_Y,0); wait (400); } combo CANCEL_RLD { s_v(XB1_Y, 100); wait(30); wait(20); s_v(XB1_Y, 100); wait(30); wait(20); b_reload=FALSE; } combo EASY_RUN{ s_v(SPRINT,100); wait(30); wait(100); } function notify(pos) { if(pos) notify = 1; else notify = 2; } function notify_pr(Recoil_Pr){ notify = Recoil_Pr } function btn(f__btn) { if (!g_i(f__btn)) return; s_v(f__btn, 0); } function load_sens (){ game_sens = in_game_menu_sens; code = 223; s_pv (SPVAR_41, game_sens); s_pv (SPVAR_42, code); } function save__ (){ s_pv(PVAR_1, ar_sY_[1]); s_pv(PVAR_2, ar_eY_[1]); s_pv(PVAR_3, ar_tm_[1]); s_pv(PVAR_4, ar_sX_[1]); s_pv(PVAR_5, ar_sY_[2]); s_pv(PVAR_6, ar_eY_[2]); s_pv(PVAR_7, ar_tm_[2]); s_pv(PVAR_8, ar_sX_[2]); s_pv(PVAR_9, ar_sY_[3]); s_pv(PVAR_10, ar_eY_[3]); s_pv(PVAR_11, ar_tm_[3]); s_pv(PVAR_12, ar_sX_[3]); s_pv(PVAR_13, ar_sY_[4]); s_pv(PVAR_14, ar_eY_[4]); s_pv(PVAR_15, ar_tm_[4]); s_pv(PVAR_16, ar_sX_[4]); notify (1); } function l (){ ar_sY_[1] = g_pv(PVAR_1, 0,100, 20); ar_eY_[1] = g_pv(PVAR_2,-100,100, 0); ar_tm_[1] = g_pv(PVAR_3, -30000,30000,5000); ar_sX_[1] = g_pv(PVAR_4,-100,100, 0); ar_sY_[2] = g_pv(PVAR_5, 0,100, 20); ar_eY_[2] = g_pv(PVAR_6,-100,100, 0); ar_tm_[2] = g_pv(PVAR_7, -30000,30000,5000); ar_sX_[2] = g_pv(PVAR_8,-100,100, 0); ar_sY_[3] = g_pv(PVAR_9, 0,100, 20); ar_eY_[3] = g_pv(PVAR_10,-100,100, 0); ar_tm_[3] = g_pv(PVAR_11, -30000,30000,5000); ar_sX_[3] = g_pv(PVAR_12,-100,100, 0); ar_sY_[4] = g_pv(PVAR_13, 0,100, 20); ar_eY_[4] = g_pv(PVAR_14,-100,100, 0); ar_tm_[4] = g_pv(PVAR_15, -30000,30000,5000); ar_sX_[4] = g_pv(PVAR_16,-100,100, 0); notify_pr(Recoil_Pr); P_f=(Recoil_Pr); } function dz(f_axis,f_val) { f_val = g_i(f_axis); if(abs(f_val) < StickNoise) { s_v(f_axis,0); return 0; } return f_val; } function xy_val(f_axis,f_val) { if(abs(g_i(f_axis)) < (_v + 1)) return f_val; return g_i(f_axis); } function p() { i_count++; if (i_count > (ar_tm_ / 10)) { i_count = (ar_tm_ / 10); return 1; } return 0; } function c() { i_++; if(i_ == iteration_point) { i_ = 0; AR_V += interval; } return AR_V; } function e() { combo_run (e) } function display(var1,var2,var3,var4,var5,var6) { s_v(TRACE_1, var1); s_v(TRACE_2, var2); s_v(TRACE_3, var3); s_v(TRACE_4, var4); s_v(TRACE_5, var5); s_v(TRACE_6, var6); } function AntiRecoil (axis, recoil){ RY = current_y; RX = current_x; if (g_i(FIRE) && (isqrt(RX*RX + RY*RY)) <= abs(recoil)) { if(abs(RY) <= abs(recoil)) { s_v(axis,(recoil * (100 - abs(g_i(axis)))) / 100 + g_i(axis)); } } } function set_sens () { if(abs(get_lval(AIM_X)) >= dynasens_limit) { sens_xcnt += 1; if(sens_xcnt >= dynasens_increase_rate && sens_x < dynasens_max_sens) { sens_x += 1; sens_xcnt = 0; } else if(sens_x >= dynasens_max_sens) sens_xcnt = 0; } else if(abs(g_i(AIM_X)) < dynasens_restart) { sens_xcnt = 0; sens_x = dynasens_initial_sens; } if(abs(g_i(AIM_Y)) >= dynasens_limit) { sens_ycnt += 1; if(sens_ycnt >= dynasens_increase_rate && sens_y < dynasens_max_sens) { sens_y += 1; sens_ycnt = 1; } else if(sens_y >= dynasens_max_sens) sens_ycnt = 0; } else if(abs(g_i(AIM_Y)) < dynasens_restart) { sens_y = dynasens_initial_sens; sens_ycnt = 0; } sensitivity(AIM_X,NOT_USE,sens_x); sensitivity(AIM_Y,NOT_USE,sens_y); } function colourled(Colour) { Col_ind=(Colour*4)- 3; set_led(LED_1,duint8(Col_ind )); set_led(LED_2,duint8(Col_ind+ 1)); set_led(LED_3,duint8(Col_ind+ 2)); set_led(LED_4,duint8(Col_ind+ 3)); }