///_________________________________________///
///___ WELCOME TO A NEW GAMING EXPERIENCE___///
///______________VENOM 3.2__________________///                                                                                  
///________________FEATURES_________________///
///                                         ///
///     100% ACCURACY: L2 / LT + R1 / RB    ///                                                          
///   AIM ABUSE: hold L2 / LT all the way   ///                                                                                                                                                                                                                   ///                              
///         ANTI RECOIL: ON BY DEFAULT      ///                                                                                             
///    RAPID FIRE: L2 / LT + Right D pad    ///                                        
///    DROPSHOT : L2/LT + X/SQAURE 
///        Active Target Tracking           ///
///         Defence Box (Press L3)          ///       						                     							                                                                               
///_________________________________________///
int venomR1 = 7;
int venomL1 = -7;
int venomL1HALF = -10;
int venomR1HALF = 10;
int venomR2 = 13;
int venomL2 = -13;
int venomR2HALF = 16;
int venomL2HALF = -16;
int venomL3 = -20;
int venomR3 = 20;
int venomL4 = -30;
int venomR4 = 30;
int venomL4HALF = -38;
int venomR4HALF = 38;
int venomL5 = -45;
int venomR5 = 45;
int venomL6 = -65;
int venomR6 = 65;
int venomL7 = -85;
int venomR7 = 85;
int venomL8 = -90;
int venomR8 = 90;
int venomU1 = -6;
int venomD1 = 6;
int venomU1HALF = -10;
int venomD1HALF = 10;
int venomU2 = -13;
int venomD2 = 13;
int venomU3 = -20;
int venomD3 = 20;
int venomD4 = 30;
int venomU4 = -30;
int venomD5 = 45;
int venomU5 = -45;
int venomD6 = 65;
int venomU6 = -65;
int venomD7 = 85;
int venomU7 = -85;
int venomD8 = 100;
int venomU8 = -100;
int venomDiamond2 = 22;
int venom45 = FALSE; //Change value to TRUE to enable defence box.
int venomDiamond = TRUE;                                                                                                                                             
int venom3  = 15;                                                      
int venom4 = -15;                                                      
int venom5 =17; 
int venom6 = TRUE;                                             
int venom7;    
int venom8 = 22;
int venom9 = 28;                                              
int venom10 = 12; 
int venom11 = TRUE;   
int venom14 = TRUE;                                                                     
int venom16 = 36;
int venom12 = FALSE;                                                                                                                                                                                                                                                                     
int venom17 = RUMBLE_A;                                             
int venom18 = TRUE                                                                                                                              															
int venom19 = 5;											    
int venom13;
int venomDiamond3 = -22;
int venom20=TRUE;	                                        
int venom21=FALSE;                                                 
int venom22=TRUE                                                     														 																		
int venomDROP       = FALSE;
int venom23; 
int venom24;
int venomw1 = 20;
int venomw2 = 10;
int venomw3 = 20;
int venomx1 = 25;
int venomx2 = -25;
int venomy1 = 24;
int venomy2 = -24;
int venomy6 = 0;
int venom15 = 260;	
int VenomLeft = 0;
int VenomRight = 0;
int VenomUp = 0;
int VenomDown = 0;
define venom25 = 4; 
define venom26 = 7; 
define venom27 = 5; 
define venom28 = 20; 
define venom29 = 8; 
define venom30 = 19; 
define venom31 = 3; 
define venom32 = 3; 
define venom33 = 6; 
define venom34 = 17; 
define venom35 = 18; 
define venom36 = 9; 
define venom37 = 10; 
define venom38 = 11; 
define venom39 = 12; 
define venom40 = 13; 
define venom41 = 14; 
define venom42 = 15; 
define venom43 = 16; 
main {
if(get_val(7) && event_press(20)){
   rumble_A_if_true(venomDROP);
   venomDROP =! venomDROP;
   }
   if(venomDROP){
      if(get_val(7)&&get_val(4)){combo_run(venomDROP);}
     if (event_press(18)){ venomDROP = FALSE; }
     }
if (venom45 == TRUE && event_press(PS4_L3) || event_press(XB1_LS) && venom45 == TRUE)
{
 combo_run(venom44)
}
if (venomDiamond) {
if (get_val(venom26)) {
combo_run(venomDiamond);}}
if (get_val(venom36)<venom4||get_val(venom36)>venom3||get_val(venom37)<venom4||get_val(venom37)>venom3||get_val(venom36)<venom4||get_val(venom36)>venom3||get_val(venom37)<venom4||get_val(venom37)>venom3){
combo_stop(venomDiamond);}
if(get_val(venom26) && event_press(venom43)){
venom12 =! venom12;
if(venom12 == TRUE){combo_run(venom18);venom23=0;venom24=2;}
if(venom12 == FALSE){combo_run(venom18);venom23=2;venom24=0;} 
}
if(venom12){
if(get_val(venom25)){
combo_run(venom12);                                          
} 
}                
if(venom6){
if(get_val(venom25) && get_val(venom26))
{combo_run(venom6);}
}
if (get_val(venom26) > 98 && get_val(venom32)) {
combo_run(venom11);
set_val(venom32, 0);
} else {
combo_stop(venom11);
}
if(venom14){
if(get_val(venom26)> 95){
combo_run(venom14);}
if(event_release(venom26)){ combo_stop(venom14);
}
}
}
combo venomDROP{
set_val(5,100);
wait(40);
wait(140);
set_val(5,100);
}
combo venom18 {
if(venom18){set_rumble(RUMBLE_B,65);}
set_led(LED_1, 0);
set_led(LED_2, venom23);
set_led(LED_3, venom24);
set_led(LED_4, 0);
wait(550);
set_led(LED_1, 0);
set_led(LED_2, 0);
set_led(LED_3, 0);
set_led(LED_4, 0);
wait(250);
set_led(LED_1, 0);
set_led(LED_2, venom23);
set_led(LED_3, venom24);
set_led(LED_4, 0);
wait(250);
set_led(LED_1, 0);
set_led(LED_2, 0);
set_led(LED_3, 0);
set_led(LED_4, 0);
wait(250);
set_led(LED_1, 0);
set_led(LED_2, venom23);
set_led(LED_3, venom24);
set_led(LED_4, 0);
wait(250);
reset_leds();
}
combo venomDiamond {
 set_val(venom36, venomx2 + VenomLeft);  
 wait(venomw1);
 set_val(venom36, venomy6);
 wait(venomw2);
 set_val(venom36, venomx1 + VenomRight); 
 wait(venomw1);  
 set_val(venom36, venomy6);
 wait(venomw2);
 set_val(venom37, venomy2 + VenomUp);
 wait(venomw3); 
 set_val(venom37, venomy6);
  wait(venomw2);
 set_val(venom37, venomy1 + VenomDown);
 wait(venomw3); 
 set_val(venom37, venomy6);
 wait(venomw2);
if (get_val(venom36)< venomL1 && get_val(venom36) > venomL1HALF)
{ VenomLeft = -5;
}
if (get_val(venom36)> venomR1 && get_val(venom36) < venomR1HALF)
{ VenomRight = 5;
}
if (get_val(venom36)< venomL1HALF && get_val(venom36) > venomL2)
{ VenomLeft = -8;
}
if (get_val(venom36)> venomR1HALF && get_val(venom36) < venomR2)
{ VenomRight = 8;
}
if (get_val(venom36)< venomL2 && get_val(venom36) > venomL2HALF)
{  VenomLeft = -10;
}
if (get_val(venom36)> venomR2 && get_val(venom36) < venomR2HALF)
{ VenomRight = 10;
}
if (get_val(venom36)< venomL2HALF && get_val(venom36) > venomL3)
{  VenomLeft = -10;
}
if (get_val(venom36)> venomR2HALF && get_val(venom36) < venomR3)
{ VenomRight = 10;
}
if (get_val(venom36)< venomL3 && get_val(venom36) > venomL4)
{ VenomLeft = -10;
}
if (get_val(venom36)> venomR3 && get_val(venom36) < venomR4)
{VenomRight = 10;
}
if (get_val(venom36)< venomL4 && get_val(venom36) > venomL4HALF)
{VenomLeft = -7;
}
if (get_val(venom36)> venomR4 && get_val(venom36) < venomR4HALF)
{VenomRight = 7;
}
if (get_val(venom36)< venomL4HALF && get_val(venom36) > venomL5)
{VenomLeft = -7;
}
if (get_val(venom36)> venomR4HALF && get_val(venom36) < venomR5)
{VenomRight = 7;
}
if (get_val(venom36)< venomL5 && get_val(venom36) > venomL6)
{VenomLeft = -7;
}
if (get_val(venom36)> venomR5 && get_val(venom36) < venomR6)
{VenomRight = 7;
}
if (get_val(venom37)< venomU1 && get_val(venom37) > venomU1HALF)
{VenomUp = -5;
}
if (get_val(venom37)> venomD1  && get_val(venom37) < venomD1HALF)
{VenomDown =-5;
}
if (get_val(venom37)< venomU1HALF && get_val(venom37) > venomU2)
{VenomUp = -7;
}
if (get_val(venom37)> venomD1HALF  && get_val(venom37) < venomD2)
{VenomDown =-6;
}
if (get_val(venom37)< venomU2 && get_val(venom37) > venomU3)
{VenomUp = -5;
}
if (get_val(venom37)> venomD2  && get_val(venom37) < venomD3)
{VenomDown = 4;
}
if (get_val(venom37)< venomU3 && get_val(venom37) > venomU4)
{VenomUp = -6;
}
if (get_val(venom37)> venomD3 && get_val(venom37) < venomD4)
{VenomDown = 5;
}
if (get_val(venom37)< venomU4 && get_val(venom37) > venomU5 )
{VenomUp = -6;
}
if (get_val(venom37)> venomD4 && get_val(venom37) < venomD5) 
{VenomDown = 5;
}
if (get_val(venom37)< venomU5 && get_val(venom37) > venomU6)
{VenomUp = -7;
}
if (get_val(venom37)> venomD5 && get_val(venom37) < venomD6)
{VenomDown = 6;
}
else 
{
VenomUp = venomy6;
VenomDown = venomy6;
VenomLeft = venomy6;
VenomRight = venomy6;
}
}

combo venom11 {
set_val(venom25,100);
wait(100);
wait(250);
set_val(venom25,100);
}
combo venom14 {
set_val(venom26, 100);
wait(venom15);
set_val(venom26, 0);
wait(venom16);
}   
combo venom12 {
set_val(venom25, 100); 
wait(venom13);
set_val(venom25, 0); 
}
combo Vibrate {
set_rumble(venom17, 100);
wait(300);
reset_rumble();
}
combo venom44 {
set_val(venom35, 100);
set_val(venom37,(100)); 
wait(200);
set_val(venom37,(100)); 
wait(200);
set_val(venom25, 100);
wait(80);
set_val(venom36,(100)); set_val(venom25, 100); 
wait(200); set_val(venom25, 100); 
set_val(venom36,(100)); set_val(venom25, 100); 
wait(200); set_val(venom25, 100); 
set_val(venom36,(100)); set_val(venom25, 100); 
wait(180); set_val(venom25, 100); 
set_val(venom37,(-100)); 
wait(200);
set_val(venom37,(-100)); 
wait(200);
set_val(venom31, 100);
wait(50);
set_val(venom33, 100);
wait(50);
set_val(venom37,(100)); 
wait(200);
set_val(venom37,(100)); 
wait(100);
set_val(venom35, 100);
wait(50);
set_val(venom35, 100);
wait(50);
}
combo venom6 {
if (get_val(venom37)< venomU4 && get_val(venom37) > venomU5 )
{VenomUp = +20;
}
}
function rumble_A_if_true(var) {
if (var) venom17 = RUMBLE_A;
else venom17 = RUMBLE_B;
combo_run(Vibrate);
}


       