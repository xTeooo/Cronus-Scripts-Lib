/*

 ──▄▀▀▀▄▄▄▄▄▄▄▀▀▀▄───
───█▒▒░░░░░░░░░▒▒█───
────█░░█░░░░░█░░█────
─▄▄──█░░░▀█▀░░░█──▄▄─
█░░█─▀▄░░░░░░░▄▀─█░░█
█▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀█
█░░╦─╦╔╗╦─╔╗╔╗╔╦╗╔╗░░█
█░░║║║╠─║─║─║║║║║╠─░░█
█░░╚╩╝╚╝╚╝╚╝╚╝╩─╩╚╝░░█
█▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄█
____________________________InstalKill _V3____ Fortnite Update 7.40 Working ____________________________________________


///   |------*/ int In_Game_Sens   = 7;     /*#######|------------------- SENSITIVITY OPTIMIZING! -------------------|                                                                                      ///

///  SETUP                                                                                 ///
///--------------------------------------------------------------------------------------------------------------------
///   /////CONTROLS/////				/////BEST SCRIPT /////											   ///                                            
///===================================================================================== 
///ANTI AIM: L2+Reload  THIS INCLUDES DROPSHOT            
///=========================================================================================
///AIM ABUSE: L2+LEFT  YELLOW: SHORT ABUSE   BLUE: LONG ABUSE
///============================================================================================
///AIM ASSIST: L1+R1   CIRCULAR AND LEFT TO RIGHT AIM ASSIST, SWITCH BETWEEN THE TWO                                            ///                                                                                                                              
///============================================================================================
///ANTI RECOIL: always on                      
///============================================================================================
///RAPID FIRE: ADS + RIGHT                           
///============================================================================================
///HAIR TRIGGER: always On, This also allows super fast building.                                                              ///                                    
///============================================================================================
///PERFECT ACCURACY: L2+R1
///============================================================================================
///Head Aimbot  ---> LT+UP
///============================================================================================
///AimAssist Always ON
///============================================================================================
///Sniper aim Improved
///============================================================================================
/// InstaEdit/Reset allways on 
///============================================================================================
///
///============================================================================================
///_______________________________________________________________________________________ ///_
*/

//----------------------------------------
// BUTTON LAYOUT: BUILDER PRO
 define FIRE_BTN = 4; //XB1_RT //PS4_R2
 define ADS_BTN = 7; //XB1_LT //PS4_L2
 define CROUCH_BTN = 5; //XB1_RS //PS4_R3
 define SPRINT_BTN = 8; //XB1_LS //PS4_L3
 define JUMP_BTN = 19; //XB1_A  //PS4_CROSS
 define NEXT_PIECE = 3; //XB1_RT //PS4_R1
 define LEFT_BUMP = 6; //XB1_LB //PS4_L1
 define RIGHT_BUMP = 3; // XB1_RB //PS4_R1
 define SWAP_BTN = 17; //XB1_Y  //PS4_TRIANGLE
 define BUILD_BTN = 18; //XB1_B  //PS4_CIRCLE
 define WALL_BTN = 4; //XB1_RB //PS4_R2
 define STAIRS_BTN = 7; //XB1_LB //PS4_L2
 define FLOOR_BTN = 3; //XB1_RT //PS4_R1
 define ROOF_BTN = 6; //XB1_LT //PS4_L1
 define RELOAD_BTN = 20; //XB1_X //PS4_SQAURE
 define R_X = 9; //XB1_RX //PS4_RX
 define R_Y = 10; //XB1_RY //PS4_RY
 define L_X = 11; //XB1_LX //PS4_LX
 define L_Y = 12; //XB1_LY //PS4_LY
 define UP = 13; //XB1_UP //PS4_UP
 define DOWN = 14; //XB1_DOWN //PS4_DOWN
 define LEFT = 15; //XB1_LEFT //PS4_LEFT
 define RIGHT = 16; //XB1_RIGHT //PS4_RIGHT
 define MENU		= XB1_MENU;
 define VIEW_SHARE = PS4_SHARE;    
 define MENU_OPTIONS = PS4_OPTIONS;    
 define Blue = 1;    
 define Red = 2;    
 define Green = 3;    
 define Pink = 4;    
 define SkyBlue = 5;    
 define Yellow = 6;    
 define White = 7;

//Head Aim///
int aimupAB = 0;
int lock = FALSE;

//AntiAim
int AntiAim        = TRUE;
int Defense			= FALSE;
int Offense			= TRUE;

int LONG_abuse = TRUE; 
int SHORT_abuse = FALSE;                     
int LONG_Hold = 260;   
int SHORT_Hold = 160;                                       
int LONG_Release = 20; 
int SHORT_Release = 17;

int aimassist1 = TRUE;     
int aimassist2 = FALSE; 
int aimassist1_V = 10;     
int aimassist2_V = 10;                
int aimassist1_SPEED =65; 
int aimassist2_SPEED =70;  



//RUMBLE
int rumble_type = RUMBLE_A;

//100% Accuracy - L2/LT & R1/RB
int PerfectAccuracy  = TRUE;

//--Rapidfire - LT/L2 + Right
int RapidFire      = FALSE;




//INSTA EDIT & INSTA RESET//////////////////////////////////////////////////
int EDIT_BUTTON       = BUILD_BTN;                         				////
int EDIT_BUTTON_HOLD  = TRUE;          									////
int HOLD_TIME         = 200;      										//// 
int EDIT_RESET_BUTTON = CROUCH_BTN  

////////Ghost Peek//////////////////////////////////////////////////////////
int GHOST_PEEK_NOABUSE                                                  ////
int ghostpeek = TRUE;													////
int gpreset = 111;														////


////LED/////////////////////////////////////////////////////////////////////
int a; int b;


data ( 1,2,0,0,0,0,2,0,0,0,0,2,0,0,0,0,2,2,0,2,0,0,2,2,0,2,2,2,2);    
int LED;    int RMBLE = RUMBLE_A;   

int Notify = TRUE 
 

//Stuff
int edit = FALSE;
int aimMod = TRUE;
int wasActive;
int doubleClick = FALSE;
//--------------------------------------------------------------------------------------------------------MAIN SECTION----------------------------------------------------------------------------------------------------//
main {
// HEAD AIM
if(get_val(ADS_BTN)&&event_press(UP)){//-------------
    lock = !lock;
    rumble_A_if_true(lock);}
    if(lock == TRUE){
    combo_run(Notify);a=0;b=2;} 
 	if(lock){										// Credit:  FaceWave 
    if(get_val(XB1_LT) && get_val(XB1_RT)) {
    aimupAB = 1;}
    if(aimupAB && !combo_running(aimup)) {
    aimupAB = aimupAB -1;
    combo_stop(AR);
    combo_restart(aimup);}}//------------------------

//Insta Edit
if(get_val(EDIT_BUTTON))
	{
	edit = TRUE;
	}
if (edit == TRUE) {
	if (get_val(BUILD_BTN)) {
		aimMod = TRUE;
	}
	if (event_release(FIRE_BTN) || get_val(EDIT_RESET_BUTTON) || get_val(SWAP_BTN)) {
		set_val(ADS_BTN, 0);
		set_val(BUILD_BTN, 100);
		edit = FALSE;
		}
}
if (event_press(BUILD_BTN)) 
{
	aimMod = !aimMod;
	edit = FALSE;
}	
if (get_val(SWAP_BTN)) 
{
	aimMod = TRUE;
}	


//100% ACCURACY
if (get_val(ADS_BTN) && get_val(RIGHT_BUMP)) {
  PerfectAccuracy = !PerfectAccuracy
   combo_run(Notify);a=0;b=2;
  combo_run(PerfectAccuracy);
set_val(RIGHT_BUMP, 0);
      } else {
  combo_stop(PerfectAccuracy);
}

//--Rapidfire
if(get_val(ADS_BTN) && event_press(RIGHT)){
   rumble_A_if_true(RapidFire);
   RapidFire =! RapidFire;
   if(RapidFire == TRUE){combo_run(Notify);a=0;b=2;} 
   if(RapidFire == FALSE){combo_run(Notify);a=2;b=0;}
   }
   if(RapidFire){
     if(get_val(FIRE_BTN)){
        combo_run(Rapidfire);                                          
       } 
     }
     
     //AntiAim
   if(get_val(ADS_BTN) && event_press(RELOAD_BTN)){
   AntiAim =! AntiAim;
   if(AntiAim == TRUE){combo_run(Notify);a=0;b=2;}
   if(AntiAim == FALSE){combo_run(Notify);a=2;b=0;} 
   }
   if(AntiAim){
      if(Defense){if(get_val(FIRE_BTN)==0&&get_rumble(RUMBLE_A)||get_rumble(RUMBLE_B)){combo_run(AntiAim);}}
      if(Offense){if(get_val(ADS_BTN)&&get_val(FIRE_BTN)){combo_run(AntiAim);}}
      }
      
      //Ghost Peek
if (get_val(ADS_BTN)) {
         if (event_press(LEFT_BUMP)) {
                combo_run( GhostPeek);
                combo_run(Notify);a=0;b=2;
       }
         set_val(LEFT_BUMP, 0);
         
        }
// AIM ABUSE       
if (get_val(ADS_BTN) && event_press(LEFT)) {
SHORT_abuse = !SHORT_abuse;
LONG_abuse = !LONG_abuse;
RMBLE_A(SHORT_abuse); }

// AIM ASSIST
if (get_val(LEFT_BUMP)){ if (event_press(RIGHT_BUMP)) {
aimassist1 = !aimassist1;
if(aimassist1 == TRUE){combo_run(Notify);a=0;b=2;}
if(aimassist1 == FALSE){combo_run(Notify);a=2;b=0;} 
aimassist2 = !aimassist2;
if(aimassist2 == TRUE){combo_run(Notify);a=0;b=2;}
if(aimassist2 == FALSE){combo_run(Notify);a=2;b=0;} 
RMBLE_A(aimassist1); }set_val(3, 0); }

if (SHORT_abuse) LEDC(Yellow);
if (LONG_abuse)  LEDC(SkyBlue);  
 

if (LONG_abuse) {
if (get_val(7) > 95) {
combo_run(LONG_abuse_combo);

} else { combo_stop(LONG_abuse_combo); }}

if (SHORT_abuse) {
if (get_val(7) > 95 &&  get_val(7) > 1) {
combo_run(SHORT_abuse_combo);

} else { combo_stop(SHORT_abuse_combo);  }}
if (get_val(4)) { set_val(4, 100); }

if (aimassist2) {
if (get_val(7) > 95) { combo_run(aimassist2_combo);}}
if (get_val(9)<-19||get_val(9)>19||get_val(10)<-19||get_val(10)>19||get_val(9)<-19||get_val(9)>19||get_val(10)<-19||get_val(10)>19){ 
combo_stop(aimassist2_combo);}

if (aimassist1) {
if (get_val(7) > 95) { combo_run(aimassist1_combo);}}
if (abs(get_val(9)) > 15 || abs(get_val(10)) > 15) {
combo_stop(aimassist1_combo);}
}






//--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------//
//--------------------------------------------------------------------------------------------------------COMBO SECTION-----------------------------------------------------------------------------------------------------------------//
//--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------//
combo TAP 
	{
    doubleClick = TRUE;
	wait(400);
	doubleClick = FALSE;
	}
combo AA_XY {
	set_val(10,xy_val(10,aa__shake));
	wait(aa_delay);
	set_val(9,xy_val(9,aa__shake));
	set_val(11,xy_val(11,aa__shake));
	wait(aa_delay);
	set_val(10,xy_val(10,aa__shake * -1));
	wait(aa_delay);
	set_val(9,xy_val(9,aa__shake * -1));
	set_val(11,xy_val(11,aa__shake * -1));
	wait(aa_delay);
}

combo aimup {
    wait(50);
    set_val(XB1_RY, -47);
    wait(50);
    set_val(XB1_RY, 0);
    wait(50);
    set_val(XB1_RY, 47);
    wait(50);
    set_val(XB1_RY, 0);}

combo AR {
    wait(50);
    set_val(XB1_RY, 26);
    wait(50);
    set_val(XB1_RY, 0);}

combo PerfectAccuracy {
set_val(FIRE_BTN,100);
wait(100);
wait(250);
set_val(FIRE_BTN,100);
}
combo Rapidfire {
set_val(FIRE_BTN, 100); 
wait(120);
set_val(FIRE_BTN, 0); 
wait(30);
}

combo AntiAim{
set_val(CROUCH_BTN,100);
wait(25);
wait(25);
set_val(CROUCH_BTN,100);
}

combo SHORT_abuse_combo {

set_val(7, 100); wait(SHORT_Hold); 
set_val(7, 0);   wait(SHORT_Release); }

combo LONG_abuse_combo {

set_val(7, 100); wait(LONG_Hold);
set_val(7, 0);   wait(LONG_Release); } 



combo aimassist1_combo {
set_val(9, abs(aimassist1_V)); wait(aimassist1_SPEED);
set_val(9, inv (aimassist1_V)); wait(aimassist1_SPEED);}

combo aimassist2_combo {
set_val(10, (aimassist2_V)); wait(aimassist2_SPEED)
set_val(9, (aimassist2_V)); wait(aimassist2_SPEED)
set_val(10, aimassist2_V * -1); wait(aimassist2_SPEED)
set_val(9, aimassist2_V * -1); wait(aimassist2_SPEED)}


combo RUMBLE {
set_rumble(RMBLE, 100); wait(300);
reset_rumble(); }

combo GhostPeek {
set_val(CROUCH_BTN, 100);
wait(15);
set_val(CROUCH_BTN, 0);
wait(15);
set_val(FIRE_BTN, 100);
wait(15);
set_val(FIRE_BTN, 0);
wait(50);
set_val(CROUCH_BTN, 100);
wait(15);
set_val(CROUCH_BTN, 0);
}

combo RumbleTwice {
    set_rumble(RUMBLE_A, 100);
    wait(250);
    set_rumble(RUMBLE_A, 0);
    wait(250);
    set_rumble(RUMBLE_A, 100);
    wait(250);
    reset_rumble();}
    
combo RumbleOnce {
    set_rumble(RUMBLE_A, 100);
    wait(250);
    reset_rumble();}




combo Notify {
if(Notify){set_rumble(RUMBLE_B,65);}
set_led(LED_1, 0);
set_led(LED_2, a);
set_led(LED_3, b);
set_led(LED_4, 0);
wait(550);
set_led(LED_1, 0);
set_led(LED_2, 0);
set_led(LED_3, 0);
set_led(LED_4, 0);
wait(250);
set_led(LED_1, 0);
set_led(LED_2, a);
set_led(LED_3, b);
set_led(LED_4, 0);
wait(250);
set_led(LED_1, 0);
set_led(LED_2, 0);
set_led(LED_3, 0);
set_led(LED_4, 0);
wait(250);
set_led(LED_1, 0);
set_led(LED_2, a);
set_led(LED_3, b);
set_led(LED_4, 0);
wait(250);
reset_leds();
}
combo VIBRATE {
    set_rumble(rumble_type, 100);
    wait(300);
    reset_rumble();
}
function rumble_A_if_true(var) {
    if (var) rumble_type = RUMBLE_A;
    else rumble_type = RUMBLE_B;
    combo_run(VIBRATE);
}

function RMBLE_A(var) {
if (var) RMBLE = RUMBLE_A;
else RMBLE = RUMBLE_B;
combo_run(RUMBLE); }


function LEDC(Colour) { LED = (Colour * 4) - 3;
set_led(LED_1, dbyte(LED));     set_led(LED_2, dbyte(LED + 1));
set_led(LED_3, dbyte(LED + 2)); set_led(LED_4, dbyte(LED + 3)); }

function get_double(B1,B2) 
	{
    if(get_val(B1) && event_press(B2) && !doubleClick) combo_run(TAP);
    if(get_val(B1) && event_press(B2) &&  doubleClick) return TRUE;
    return FALSE;
	}

function resetPress(P0,P1,P2,P3,T,S) {                                              
if(!P0){pressedIt[0] = FALSE;}    else if(P0) {pressedIt[0] = TRUE;}                     
if(!P1){pressedIt[1] = FALSE;}    else if(P1) {pressedIt[1] = TRUE;}                        
if(!P2){pressedIt[2] = FALSE;}    else if(P2) {pressedIt[2] = TRUE;}                        
if(!P3){pressedIt[3] = FALSE;}    else if(P3) {pressedIt[3] = TRUE;}                      
} 
	

 ///---DEV---//
//-SayNoBro-//
//-Lxuieee-//

///---Testers---//
// Thanks For The Testers That Tested For This, So Thankful :) //
