																																																									const string 
_T    [] = {"|YEWIYFY SCAM      ",""}																																																const string 
_T_   [] = {"|YEWIYFY SCAM           ",""}																																																const string 
_T___ [] = {"|         YEWIYFY SCAM     ",""}																																																const string 
_T__  [] = {"|YEWIYFY SCAM     !    ",""}																																																const string 
__T__ [] = {"|YEWIYFY SCAM       ",""}																																																define

_    = XB1_RY,
___  = XB1_RX,
__   = XB1_LY,
____ = XB1_LX, 																																																						_____  = 7, ______ = 7, _______ = 7, ________  = 7,

ADS     = XB1_LT,
Fire    = XB1_RT,

Build   = XB1_B,
Pickaxe = XB1_Y,
Pickup  = XB1_X,

Edit    = XB1_B,
Reset   = XB1_RS,
Confirm = XB1_RT,
Select  = XB1_RT,

PSController           = FALSE,

AntiRecoil             = TRUE,
AntiRecoilStrength     = 22,

HeadShotAssist         = FALSE,
HeadShotAssistStrength = 6,

AntiBloom              = TRUE,

PickupMacro            = TRUE,

ResetMacro             = TRUE,

BuildTracker           = TRUE,
BuildSyncTime          = 2500,

Roof    = XB1_LB,
Floor   = XB1_RB,
Ramp    = XB1_LT,
Wall    = XB1_RT,
Trap    = XB1_X 							/*MADE BY EXPLOIT YT*/																																														int 

V1,V2,V3,V4,V5,
V6 = 32767, V8,
V7 = 32767, V9,
V10, V11, V12,
 V15,V13,V14,
   V16,V17
																																																									init {
cls_oled(1);
print ( Text ( 18, OLED_FONT_SMALL_WIDTH ), 3 , OLED_FONT_SMALL, OLED_BLACK, _T    [0] )
print ( Text ( 18, OLED_FONT_SMALL_WIDTH ), 15, OLED_FONT_SMALL, OLED_BLACK, _T_   [0] )
print ( Text ( 18, OLED_FONT_SMALL_WIDTH ), 26, OLED_FONT_SMALL, OLED_BLACK, _T___ [0] )
print ( Text ( 18, OLED_FONT_SMALL_WIDTH ), 38, OLED_FONT_SMALL, OLED_BLACK, _T__  [0] )
print ( Text ( 18, OLED_FONT_SMALL_WIDTH ), 50, OLED_FONT_SMALL, OLED_BLACK, __T__ [0] ) 																																			} main {
vm_tctrl (-9);
block_rumble ( );
deadzone ( PS4_L2, PS4_R2, 100, 100 );																																																if (PSController) {
swap(PS4_SHARE, PS4_TOUCH);
V5 += get_rtime();																																																					} combo_run ( RightStickLock ); combo_run ( LeftStickLock  ); 	combo_run ( BloomLock ); combo_run ( AimLock   ); 		combo_run ( AimAbuser1 ); combo_run ( AimAbuser2 ); combo_run ( AimAbuser3 ); combo_run ( AimAbuser4 ); combo_run ( AimAbuser5 );		combo_run ( AimPerfecter );		combo_run ( PolarAimAbuser   ); combo_run ( PolarBloomAbuser );  if (ResetMacro) { if (event_press(Edit)) {V16 = TRUE;V17 = TRUE;V13 = FALSE;}if (V17) {if (event_release(Select)) {  V16 = FALSE;V17 = FALSE;V13 = FALSE;}}}if (V16 || V17) { if (event_press(Reset)) {  combo_run(Reset);V16 = FALSE;V17 = FALSE;V13 = FALSE;}if (event_press(Pickaxe) || event_press(ADS)) {V16 = FALSE;V17 = FALSE;V13 = FALSE;}} if (BuildTracker) { if (event_press(Build)) {V13 = !V13;}if (V13) {V14 += get_rtime();if (event_press(Pickaxe) || V14 == BuildSyncTime) {V13 = FALSE;V14 = 0;}if (get_ival(Roof) || get_ival(Floor) || get_ival(Ramp) || get_ival(Wall) || get_ival(Trap)) V14 = 0;}} if (!V13) { /* YEWIYFY SCAM      */ if ( PickupMacro && get_val ( Pickup ) ) { combo_run(PickUpMacro); } if ( AntiRecoil) { if ( get_val ( ADS ) && get_val ( Fire ) ) { combo_run ( AntiRecoil ); } } if ( AntiBloom ) { if ( get_val ( ADS ) && get_val ( Fire ) ) { combo_run(AntiBloom); } if ( abs ( get_val ( PS4_LX ) ) > 10 || abs ( get_val ( PS4_LY ) ) > 10 ) { combo_stop(AntiBloom); } } if (HeadShotAssist) { if (get_val(Fire)) { combo_run(HeadShotAssist); } } } if (V13) {set_rgb(0, 0, 139);}else {set_rgb(255, 255, 255);}
																																										                                                            } combo BloomLock { 
set_val ( __,   get_ival ( __   )  - 1 );
set_val ( ____, get_ival ( ____ )  + 3 );
set_val ( __,   get_ival ( __   )  + 1 );
set_val ( ____, get_ival ( ____ )  - 3 );																																															} combo AimLock {
set_val ( _,    get_ival ( _   )  - 3 );
set_val ( ___,  get_ival ( ___ )  + 2 );
set_val ( _,    get_ival ( _   )  + 2 );
set_val ( _,    get_ival ( _   )  + 1 );
set_val ( ___,  get_ival ( ___ )  - 2 );																																															} combo RightStickLock {
_1 ( _,    -3 );
_1 ( ___,   1 );
_1 ( _,     2 );
_1 ( ___,  -1 );
_1 ( _,     2 );																																																					} combo LeftStickLock {
_1 ( __,    1 );
_1 ( ____,  1 );
_1 ( __,   -3 );
_1 ( ____, -1 );
_1 ( __,    2 );																																																	 				} combo AimAbuser1 {
set_val ( ___, _2  (  ___, ______ + 1 ) );
set_val ( ___, _2  (  ___, ______ - 2 ) );
set_val ( _  , _2  (  _  , ______ + 1 ) );
set_val ( ___, _2  (  ___, ______ + 1 ) );
set_val ( _  , _2  (  _  , ______ - 2 ) );
set_val ( ___, _2  (  ___, ______ + 1 ) );
set_val ( _  , _2  (  _  , ______ + 1 ) );																																											  				} combo AimAbuser2 {
set_val ( ____, _3 ( ____, _____ + 1  ) );
set_val ( ____, _3 ( ____, _____ - 2  ) );
set_val ( __  , _3 ( __  , _____ + 1  ) );
set_val ( ____, _3 ( ____, _____ + 1  ) );
set_val ( __  , _3 ( __  , _____ - 2  ) );
set_val ( ____, _3 ( ____, _____ + 1  ) );
set_val ( __  , _3 ( __  , _____ + 1  ) );																																															} combo AimAbuser3 {
set_val ( ___, _4  (  ___, ______ + 1 ) );
set_val ( ___, _4  (  ___, ______ - 2 ) );
set_val ( _  , _4  (  _  , ______ + 1 ) );
set_val ( ___, _4  (  ___, ______ + 1 ) );
set_val ( _  , _4  (  _  , ______ - 2 ) );
set_val ( ___, _4  (  ___, ______ + 1 ) );
set_val ( _  , _4  (  _  , ______ + 1 ) ); 																																															} combo AimAbuser4 {
set_val ( ____, _5 ( ____, _____ + 1  ) );
set_val ( ____, _5 ( ____, _____ - 2  ) );
set_val ( __  , _5 ( __  , _____ + 1  ) );
set_val ( ____, _5 ( ____, _____ + 1  ) );
set_val ( __  , _5 ( __  , _____ - 2  ) );
set_val ( ____, _5 ( ____, _____ + 1  ) );
set_val ( __  , _5 ( __  , _____ + 1  ) );																																															} combo AimAbuser5 {
set_val ( _  , get_ival ( _   ) +inv ( 1/100 ) )
set_val ( ___, get_ival ( ___ ) +      1/100   )
set_val ( _  , get_ival ( _   ) +      1/100   )
set_val ( ___, get_ival ( ___ ) +inv ( 1/100 ) ) 																																													} combo AimPerfecter { 
V2 = get_ival ( PS4_RX ) - ___;
V3 = get_ival ( PS4_RY ) - ___;
if ( V4 ) { 
_6 ( V2, V2, 1, 0, 1, 0 )
_6 ( V3, V3, 1, 0, 0, 1 ) }
if ( V4 ) {
_6 ( V2, V2, 0, 1, 1, 0 )
_6 ( V3, V3, 0, 1, 0, 1 ) }
V4 = TRUE 																																																							} combo PickUpMacro { 
set_val ( Pickup, 100 ); 
wait    ( 1           );
set_val ( Pickup, 0   ); 
wait    ( 1           );																																																			} combo AntiRecoil { 
V10 = get_val ( PS4_RY ) + AntiRecoilStrength; 
if ( V10 > 100 ) 
V10 = 100; 
if ( abs ( get_val ( PS4_RY ) ) < abs ( AntiRecoilStrength ) + 5 ) set_val ( PS4_RY, ( V10 ) ); 																																	} combo AntiBloom { 
set_val ( PS4_LX,-11 ); 
wait    ( 25         ); 
set_val ( PS4_LY,  9 ); 
wait    ( 25         ); 
set_val ( PS4_LX, 11 ); 
wait    ( 25         ); 
set_val ( PS4_LY,  9 ); 
wait    ( 25         ); 																																																			} combo PolarAimAbuser { 
if ( !( V5++ % 4 ) ) 
_7 ( POLAR_RS, V1 = ( V1 * V6 ) % 360, V7 * 359 ) 
V5 = 0 																																																								} combo PolarBloomAbuser { 
if ( !( V5++ % 4 ) ) 
_7 ( POLAR_LS, V1 = ( V1 * V6 ) % 360, V7 * 359 ) 
V5 = 0 																																																								} combo HeadShotAssist { 
V15 = get_val ( PS4_RY ) + inv ( HeadShotAssistStrength ); 
if ( V15 > 100 ) V15 = 100;
if ( abs ( get_val ( PS4_RY ) ) < abs ( inv( HeadShotAssistStrength ) ) + 5 ) 
set_val ( PS4_RY, ( V15 ) ); 																																																		} combo Confirm {
set_val ( Confirm, 100 );
wait    ( 22           );
set_val ( Confirm, 0   );
wait    ( 10           );																																																			} combo Reset {
wait      ( 20      );
combo_run ( Confirm );																																																				} function 
_1 ( _1_,  _1__) {
set_val ( _1_, clamp ( _1__ * ( 100 - abs ( get_val ( _1_ ) ) ) / 100 + get_val ( _1_), -100, 100 ) );
return;																																																								} function _2 ( _2_, _2__ ) { 
if ( abs ( get_val ( _2_ ) ) < ( ______ - 1))  
return _2__ 
return get_val(_2_)																																																					} function _3 ( _3_, _3__ ) { 
if ( abs ( get_val ( _3_ ) ) < ( _____  - 1))  
return _3__ 
return get_val(_3_)																																																					} function _4 ( _4_, _4__ ) { 
if ( abs ( get_val ( _4_ ) ) < ( ______ + 1))  
return _4__ 
return get_val(_4_)																																																					} function _5 ( _5_, _5__ ) { 
if ( abs ( get_val ( _5_ ) ) < ( _____  + 1))  
return _5__ 
return get_val(_5_)																																																					} function _6 ( _6_, _6__, _6___, _6____, __6____, ___6____ ) { 
if ( _6_ < _6__ ) { 
if ( _6___    ) {
if ( __6____  ) set_val ( ___, ( _6__ + ________ ) )
if ( ___6____ ) set_val ( _ , ( _6__ + ________ ) ) }
else if ( _6____ ) { 
if ( __6____  ) set_val ( ___, ( _6__ - ________ ) )
if ( ___6____ ) set_val ( _ , ( _6__ - ________ ) ) } }
else {
if ( _6___    ) {
if ( __6____  ) set_val ( ___, ( _6__ - ________ ) )
if ( ___6____ ) set_val ( _  , ( _6__ - ________ ) ) }
else if ( _6____ ) {
if ( __6____     ) set_val ( ___, ( _6__ + ________ ) )
if ( ___6____    ) set_val ( _  , ( _6__ + ________ ) ) } } 																																										} function _7(_7_, _7__, _7___){
V8 = 9  + _7_;
V9 = 10 + _7_;
if ( _7__ < 0 ) _7__ = 360 + ( _7__ % 360 )
_7__  = ( _7__ + 90) % 360
_7___ = clamp ( _7___, 0, 100 )
V12 = ___PA__ [ _7__ ]
V11 = ___PA__ [ ( _7__ + 90 ) % 360 ]
_1(V8, inv ( _7___ * V11 / 100 ) )
_1(V9, inv ( _7___ * V12 / 100 ) )
return																																																								} function Text (Character,Font) {
return (OLED_WIDTH / 2 + 1) - ((Character * Font) / 2 + 1); 																																										} const int16 
___PA__ [] = { 100,100,100,100,100,100,100,100,99,99,99,99,98,98,97,97,97,96,95,95,94,94,93,92,92,91,90,89,89,88,87,86,85,84,83,82,81,80,79,78,77,75,74,73,72,71,70,69,67,66,65,63,62,61,59,58,56,55,53,52,50,49,47,46,44,43,41,40,
38,36,35,33,31,30,28,26,25,23,21,20,18,16,14,13,11,9,7,6,4,2,0,-1,-3,-5,-7,-8,-10,-12,-13,-15,-17,-19,-20,-22,-24,-25,-27,-29,-30,-32,-34,-35,-37,-39,-40,-42,-43,-45,-46,-48,-50,-51,-53,-54,-55,-57,-58,-60,-61,-62,-64,-65,-66,
-68,-69,-70,-71,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-89,-90,-91,-92,-92,-93,-93,-94,-95,-95,-96,-96,-97,-97,-97,-98,-98,-99,-99,-99,-99,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,
-100,-100,-100,-99,-99,-99,-98,-98,-98,-97,-97,-96,-96,-95,-94,-94,-93,-93,-92,-91,-90,-90,-89,-88,-87,-86,-85,-84,-83,-82,-81,-80,-79,-78,-77,-76,-75,-74,-72,-71,-70,-69,-67,-66,-65,-63,-62,-61,-59,-58,-56,-55,-53,-52,-50,
-49,-47,-46,-44,-43,-41,-40,-38,-36,-35,-33,-31,-30,-28,-26,-25,-23,-21,-20,-18,-16,-14,-13,-11,-9,-7,-6,-4,-2,0,2,4,6,7,9,11,13,14,16,18,20,21,23,25,26,28,30,31,33,35,36,38,40,41,43,44,46,47,49,51,52,54,55,56,58,59,61,62,
63,65,66,67,69,70,70,72,73,74,75,77,78,79,80,81,82,83,84,85,86,87,88,89,89,90,91,92,92,93,94,94,95,95,96,97,97,97,98,98,99,99,99,99,100,100,100,100,100,100,100 };