/*

 ──▄▀▀▀▄▄▄▄▄▄▄▀▀▀▄───                                                                               
───█▒▒░░░░░░░░░▒▒█───                             
────█░░█░░░░░█░░█────
─▄▄──█░░░▀█▀░░░█──▄▄─
█░░█─▀▄░░░░░░░▄▀─█░░█
█▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀█/////////////////////////////#######  Updated Script  #########///////////////////////////
█░░╦─╦╔╗╦─╔╗╔╗╔╦╗╔╗░░█
█░░║║║╠─║─║─║║║║║╠─░░█
█░░╚╩╝╚╝╚╝╚╝╚╝╩─╩╚╝░░█
█▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄█

____________________________InstalKill _V1.1____ Fortnite Update 7.30 Working __________________________________________
///   |------*/ int In_Game_Sens   = 5;     /*#######|------------------- SENSITIVITY OPTIMIZING! -------------------|                                                                                     
///  SETUP                                                                                 ///
///----------------------CONTROLS---------------------------------------------------------------------------------------
///================================================================================================================
///PUMPCannon - L2/LT + DOWN														                                              
///===================================================================================== ======================
//Dropshot - L2/LT + X/SQUARE
///=========================================================================================
//Aim Abuse - L2/LT + LEFT                                                                                                                                                                              
///=========================================================================================
///DROPSHOT: ADS + Down, the player lowers and rises quickly as he shoots      
///=========================================================================================
//Rapid Fire - L2/LT + RIGHT                    
///=========================================================================================
//Anti Recoil Always On                                                               ///                                    
///=========================================================================================
/// HAIR TRIGGER: always On, This also allows super fast building.  
///=========================================================================================
/// Pump+Cannon	it dose DropShot as Well as on same button but it dont really affect .				   ///                  
///=========================================================================================
//Ghost Peek - L2/LT + L1/LB
///============================================================================================
//Aim Assist -- Always on
///============================================================================================
///100% Accuracy - L2/LT + R1/RB
///===========================================================================================
-------------------------------------------------------------------------------------------------------------------------
*/
//INSTA EDIT & INSTA RESET//////////////////////////////////////////////////
int EDIT_BUTTON       = BUILD_BTN;                         				////
int EDIT_BUTTON_HOLD  = TRUE;          									////
int HOLD_TIME         = 200;      										//// 
int EDIT_RESET_BUTTON = CROUCH_BTN    

//PUMPCannon - L2/LT + DOWN
int PumpCannon = FALSE;
//Dropshot - L2/LT + X/SQUARE
int Dropshot       = FALSE;
//Hair Trigger
int HairTrigger    = TRUE;
//Rapid Fire - L2/LT + RIGHT
int RapidFire      = FALSE; 
//Anti Recoil
int AntiRecoil     = FALSE;
//Aim Assist -- Always on
int AimAssist = TRUE;
//Aim Abuse - L2/LT + LEFT
int  AimAbuse = TRUE;
//100% Accuracy - L2/LT + R1/RB
int PerfectAccuracy  = TRUE;
//Ghost Peek - L2/LT + L1/LB
int GHOST_PEEK_NOABUSE                                                  ////
int ghostpeek = TRUE;													////
int gpreset = 111;														////
//AIM ABUSE VALUES
int AimAbuse_HOLD =460; //How long you HOLD ADS Button
int AimAbuse_RELEASE = 20;//How long you release ADS Button

//AIM ASSIST VALUES
int aav  = 22;// AIM ASSIST VALUES
int aav2 = -22;//AIM ASSIST VALUES

//ANTI-RECOIL VALUES
int antirecoil
int antirecoilA      = 24;
int antirecoilB      = 31;
int delayA           = 14; 

//AIM ASSIST KILLZONE
int value  = 22;
int value2 =-22;
int delay  = 21;

//PUMP-SMG
int tap; 
int R2_block;

//DROPSHOT
int DefenseMode=FALSE;
int AttackMode=TRUE;

//Rumble
int Notify = TRUE;

//Rapid Fire [Settings]
int rapidfire;
  
  //LED
int a; int b;

//Layout
define FIRE_BTN = 4; //XB1_RB //PS4_R2
define ADS_BTN = 7; //XB1_LB //PS4_L2
define CROUCH_BTN = 5; //XB1_RS //PS4_R3
define RELOAD_BTN = 20; //XB1_X //PS4_SQAURE
define SPRINT_BTN = 8; //XB1_LS //PS4_L3
define JUMP_BTN = 19; //XB1_A  //PS4_CROSS
define NEXT_PIECE = 3; //XB1_RT //PS4_R1
define RIGHT_BUMP = 3; // XB1_RB //PS4_R1
define LEFT_BUMP = 6; //ADS_BTN //PS4_L1
define SWAP_BTN = 17; //XB1_Y  //PS4_TRIANGLE
define BUILD_BTN = 18; //XB1_B  //PS4_CIRCLE
define R_X = 9; //XB1_R_X //PS4_R_X
define R_Y = 10; //XB1_R_Y //PS4_R_Y
define L_X = 11; //XB1_L_X //PS4_L_X
define L_Y = 12; //XB1_L_Y //PS4_L_Y
define UP = 13; //XB1_UP //PS4_UP
define DOWN = 14; //XB1_DOWN //PS4_DOWN
define LEFT = 15; //XB1_LEFT //PS4_LEFT
define RIGHT = 16; //XB1_RIGHT //PS4_RIGHT
  
 main {
 //AIMASSIST
 if (AimAssist) {
 if (get_val(ADS_BTN)) {
 combo_run(AimAssist);}}
 if (get_val(R_X)<value2||get_val(R_X)>value||get_val(R_Y)<value2||get_val(R_Y)>value||get_val(R_X)<value2||get_val(R_X)>value||get_val(R_Y)<value2||get_val(R_Y)>value){
         combo_stop(AimAssist);}

 //InstaEdit & InstaReset
if (a) 
{                                                                           
 if (i < num) 
 {                                                                     
  if (!combo_running(master)) 
  {                                                      
   combo_run(master);                                                                 
  }  
 
  } 
  else if (i > num) 
  {                                                            
       a = FALSE;                                                                   
  }                                                                                
    }                                                                                    
 
    if(EDIT_BUTTON_HOLD)                                                                     
    {                                                                            
      if(get_val(EDIT_BUTTON) && get_ptime(EDIT_BUTTON) > HOLD_TIME)                     
      {                                                                                
          edit = TRUE;                                                                       
      }   
    }                                                                                  
      else if(!EDIT_BUTTON_HOLD)                                                         
      {                                                                                
        if(get_val(EDIT_BUTTON))                                                           
        {                                                                                
        edit = TRUE;                                                                       
        }                                                                                
        }  
   if (edit == TRUE) 
    {                                                                  
     resetPress(0,1,0,0,0,0);                                                         
   if (get_val(BUILD_BTN)) 
    {                                                        
     AimAssist = TRUE;                                                                
     AimAbuse  = TRUE;                                                                
    }   
 
     if (event_release(FIRE_BTN) || get_val(EDIT_RESET_BUTTON) || get_val(SWAP_BTN)) 
     {   
      set_click(BUILD_BTN, 1, 0);                                                  
      edit = FALSE;                                                                
      }                                                                                
       }

 
  
  
  //HAIR TRIGGER
 if(HairTrigger){ 
 if(get_val(FIRE_BTN))
 set_val(FIRE_BTN, 100);
}
   
 //HOLD BUTTON FOR TOGGLE
 if(get_val(ADS_BTN)) {
 
 //RAPID FIRE TAP BUTON TO TOGGLE
 if (event_press(RIGHT)){//
 RapidFire = !RapidFire;
 if(RapidFire == TRUE){combo_run(Notify);a=0;b=2;}
 if(RapidFire == FALSE){combo_run(Notify);a=2;b=0;}
}
   
 //PUMP-SMG TAP BUTON TO TOGGLE  
 if (event_press(DOWN)) {//
 PumpCannon = !PumpCannon;
 tap = FALSE;
 if(PumpCannon == TRUE){combo_run(Notify);a=0;b=2;}
 if(PumpCannon == FALSE){combo_run(Notify);a=2;b=0;}

}
 //AIM ASSIST TAP BUTON TO TOGGLE   
 if (event_press(LEFT)){//
 AimAbuse =! AimAbuse; 
 if(AimAbuse == TRUE){combo_run(Notify);a=0;b=2;}
 if(AimAbuse == FALSE){combo_run(Notify);a=2;b=0;}
}

 //DROP SHOT TAP BUTON TO TOGGLE
 if (event_press(RELOAD_BTN)){//
 Dropshot = !Dropshot;
 if(Dropshot == TRUE){combo_run(Notify);a=0;b=2;}
 if(Dropshot == FALSE){combo_run(Notify);a=2;b=0;}
}
 set_val(RIGHT, 0); set_val(DOWN, 0); set_val(LEFT, 0); set_val(RELOAD_BTN, 0);   }
 
 //RAPID FIRE   
 if(RapidFire){
 if(get_val(FIRE_BTN)){
 combo_run(Rapidfire);                                          
} 
}

 //AIM ABUSE     
 if(AimAbuse){//
 if(get_val(ADS_BTN)> 95){
 combo_run(AimAbuse);}
 if(event_release(ADS_BTN)){ combo_stop(AimAbuse);
}
}

 //ANTI-RECOIL      
 if(AntiRecoil){
 if(get_val(FIRE_BTN)){combo_run(Antirecoil);}
 if(get_rumble(RUMBLE_A) <= 50){antirecoil = antirecoilA;}
 if(get_rumble(RUMBLE_A) > 50){antirecoil = antirecoilB;}
 if(abs(get_val(R_Y)) >= antirecoil+ 10){combo_stop(Antirecoil);
}
}
  
 //Ghost Peek
 if (get_val(ADS_BTN)) {
 if (event_press(LEFT_BUMP)) {
 combo_run( GhostPeek);
 combo_run(Notify);a=0;b=2;}
 set_val(LEFT_BUMP, 0);
}
         
 //100% ACCURACY
 if (get_val(ADS_BTN) && get_val(RIGHT_BUMP)) {
 combo_run(PerfectAccuracy);
 combo_run(Notify);a=4;b=2;
 set_val(RIGHT_BUMP, 0);
} else {
 combo_stop(PerfectAccuracy);
}

//DROPSHOT
 if(Dropshot){
 if(DefenseMode){if(get_val(FIRE_BTN)==0&&get_rumble(RUMBLE_A)||get_rumble(RUMBLE_B)){combo_run(Dropshot);}}
 if(AttackMode){if(get_val(ADS_BTN)&&get_val(FIRE_BTN)){combo_run(Dropshot); }}
 if (event_press(BUILD_BTN)){ Dropshot = FALSE;}
}
      
 //PUMP-SMG
 if (PumpCannon) {
 if (R2_block) {
 set_val(ADS_BTN, 0);
 set_val(FIRE_BTN, 0);
     }
 //------------------------------------------------
 if (get_val(ADS_BTN) && event_press(FIRE_BTN)) {
 if (!tap) { 
 tap = TRUE; //LED COLOR BLUE
 combo_run(Double_Tact_R1); //TAP R1
 set_val(FIRE_BTN, 0);
}
}
 if (event_press(LEFT_BUMP)) {
 tap = FALSE;
    }
   }
 }
      
combo Notify {
if(Notify){set_rumble(RUMBLE_B,65);}
set_led(LED_1, 0);
set_led(LED_2, a);
set_led(LED_3, b);
set_led(LED_4, 0);
wait(550);
set_led(LED_1, 0);
set_led(LED_2, 0);
set_led(LED_3, 0);
set_led(LED_4, 0);
wait(250);
set_led(LED_1, 0);
set_led(LED_2, a);
set_led(LED_3, b);
set_led(LED_4, 0);
wait(250);
set_led(LED_1, 0);
set_led(LED_2, 0);
set_led(LED_3, 0);
set_led(LED_4, 0);
wait(250);
set_led(LED_1, 0);
set_led(LED_2, a);
set_led(LED_3, b);
set_led(LED_4, 0);
wait(250);
reset_leds();
}

combo Dropshot{
set_val(CROUCH_BTN,100);
wait(40);
wait(200);
set_val(CROUCH_BTN,100);
}

combo Double_Tact_R1 {
R2_block = TRUE;
set_val(4, 100);
wait(15);
wait(5);
set_val(7, 100);
set_val(8, 100);
set_val(3, 100);
wait(15);
R2_block = FALSE;
} 

combo AimAssist {
set_val(R_Y, (aav));
wait(delay)
set_val(R_X, (aav));
wait(delay)
set_val(R_Y, (aav2));
wait(delay)
set_val(R_X, (aav2));
wait(delay)
set_val(R_Y, (aav));
wait(delay)
set_val(R_X, (aav));
wait(delay)
set_val(R_Y, (aav2));
wait(delay)
set_val(R_X, (aav2));
wait(delay)

}
combo PerfectAccuracy {
set_val(FIRE_BTN,100);
wait(100);
wait(250);
set_val(FIRE_BTN,100);
}

combo AimAbuse {
set_val(ADS_BTN, 100);
wait(AimAbuse_HOLD);
set_val(ADS_BTN, 0);
wait(AimAbuse_RELEASE);
}
    
combo Rapidfire {
set_val(FIRE_BTN, 100); 
wait(rapidfire);
set_val(FIRE_BTN, 0); 
}

combo GhostPeek {
set_val(CROUCH_BTN, 100);
wait(15);
set_val(CROUCH_BTN, 0);
wait(15);
set_val(FIRE_BTN, 100);
wait(15);
set_val(FIRE_BTN, 0);
wait(50);
set_val(CROUCH_BTN, 100);
wait(15);
set_val(CROUCH_BTN, 0);
}

combo Antirecoil {
set_val(R_Y, antirecoil);
wait(delayA);
set_val(R_Y, antirecoil);
wait(delayA);
}

combo master {                                                                           
wait(WAIT);                                                                             
set_val(button, 100);                                                                   
wait(28);                                                                               
set_val(button, 0);                                                                     
wait(28);                                                                               
i = i + 1;                                                                              
}

function resetPress(P0,P1,P2,P3,T,S) {                                              
if(!P0){pressedIt[0] = FALSE;}    else if(P0) {pressedIt[0] = TRUE;}                     
if(!P1){pressedIt[1] = FALSE;}    else if(P1) {pressedIt[1] = TRUE;}                        
if(!P2){pressedIt[2] = FALSE;}    else if(P2) {pressedIt[2] = TRUE;}                        
if(!P3){pressedIt[3] = FALSE;}    else if(P3) {pressedIt[3] = TRUE;}                      
}   

function set_click(B, Num, Wait) {                                                      
    WAIT = Wait;                                                                            
    i = 0;                                                                                   
button = B;                                                                              
num = Num;                                                                               
a = TRUE;                                                                                
}
int edit = FALSE;                                                                       
int pressedIt[6];                                                                       
int WAIT;                                                                                
int num, i;                                                                           
int button;                                                                                                                                  

