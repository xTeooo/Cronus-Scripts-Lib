/*
 ᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊
 ᥊᥊᥊                        AoD V7 JINX			                               ᥊᥊᥊
 ᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊
Simple Instructions to follow -  Please Read this script.  Everything with a ** You will need to change according to your in game settings.
 ᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊
 ᥊᥊᥊                       Features					                             ᥊᥊᥊
 ᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊
//DropShot     L2/LT + RIGHT DPAD
//Perfect Recoil
//Adjustable Aim ASSIST
//Cancel Slide   SQUARE/X + DOWN DPAD
//RapidFire  L2/LT+ LEFT DPAD
 ᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊
 Button Layout*/
    define Shoot_Button   = XB1_RT;//** // Please replace with XB1_RB If you shoot with RB
    define AIM_BUTON   = XB1_LT; // **// Please replace with XB1_LB if you shoot with LB
    define CROUCH_BTN=PS4_CIRCLE; //**// If you crouch with R3 then please change to PS4_R3
    define JUMP_BTN=PS4_CROSS; 
    define RX   = XB1_RX;    //Leave Alone//                            
    define RY   = XB1_RY;  //Leave Alone
/*
 ᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊
 ᥊᥊᥊                         Anti Recoil **                                      ᥊᥊᥊
 ᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊
 */   
    define RECOIL_AIM_SHOOT = FALSE;// If set to true  Anti Recoil works only when scoping. Set to false to work with just FIRE
    define ANTI_RECOIL = 12; //Change 20 to a number for vertical recoil - If your recoil is going up then lower the number - If it goes high then higher the number
    define ANTI_RECOIL_LEFT = 0;  //Change this to change recoil if going to the right too much  0-10
    define ANTI_RECOIL_RIGHT = -5; // Change this to change recoil if going to the left too much 0-10
    /*
 ᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊
 ᥊᥊᥊                         Aim Assist                                         ᥊᥊᥊
 ᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊
 */   
    
    int AoDPantherAim   = 18; // Only Change this line if you know what you're doing - Higher number = more shake
    int AoDPantherAim2  = -15;// Please Make sure this number is not higher than above 
    int AoDPantherDelay   = 11; // This is release when aim assist stops working in seconds.
    
    
 											    // NO MORE EDITING BELOW THIS LINE//
    
    
    
    
    
        /*
 ᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊
 ᥊᥊᥊                         DO NOT EDIT BELOW THIS LINE                           ᥊᥊᥊
 ᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊᥊
 */   
int AoD2219998882=FALSE; 

int AoD6XZ3Z9XSZZX5ZSSZ48D69HNM   =FALSE;

int Rapid_Fire = FALSE
int DropShot = FALSE

    
    int AOD22233 = TRUE; 
    int AOD222332    = 35; 
    int AOD2223321    = 35; 
    int AOD22233212   = 20;
    main {
 
 
        if(get_val(AIM_BUTON)) {
            combo_run(Aod332);
        }
 
        if(get_val(Shoot_Button) && get_val(AIM_BUTON)) {
            combo_stop(Aod332);
            combo_run(Aod33);
        }
 
        if(get_val(RX) < AoDPantherAim2 || get_val(RX) > AoDPantherAim || get_val(RY) < AoDPantherAim2 || get_val(RY) > AoDPantherAim || get_val(RX) < AoDPantherAim2 || get_val(RX) > AoDPantherAim || get_val(RY) < AoDPantherAim2 || get_val(RY) > AoDPantherAim) {
            combo_stop(Aod332);
            combo_stop(Aod33);
        }
        
    
 


    
    if((event_press(PS4_SQUARE) && get_val(PS4_DOWN)) || (event_press(PS4_DOWN) && get_val(PS4_SQUARE))) {
       AoD6XZ3Z9XSZZX5ZSSZ48D69HNM   =!AoD6XZ3Z9XSZZX5ZSSZ48D69HNM   ;
 } if(AoD6XZ3Z9XSZZX5ZSSZ48D69HNM   ) { 
AoD2219998882 = FALSE; 

if(get_val (CROUCH_BTN)){ 

combo_run(AoDZ1SZDYDBZYVEDYSEI2S2)
}}
if(get_val(PS4_L2) && event_press(PS4_LEFT)) {
Rapid_Fire=!Rapid_Fire;}
if (Rapid_Fire) {
if(get_val(PS4_R2)) {
combo_run (Aodcomb82);}
}
if(get_val(PS4_L2) && event_press(PS4_RIGHT)) {
DropShot=!DropShot;}
if (DropShot) {
if(get_val(PS4_R2)) {
combo_run (Aodcomb8);}
}}

 
   combo Aod332 {
       set_val(RY, -19);          
       wait(AoDPantherDelay)
       set_val(RX, 19); 
       set_val(RY, 10); 
       wait(AoDPantherDelay) 
       set_val(RY, 10); 
       wait(AoDPantherDelay)                  
       set_val(RX, -19);
       set_val(RY, 10);
       wait(AoDPantherDelay)
    }
 
 
   combo Aod33 {
       set_val(RY, -30);              
       wait(AoDPantherDelay)
       set_val(RX, 30);
       set_val(RY, 20);
       wait(AoDPantherDelay) 
       set_val(RY, 20);
       wait(AoDPantherDelay)                  
       set_val(RX, -30);
       set_val(RY, 20);
       wait(AoDPantherDelay)
    }




    int fire_button, scope_button;
    int anti_recoil;
    int anti_recoil_left;
    int anti_recoil_right;


    init {
        if(get_console() == PIO_PS3) {
            fire_button = 3;
            scope_button = 6;
        } else {                      
            fire_button = 4;
            scope_button = 7;
        }
    }
  
    main {
        if(!RECOIL_AIM_SHOOT || get_val(scope_button)) {
            combo_run(Aod33221);
        }
    }

      combo AoDZ1SZDYDBZYVEDYSEI2S2         { 
    set_val(CROUCH_BTN, 100);
    wait(120);
    set_val(CROUCH_BTN, 0);
    wait(60);
    set_val(CROUCH_BTN, 100);
    wait(50);
    set_val(CROUCH_BTN, 100);
    set_val(JUMP_BTN, 100);
    wait(60);
    set_val(CROUCH_BTN, 0);
    set_val(JUMP_BTN, 100);
    wait(10);
    set_val(JUMP_BTN, 0);
    
    } 
combo Aodcomb82 {
set_val(PS4_R2, 100); 
wait(35);
set_val(PS4_R2, 0); 
wait(25);
}
combo Aodcomb8 {                   
    set_val(CROUCH_BTN, 100); 
    wait(600);  
    wait(5000); 
} 
    combo Aod33221 { // 
        if(get_val(fire_button)) {
        anti_recoil = get_val(10) + ANTI_RECOIL;
        if(anti_recoil > 100) anti_recoil = 100;
        set_val(10, anti_recoil);
        anti_recoil_left = get_val(9) -ANTI_RECOIL_LEFT;
        if(anti_recoil_left > 100) anti_recoil_left = 100;
        set_val(9, anti_recoil_left);
        anti_recoil_right = get_val(9) +ANTI_RECOIL_RIGHT;
        if(anti_recoil_right > 100) anti_recoil_right = 100;
        set_val(9, anti_recoil_right);
        }
    }