// GPC Online Library
// di2ty_2emix_2k22_n3xt_g3n.gpc

//██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████
	int CATCH_AND_SHOOT = 546;		define CATCH_AND_SHOOT_BUTTON = PS4_L1;
//██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████
/*// ONLY CHANGE THE VALUES ABOVE
                                                                                                                        


                                                                                                                                                         
                         ████ ████ ███ ████ ████ █    ████      ████ █    █   █ █████ ████         █  █  █  █ █████                                                                                     
                         ██ █ █ ██  █  ██ █ ██ █ █    █         ██   █    █   █   █     ██         █  █  █  █   █                                                               
                         ██ █ ████  █  ███  ███  █    ████      ████ █    █   █   █   ████   ███   ████  ████   █                                                                            
                         ██ █ █ █   █  ██ █ ██ █ █    █           ██ █    █   █   █   ██           █  █  █  █   █                                                              
                         ████ █ ██ ███ ████ ████ ████ ████      ████ ████ █████   █   ████         █  █   ██    █                                                                                 
                          
                         All Credits goes out to the OG Dirty and predecessors. I am only sharing my personal edit I have been using.
                         [I have a 99 3pt and Wade shot and green every quickstop with LB with above value]
█════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════█ 
║        Toggle				     PS4				    XBOX	     DEFAULT    HOW TO USE                                                               ║
╠════════════════════════╦═══════════════════════╦═════════════════╦════════╦════════════════════════════════════════════════════════════════════════════╣ 
║ DRIBBLE MOVES          ║   CROSS + UP D-PAD    ║   A + UP D-PAD  ║  OFF   ║  DRIBBLE MOVE NAME ON ZEN SCREEN L3 AND R3 DEPENDING ON WHICH HAND HAS BALL║
╠════════════════════════╬═══════════════════════╬═════════════════╬════════╬════════════════════════════════════════════════════════════════════════════╣ 
║ QUICK STOP             ║   CLICK L3            ║   CLICK LS      ║  OFF   ║  QUCIKSTOP IS THE FIRST DRIBBLE SET AND JUST PRESS L3 AND SHOOT IMMEDIATELY║
╠════════════════════════╬═══════════════════════╬═════════════════╬════════╬════════════════════════════════════════════════════════════════════════════╣ 
║ ONLINE/OFFLINE         ║   OPTIONS UP/DOWN     ║   MENU UP/DOWN  ║  ON    ║  OPTION/MENU UP IS OFFLINE WITH ZEN EYES OFF/ DOWN IS ONLINE W GREEN EYES  ║
╠════════════════════════╬═══════════════════════╬═════════════════╬════════╬════════════════════════════════════════════════════════════════════════════╣ 
║ +/- CATCH&SHOOT VALUES ║     L2+ D DPAD        ║    LT +  DPAD   ║  ON    ║UP DOWN LEFT OR RIGHT ON DPAD WHILE HOLDING L2 WILL CHANGE VALUE ON ZEN     ║
╠════════════════════════╩═══════════════════════╩═════════════════╩════════╩════════════════════════════════════════════════════════════════════════════╣ 
║                                                                                                                                                        ║
╠════════════════════════╦═══════════════════════╦═════════════════╦═════════════════════════════════════════════════════════════════════════════════════╣ 
║  STANDING SHOTS        ║        TAP L1         ║     TAP LB      ║ TAP L1 / LB (TAP DON'T HOLD)                				                         ║
╠════════════════════════╩═══════════════════════╩═════════════════╩═════════════════════════════════════════════════════════════════════════════════════╣ 
║                                                                                                                                                        ║
╠══════════════════════════╦═══════════════════════════╦══════════════════════════╦══════════════════════════════════════════════════════════════════════╣ 
║ CHANGE DRIBBLE MOVE      ║  CROSS + D-PAD LEFT/RIGHT ║  CROSS + D-PAD LEFT/RIGHT║    Dribbles are LABLED ON ZEN as stated below                        ║
╠══════════════════════════╬═══════════════════════════╬══════════════════════════╬══════════════════════════════════════════════════════════════════════╣
║ ACTIVATE DRIBBLES        ║  L3 OR R3		           ║  LS OR RS	              ║    BALL IN LEFT HAND PRESS L3/LS BALL IN RIGHT HAND PRESS R3/RS      ║
╠══════════════════════════╬═══════════════════════════╬══════════════════════════╬══════════════════════════════════════════════════════════════════════╣
║ SAVE SETTINGS            ║  SAVES AUTOMATICALLY      ║  SAVES AUTOMATICALLY     ║    ANY TIME YOU ADJUST ANY SHOT IT WILL SAVE RIGHT AWAY              ║
█══════════════════════════╩═══════════════════════════╩══════════════════════════╩══════════════════════════════════════════════════════════════════════█

██████████
█DRIBBLES█
██████████

1) QUICK STOP L3 /  MOMENTUM SPAM R3   (REMEMBER IF USING QUICKSTOP SHOOT BEFORE BALL GOES BETWEEN LEGS)

2) L3/R3 MOMENTUM TO CURRY SLIDE 

3) L3/R3 CURRY SLIDE 

4) L3/R3 EXPLOSIVE BTB

5) L3/R3 SPINBACK

6) L3/R3 FORWARD HALFSPIN

7-10)L3/R3 COMP DRIBBLESET FROM JAIWALKIIN 

11) L3/R3 CRAB

*/










																
//████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████																	
int Offline;int Dribbles;int DribbleSet = TRUE;int TIMER = 300;int Script = TRUE;int Index = 1;int Edit_Values;int Block_Output;int Screen_Saver;int CatchNShootValueDisplay;
define MAX_RANGE = 330;define Green = 10;define FONT_LENGTH = 2;define SMALL_FONT = 0;define MEDIUM_FONT = 1;define FONT_WIDTH = 0;define FONT_HEIGHT = 1;define BLACK_COLOR = 0;define WHITE_COLOR = 1;define Off = 0;
//████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████
const string LINE1 = "NBA 2K22";const string LINE2 = "D1RTY 23M1X";const string LINE3 = "B3TA";const string LINE4 = " By Hvt";const string CNS = "Catch&Shoot";                                                                                          
const string DRIBBLE1 = "L3 QS R3 MMSPAM";const string DRIBBLE2 = "Momentum2Curry";const string DRIBBLE3 = "CURRY SLIDE";const string DRIBBLE4 = "EXPLOSIVE";const string DRIBBLE5 = "SPIN BACK";const string DRIBBLE6 = "SPIN FORWARD";																								
const string DRIBBLE7 = "Advanced Dribble";const string DRIBBLE8 = "Cross Over";const string DRIBBLE9 = "Momentum Upcourt";const string DRIBBLE10 = "L3 Pro2 R3 SPDBST";const string DRIBBLE11 = "Crab";																								
//████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████
//-- Init
init{
    cls_oled(0);//--/Clears Oled
    printf(center_x(sizeof(LINE1) - 1, OLED_FONT_MEDIUM_WIDTH),5,OLED_FONT_MEDIUM,OLED_WHITE,LINE1[0]);//-- Display Script Title          
    printf(center_x(sizeof(LINE2) - 1, OLED_FONT_MEDIUM_WIDTH),25,OLED_FONT_MEDIUM,OLED_WHITE,LINE2[0]);//-- Display Script Title          
    printf(center_x(sizeof(LINE3) - 1, OLED_FONT_SMALL_WIDTH),45,OLED_FONT_SMALL,OLED_WHITE,LINE3[0]);//-- Display Script Title          
    printf(center_x(sizeof(LINE4) - 1, OLED_FONT_SMALL_WIDTH),55,OLED_FONT_SMALL,OLED_WHITE,LINE4[0]);//-- Display Script Title        
	CATCH_AND_SHOOT =	get_pvar(SPVAR_3, 10, 3000, CATCH_AND_SHOOT );//--gets catch and shoot value
	Offline         =	get_pvar(SPVAR_4, 1, 1, Offline );//-- sets online or offline depending on last state	  
}											                                                                              
main {
vm_tctrl(0);	
Screen_Saver = TRUE;//--ScreenSaver Always Running 
	    if(Offline == FALSE){	
            set_ds4_led(Green);
        }//--Green Zen if Online Mode
        if(Offline == TRUE){	
            set_ds4_led(Off);
        }//-- Zen Eyes Off if Offline Mode
        if(get_val(PS4_SQUARE)){
            vm_tctrl(-9);
        }    
		if(event_press(CATCH_AND_SHOOT_BUTTON)){Block_Output = PS4_L1; 
            combo_run(CATCH_AND_SHOOT_COMBO);
        }
//-- Not Holding R2      
	    if(!get_val(PS4_R2)){
  		    if(get_val(PS4_L2)){    	    
 			    if(event_press(PS4_LEFT)) {Block_Output = PS4_LEFT; 
            	    CATCH_AND_SHOOT = CATCH_AND_SHOOT - 1;
            	    Edit_Values = TRUE;
				    CatchNShootValueDisplay = TRUE;
				    combo_run (RUMBLE);
				    combo_run (Save_Timing);
			    }
				if(event_press(PS4_RIGHT)){Block_Output = PS4_RIGHT;	
	                CATCH_AND_SHOOT = CATCH_AND_SHOOT + 1;
	                Edit_Values = TRUE;
				    CatchNShootValueDisplay = TRUE;
				    combo_run (RUMBLE);
				    combo_run (Save_Timing);
			    }
        	    if(event_press(PS4_UP)) {Block_Output = PS4_UP;	      
	                CATCH_AND_SHOOT = CATCH_AND_SHOOT + 5;
	                Edit_Values = TRUE;
				    CatchNShootValueDisplay = TRUE;
				    combo_run (RUMBLE);
				    combo_run (Save_Timing);
			    }
   			    if(event_press(PS4_DOWN)) {		 Block_Output = PS4_DOWN;	
	                CATCH_AND_SHOOT = CATCH_AND_SHOOT - 5;
	                Edit_Values = TRUE;
				    CatchNShootValueDisplay = TRUE;
				    combo_run (RUMBLE);
				    combo_run (Save_Timing);
			    }
		    }
	    }      
 //--Toggle Offline and Online
    if((get_val(PS4_OPTIONS)) && Script == TRUE){Block_Output = PS4_DOWN;
    	if(event_press(PS4_DOWN) && Offline == TRUE){
    		Offline = FALSE;
        	CATCH_AND_SHOOT = CATCH_AND_SHOOT + 150; 
        }
        Block_Output = PS4_UP;
    	if(event_press(PS4_UP) && Offline == FALSE){
    		Offline = TRUE;
            CATCH_AND_SHOOT = CATCH_AND_SHOOT - 150; 
        }
    }
//--Toggle Dribbles On Off
	    if(get_val(PS4_CROSS)){
      		    if(event_press(PS4_UP)){Block_Output = PS4_UP;
				    EXIT();
				    Dribbles = !Dribbles;
			    }
	    	    if(event_press(PS4_RIGHT)){ Block_Output = PS4_RIGHT;
				    EXIT();
				    DribbleSet ++;	
				    if (DribbleSet >11)
					DribbleSet = 1;
			    }
			    if(event_press(PS4_LEFT)){Block_Output = PS4_LEFT;
				    EXIT();
				    DribbleSet --;	
				    if (DribbleSet <1)
				    DribbleSet = 11;
			    }
        }
	    if(Edit_Values){
		    combo_run (Save_Timing);
   	    }
	    if(Block_Output){ //----block output
		    if(event_release(Block_Output)){
			    Block_Output = 0;
		    }else{
		        set_val(Block_Output,0);
			}
	    }
  	    if(Dribbles){ 
  		    if(DribbleSet == 1){	
	    	    printf(center_x(sizeof(DRIBBLE1) - 1, OLED_FONT_SMALL_WIDTH),28,OLED_FONT_SMALL,OLED_WHITE,DRIBBLE1[0]);//-- Display Script Title          
	    		    if((get_val(PS4_LX))<0 && event_press(PS4_L3))
	    			    combo_run(LH_QUICKSTOP);
	    		    if((get_val(PS4_LX))>0 && event_press(PS4_L3))
	    			    combo_run(RH_QUICKSTOP); 
				    if (get_val(PS4_R3)) 
					    combo_run(MOMENTUM_SPAM);		
		    }
		    if(DribbleSet == 2){
    	        printf(center_x(sizeof(DRIBBLE2) - 1, OLED_FONT_SMALL_WIDTH),28,OLED_FONT_SMALL,OLED_WHITE,DRIBBLE2[0]);//-- Display Script Title          
				    if (event_press(PS4_L3)) 
					    combo_run(LH_MM_CURRY);
				    if (event_press(PS4_R3))
					    combo_run(RH_MM_CURRY);			
		    }
	        if(DribbleSet == 3){
    	        printf(center_x(sizeof(DRIBBLE3) - 1, OLED_FONT_SMALL_WIDTH),28,OLED_FONT_SMALL,OLED_WHITE,DRIBBLE3[0]);//-- Display Script Title          
				    if (event_press(PS4_L3))
						combo_run(LH_CURRY);	
				    if (event_press(PS4_R3))
						combo_run(RH_CURRY);		
		    }
		    if(DribbleSet == 4){
    	        printf(center_x(sizeof(DRIBBLE4) - 1, OLED_FONT_SMALL_WIDTH),28,OLED_FONT_SMALL,OLED_WHITE,DRIBBLE4[0]);//-- Display Script Title          
				    if (event_press(PS4_L3)) 
					    combo_run(LH_EXPLOSIVE);	
				    if (event_press(PS4_R3)) 
					    combo_run(RH_EXPLOSIVE);			
		    }
		    if(DribbleSet == 5){
    	        printf(center_x(sizeof(DRIBBLE5) - 1, OLED_FONT_SMALL_WIDTH),28,OLED_FONT_SMALL,OLED_WHITE,DRIBBLE5[0]);//-- Display Script Title          
				    if (event_press(PS4_L3)) 
					    combo_run(LH_SPINBACK);
				    if (event_press(PS4_R3)) 
					    combo_run(RH_SPINBACK);		
		    }
		    if(DribbleSet == 6){
    	        printf(center_x(sizeof(DRIBBLE6) - 1, OLED_FONT_SMALL_WIDTH),28,OLED_FONT_SMALL,OLED_WHITE,DRIBBLE6[0]);//-- Display Script Title          
				    if (event_press(PS4_L3)) 
					    combo_run(LH_SPIN_FORWARD);
				    if (event_press(PS4_R3)) 
					    combo_run(RH_SPIN_FORWARD);
		    }
		    if(DribbleSet == 7){
    	        printf(center_x(sizeof(DRIBBLE7) - 1, OLED_FONT_SMALL_WIDTH),28,OLED_FONT_SMALL,OLED_WHITE,DRIBBLE7[0]);//-- Display Script Title          
				    if (event_press(PS4_L3)) 
					    combo_run(LH_DUFF);
				    if (event_press(PS4_R3)) 
					    combo_run(RH_DUFF);
		    }
		    if(DribbleSet == 8){
    	        printf(center_x(sizeof(DRIBBLE8) - 1, OLED_FONT_SMALL_WIDTH),28,OLED_FONT_SMALL,OLED_WHITE,DRIBBLE8[0]);//-- Display Script Title          
				if (event_press(PS4_L3)) 
					combo_run(LH_CROSSOVER);
				if (event_press(PS4_R3)) 
					combo_run(RH_CROSSOVER);
		    }
		    if(DribbleSet == 9){
    	        printf(center_x(sizeof(DRIBBLE9) - 1, OLED_FONT_SMALL_WIDTH),28,OLED_FONT_SMALL,OLED_WHITE,DRIBBLE9[0]);//-- Display Script Title          
				    if (event_press(PS4_L3)) 
					    combo_run(LH_UPCOURT);
				    if (event_press(PS4_R3)) 
					    combo_run(RH_UPCOURT);
		    }
	        if(DribbleSet == 10){
    	        printf(center_x(sizeof(DRIBBLE10) - 1, OLED_FONT_SMALL_WIDTH),28,OLED_FONT_SMALL,OLED_WHITE,DRIBBLE10[0]);//-- Display Script Title          
				    if (get_val(PS4_R3)) 
					    combo_run(SPAM_DRIBBLE);		
				    if (event_press(PS4_L3)) 
					    combo_run(SPEEDBOOST_CROSSOVER);		
		    }
		    if(DribbleSet == 11) {
    	        printf(center_x(sizeof(DRIBBLE11) - 1, OLED_FONT_SMALL_WIDTH),28,OLED_FONT_SMALL,OLED_WHITE,DRIBBLE11[0]);//-- Display Script Title          
				    if (event_press(PS4_L3)) 
					    combo_run(LH_CRAB);
				    if (event_press(PS4_R3))
					    combo_run(RH_CRAB);			
		    }
	    }
//--This Displays Value for Catch and Shoot
  	    if(CatchNShootValueDisplay){ 
    	    cls_oled(0);
   		    printf(center_x(sizeof(CNS) - 1, OLED_FONT_MEDIUM_WIDTH),43,OLED_FONT_MEDIUM,OLED_WHITE,CNS[0]);//-- Display Script Title          
            Display_Values(CATCH_AND_SHOOT,FindDigits(CATCH_AND_SHOOT));
            CatchNShootValueDisplay = FALSE;
	    }
        if(Screen_Saver) {     //-- Screen saver (OLED off)                         
            TIMER += get_rtime();
			    if(TIMER >= 4500) {                        
				    cls_oled(0);         
				    TIMER = 0;      
				    Screen_Saver = FALSE; 
			    }                         
        }
        if(event_press(XB1_B)) {     
   		    EXIT();           
        }
set_val(TRACE_1,CATCH_AND_SHOOT);//----
set_val(TRACE_4,Offline);//----
set_val(TRACE_6,DribbleSet);//----
}
//--//-- EXCELLENT SHOT RELEASES
combo CATCH_AND_SHOOT_COMBO{
	vm_tctrl(-9);//----Script loads at 1ms	
	set_val(PS4_SQUARE,100);
	wait(CATCH_AND_SHOOT);
	set_val(PS4_SQUARE,0);
	wait(1000);
	vm_tctrl(0);//----Script loads at 1ms	
}
////
//--DRIBBLES
////
combo LH_MM_CURRY{		
	set_val(PS4_RX, 100);
	wait(100);
	set_val(PS4_LX, 75);
	set_val(PS4_LY, -75);
	wait(100);
	set_val(PS4_RX, -100);
	set_val(PS4_RY, 50);
	wait(400);
}
combo RH_MM_CURRY{ 
	set_val(PS4_RX, -100);
	wait(100);
	set_val(PS4_LX, -75);
	set_val(PS4_LY, -75);
	wait(100);
	set_val(PS4_RX, 100);
	set_val(PS4_RY, 50);
	wait(400);
}
combo LH_CURRY{
	set_val(PS4_RX, 100);
	set_val(PS4_RY, 50);
	wait(150);
}
combo RH_CURRY{
	set_val(PS4_RX, -100);
	set_val(PS4_RY, 50);
	wait(150);
}
combo LH_CRAB{
	set_val(XB1_RX, 85);
	set_val(XB1_RY, -75);
	wait(150);
}
combo RH_CRAB{
	set_val(XB1_RX, -85);
	set_val(XB1_RY, -75):
	wait(150);
}
combo RH_DUFF{
	call(RH_CRAB);
	wait(600);
	wait(100);
	call(LH_MM_CURRY);
	wait(300);
}
combo LH_DUFF{			
	call(LH_CRAB);
	wait(600);
	wait(100);
	call(RH_MM_CURRY);
	wait(300);
}
combo RH_MOMENTUM{
	set_val(PS4_RX, -100);
	wait(30);
	set_val(PS4_LX, -75);
	set_val(PS4_LY, -75);
	wait(100);
}
combo LH_MOMENTUM{
	set_val(PS4_RX, 100);
	wait(30);
	set_val(PS4_LX, 75);
	set_val(PS4_LY, -75);
	wait(100);
}
combo RH_UPCOURT{
	set_val(XB1_LY, -100);
	wait(100);
	set_val(XB1_LY, -100);
	set_val(XB1_RY, -100);
	wait(50);
	set_val(XB1_LY, -100);
	set_val(XB1_RY, 0);
	wait(50);
	set_val(XB1_LY, -100);
	set_val(XB1_RX, 100);
	wait(300);
	set_val(XB1_LY, -100);
	set_val(XB1_RX, 0);
	wait(300);
	call(RH_CURRY);
}
combo LH_UPCOURT{
	set_val(XB1_LY, -100);
	wait(100);
	set_val(XB1_LY, -100);
	set_val(XB1_RY, -100);
	wait(50);
	set_val(XB1_LY, -100);
	set_val(XB1_RY, 0);
	wait(50);
	set_val(XB1_LY, -100);
	set_val(XB1_RX, -100);
	wait(300);
	set_val(XB1_LY, -100);
	set_val(XB1_RX, 0);
	wait(300);
	call(LH_CURRY);
}
combo LH_CROSSOVER{ 
	set_val(PS4_RY, -100);
	wait(100);
	wait(100);
	set_val(PS4_LY, -75);
	set_val(PS4_LX, -75);
	wait(300);
	set_val(PS4_R2, 100);
	set_val(PS4_LY, -75);
	set_val(PS4_LX, -75);
	wait(200);
	call(LH_CURRY);
	wait(300);
}
combo RH_CROSSOVER{ 
	set_val(PS4_RY, -100);
	wait(100);
	wait(100);
	set_val(PS4_LY, -75);
	set_val(PS4_LX, 75);
	wait(300);
	set_val(PS4_R2, 100);
	set_val(PS4_LY, -75);
	set_val(PS4_LX, 75);
	wait(200);
	call(RH_CURRY);
	wait(300);
}
combo LH_EXPLOSIVE{
	set_val(PS4_RX, 75);
	set_val(PS4_RY, 75);
	wait(150);
    set_val(PS4_RX, 75);
	set_val(PS4_RY, 75);
	set_val(PS4_LX, 75);
	set_val(PS4_LY, -75);
	wait(200);
	set_val(PS4_LX, 75);
	set_val(PS4_LY, -70);
	wait(100);
}
combo RH_EXPLOSIVE{	
	set_val(PS4_RX, -75);
	set_val(PS4_RY, 75);
	wait(150);
	set_val(PS4_LX, -75);
	set_val(PS4_LY, -75);
	wait(200);
	set_val(PS4_LX, -75);
	set_val(PS4_LY, -75);
	wait(100);
}
combo LH_SPINBACK{ 
	set_val(PS4_RY, -100); //-- 12 'o Clock
	//set_val(PS4_LY, 100);
	wait(120); //--//--testing 30 from 60
	//set_val(PS4_LY, 100);
	set_val(PS4_RX, -100); //-- 9 'o Clock
	wait(120);	//--//--same
	set_val(PS4_LY, 100);
	set_val(PS4_RY, 100);//-- 6 'o Clock
	wait(120);//--//--//--60 from 120
	set_val(PS4_LY, 100); 
	wait(700);
}
combo RH_SPINBACK{ 
	set_val(PS4_RY, -100); //-- 12 'o Clock
	//set_val(PS4_LY, 100);
	wait(120);
	//set_val(PS4_LY, 100);
	set_val(PS4_RX, 100); //-- 3 'o Clock
	wait(120);
	set_val(PS4_LY, 100);
	set_val(PS4_RY, 100);//-- 6 'o Clock
	wait(120);
	set_val(PS4_LY, 100); 
	wait(700);
}
combo LH_SPIN_FORWARD{ 	                        
	set_val(PS4_RX, -100);   	
	wait(10);
	set_val(PS4_RX, -100);
	set_val(PS4_RY, -30);
	wait(10);
	set_val(PS4_RX, -20);
	set_val(PS4_RY, -100);
	wait(10);
	set_val(PS4_RY, -100);
	wait(10);
}
combo RH_SPIN_FORWARD{ 	
	set_val(PS4_RX, 100);
	wait(10);
	set_val(PS4_RX, 100);
	set_val(PS4_RY, -30);
	wait(10);
	set_val(PS4_RX, 20);
	set_val(PS4_RY, -100);
	wait(10);
	set_val(PS4_RY, -100);
	wait(10);
}
combo LH_QUICKSTOP{ 
	set_val(PS4_RX, 100);
	wait(100);
}
combo RH_QUICKSTOP{ 
	set_val(PS4_RX, -100);
	wait(100);
}
combo SPEEDBOOST_CROSSOVER{	
	set_val(XB1_RY, -100);
	wait(100);
	set_val(XB1_RY, 0);
	wait(60);	
}
combo MOMENTUM_SPAM{			 
	call(LH_MOMENTUM);
	wait(100);
	call(RH_MOMENTUM);
	wait(100);
}
combo RUMBLE{
	set_rumble(RUMBLE_A, 100);
	set_rumble(RUMBLE_B, 100);
	wait(100);
	reset_rumble();
}
combo SPAM_DRIBBLE{
	set_val(XB1_LY, 100);
	set_val(XB1_RY, -100);
	wait(50);
	set_val(XB1_RY,0);
	wait(50);
	set_val(XB1_RY, 0);
	set_val(XB1_LY, 0);
}
combo Save_Timing{
	set_pvar(SPVAR_3,  CATCH_AND_SHOOT);
	set_pvar(SPVAR_4, Offline);
	Edit_Values = TRUE;		
}
function Display_Values(f_val,f_dgts) {
    if(f_dgts >= 5){
        putc_oled(Index,(f_val / 10000) + 48);
        f_val %= 10000;
        Index++;
    }
    if(f_dgts >= 4){
        putc_oled(Index,(f_val / 1000) + 48);
        f_val %= 1000;
        Index++;
    }
    if(f_dgts >= 3){
        putc_oled(Index,(f_val / 100) + 48);
        f_val %= 100;
        Index++;
    }
    if(f_dgts >= 2){
        putc_oled(Index,(f_val / 10) + 48);
        f_val %= 10;
        Index++;
    }
    putc_oled(Index,f_val + 48);
    puts_oled(1,1,2,Index,1);    
    Index = 1;
} 
function FindDigits(f_num) {
    f_num = abs(f_num);
    	if(f_num /  10000 > 0) return 5;
    	if(f_num /  1000 > 0) return 4;
    	if(f_num /  100 > 0) return 3;
    	if(f_num /   10 > 0) return 2;
    	return 1;
}
function center_x(f_chars,f_font){  //--  center_x(number of chars,font size);                                                 
    return (OLED_WIDTH / 2) - ((f_chars * f_font) / 2); //-- return X for Centering String Horizontally
}                                                      
function set_ds4_led(colour) {
    set_led(LED_1, duint8(colour * 4));
    set_led(LED_2, duint8((colour * 4) + 1));
    set_led(LED_3, duint8((colour * 4) + 2));
    set_led(LED_4, duint8((colour * 4) + 3));
}
function EXIT(){               
	cls_oled(0);             
}

data 					  
(0,0,0,0,//-- Off	    
1,0,0,0, //-- Dim Blue	  
0,1,0,0, //-- Dim Red		  
0,0,1,0, //-- Dim Green	
0,0,0,1, //-- Dim Pink	
1,0,1,0, //-- Dim SkyBlue	
0,1,1,0, //-- Dim Yellow	
1,1,1,0, //-- Dim White	
2,0,0,0, //-- Blue		
0,2,0,0, //-- Red			
0,0,2,0, //-- Green		
0,0,0,2, //-- Pink		
2,0,2,0, //-- SkyBlue		
0,2,2,0, //-- Yellow		
2,2,2,0, //-- White		
3,0,0,0, //-- Bright Blue	
0,3,0,0, //-- Bright Red	
0,0,3,0, //-- Bright Green
0,0,0,3, //-- Bright Pink	
3,0,3,0, //-- Bright SkyBlue
0,3,3,0, //-- Bright Yellow
3,3,3,0  //-- Bright white
);		
