/* This Script Created by Library Cronus Scripts on youtube *========================
Check Our VIDEO about this script any new version will be release there in our channel


https://youtu.be/3FiuzD463D4

Call of Duty®: Warzone by Library Cronus Scripts on youtube
=======================



                     
-1___ Aim Assist   AUTO
===================  
   
-2___ Anti Recoil  AUTO  
===================

-3___ Rapid Fire  L2 + UP
===================

-4___ Auto Run   L2 + DOWN
===================

-5__ Target Tracker AUTO
===================

-6__ Drop Shot L2 + RIGHT
===================

 7__ Half Drop Shot L2 + LEFT
===================

 8__ ANTI Recoil 
===================

 9__ Change Aim and shot to L1 / R1 just need to open script and put LL9 [ TRUE]




*///---------------------------  

int LL9 = FALSE; // True is CHANGE Aim and shot to L1 / R1
define ANTI_RECOIL       = 20; // Increasing the number, dropping the weapon down, and vice versa
define ANTI_RECOIL_LEFT  =  7; // left 
define ANTI_RECOIL_RIGHT =  4;  // right
 


//================================

int LL1 = 80; int LL2 = FALSE; int LL3 = 340; int LL4 = FALSE; define LL5 = 18; int LL6 = LL5; int LL7 = FALSE; int LL8 = FALSE; int LL10 = TRUE; int LL11 = TRUE int LL12 = 30; int LL13 = TRUE; int LL14; int LL15; int LL16= -10; int LL17= 1; int LL18 = FALSE; int LL19 = FALSE; int LL20 = 60; int LL21 = 40; main { if(LL8) if(get_val(4) && get_val(7)) combo_run(LL22);} combo LL22 { set_val(18,100); wait(LL21); set_val(18,0); wait(LL20);} main { vm_tctrl(-9); if(LL9) { swap(PS4_R1, PS4_R2); swap(PS4_L1, PS4_L2); } if(LL13){ if(get_val(PS4_L2) && get_val(PS4_R2)){ sensitivity(PS4_RX,0,LL23); sensitivity(PS4_RY,0,LL23); } } if(get_val(PS4_L2) && event_press(PS4_RIGHT)) { LL8=!LL8; if(LL8){ combo_run(Flash_ON); } else combo_run(Flash_OFF); } if(get_val(PS4_L2) && event_press(PS4_DOWN)) { LL19=!LL19; if(LL19){ combo_run(Flash_ON); } else combo_run(Flash_OFF); } if(get_val(PS4_L2) && event_press(PS4_LEFT)) { LL7=!LL7; if(LL7){ combo_run(Flash_ON); } else combo_run(Flash_OFF); } if(LL2 && get_val(PS4_R2) && get_ptime(PS4_R2) > LL1) set_val(LL5,100); if(LL4 && get_val(PS4_R2)) combo_run(LL24); if(LL7 && event_press(PS4_R2)) { combo_run(LL25); } if (LL19) { if((get_val(PS4_LY)) < -95) { combo_run(LL19); }} if (LL11) { if (get_val(PS4_L2)) combo_run(LL26); else combo_stop(LL26); if(get_val(4)) { combo_run(LL27); } LL14 = ANTI_RECOIL + 20; if(abs(get_val(9)) > 21 || abs(get_val(10)) > 21) { combo_stop (LL27); combo_stop(LL26); } } if (LL10) { if(get_val(PS4_L2) && get_val(PS4_R2)) { LL28 = 140; LL29 = 0; combo_run(LL30);} else if (combo_running(LL30)) { combo_stop(LL30);} } if(get_val(PS4_L2) && event_press(PS4_UP)) { combo_run (LL32); LL18=!LL18; if(LL18){ combo_run(Flash_ON); } else combo_run(Flash_OFF); } if(LL18) { if(get_val(PS4_R2)) { combo_run (LL31); }} if(get_val(PS4_R2)>=1) set_val(PS4_R2, 100); if(get_val(PS4_L2)>=1) set_val(PS4_L2, 100); hold_time = 500 / RATE_OF_FIRE; rest_time = hold_time - 20; if(rest_time < 0) rest_time = 0;} combo LL32{ wait(300); reset_rumble(); } combo LL24 { set_val(PS4_R2,100); wait(40); set_val(PS4_R2,0); wait(100); set_val(PS4_R2,100); wait(40); set_val(PS4_R2,0); wait(100); set_val(PS4_R2,100); wait(40); set_val(PS4_R2,0); wait(LL3);} combo LL25 { set_val(LL6,100); wait(100);} combo LL31 { set_val(PS4_R2, 100); wait(hold_time); set_val(PS4_R2, 0); wait(rest_time); set_val(PS4_R2, 0); } combo LL26 { set_val(10, LL12 * -1); wait(20) set_val(9, LL12); wait(20) set_val(10, LL12); wait(20) set_val(9, LL12 * -1); wait(20) } combo LL19 { set_val(PS4_L3, 100); wait(40); set_val(PS4_L3, 0); wait(40); set_val(PS4_L3, 0); } combo LL30 { set_val(PS4_L2, 100); wait(LL28); set_val(PS4_L2, 0); wait(LL29);} combo LL27 { LL15 = get_val(10) + ANTI_RECOIL; if(LL15 > 100) LL15 = 100;set_val(10, LL15); LL16 = get_val(9) -ANTI_RECOIL_LEFT; if(LL16 > 100) LL16 = 100;set_val(9, LL16); LL17 = get_val(9) +ANTI_RECOIL_RIGHT; if(LL17 > 100) LL17 = 100;set_val(9, LL17); } int LL23 = 95; int RATE_OF_FIRE = 50; int Col_ind; int hold_time; int rest_time; int LL28; int LL29; combo Flash_ON { LED(0,0,2,0); set_rumble(RUMBLE_A,100); wait(400); reset_rumble(); reset_leds();} combo Flash_OFF { LED(0,2,0,0); set_rumble(RUMBLE_B,100); wait(200); reset_rumble(); LED(0,0,0,0); wait(100); set_rumble(RUMBLE_B,100); LED(0,2,0,0); wait(200); reset_rumble(); reset_leds();} function LED(a,b,c,d) { set_led(LED_1,a); set_led(LED_2,b); set_led(LED_3,c); set_led(LED_4,d);}


