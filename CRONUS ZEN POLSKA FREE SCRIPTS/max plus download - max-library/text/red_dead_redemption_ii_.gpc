// GPC Online Library
// red_dead_redemption_ii_.gpc

/* 
          ________   __________ ________         ________  __________        _     ________                    _______________________ 
          `MMMMMMMb. `MMMMMMMMM `MMMMMMMb.       `MMMMMMMb.`MMMMMMMMM       dM.    `MMMMMMMb.                    `MMMMMM'   `MMMMMM'
           MM    `Mb  MM      \   MM   `Mb         MM   `Mb MM      \      ,MMb      MM   `Mb                     MMMMMM     MMMMMM
           MM    .M9  MM          MM    MM         MM    MM MM             d'YM.     MM    MM                     MMMMMM     MMMMMM
           MMMMMMM9'  MM    ,     MM    MM         MM    MM MM    ,       ,P `Mb     MM    MM                     MMMMMM     MMMMMM
           MM\M\      MMMMMMM     MM    MM         MM    MM MMMMMMM       d'  YM.    MM    MM                     MMMMMM     MMMMMM
           MM \M\     MM    `     MM    MM         MM    MM MM    `      ,P   `Mb    MM    MM                     MMMMMM     MMMMMM  
           MM  \M\    MM          MM    MM         MM    MM MM           d'    YM.   MM    MM                     MMMMMM     MMMMMM  
           MM   \M\   MM          MM    MM         MM    MM MM          ,MMMMMMMMb   MM    MM                     MMMMMM     MMMMMM  
           MM    \M\  MM      /   MM   .M9         MM   .M9 MM      /   d'      YM.  MM   .M9                     MMMMMM     MMMMMM  
          _MM_    \M\_MMMMMMMMM _MMMMMMM9'       _MMMMMMM9'_MMMMMMMMM _dM_     _dMM_MMMMMMM9'                     MMMMMM     MMMMMM  
                                                                                                                  MMMMMM     MMMMMM                                
________   __________ ________  __________ ___       __________   __________ ____   ____   ___      ___           MMMMMM     MMMMMM            
`MMMMMMMb. `MMMMMMMMM `MMMMMMMb.`MMMMMMMMM `MMb     dMM`MMMMMMMb. MMMMMMMMMM `MM'  6MMMMb  `MM\     `M'           MMMMMM     MMMMMM     
 MM    `Mb  MM      \   MM   `Mb MM      \  MMM.   ,PMM MM    `Mb /   MM   \  MM  8P    Y8  MMM\     M            MMMMMM     MMMMMM    
 MM    .M9  MM          MM    MM MM         M`Mb   d'MM MM    .M9     MM      MM 6M      Mb M\MM\    M            MMMMMM     MMMMMM  
 MMMMMMM9'  MM    ,     MM    MM MM    ,    M YM. ,P MM MMMMMMM9'     MM      MM MM      MM M \MM\   M            MMMMMM     MMMMMM   
 MM\M\      MMMMMMM     MM    MM MMMMMMM    M `Mb d' MM MM            MM      MM MM      MM M  \MM\  M            MMMMMM     MMMMMM 
 MM \M\     MM    `     MM    MM MM    `    M  YM.P  MM MM            MM      MM MM      MM M   \MM\ M            MMMMMM     MMMMMM               
 MM  \M\    MM          MM    MM MM         M  `Mb'  MM MM            MM      MM MM      MM M    \MM\M            MMMMMM     MMMMMM               
 MM   \M\   MM          MM    MM MM         M   YP   MM MM            MM      MM YM      M9 M     \MMM            MMMMMM     MMMMMM               
 MM    \M\  MM      /   MM   .M9 MM      /  M   `'   MM MM            MM      MM  8b    d8  M      \MM            MMMMMM     MMMMMM               
_MM_    \M\_MMMMMMMMM _MMMMMMM9'_MMMMMMMMM _M_      _MM_MM_          _MM_    _MM_  YMMMM9  _M_      \M         ___MMMMMM_____MMMMMM___           
 
 
Version: 1.4
Author: noozbar
----------------------------------------------------------------------------------------------------------------------------------------------------------------------

    ______           __                           
   / ____/__  ____ _/ /___  __________  _____   _ 
  / /_  / _ \/ __ `/ __/ / / / ___/ _ \/ ___/  (_)
 / __/ /  __/ /_/ / /_/ /_/ / /  /  __(__  )  _   
/_/    \___/\__,_/\__/\__,_/_/   \___/____/  (_)  


		Crossover PS4/XBOX + PS4 Controller/XBOX Controller
		Battery warning: 3 small fast vibrations every 5 seconds if you have less than 10% battery left
		Script ON/OFF
		Hair Trigger
		Cinematic Camera (calm your horse at the same time)
		Horse Sprint mod activation (calm your horse at the same time)
		Easy Eagle Vision
		AutoRun for Standard FPS button layout
		- OR
		AutoRun for standard button layout
		Melee spam
		Cut the Rope (if you are tied up)
		Rapid Fire with toggle ON/OFF
		Rapid Reload
		HeadShot mod with toggle ON/OFF and with range selection
		Better AIM Assist (100% accuracy) with toggle ON/OFF
		Quick swap Weapons and Tonics
		DeadEye stop (usefull for online)
		Auto DeadEye with toggle ON/OFF
		Crouch with toggle ON/OFF
		Strafe shot with toggle ON/OFF
		Auto Scope out
		Skid stop (for horse level 3)

 
																INSTRUCTIONS PS4/XBOX:
																
																
	Color indications: 
		Color OFF = Script is disable
		Color Blue by defaut (if RapidFire is enable, LED should flash Red)
		Color White = Cinematic Camera enable (calm your horse at the same time)
		
	 	If HeadShot is enable:
	 		Color Pink = Close Range
	 		Color SkyBlue = Mid Range
	 		Color Yellow = Long Range
	 			
		Color flash RED:
			RapidFire is enable
			Horse Sprint mod is running
			Melee spam mod is running
			Cut the Rope mod is running
			
	  
	Rumble indications:
		2 small fast vibrations = mod is OFF
		1 big vibration = mod is ON
		3 small fast vibrations every 5 seconds = your controller have less than 10% battery left 


	Script ON/OFF toggle
		Press PS/XBOX or OPTION/MENU or double tap DOWN to enable or disable ALL FEATURES
		1 big vibration = mod is ON, 2 small fast vibrations = mod is OFF
		
		
	Hair Trigger
		Your triggers are VERY reactive
		
		
	Cinematic Camera (calm your horse at the same time)
		When you are in Cinematic Camera in game, your character automatically calms your horse at the same time
		You can also use the Horse Sprint mod at the same time
		
		
	Horse Sprint mod
		Double Tap and HOLD CROSS/A (LED Flash Red)
	
	
	Easy Eagle Vision
		Tap R3/RS to activate eagle vision
		Does not work in Cinema mod because this button changes the camera view 
		

	AutoRun for Standard FPS button layout
		Push the Left stick forward and make a long press on L3/LS to sprint (quick press to run)
		
		
	AutoRun for standard button layout
		Push the Left stick forward to sprint


	Melee spam
		Double Tap and HOLD CIRCLE/B (LED Flash Red) to spam melee button
		
		
	Cut the Rope
		Double Tap and HOLD SQUARE/X (LED Flash Red) to cut the rope if you're tied up
		
		
	Rapid Fire (with toggle ON/OFF)
		Hold L2/LT + CIRCLE/B and
			Tap R2/RT to enable or disable 
			1 big vibration = mod is ON, 2 small fast vibrations = mod is OFF
		Hold L2/LT + R2/RT to run RapidFire
		
		
	Auto Reload
		Release R2/RT to rechamber a cartridge in the rifle
		
		
	HeadShot mod 
		Hold L2/LT and tap R1/RB to enable or disable
		1 big vibration = mod is ON, 2 small fast vibrations = mod is OFF
		
		When enable: /!\ Press sensitive trigger /!\
			If you hold L2/LT more than 85%, your viewfinder go to your ennemy's head, if you hold less than 85%, your viewfinder don't go to the head (normal aiming)
				Tap Right to switch between Range selection
	 				Color Pink = Close Range
	 				Color SkyBlue = Mid Range
	 				Color Yellow = Long Range
	 				
	 				
	 Better AIM Assist (100% accuracy) (Thanks Fadexz) /!\ Press sensitive trigger /!\
	 	Hold DOWN and press L2/LT to enable or disable
	 	1 big vibration = mod is ON, 2 small fast vibrations = mod is OFF
	 	
	 	When enable:
	 		If you hold L2/LT between 1% and 99%, Better AIM assist run when you press R2/RT, if you press 100%, Better AIM assist don't run when you press R2/RT
	 			
	 			
	 Quick swap Weapons and Tonics
	 	Hold L1/LB and
			Tap TRIANGLE/Y for pistols
	 			Double tap TRIANGLE/Y for Stamina
			Tap SQUARE/X for for 9 o'clock weapon
				Double tap SQUARE/X for Health
			Tap CIRCLE/B for knife
				Double tap CIRCLE/B for DeadEye
			Tap CROSS/A for 6 o'clock weapon
			Tap DOWN for lasso
			Hold TRIANGLE/Y to change skill card (Red Dead Online)
			
			
	DeadEye stop (usefull for online)
		Online, DeadEye does not stop automatically when you release the aiming button
		This feature stops DeadEye when you release L2/LT
		
		
	Auto DeadEye with toggle ON/OFF
		Hold DOWN and press R3/RS to enable or disable
		1 big vibration = mod is ON, 2 small fast vibrations = mod is OFF
		If enable, hold L2/LT to activate DeadEye
		
		
	Crouch with toggle ON/OFF
		Hold DOWN and press CROSS/A to enable or disable
		1 big vibration = mod is ON, 2 small fast vibrations = mod is OFF
		If enable, hold L2/LT to crouch
	
	
	Strafe shot with toggle ON/OFF
		Hold DOWN and press R1/RB to enable or disable
		1 big vibration = mod is ON, 2 small fast vibrations = mod is OFF
		If enable, hold L2/LT + R2/RT to strafe


	Auto Scope out
		When you aim and press DOWN you enter Scope mod but when you release aim and aim again, you are automatically in Scope mod
		This feature allows you to exit Scope mod when you release L2/LT
	
	
	Skid stop (for horse level 3)
		Double tap R1/RB to skid stop 
	 		
--------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

// Button Layout:
int Standard_FPS_Layout = FALSE; //If you play with Standard FPS button layout, set TRUE, else set FALSE

//----------------------------------------------------------------------------------------------------------------------//

// HeadShot:
//Choose your range by defaut

int idx = 5; //4 = Close Range, 5 = Medium Range, 6 = Long Range - (Defaut: 6)
 
define WAIT_CLOSE   = 160; // Change this value for close range (color = Pink)
define WAIT_MEDIUM  = 140; // Change this value for medium range (color = SkyBlue) Defaut range
define WAIT_LONG    = 120; // Change this value for long range (color = Yellow)

//----------------------------------------------------------------------------------------------------------------------//

// Strafe Shot (Hold L2/LT and press SQUARE/X to toggle ON or OFF)

int RIGHT = 1000; //How long to go RIGHT
int LEFT = 1000; //How long to go LEFT

//----------------------------------------------------------------------------------------------------------------------//

//////////// DO NOT MODIFY ///////////////////
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	//
define CLOSE   = 4; //(color = Pink)		//
define MEDIUM  = 5; //(color = SkyBlue)		//
define LONG    = 6; //(color = Yellow)		//
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	//
define Off            = 0;					//
define Blue           = 1;					//
define Red            = 2;					//
define Green          = 3;					//
define Pink           = 4;					//
define SkyBlue        = 5;					//
define Yellow         = 6;					//
define White          = 7;					//
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	//
// Toggles									//
int Script_ON = 1; 							//
int HeadShot_ON ; 							//
int Rapidfire_ON;							//
int Crouch_ON;								//
int Strafe_ON;								//
int cinema_ON;								//
int Horse_Sprint_ON; 						//
int DeadEye_ON;   							//
int Auto_DeadEye_ON;  						//
int Scope_ON; 								//
int Melee_ON; 								//
int Lasso_ON; 								//
int HS_ON;  								//
int Better_AA_ON;							//
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	//
int bit; 							    	//
int BTN; 									//
int Button;   								//
int Time_value; 							//
int wx_v,wy_v; 								//
int BTN_Tap;								//
int Timer;  								//
int Range;    								//
int Crouch_BTN; 							//
int Run_BTN; 								//
int ms;										//
int item;									//
int run_rumble;								//
int rumble_side;							//
int rumble_time;							//
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	//
//////////////////////////////////////////////
 
init {
    if(Standard_FPS_Layout)
    {
        Crouch_BTN = PS4_CROSS;
        Run_BTN = PS4_L3;
    }
        else
        {
            Crouch_BTN = PS4_L3;
            Run_BTN = PS4_CROSS;
        }
}

main {
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// Crossover
    if(get_controller() != PIO_PS4)
    {
        if(get_console() == PIO_PS4)
        {
            swap(PS4_SHARE,PS4_TOUCH);
            BTN = PS4_TOUCH;
 
                if(get_val(PS4_TOUCH) && get_val(PS4_R3))
                {
                    set_val(PS4_SHARE,100);
                    set_val(PS4_TOUCH,0);
                    set_val(PS4_R3,0);
                }
        }
 
        if(get_console() != PIO_PS4)
            BTN = PS4_SHARE;
    }
    	else
        	BTN = PS4_TOUCH;
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// Rumble start and restart
	if(run_rumble && !combo_running(Vibrate))
    {
		run_rumble -= 1;
		combo_restart(Vibrate);
	}
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// Battery warning
    if(get_battery() <= 1) 
    {
        ms += get_rtime();
            if(ms == 5000)
            {
                Rumble(FALSE, 3);
                ms = 0;
            }
    }
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// Double Tap function
    if(Timer > 0) 
    {
        Timer = Timer - get_rtime();
            if(Timer <= 0) BTN_Tap = FALSE;
    }
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// Script on/off
    if(event_press(PS4_DOWN))
    {
        if(double_tap (175) )
        {
            Script_ON = !Script_ON;
            Rumble(Script_ON, 0);
        }
    }
    if(event_press(PS4_OPTIONS) || event_press(PS4_PS))
    {
        Script_ON = !Script_ON;
        Rumble(Script_ON, 0);
    }
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//If script is ON:
if(Script_ON) 
{
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// Hair Trigger
    deadzone(PS4_L2,PS4_R2,99,99);
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// Cinematic Camera activation
    if((get_val(BTN) && get_ptime(BTN) >= 1500))
        cinema_ON = TRUE ; 
 
    if(cinema_ON)
    {
        combo_run(calm); 
        if(event_press(BTN) || event_press(PS4_L2))
            cinema_ON = FALSE;
    }
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// Eagle Vision
	if(!cinema_ON && !get_lval(PS4_DOWN))
	{
		if(event_press(PS4_R3) && !get_val(PS4_L2))
			combo_run(Eagle_vision);   
		}
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// AutoRun for Standard FPS button layout
    if(Standard_FPS_Layout)
    {
        if((get_val(PS4_LY) <= -20) && (event_release(PS4_L3) && get_ptime(PS4_L3) > 250))
            combo_run(Run);
    }
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// AutoRun for standard button layout
    if(!Standard_FPS_Layout)
    {
    	if(!get_val(PS4_CROSS) && !get_val(PS4_L2) && get_val(PS4_LY) < -70)
    	{ 
        	Button = PS4_CROSS;
        	Time_value = 100;
        	combo_run(Spam);
    	}
    }
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	if(!get_val(PS4_L1))
	{
	// Horse Sprint mod activation  (Double tap and hold CROSS/A)
    	if(event_press(PS4_CROSS))
   		{
        	if(double_tap (200))
            	Horse_Sprint_ON = TRUE;
    	}
        	if(event_release(PS4_CROSS))
            	Horse_Sprint_ON = FALSE ;
            
		Spammer (Horse_Sprint_ON, PS4_CROSS, 100);    
	//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	// Melee spam
    	if(event_press(PS4_CIRCLE))
    	{
        	if(double_tap (200))
            Melee_ON = TRUE;
    	}
    	if(event_release(PS4_CIRCLE))
        	Melee_ON = FALSE;
 
		Spammer (Melee_ON, PS4_CIRCLE, 50);
	//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	// Cut the Rope
    	if(event_press(PS4_SQUARE))
    	{
        	if(double_tap (200))
            	Lasso_ON = TRUE;
    	}
    	if(event_release(PS4_SQUARE))
        	Lasso_ON = FALSE;
 
		Spammer (Lasso_ON, PS4_SQUARE, 50);
	}
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// Toggles with L2 + DeadStop + Scope out
	if(get_val(PS4_L2))
	{
	//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	// Rapid Fire toggle
		if(get_val(PS4_CIRCLE))
		{
			if(event_press(PS4_R2))
			{
				Rapidfire_ON = !Rapidfire_ON;
				Rumble(Rapidfire_ON, 0);
			}
			set_val(PS4_R2, 0);
		}
	//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	// HeadShot toggle
		if(event_press(PS4_R1))
		{
        	HS_ON = !HS_ON;
        	Rumble(HS_ON, 0);
		}
		set_val(PS4_R1, 0);
	//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	// DeadEye stop for online	
		if(event_press(PS4_R3)) // && !Auto_DeadEye_ON
			DeadEye_ON = !DeadEye_ON;
	//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	// Scope out
		if(event_press(PS4_DOWN))
			Scope_ON = !Scope_ON;
	}
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// Rapid Fire	
    if(Rapidfire_ON && !get_val(PS4_L1) && (get_val(PS4_L2) && get_val(PS4_R2)))
    {
        Button = PS4_R2;
       	Time_value = 50;
        combo_run(Spam);
    }   
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// Rapid Reload
	if(!Rapidfire_ON)
   	{
   		if(event_release(PS4_R2) && !get_val(PS4_L1))
 			combo_run(Reload);
 	}
 		else
        	combo_run(Flash);
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	if(event_release(PS4_L2))
	{
	// DeadEye stop for online
		if(DeadEye_ON)
			combo_run(DeadStop); //DeadEye_ON = FALSE;
	//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	// Scope out
		if(Scope_ON)
			combo_run(ScopeOut);
	}
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// HeadShot   
	if(HS_ON)
	{
    	if(get_val(PS4_L2) && event_press(PS4_RIGHT))
        	idx++; 
    	if(idx == 7)
        	idx = 4; 
    	if(!get_val(PS4_L1) && (get_lval(PS4_L2) >= 86 && get_ptime(PS4_L2) > 300 && !HeadShot_ON))
    	{
        	if(idx == CLOSE)
            	Range = WAIT_CLOSE;
        	if(idx == MEDIUM)
            	Range = WAIT_MEDIUM;
        	if(idx == LONG)
            	Range = WAIT_LONG;
            	
      		combo_run(HeadShot);      
    	}
         
    if(event_release(PS4_L2))
        HeadShot_ON = FALSE;
	}
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// Switch Weapons / Tonics - Hold L1/LB and press:
    if(get_val(PS4_L1))
    {
	// TRIANGLE/Y for pistol / Double tap for Stamina
		if(event_release(PS4_TRIANGLE) && get_ptime(PS4_TRIANGLE) < 200)
		{
			if(double_tap(300)) 
        	{
        		item = TRUE;
               	wx_v = 0; 
               	wy_v = -100;
        	}
            	else
            	{
                	wx_v = 0;
               		wy_v = -100;
               	}
        }
	// SQUARE/X for 9 o'clock weapon / Double tap for Health
		if(event_press(PS4_SQUARE))
        {
            if(double_tap(300)) 
        	{
                item = TRUE;
                wx_v = -75; 
               	wy_v = -75;
        	}
            	else
            	{
                	wx_v = -100; 
                	wy_v =  0;
                }
        }
	// CROSS/A for 6 o'clock weapon
		if(event_press(PS4_CROSS))
		{
            wx_v =  0; 
            wy_v = 100;
        }
    // CIRCLE/B for knife / Double tap for DeadEye
        if(event_press(PS4_CIRCLE))
        {	 
            if(double_tap(300)) 
        	{
               	item = TRUE;
               	wx_v = 75; 
               	wy_v = -75;
        	}
        		else
        		{
        			wx_v = 75; 
	        		wy_v = 75;
        		}    
        }
	// DOWN for lasso
		if(event_press(PS4_DOWN))
        {
            wx_v = -75; 
            wy_v = 75;
        }
 
		if(wx_v || wy_v) 
			combo_run(Quick_Swap);
 
    // BLOCK
    	if(get_val(PS4_TRIANGLE) && (get_ptime(PS4_TRIANGLE) >= 250))
        	set_val(PS4_TRIANGLE, 100);
        	else
            	set_val(PS4_TRIANGLE, 0);

    	set_val(PS4_SQUARE, 0);
    	set_val(PS4_CROSS, 0);
    	set_val(PS4_CIRCLE, 0);
    	set_val(PS4_DOWN, 0);
    }
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// Toggles with DOWN
    if(get_val(PS4_DOWN))
    {
    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    // Auto DeadEye toggle
    	if(event_press(PS4_R3))
    	{
        	Auto_DeadEye_ON = !Auto_DeadEye_ON;
        	Rumble(Auto_DeadEye_ON, 0);
        }
	//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	// Crouch toggle
        if(event_press(PS4_CROSS))
        {
			Crouch_ON = !Crouch_ON;
			Rumble(Crouch_ON, 0);
        }
	//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	// Strafe shot toggle
        if(event_press(PS4_R1))
        {
        	Strafe_ON = !Strafe_ON;        
        	Rumble(Strafe_ON, 0)
        	//set_val(PS4_SQUARE, 0);
        }
	//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	// Better AIM Assist toggle
		if(event_press(PS4_L2))
		{
			Better_AA_ON = !Better_AA_ON;
			Rumble(Better_AA_ON, 0)
		}
	//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	// Block buttons
        set_val(PS4_R3, 0);
        set_val(PS4_CROSS, 0);
        set_val(PS4_R1, 0);
    }
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~   
// Auto DeadEye    
    if(Auto_DeadEye_ON && (event_press(PS4_L2) || event_release(PS4_L2)))
        combo_run(DeadStop);
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// Crouch        
	if(Crouch_ON && (event_press(PS4_L2) || event_release(PS4_L2)))
        combo_run(Crouch);
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// Strafe shot        
    if(Strafe_ON && (get_val(PS4_L2) && get_val(PS4_R2)))
    {         
        set_val(Run_BTN, 100);
        combo_run(Strafe);
    }
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//Better AIM Assist    
    if(Better_AA_ON && (get_lval(PS4_L2) >= 1 && get_lval(PS4_L2) < 99) && !DeadEye_ON && get_val(PS4_R2)) 
        combo_run(Better_Aim_Assist);
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// Stop Horse (level 3)
    if(event_press(PS4_R1))
    {
        if(double_tap (200))
            combo_run(Stop_Horse);
            else
                combo_stop(Stop_Horse)
    }
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
} // Script is ON - END
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// Color Led
    if(!Script_ON) LED(Off);
    	else
    	{
        	if(!HS_ON)
        	{
            	if(cinema_ON) LED(White);
            		else LED(Blue);
        	}
        		else
        		{
            		if(cinema_ON) LED(White);
            			else LED(idx);
        		}
    	}
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
} // Main END
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

combo Spam { 
    set_val(Button, 100);
    wait(Time_value);
    set_val(Button, 0);
    wait(Time_value);
    }

combo Reload {
    wait(200);
    set_val(PS4_L2, 0);
    wait(50);
    set_val(PS4_L2, 100)
    wait(50);
    }
    
combo calm { //horse
    wait(250);
    set_val(PS4_L3, 100);
    wait(30);
    wait(5000);
    }
 
combo Crouch {
    set_val(Crouch_BTN,100);
    wait(40);
    }
 
combo Eagle_vision {
    wait(30);
    set_val(PS4_L3, 100);
    set_val(PS4_R3, 100);
    wait(50);
    }
 
combo Flash {
    wait(500);
    LED(Red);
    wait(500);
    }
 
combo HeadShot { 
    set_val(PS4_RY, -100);
    wait(Range);
    HeadShot_ON = TRUE;
    }
 
combo Better_Aim_Assist {
    set_val(PS4_L2,100);
    set_val(PS4_R2,100);
    set_val(PS4_R3,100);
    wait(40);
    set_val(PS4_L2,100);
    set_val(PS4_R2,0);
    set_val(PS4_R3,0);
    wait(40);
    set_val(PS4_L2,100);
    set_val(PS4_R2,0);
    set_val(PS4_R3,100);
    wait(40);
    set_val(PS4_L2,0);
    set_val(PS4_R2,0);
    wait(370);
    }    
 
combo Quick_Swap {
    set_val(PS4_RX,wx_v);
    set_val(PS4_RY,wy_v);
    if(item)
    	set_val(PS4_R1, 100);
    wait(200);
    set_val(PS4_L1, 0);
    set_val(PS4_RX,wx_v);
    set_val(PS4_RY,wy_v);
    wait(200)
    wx_v = 0;
    wy_v = 0;
    item = FALSE
    }
 
combo Run {
    wait(300);
    set_val(PS4_L3, 100);
    wait(90);
    }
 
combo DeadStop {
    wait(200);
    set_val(PS4_R3, 100);
    wait(90);
    DeadEye_ON = FALSE;
    }
 
 combo Strafe {
    set_val(PS4_LX, 100);
    wait(RIGHT);
    set_val(PS4_LX, -100);
    wait(LEFT);
    }
 
combo ScopeOut {
    set_val(PS4_L2, 100);
    wait(50);
    set_val(PS4_L2, 100);
    set_val(PS4_DOWN, 100);
    wait(50);
    Scope_ON = FALSE;
    }
 
combo Stop_Horse {
    set_val(PS4_R1, 100);
    set_val(PS4_CROSS, 100);
    wait(1000);
    }
 
combo Vibrate {
    set_rumble(rumble_side, 100);
    wait(rumble_time);
    reset_rumble();
    wait(100);
    }

function double_tap (Time) {
    if(BTN_Tap){
        return TRUE;
    }
        BTN_Tap = TRUE; 
        Timer = Time;
        return FALSE;
}

function Rumble (f_var, f_num) {
    if(f_var)						
 	{
 		if(!f_num)
			run_rumble = 1;
			else
				run_rumble = f_num;
		
		rumble_side = RUMBLE_A;
		rumble_time = 300;
	}
		else 
		{
 			if(!f_num)
				run_rumble = 2;
				else
					run_rumble = f_num;
				
    		rumble_side= RUMBLE_B;
    		rumble_time = 150;
    	}
}

function Spammer (f_var, f_btn, f_time){            
 
    if(f_var)
    {
        Button = f_btn;
        Time_value = f_time;
 
        if(get_val(f_btn))
        {
            combo_run(Flash);
            combo_run(Spam);
            if(Horse_Sprint_ON)
            	combo_run(calm);
        }
            else 
            { 
                combo_stop(Flash);
                combo_stop(Spam); 
                combo_stop(calm);
            }
    }

}

function LED(color) {  //stimpson's LED colors
    for(bit=0;bit<3;bit++) {
        set_led(bit,test_bit(color,bit));
    }
}
//end