// GPC Online Library
// pubg_anti_recoil,aimassist,.gpc

/*********************************************************************************************** 
 This Script was made and intended for www.cronusmax.com & CronusMAX ONLY.                     * 
 UNLESS permission is given by the creator and/or copywritee,                                  * 
 All rights reserved. This material may not be reproduced, displayed,                          * 
 modified or distributed without the express prior written permission of the                   * 
 copyright holder. For permission, contact ControlerMax                                        * 
     __  ____   ___   ____   __ __  _____ ___ ___   ____  __ __                                * 
    /  ]|    \ /   \ |    \ |  |  |/ ___/|   |   | /    ||  |  |                               * 
   /  / |  D  )     ||  _  ||  |  (   \_ | _   _ ||  o  ||  |  |                               * 
  /  /  |    /|  O  ||  |  ||  |  |\__  ||  \_/  ||     ||_   _|                               * 
 /   \_ |    \|     ||  |  ||  :  |/  \ ||   |   ||  _  ||     |                               * 
 \     ||  .  \     ||  |  ||     |\    ||   |   ||  |  ||  |  |                               * 
  \____||__|\_|\___/ |__|__| \__,_| \___||___|___||__|__||__|__|                               * 
                                                                                               * 
************************************************************************************************/
                                                                                                 
// PUBG XBOX ONE Mouse and Keyboard  ver. 9.1      
//--------------------------------------------------------------                                 
// Authors  : CRISTIANO DUDU, LEX LOST, WHITE 4ND N3RDY , k4rL01 , x22dot                                             
// Game     :PUBG XBOX ONE                                                              
// Device   : CronusMAX PLUS                                                                   
// Console  : XBOX ONE, XBOX 360, PS 4, PS 3                                                   
// Game pads: All supported Game pads                                                          
                                                                                               
// IMPORTANT : All mods are available only in application : BLACK OPS III  
//--------------------------------------------------------------                              
//                                                                                           
/**************************************************************************** 
CHANGELOG:                                                       
Version 1.0 to 1.5 : Initial build up off the application        
Version 1.6 to 1.9 : Setup most of the code and fixed some bugs ( QUICK SCOPE, remove FIRE MODE, ANTI RECOIL ).         
Version 2.0 to 2.2 : Fixed some bugs in application.                         
Version 2.3        : Added more option to the Rapid Fire and generate Instructions inside the script. 
Version 2.4        : Fixed bug in Rapid Fire Class : Primary/Secondary weapon. Now swap buttons and remap buttons are worked 
Version 2.6        : Removed ADS Sensitivity. Updated weapons list.          
Version 2.7        : Added : LONG JUMP / RELOAD and SLIDE / AKIMBO DUAL EASY          
Version 2.8        : Added : BURST FIRE for All automatic weapons /          
Version 2.9        : Added : Rapid Fire for Akimbo mode /          
Version 3.0        : Fixed bug for Anti Recoil( app. does not turn it ON) /          
                     app. will save all CEMU EXTRA                                   
Version 3.1        : Added save function for All Radio Groups and changed color for Toggle Ads to default /          
Version 3.2        : Fixed bug in jump shot /          
Version 3.4        : Added Jitter Mode published by Zoobzy/ Added option to Walk for mode Aways Run          
Version 3.5        : Added new range from 1 to 8 Rounds per Burst for Burst Fire mode.         
Version 3.6        : Added ADS Sensitivity         
Version 3.7        : Added new mode : G - Slide Mode        
Version 3.8        : found better way to activate G - Slide Mode        
Version 3.9        : Added new mode : SUPER - G - SLIDE       
Version 4.1        : Changed name of: SUPER - G - SLIDE  to INFINITE SLIDE       
Version 4.2        : Added new JITTER from the best creator of jitters = WHITE 4ND N3RDY  
Version 4.3        : Added option to shange wait time for JITTER mode. 
Version 4.4        : Added the new real G-Slide 
Version 4.5        : Added new options to G-Slide Mode 
Version 4.6        : Make improvements in G-Slide Mode, now it will work better.
Version 4.7        : Changed the reset for Rapid Fire and turn it OFF if you switch to Special weapon / Ability
                     Added Infinite Slide  
Version 4.8        : Added Fast Reload for all LMG.
Version 4.9        : Added reset for Rapid Fire All weapons
Version 5.0        : Changed Class 7 -Double Melee to Burst Melee 
Version 5.4        : Added new options for Class Long Jump 
Version 5.5        : Added Color Indication for Rapid Fire 
Version 5.8        : Fixed bug in Class Quick Scope 
Version 5.9        : Added New G-Slide after patched the Old G-Slide 
Version 6.2        : Added New G-Slide after patch for PS4 & XB1 - ALL CREDITS GO TO : k4rL01 
Version 8.1        : Added the latest update for antirecoil made by LEX LOST. 
Version 8.2        : Added Strongest Aim Assist by x22dot 
Version 8.3        : Added new G-Slide v 2.0 
Version 8.4        : Fixed one minor bug - Jitters mode , color indication did not show the fields for color choose 
Version 8.5-8.7    : Added new Brecci Jitter after 1.09 patch. All credits for : bonefisher 
Version 8.8        : Added new options for SHOT MODE - Scope Disable / Scope Enable 
Version 8.9        : Added new options for Brecci Jitter - now you can choose what equipment to have - Tactical or Lethal  
=============================================================================
TOGGLES: You MUST press and hold the "first" button first before pressing the other button.
                                                                             
                                                                             
=============================================================================
*****************************************************************************/
/***************************************************************
    INSTRUCTIONS                                                
                                                                
 ---------------------------------------------------------------- 
 Class 4. SHOT MODE                                                                                                  
                                                                                                   
 //1. DROP SHOT  On / Off => FIRE_BTN + D pad Down     
                                                                                                     
 //2. JUMP SHOT  On / Off => FIRE_BTN + D pad Up             
                                                                                                     
 //3. SIDE SHOT  On / Off => FIRE_BTN + D pad Right     
                                                                                                     
 //4. Scope Shot On / Off => FIRE_BTN + D pad Left     
                                                                                                     
//---------------------------------------------------------------- 
// Class 17. AIM ASSIST                                            
 // hold XB1_A + press XB1_X
                                                                   
// ---------------------------------------------------------------- 
// Class 9. ANTI RECOIL                                             
                                                                                                   
 //1. Profile 1   On  => ADS_BTN + D pad Up     
                                                                                                     
 //2. Profile 2   On  => ADS_BTN + D pad Right             
                                                                                                     
 //3. Profile 3   On  => ADS_BTN + D pad Down     
                                                                                                     
 //4. ANTI RECOIL Off => ADS_BTN + D pad Left     
                                                                                                     
 ---------------------------------------------------------------- 
 Class 14. BURST FIRE  Change rounds per burst :                                                                                                 
                                                                                                   
 //Increase Rounds   => hold <FIRE_BTN> + press D pad RIGHT     
                                                                                                     
 //Decrease Rounds   => hold <FIRE_BTN> + press D pad LEFT             
                                                                                                     
 ---------------------------------------------------------------- 
 Class 14. BURST FIRE  turn it OFF / ON in game :                                                                                                 
                                                                                                   
 //hold ADS button + press ( XB1 MENU / PS4 OPTIONS )     
                                                                                                     
 //Decrease Rounds   => hold <ADS_BTN> + press D pad LEFT             
                                                                                                     
 -----------------------------------------------------------------
********************************************************/
////////////////////////////////////////////////////////                                    
//                                    
//  BUTTON LAYOUT    : DEFAULT                 
//  BUMPERS/TRIGGERS : DEFAULT
//  STICK LAYOUT     : DEFAULT
//------------------------------------------------------
define FIRE_BTN      = XB1_RT; // default RT                        
define ADS_BTN       = XB1_LT; // LT                        
define SPRINT_BTN    = XB1_LS; // LS                        
define PRONE_BTN     = XB1_B; // B                         
define JUMP_BTN      = XB1_A; // A                         
define SWITCH_WEAPON = XB1_Y; // Y                         
define RELOAD_BTN    = XB1_X; // X                         
define MELEE         = XB1_RS; // RS/R3                     
define LETHAL        = XB1_RB; // RB                        
define TACTICAL      = XB1_LB; // LB                        
define Up            = XB1_UP;                              
define Right         = XB1_RIGHT;                              
define Down          = XB1_DOWN;                              
define Left          = XB1_LEFT;                               
define R_X           = XB1_RX;                              
define R_Y           = XB1_RY;                              
define L_X           = XB1_LX;                              
define L_Y           = XB1_LY;                              
//////////////////////////////////////////////////////// 
//                        
define dropDelay    =300; 
define timelimit    =300; 
define NotUse       =  0; 
                          
int value   =  33; 
int value2  = -33; 
int delay   =  11; 
int aim_assist_on  = TRUE;
////////////////////////////////////////////////////////
//                        
                          
int RA;                   
int LX; 
int LY; 
int hold_time = 500;  // All Weapons 
int rest_time = 480;                 
int hold_timeP = 500;  // Primary Weapon 
int rest_timeP = 480;                 
int hold_timeS = 500; // secondary 
int rest_timeS = 480; // secondary 
int hold_time_B = 500;   
int rest_time_B = 480;   
                   
////////////////////////////////////////////////////////
//  Boolean Variables             
int rapid_onoff          = TRUE;  
int RF_ALL_weapons       = TRUE;  
int burst_onoff          =FALSE; // On/Off Burst Fire 
int akimbo_onoff         =FALSE; // On/Off Akimbo mode
int Akimbo_Secondary     =FALSE; // On/Off Akimbo mode
int dropshot_OnOff       =FALSE; // On/Off Drop Shot  
int side_shot_OnOff      = TRUE;   
int JumpShot_OnOff       =FALSE;   
int ScopeShot            =FALSE;   
int QuickScope           =FALSE;   
int SniperOnOff          =FALSE;   
int hold_breath_On_Off   =FALSE;   
int Prim_SecondWeapon    =FALSE;   
int PrimaryWeapon        =FALSE;   
int BurstMelee          =FALSE;   
int SecondaryWeapon      =FALSE;   
int SpecialAbility_OnOff =FALSE;   
int InvertYaxis          =FALSE;   
int TogleADS             =FALSE; // On /Off Togle ADS    
                                  
int Invert = 1;                        
int b_hold_ADS           =FALSE; // if Toggle ADS in use * / need to be reset 
int b_ADS_Delay          =FALSE; // On /Off ADS Delay   
int JumpActive           =FALSE;                        
int InstantDrop          =FALSE; // Slide or instant drop 
int bAnti_Recoil         = TRUE;
define AR_Release     = 60; // change this value to determine when antirecoil stops working (min: antirecoil value + 10) 
int ANTI_RECOIL       = 0; //Set this value to compensate for the recoil vertical (0 - 100) 
int ANTI_RECOIL_LEFT  = 0; //Set this value to compensate for the recoil left  (0 - 100)
int ANTI_RECOIL_RIGHT = 0; //Set this value to compensate for the recoil right (0 - 100) 
int anti_recoil;       
int anti_recoil_left;  
int anti_recoil_right; 
int b_switch;   
int NotReloading         = TRUE;   
int DblClick_JUMP;         
int TimeToJump;           
int LongJump             = TRUE;  
int b_running;                    
int b_tap ;                   // boolean variable  
int timerLJump;                
int wait_sec_tap = 300;                
                          
//////////////////////////////////////////////////////////
//                         
int timer;                 
int Sens         =  20;    
int SlideOrDrop  =  20;    
int DelayScope   =  20;     
int ADS_Delay    =  1000;// ADS delay value
//INITIALIZATION - init                       
//--------------------------------------------------------------
init {//#############################################      
    if(InvertYaxis) Invert = -1;                                                       
    if(InstantDrop)SlideOrDrop=20;                         
    else SlideOrDrop=10;                                   
}//##################################################      
//MAIN BLOCK RUTINES                                       
//--------------------------------------------------------------
main {  // Start of MAIN BLOCK                                  
//--------------------------------------------------------------
// FIND DIRECTION of Left Analogue                           
if(get_val(L_X)<-20 || get_val(L_X)>20)LX=get_val(L_X);      
//--------------------------------------------------------------
//////////////////////////////////////////////////////////////////////////
//  ANTI RECOIL PROFILES  ////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////
                                                                          
     // ANTI RECOIL - UserProfile 1:AKS Switch:ADS_BTN 
     if( get_val(ADS_BTN) ){                       
       // USER PROFILE 1 :None                         
       if(event_press(13)){                            
         bAnti_Recoil=TRUE;                            
         ANTI_RECOIL       = 0; // vertical (0 - 100)  
         ANTI_RECOIL_LEFT  = 0; // Left (0 - 100)      
         ANTI_RECOIL_RIGHT = 0; // Right (0 - 100)     
       }                                               
       // USER PROFILE 2 :AK47                         
       if(event_press(16)){                            
         bAnti_Recoil=TRUE;                            
         ANTI_RECOIL       = 0; // vertical (0 - 100)  
         ANTI_RECOIL_LEFT  = 0; // Left (0 - 100)      
         ANTI_RECOIL_RIGHT = 0; // Right (0 - 100)     
       }                                               
       // USER PROFILE 3 :M16A4                         
       if(event_press(14)){                            
         bAnti_Recoil=TRUE;                            
         ANTI_RECOIL       = 0; // vertical (0 - 100)  
         ANTI_RECOIL_LEFT  = 0; // Left (0 - 100)      
         ANTI_RECOIL_RIGHT = 0; // Right (0 - 100)     
       }                                              
       // USER PROFILE 4 : Turn OFF Anti Recoil       
       if(event_press(15)){                           
       bAnti_Recoil=FALSE;                            
       }                                              
      set_val(13,0);                                  
      set_val(14,0);                                  
      set_val(15,0);                                  
      set_val(16,0);  
     }               
               
// ANTI RECOIL  
                  
     // ANTI RECOIL - Class 9 Alwayes On  
     if(bAnti_Recoil){//---------------------  
        if(get_val(FIRE_BTN) ){ 
            combo_run(AntiRecoil);               
        }                                        
     }//--------------------------------------  
                                                  
    if( abs(get_val(10)) > AR_Release  || abs(get_val(9)) > AR_Release) { 
        combo_stop (AntiRecoil);                  
    }                                           
                                                

        
                                                                           
                                                                           
///////////////////////////////////////////////////////////////////////////
////////   DROP SHOT On / Off  ////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////
                                                                           
  if (DblClick_JUMP>0)DblClick_JUMP=DblClick_JUMP- get_rtime();            
  //--------------------------------------------------------------         
  if (event_press(JUMP_BTN) && DblClick_JUMP<=0 ) {DblClick_JUMP=timelimit;} 
  else if (event_press(JUMP_BTN)&& DblClick_JUMP>0 ){TimeToJump=1500;JumpActive=TRUE;} 
  //--------------------------------------------------------------          
   if(JumpActive) {                                                         
                   TimeToJump=TimeToJump-get_rtime();   
                   if(TimeToJump<=0){JumpActive=FALSE;} 
                  }                                     
   // DROP SHOT On / Off = FIRE_BTN  + D pad Down     
   if(get_val(FIRE_BTN) && event_press(Down))   
     {//-----------------------------------             
         dropshot_OnOff=!dropshot_OnOff;                
         if(dropshot_OnOff){                            
          ScopeShot      =FALSE;                         
          JumpShot_OnOff =FALSE;                        
          side_shot_OnOff=FALSE;                        
         }                                              
                                                        
     }//-----------------------------------              
   // ------------------------------------------------------
                                                         
                                                         
   // DROP SHOT                                           
   //press fire btn without ADS for Drop Shot  JumpActive     
    if(  dropshot_OnOff && !get_val( ADS_BTN) && !JumpActive){ 
       if(get_val(FIRE_BTN) ) { combo_run(DROPSHOT);}        
    }                                                          
                                                                      
///////////////////////////////////////////////////////////////////////////
//  JUMP SHOT   ///////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////
                                                               
 // Jump Shot  On / Off => FIRE_BTN + D pad Up             
  if(get_val(FIRE_BTN)&& event_press(Up))     
    {                                                  
     JumpShot_OnOff=!JumpShot_OnOff;                   
       if(JumpShot_OnOff){                             
          ScopeShot      =FALSE;                         
          side_shot_OnOff=FALSE;                       
          dropshot_OnOff =FALSE;                       
       }                                               
                                                       
    }                                                  
 // Jump Shot Scope Disable                                                   
  if (JumpShot_OnOff && !get_val(ADS_BTN))             
   {//-----------------------------------------        
    if(event_press(FIRE_BTN) )combo_run(Jump);         
   }//-----------------------------------------        
                                                       
//////////////////////////////////////////////////////////////////////////
//  SIDE SHOT   //////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////
                                                        
 // Side Shot  On / Off => FIRE_BTN + D pad Right     
  if(get_val(FIRE_BTN)&& event_press(Right)) 
    {                                                   
     side_shot_OnOff=!side_shot_OnOff;                  
       if(side_shot_OnOff){                             
          ScopeShot      =FALSE;                         
          JumpShot_OnOff =FALSE;                         
          dropshot_OnOff =FALSE;                        
       }                                                
                                                        
    }                                                   
                                                       
                                                       
  // Side Shot Scope Disable                                                     
  if (side_shot_OnOff && !get_val(ADS_BTN))             
   {//-----------------------------------------         
    if(event_press(FIRE_BTN) )combo_run(SIDE_SHOT);     
   }//-----------------------------------------         
                                                        
                                                               
//////////////////////////////////////////////////////////////////////////
//  SCOPE SHOT   /////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////
 //Scope Shot  On / Off => FIRE_BTN + D pad Left     
  if(get_val(FIRE_BTN)&& event_press(Left)) 
    {                                                   
     ScopeShot=!ScopeShot;                  
       if(ScopeShot){                             
          JumpShot_OnOff =FALSE;                         
          side_shot_OnOff=FALSE;                         
          dropshot_OnOff =FALSE;                        
       }                                                
                                                        
    }                                                   
   if(ScopeShot) {                                       
      if(get_val(FIRE_BTN) && !get_val(ADS_BTN)) {                            
          set_val(ADS_BTN,100);                          
      }                                                  
   }                                                     
///////////////////////////////////////////////////////////////////////////
//  RAPID FIRE On-Off  ////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////
          if(rapid_onoff) f_ColorLed(0,0,2,0); // clLime 
          else f_ColorLed(0,2,0,0); // clRed  
      ///////////////////////////////////////////////////////////////////////
                                                                     
        // FIRE_BTN+ Dpad change Hold Time 
        if(get_val(FIRE_BTN)){             
                                                                      
              if(event_press(Up))   { hold_time = 15; }
              if(event_press(Right)){ hold_time = 32; }
              if(event_press(Down)) { hold_time = 29; }
              if(event_press(Left)) { hold_time = 19; }
        }                                              
                                                       
        // FIRE_BTN+ Dpad change Rest Time       
        if(get_val(FIRE_BTN)){                      
                                                       
              if(event_press(Up))   { rest_time = 15; } 
              if(event_press(Right)){ rest_time = 30; } 
              if(event_press(Down)) { rest_time = 10; } 
              if(event_press(Left)) { rest_time = 20; } 
        }                                               
                                                        
   // ON / OFF RAPID FIRE  (SWITCH_WEAPON + Dpad UP )       
   if(get_val(ADS_BTN) && event_press(Up ))           
    {                                                     
     rapid_onoff =!rapid_onoff;                           
     RF_ALL_weapons=!RF_ALL_weapons;                      
    }                                                     
   /////////////////////////////////////////////////////////
   //RF Scope Disable                                          
   if(rapid_onoff){//---------------------------------------- 
                                                       
      if(get_val(FIRE_BTN) && !get_val(ADS_BTN)  && !burst_onoff ) {      
         combo_run(RAPID_FIRE);                        
      }else if(combo_running(RAPID_FIRE)){             
         combo_stop(RAPID_FIRE);                       
      }                                                
    }//--------------------------------------------------------
                                                       
/////////////////////////////////////////////////////////
//  AIM ASSIST  all credits go to the author : x22dot                                         
/////////////////////////////////////////////////////////
                                                         
    if(get_val(XB1_A)) {
         if(event_press(XB1_X)) aim_assist_on = !aim_assist_on;
         if(aim_assist_on) combo_run(NOTIFY_ON);  
         else combo_run(NOTIFY_OFF);              
    }                                                              
                                                                  
                                                                  
   if(aim_assist_on){//---------------------------------------------
                                                                  
        if(get_val(ADS_BTN) || b_hold_ADS) {                                    
            combo_run(LT_C);                                      
        }                                                        
                                                                  
        if(get_val(ADS_BTN) && (get_val(FIRE_BTN)||b_hold_ADS)) {                
            combo_stop(LT_C);                                     
            combo_run(RT_C);                                       
        }                                                          
                                                                     
        if(get_val(R_X) < value2 || get_val(R_X) > value || get_val(R_Y) < value2 || get_val(R_Y) > value || get_val(R_X) < value2 || get_val(R_X) > value || get_val(R_Y) < value2 || get_val(R_Y) > value) {  
            combo_stop(LT_C);                                         
            combo_stop(RT_C);                                         
        }                                                             
   }//--------------------------------------------------------------
                                                                  
}// End of MAIN BLOCK                                            
//-------------------------------------------------------------- 
                                                                    
///////////////////////////////////////////////////////////////////////////
//COMBO BLOCKS   //////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////
combo NOTIFY_ON {           
   set_rumble(RUMBLE_A,100);
   wait(300);               
   reset_rumble();          
   }                       
                            
combo NOTIFY_OFF {          
   set_rumble(RUMBLE_B,100); 
   wait(300);               
   reset_rumble();         
   }                     
                       
// Sensitivity 1 -4 
combo LT_C {         
   set_val(R_Y,-30); 
   wait(delay)       
   set_val(R_X, 30); 
   set_val(R_Y, 20); 
   wait(delay)       
   set_val(R_Y, 20); 
   wait(delay)       
   set_val(R_X,-30); 
   set_val(R_Y, 20); 
   wait(delay)       
}                    
                     
combo RT_C {         
   set_val(R_Y,-40); 
   wait(delay)       
   set_val(R_X, 40); 
   set_val(R_Y, 30); 
   wait(delay)       
   set_val(R_Y, 30); 
   wait(delay)       
   set_val(R_X,-40); 
   set_val(R_Y, 30); 
   wait(delay)       
}                    
combo Jump {     
   set_val(JUMP_BTN,100);//1  
   wait(60);                 
   wait(80);                 
   set_val(JUMP_BTN,100);//1  
   wait(200);                 
}              
combo TAKE_SHOT {    
    set_val(FIRE_BTN,100); 
    set_val(ADS_BTN, 100); 
    set_val(SPRINT_BTN,100);
    wait(100);        
}
//RAPID FIRE                                
combo RAPID_FIRE {                          
   set_val(FIRE_BTN,100);                   
   wait(hold_time);                         
   set_val(FIRE_BTN,0);                     
   wait(rest_time);                         
   set_val(FIRE_BTN,0);                     
   wait(rest_time);                         
}                                           
combo AutoSprint {                          
   set_val(SPRINT_BTN,100);                 
   wait(10); // hold Sprint btn.            
   set_val(SPRINT_BTN,100);                 
}                                           
 //DROP SHOT                                
combo DROPSHOT {//begin                     
   if(InstantDrop){set_val( L_Y,0);}        
   wait(SlideOrDrop);                       
   set_val(PRONE_BTN, 100);                
   wait(dropDelay); //Time To Go Prone     
}//end                                     
                                           
combo SIDE_SHOT {                          
   set_val(L_X, 100);                      
   wait(200); // -----------------         
   set_val(L_X,-100);                      
   wait(200); // -----------------         
}                                          
                                           
// ANTI RECOIL - Class 9    
combo AntiRecoil {          
    //--------------------------------- 
     anti_recoil = get_val(R_Y) + (ANTI_RECOIL*Invert); 
     if(anti_recoil > 100) anti_recoil = 100;                
     set_val(R_Y, anti_recoil);                         
     anti_recoil_left = get_val(R_X) -ANTI_RECOIL_LEFT; 
     if(anti_recoil_left > 100) anti_recoil_left = 100;      
     set_val(R_X, anti_recoil_left);                    
     anti_recoil_right = get_val(R_X) +ANTI_RECOIL_RIGHT; 
     if(anti_recoil_right > 100) anti_recoil_right = 100;    
     set_val(R_X, anti_recoil_right);                   
     //------------------------------------------------------- 
}                                                              
//------------------------------------------------------------------------------------
function f_ColorLed (a,b,c,d){  
   set_led(LED_1,a);  
   set_led(LED_2,b); 
   set_led(LED_3,c); 
   set_led(LED_4,d);
}     
// end of script                                                                    