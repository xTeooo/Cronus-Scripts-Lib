// GPC Online Library
// the_division_2_-_hazmat_script_(advanced_users_only).gpc

/*
                    ¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤
                    ¤¤                                                                                                                                                                         ¤¤
                    ¤¤                                                                                                                                                                         ¤¤
                    ¤¤                             88NOOZBAR88 888                    8888888b.  d8b          d8b          d8b                         .d8888b.                                ¤¤ 
                    ¤¤                o                888     888                    888  "Y88b Y8P          Y8P          Y8P                        d88P  Y88b            o                  ¤¤ 
                    ¤¤               d8b               888     888                    888    888                                                             888           d8b                 ¤¤ 
                    ¤¤              d888b              888     88888b.   .d88b.       888    888 888 888  888 888 .d8888b  888  .d88b.  88888b.            .d88P          d888b                ¤¤  
                    ¤¤          "Y8NOOZBAR8Y"          888     888 "88b d8P  Y8b      888    888 888 888  888 888 88K      888 d88""88b 888 "88b       .od888P"       "Y8NOOZBAR8Y"            ¤¤  
                    ¤¤            "Y88888P"            888     888  888 88888888      888    888 888 Y88  88P 888 "Y8888b. 888 888  888 888  888      d88P"             "Y88888P"              ¤¤  
                    ¤¤            d88P"Y88b            888     888  888 Y8b.          888  .d88P 888  Y8bd8P  888      X88 888 Y88..88P 888  888      888"              d88P"Y88b              ¤¤  
                    ¤¤           dP"     "Yb           888     888  888  "Y8888       8888888P"  888   Y88P   888  88888P' 888  "Y88P"  888  888      8NOOZBAR8        dP"     "Yb             ¤¤  
                    ¤¤                                                                                                                                                                         ¤¤ 
                    ¤¤                                                                                                                                                                         ¤¤ 
                    ¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤¤

                                                                                                                                                                            
                                                                                                                                                                                                                      
       d88P 888 Y88b             888     888        d8888 88NOOZBAR8P 888b     d888        d8888 88NOOZBAR88            .d8888b.   .d8888b.  8888888b.  8888888 8888888b. 88NOOZBAR88             d88P 888 Y88b        
      d88P  888  Y88b            888     888       d88888       d88P  8888b   d8888       d88888     888               d88P  Y88b d88P  Y88b 888   Y88b   888   888   Y88b    888                d88P  888  Y88b       
     d88P   888   Y88b           888     888      d88P888      d88P   88888b.d88888      d88P888     888               Y88b.      888    888 888    888   888   888    888    888               d88P   888   Y88b      
    d88P    888    Y88b          88NOOZBAR88     d88P 888     d88P    888Y88888P888     d88P 888     888                "Y888b.   888        888   d88P   888   888   d88P    888              d88P    888    Y88b     
   d88P     888     Y88b         888     888    d88P  888    d88P     888 Y888P 888    d88P  888     888                   "Y88b. 888        8888888P"    888   8888888P"     888             d88P     888     Y88b    
  d88P      Y8P      Y88b        888     888   d88P   888   d88P      888  Y8P  888   d88P   888     888                     "888 888    888 888 T88b     888   888           888            d88P      Y8P      Y88b   
 d88P                 Y88b       888     888  d8888888888  d88P       888   "   888  d8888888888     888               Y88b  d88P Y88b  d88P 888  T88b    888   888           888           d88P                 Y88b  
d88P        888        Y88b      888     888 d88P     888 d8NOOZBAR88 888       888 d88P     888     888                "Y8888P"   "Y8888P"  888   T88b 8888888 888           888          d88P        888        Y88b 


Version: 2.9
Device: CronusMAX +
Author: noozbar

Big thanks to Batts
Tanks to CronusMAX community, LEX LOST, Excalibur and all the forum Staff

//----------------------------------------------------------------------------------------------------------------------// 
     ____      _              ___    _            _   _  __ _           _   _             
    / ___|___ | | ___  _ __  |_ _|__| | ___ _ __ | |_(_)/ _(_) ___ __ _| |_(_) ___  _ __  
   | |   / _ \| |/ _ \| '__|  | |/ _` |/ _ \ '_ \| __| | |_| |/ __/ _` | __| |/ _ \| '_ \ 
   | |__| (_) | | (_) | |     | | (_| |  __/ | | | |_| |  _| | (_| (_| | |_| | (_) | | | |
    \____\___/|_|\___/|_|    |___\__,_|\___|_| |_|\__|_|_| |_|\___\__,_|\__|_|\___/|_| |_|

	
 LED OFF = Script disable 

 GREEN   = Weapons 1 profile (only antirecoil values are saved in the profile)
 
 BLUE    = Weapons 2 profile (only antirecoil values are saved in the profile)
 
 PINK    = Weapons 3 profile (only antirecoil values are saved in the profile)
 
 RED     = Weapons 4 profile (only antirecoil values are saved in the profile)
 
 SKYBLUE = Pistol / Sidearm (only antirecoil values are saved in the profile)
 
 WHITE   = Special weapon (Anti-Recoil and RapidFire disable)

//----------------------------------------------------------------------------------------------------------------------//
    ___           _                   _   _                                    _    _____          _                       
   |_ _|_ __  ___| |_ _ __ _   _  ___| |_(_) ___  _ __  ___     __ _ _ __   __| |  |  ___|__  __ _| |_ _   _ _ __ ___  ___ 
    | || '_ \/ __| __| '__| | | |/ __| __| |/ _ \| '_ \/ __|   / _` | '_ \ / _` |  | |_ / _ \/ _` | __| | | | '__/ _ \/ __|
    | || | | \__ \ |_| |  | |_| | (__| |_| | (_) | | | \__ \  | (_| | | | | (_| |  |  _|  __/ (_| | |_| |_| | | |  __/\__ \
   |___|_| |_|___/\__|_|   \__,_|\___|\__|_|\___/|_| |_|___/   \__,_|_| |_|\__,_|  |_|  \___|\__,_|\__|\__,_|_|  \___||___/ 


** Rumble and color indications:
		2 small fast vibrations + flash 2 times red = mod is OFF
		1 big vibration + flash 1 time green = mod is ON
		3 small fast vibrations every 10 seconds + flash 2 times red  = your controller have less than 10% battery left 
		3 big vibrations + flash one time green = you have save all values


** Weapon type selection (all combinations are possible in primary weapon and secondary weapon):
		Hold D Pad UP and press TRIANGLE/Y to switch between 4 profiles of weapons with color identification
        Controller vibrate
        All combinations are possible in primary weapon and secondary weapon
    
    
** Anti-Recoil adjustable on the fly (Progression Scaled by Time)
     Works for Primary, Secondary or SideArm

     *Time adjust:
        Hold L2/LT + CROSS/A and: 
         - tap D Pad UP to increase Time value (Time will be in 100ms increments)
         - tap D Pad DOWN to decrease Time value (Time will be in 100ms increments)
        
     *Starting Antirecoil value adjust:
        Hold L2/LT + SQUARE/X and: 
         - tap D Pad UP to increase Starting Antirecoil value by 1
         - tap D Pad DOWN to decrease Starting Antirecoil value by 1
         - tap D Pad RIGHT to increase Starting Antirecoil value by 10
         - tap D Pad LEFT to decrease Starting Antirecoil value by 10
        
     *Ending Antirecoil value adjust:
        Hold L2/LT + CIRCLE/B and: 
         - tap D Pad UP to increase Ending Antirecoil value by 1
         - tap D Pad DOWN to decrease Ending Antirecoil value by 1
         - tap D Pad RIGHT to increase Ending Antirecoil value by 10
         - tap D Pad LEFT to decrease Ending Antirecoil value by 10
        
     *Horizontal Antirecoil value adjust: VALUES ARE NOT SAVED
        Hold L2/LT + R3/RS and: 
         - tap D Pad RIGHT if your weapon goes left
         - tap D Pad LEFT if your weapon goes right 
        
     *Save new values:
        Hold L2/LT and press OPTION/MENU to save your new values
        3 big vibrations and LED flash one time
        
        
** RapidFire with toggle on/off and adjustable on the fly for semi auto weapons like Pistols, Shotguns, Snipers or Rifles (Range between 0 and 25 round per second)
    You can activate RapidFire independently on 3 weapons: primary, or secondary or handgun ... all combinations are possible (primary ON, secondary OFF, Handgun ON ... ... ...)
    When RapidFire is enable, LEDs are flashing

    *Toggle on/off:
       Hold CROSS/A + SQUARE/X and:
        - tap R2/RT to enable or disable this feature in game
        1 big vibration = mod is ON, 2 small fast vibrations = mod is OFF
      
    *Rate of fire adjust: (only if RapidFire is enable)
		Hold CROSS/A + SQUARE/X and:
        - tap D Pad UP to increase RapidFire value by 1
        - tap D Pad DOWN to decrease RapidFire value by 1
      Controller vibrate when you are at maximum or minimum value
 

** Burst Fire
     Hold L2/LT and tap D pad RIGHT to enable Burst Fire
     Release L2/LT to disable


** Panic Button (Allow you to Switch CronusMAX color witout switching weapon, if your weapon and the assigned color don't go together)
     L3/LS and press TRIANGLE/Y
 
 
** Script Enable/Disable mod (Script enable by defaut)
     Press PS/XBOX or OPTION/MENU or hold L3/LS + click R3/RS to disable ALL FEATURES, press again to enable (Led OFF when disable)
     or
     Quick press Map Button to enable all features
     Long press Map Button to display Map or hold for going Rogue
     1 big vibration = mod is ON, 2 small fast vibrations = mod is OFF
 
 
** Special Weapon mod (Anti-Recoil and RapidFire disable)
     Hold TRIANGLE/Y (Led color turn WHITE)
     
     
** AutoRun press sensitive (Work better when in game option "Press to Sprint" is turned OFF)
     Push your stick to more than 60% to run automatically
 

** Strafe Shot
     Strafe to the Right and to the Left while shooting
     Enable or disable in game:
     Hold CROSS/A + CIRCLE/B and tap D Pad DOWN to enable or disable this feature on the fly 
     1 big vibration = mod is ON, 2 small fast vibrations = mod is OFF


** Hair Trigger
     Your triggers are VERY reactive
 
 
** Swap Triggers/Bumpers
     Enable or disable with TRUE / FALSE value 
 
 
** Inverted Axis (in game option "Invert Y axis" MUST BE OFF!)
     Enable or disable with TRUE / FALSE value
 
 
** Dead Zone Correction (Right Stick)
     Fix the DeadZone defect which is never really neutral
 
 
** Quick Grenade
     Hold ADS button and tap D Pad LEFT or only long press D Pad LEFT to throw a grenade
     
     
** Easy MedKit
     Double tap D pad Right to change your armor piece, move Left analog to cancel
     
     
** Battery Warning
     3 small fast vibrations every 10 seconds if your controller have less than 10% battery left


** Destroy Skill
     Double tap R1/RB or L1/LB to destroy the active skill assigned to this button

//______________________________________________________________________________________________________________________//
//___________________________________________________FEATURES START_____________________________________________________//
//______________________________________________________________________________________________________________________//
    _   _                      ____       _   _   _                 
   | | | |___  ___ _ __ ___   / ___|  ___| |_| |_(_)_ __   __ _ ___ 
   | | | / __|/ _ \ '__/ __|  \___ \ / _ \ __| __| | '_ \ / _` / __|
   | |_| \__ \  __/ |  \__ \   ___) |  __/ |_| |_| | | | | (_| \__ \
    \___/|___/\___|_|  |___/  |____/ \___|\__|\__|_|_| |_|\__, |___/
                                                          |___/       
//----------------------------------------------------------------------------------------------------------------------//
                                   
                                    PRIMARY WEAPON :
 
     Hold D Pad DOWN and press TRIANGLE/Y to switch between 4 profiles of weapons

 0 = Profile 1 (color GREEN) 
 1 = Profile 2 (color BLUE)  
 2 = Profile 3 (color PINK)  
 3 = Profile 4 (color RED)   

Default weapon is profile 1, color GREEN
*/

int Weapon1 = 0; // Choose weapon: 0, 1, 2 or 3 (or you can change in game)

//----------------------------------------------------------------------------------------------------------------------//
/*									SECONDARY WEAPON:

     Hold D Pad DOWN and press TRIANGLE/Y to switch between 4 profiles of weapons

 0 = Profile 1 (color GREEN) 
 1 = Profile 2 (color BLUE)  
 2 = Profile 3 (color PINK)  
 3 = Profile 4 (color RED)    

Default weapon is profile 2, color BLUE
*/
 
int Weapon2 = 1; // Choose weapon: 0, 1, 2 or 3 (or you can change in game)
 
//----------------------------------------------------------------------------------------------------------------------//
//									Anti-Recoil adjustable on the fly (Progression Scaled by Time) - by Batts:

const byte AR[][] = {

/* 
    {Time, Antirecoil Starting value, Antirecoil Ending value}

 - First value is the amount of time / 100 (10 = 1000ms = 1 Second, 25 = 2.5 seconds ...)
 - Second value is Anti-Recoil start value
 - Third value is Anti-Recoil end value
 - Last value is Anti-Recoil horizontal value
*/  

// First profile default values (GREEN color):
    {10,10,10,0},
    
// Second profile default values (BLUE color):
    {10,10,10,0},
    
// Third profile default values (PINK color):
    {10,10,10,0},

// Fourth profile default values (RED color):
    {10,10,10,0},

// Handgun default values (SKYBLUE color):
    {10,10,10,0}
};

//----------------------------------------------------------------------------------------------------------------------//
//                                    RapidFire setting:
 
/* RapidFire with toggle on/off and adjustable on the fly for semi auto weapons like Pistols, Shotguns, Snipers or Rifles (Range between 0 and 25 round per second)
    You can activate RapidFire independently on 3 weapons: primary, or secondary or handgun ... all combinations are possible (primary ON, secondary OFF, Handgun ON ... ... ...)
    When RapidFire is enable, LEDs are flashing

    *Toggle on/off:
     Hold CROSS/A + SQUARE/X and:
      - tap R2/RT to enable or disable this feature in game (1 big vibration = mod is ON, 2 small fast vibrations = mod is OFF)
      
    *Rate of fire adjust: (only if RapidFire is enable)
     Hold CROSS/A + SQUARE/X and:
      - tap D Pad UP to increase RapidFire value by 1
      - tap D Pad DOWN to decrease RapidFire value by 1
      Controller vibrate when you are at maximum or minimum value
*/

int RF_Handgun_ON;
int RoF_Handgun = 6; // Range: 1 to 25 RPS (Round/s)

int RF_Primary_ON;
int RoF_Primary = 8; // Range: 1 to 25 RPS (Round/s)

int RF_Secondary_ON;
int RoF_Secondary = 10; // Range: 1 to 25 RPS (Round/s)

//----------------------------------------------------------------------------------------------------------------------//
//                                    Burst Fire setting:

/* Burst Fire
     Hold L2/LT and tap D pad RIGHT to enable Burst Fire
     Release L2/LT to disable
*/

int Burst_Hold = 400; // How many time you hold Fire button
int Burst_Release = 150; // How many time you release Fire button

//----------------------------------------------------------------------------------------------------------------------//
//                                    Strafe Shot setting:

/* Strafe Shot
     Strafe to the Right and to the Left while shooting
     Enable or disable with TRUE / FALSE value
     Enable or disable in game:
     Hold CROSS/A + CIRCLE/B and tap D Pad DOWN to enable or disable this feature on the fly 
     Controller vibrate
*/

int Strafe_Shot_ON;
int Strafe_Shot_Time  = 750;  // Amount of time you go to the sides

//----------------------------------------------------------------------------------------------------------------------//
//                                    Swap Triggers/Bumper setting:
 
int R1L1_ONoff = FALSE; // FALSE = shoot and aim with R2/L2 or RT/LT // TRUE = shoot and aim with R1/L1 or RB/LB
 
//----------------------------------------------------------------------------------------------------------------------//
//                                    Inverted Axis setting:
 
//        If you play with inverted axis, set TRUE, in game option "Invert Y axis" MUST BE OFF!
 
int Axis_inverted = FALSE; // Set TRUE for Right Y axis inverted, esle set FALSE

//______________________________________________________________________________________________________________________//
//___________________________________________________FEATURES END_______________________________________________________//
//______________________________________________________________________________________________________________________//
//    ____                       _                          _ _  __       
//   |  _ \  ___     _ __   ___ | |_    _ __ ___   ___   __| (_)/ _|_   _ 
//   | | | |/ _ \   | '_ \ / _ \| __|  | '_ ` _ \ / _ \ / _` | | |_| | | |
//   | |_| | (_) |  | | | | (_) | |_   | | | | | | (_) | (_| | |  _| |_| |
//   |____/ \___/   |_| |_|\___/ \__|  |_| |_| |_|\___/ \__,_|_|_|  \__, |
//                                                                  |___/  
//###################################################################
////////////////////////////////////////////////////////////////////#
                                                                  //#
int Script_ON = 1;                                                //#
int double_tap;                                                   //#
int Switch;                                                       //#
int Pistol_ON;                                                    //#
int RATE_OF_FIRE;                                                 //#
int hold_time;                                                    //#
int rest_time;                                                    //#
int Special_ON;                                                   //#
int Map;                                                          //#
int Map_BTN;                                                      //#
int ms;                                                           //#
int Button;                                                       //#
int Burst_ON;                                                     //#
int run_rumble;                                                   //#
int rumble_side;                                                  //#
int rumble_time;                                                  //#
int ar_x;                                                         //#
int x_ref;                                                        //#
                                                                  //#
int ar_t[5];                                                      //#
int ar_s[5];                                                      //#
int ar_e[5];                                                      //#
int ar_h[5];                                                      //#
                                                                  //#
int idx;                                                          //#
int key = 145;                                                    //#
int record;                                                       //#
                                                                  //#
data(0,0,3,0,3,0,0,0,0,0,0,3,0,3,0,0,3,0,3,0);                    //#
                                                                  //#
int i;                                                            //#
int i_val;                                                        //#
int i_pnt;                                                        //#
int i_num;                                                        //#
int i_cnt;                                                        //#
int v,ar_y;                                                       //#
                                                                  //#
////////////////////////////////////////////////////////////////////#
//###################################################################

//______________________________________________________________________________________________________________________//

init {
    //Check for vaild saved data
    record = get_pvar(SPVAR_16,140,150,140);
    if(record == key) {
        ar_t[0] = get_pvar(SPVAR_1 ,-100,100,0);  ar_t[1] = get_pvar(SPVAR_2, -100,100,0);  ar_t[2] = get_pvar(SPVAR_3, -100,100,0);
        ar_t[3] = get_pvar(SPVAR_4, -100,100,0);  ar_t[4] = get_pvar(SPVAR_5, -100,100,0);  ar_s[0] = get_pvar(SPVAR_6, -100,100,0);
        ar_s[1] = get_pvar(SPVAR_7, -100,100,0);  ar_s[2] = get_pvar(SPVAR_8, -100,100,0);  ar_s[3] = get_pvar(SPVAR_9, -100,100,0);
        ar_s[4] = get_pvar(SPVAR_10,-100,100,0);  ar_e[0] = get_pvar(SPVAR_11,-100,100,0);  ar_e[1] = get_pvar(SPVAR_12,-100,100,0);
        ar_e[2] = get_pvar(SPVAR_13,-100,100,0);  ar_e[3] = get_pvar(SPVAR_14,-100,100,0);  ar_e[4] = get_pvar(SPVAR_15,-100,100,0);
    }    
}
 
//_______________________________________________________________________________________________________________________//
//                    _          ____  _             _   
//    _ __ ___   __ _(_)_ __    / ___|| |_ __ _ _ __| |_ 
//   | '_ ` _ \ / _` | | '_ \   \___ \| __/ _` | '__| __|
//   | | | | | | (_| | | | | |   ___) | || (_| | |  | |_ 
//   |_| |_| |_|\__,_|_|_| |_|  |____/ \__\__,_|_|   \__|
 
main { // main start

  //Crossover

    if(get_controller() != PIO_PS4)
    {
        if(get_console() == PIO_PS4)
        {
            swap(PS4_SHARE,PS4_TOUCH);
            Map_BTN = PS4_TOUCH;
        
                if(get_val(PS4_R3) && event_press(PS4_TOUCH)) 
                {
                    set_val(PS4_SHARE,100);
                    set_val(PS4_TOUCH,0);
                    set_val(PS4_R3,0);
                }
        }
        
        if(get_console() != PIO_PS4)
            Map_BTN = PS4_SHARE;
    }
    else
        Map_BTN = PS4_TOUCH;

//---------------------------------------

  //Check your values in Device Monitor
  
    set_val(TRACE_1,AR[idx][0] + ar_t[idx]);  // Time
    set_val(TRACE_2,AR[idx][1] + ar_s[idx]);  // Starting value
    set_val(TRACE_3,AR[idx][2] + ar_e[idx]);  // Ending value
    set_val(TRACE_4,AR[idx][3] + ar_h[idx]);            // Rate of fire
    set_val(TRACE_6,idx);
   
//---------------------------------------

//Rumble start and restart
	if(run_rumble && !combo_running(Vibrate))
    {
		run_rumble -= 1;
		combo_restart(Vibrate);
	}
	
//---------------------------------------

  //Battery warning
    if(get_battery() <= 1) 
    {
        ms += get_rtime();
 
            if(ms == 10000)
            {
                Rumble (FALSE, 3);
                ms = 0;
            }
    }
    
//---------------------------------------

  //Swap Triggers
    if(R1L1_ONoff) 
    {
        swap(3, 4); 
        swap(6, 7);
    }
    
//---------------------------------------

  //Inverted Axis
    if(Axis_inverted) 
    {
        set_val(PS4_RY, inv(get_val(PS4_RY)));
    } 
    
//---------------------------------------

/* Script Enable/Disable mod (Script enable by defaut)
     Press PS/XBOX or OPTION/MENU or hold L3/LS + click R3/RS to disable ALL FEATURES, press again to enable (Led OFF when disable)
     or
     Quick press Map Button to enable all features
     Long press Map Button to display Map or hold for going Rogue
*/

    if(event_press(PS4_PS) || (!get_val(PS4_L2) && event_press(PS4_OPTIONS)) || (get_val(PS4_L3) && event_press(PS4_R3)))
    { 
        Script_ON=!Script_ON;
        Rumble(Script_ON, 0);
    }
    
    if(!Map)
            set_val(Map_BTN, 0);
            
    if(event_release(Map_BTN))
    {
        if(get_ptime(Map_BTN) <= 100)
        {  
            Script_ON = TRUE;
    		rumble_side= RUMBLE_A;
    		rumble_time = 300;
    		combo_run(Vibrate);
        }  
        
            else
            {
                set_val(Map_BTN, 100);
                
                if(get_ptime(Map_BTN) <= 500)
                {
                    Script_ON = FALSE;
                    Map = TRUE;
         			Rumble(Script_ON, 0);
                }
                    else
                    {
                        Map = FALSE;
                        Script_ON = TRUE;
         				Rumble(Script_ON, 0);
                    }
                
            }
     }
     if(Map && (event_press(PS4_CIRCLE) || event_press(Map_BTN)))
     {
         Map = FALSE;
         Script_ON = TRUE;
         Rumble(Script_ON, 0);
     }

//_______________________________________________________________________________________________________________________//

if(Script_ON)
{ // Script Enable start
//_______________________________________________________________________________________________________________________//

//    _____          _                       
//   |  ___|__  __ _| |_ _   _ _ __ ___  ___ 
//   | |_ / _ \/ _` | __| | | | '__/ _ \/ __|
//   |  _|  __/ (_| | |_| |_| | | |  __/\__ \
//   |_|  \___|\__,_|\__|\__,_|_|  \___||___/


/* Switch weapons
     Press or double tap TRIANGLE/Y 
   Panic Button (Allow you to Switch CronusMAX color witout switching weapon, if your weapon and the assigned color don't go together)
     Hold L3/LS and press TRIANGLE/Y
*/

    if(!get_val(PS4_UP) && event_press(PS4_TRIANGLE) && (!get_val(PS4_DOWN) && !Special_ON || get_lval(PS4_L3)))
    {
        Switch=!Switch; 
        Pistol_ON = FALSE;
        
        if(double_tap) 
          { 
              Pistol_ON = TRUE ; 
              Switch = !Switch;
          }
              else
                  double_tap = 200;// Double tap speed (discrease value to have to double tap faster to switch to side arm)
    }

//---------------------------------------

/* Special Weapon mod (Anti-Recoil and RapidFire disable)
     Hold TRIANGLE/Y (Led color turn WHITE)
*/

    if(get_val(PS4_TRIANGLE) && get_ptime(PS4_TRIANGLE) > 500)
    {
        Special_ON = TRUE;
    }
    
    if(Special_ON && event_press(PS4_TRIANGLE))
    {
         Special_ON = FALSE;
         Switch = !Switch;
    }
    
//---------------------------------------

/* Double Tap function
     For all double tap features
*/

    if(double_tap) 
        double_tap -= get_rtime();
            
//---------------------------------------

/* Strafe Shot
     Strafe to the Right and to the Left while shooting
     Enable or disable with TRUE / FALSE value
     Enable or disable in game:
     Hold CROSS/A + CIRCLE/B and tap D Pad DOWN to enable or disable this feature on the fly
     Controller vibrate
*/

    if((get_val(PS4_CROSS) && get_val(PS4_CIRCLE)) && event_press(PS4_DOWN))
    {
        Strafe_Shot_ON = !Strafe_Shot_ON;
        Rumble(Strafe_Shot_ON, 0);
    }
    
if(Strafe_Shot_ON)
{
    if(get_val(PS4_L2) && get_val(PS4_R2))
        combo_run(Strafe_Shot);
    else
        combo_stop(Strafe_Shot);
}
//---------------------------------------

/* Hair Trigger
     Your triggers are VERY reactive
*/

    deadzone(PS4_L2,PS4_R2,99,99);

//---------------------------------------

    if(!get_val(PS4_L2))
    {
    /* AutoRun press sensitive (Work better when in game option "Press to Sprint" is turned OFF)
     Push your stick to more than 60% to run automatically
    */
    	if(get_val(PS4_LY) < -60)
    	{
        	set_val(PS4_LY, -100);
        	set_val(PS4_L3, 100);
    	}
    	
    //---------------------------------------
    
    /* Dead Zone Correction (Right Stick)
     Fix the DeadZone defect which is never really neutral
	*/
    	if(abs(get_val(PS4_RY)) <= 5 && abs(get_val(PS4_RX)) <= 5 )
    	{
        	set_val(PS4_RY,0);                                                 
        	set_val(PS4_RX,0);
        }
        
    //---------------------------------------
    
    /* Easy MedKit
     Double tap D pad Right to change your armor piece, move Left analog to cancel
    */
    	if(event_press(PS4_RIGHT)) 
    	{
        	if(double_tap)
        	{
           		Button = PS4_RIGHT;
            	combo_run(Hold);
        	}
        
            else
                double_tap = 200;
    	}
	//---------------------------------------
    }
    
    if(Button == PS4_RIGHT && (abs(get_val(PS4_LX)) > 90 || abs(get_val(PS4_LY)) > 90))
		combo_stop(Hold);
    
//---------------------------------------

    if(!get_val(PS4_CIRCLE) && !get_val(PS4_CROSS) && !get_val(PS4_SQUARE) && !get_val(PS4_R3))
    {
        //---------------------------------------

        /* Quick Grenade
             Hold ADS button and press D Pad LEFT or only hold D Pad LEFT to throw a grenade
        */

        if((get_val(PS4_L2) && event_press(PS4_LEFT) || get_val(PS4_LEFT) && get_ptime(PS4_LEFT) > 200))
            combo_run(Grenade);

        //---------------------------------------
        
        /* Burst Fire
             Hold L2/LT and tap D pad RIGHT to enable Burst Fire
             Release L2/LT to disable
        */

        if(get_val(PS4_L2) && event_press(PS4_RIGHT)) 
            Burst_ON = !Burst_ON;
        
                else if(event_release(PS4_L2))
                    Burst_ON = FALSE;
    
        if(get_val(PS4_R2) && Burst_ON)
        {
            hold_time = Burst_Hold;
            rest_time = Burst_Release;
            combo_run(RAPID_FIRE);
        }
        
        //---------------------------------------
    }
    
//---------------------------------------

/* Skill Destroy
     Double tap R1/RB or L1/LB to destroy the active skill assigned to this button
*/

    SkillDestroy (PS4_R1);
    SkillDestroy (PS4_L1);
        
//---------------------------------------
if(!Special_ON)
{ // NOT Special start

/* Anti-Recoil Adjust - by Batts
     Works for Primary, Secondary or SideArm
*/

    if(get_val(PS4_L2)) 
    {
    
/*     Starting Antirecoil value adjust:
        Hold L2/LT + SQUARE/X and: 
         - tap D Pad UP to increase Starting Antirecoil value by 1
         - tap D Pad DOWN to decrease Starting Antirecoil value by 1
         - tap D Pad RIGHT to increase Starting Antirecoil value by 10
         - tap D Pad LEFT to decrease Starting Antirecoil value by 10
*/
        if(get_val(PS4_SQUARE)) 
        {
            if(event_press(PS4_UP))
                ar_s[idx] += 1;          
            if(event_press(PS4_DOWN))
                ar_s[idx] -= 1;    
            if(event_press(PS4_RIGHT))
                ar_s[idx] += 10; 
            if(event_press(PS4_LEFT))
                ar_s[idx] -= 10;
        }
        
/*     Ending Antirecoil value adjust:
        Hold L2/LT + CIRCLE/B and: 
         - tap D Pad UP to increase Ending Antirecoil value by 1
         - tap D Pad DOWN to decrease Ending Antirecoil value by 1
         - tap D Pad RIGHT to increase Ending Antirecoil value by 10
         - tap D Pad LEFT to decrease Ending Antirecoil value by 10
*/
         
        if(get_val(PS4_CIRCLE)) 
        {
            if(event_press(PS4_UP))
                ar_e[idx] += 1;          
            if(event_press(PS4_DOWN))
                ar_e[idx] -= 1;    
            if(event_press(PS4_RIGHT))
                ar_e[idx] += 10; 
            if(event_press(PS4_LEFT))
                ar_e[idx] -= 10;
        } 

/*     Time adjust:
        Hold L2/LT + CROSS/A and: 
         - tap D Pad UP to increase Time value (Time will be in 100ms increments)
         - tap D Pad DOWN to decrease Time value (Time will be in 100ms increments)
*/

        if(get_val(PS4_CROSS)) 
        {
            if(event_press(PS4_UP))
                ar_t[idx] += 1;          
            if(event_press(PS4_DOWN))
                ar_t[idx] -= 1;
        }
        
        if(get_val(PS4_R3))
        {
            if(event_press(PS4_RIGHT))
                ar_h[idx] += 1;          
            if(event_press(PS4_LEFT))
                ar_h[idx] -= 1;
        }

/*     Save new values:
        Hold L2/LT and press OPTION/MENU to save your new values
        Controller vibrate, led flash one time
*/

        if(event_press(PS4_OPTIONS)) 
        {
            set_pvar(SPVAR_1 ,ar_t[0]);  set_pvar(SPVAR_2 ,ar_t[1]); set_pvar(SPVAR_3 ,ar_t[2]);
            set_pvar(SPVAR_4 ,ar_t[3]);  set_pvar(SPVAR_5 ,ar_t[4]); set_pvar(SPVAR_6 ,ar_s[0]);
            set_pvar(SPVAR_7 ,ar_s[1]);  set_pvar(SPVAR_8 ,ar_s[2]); set_pvar(SPVAR_9 ,ar_s[3]);
            set_pvar(SPVAR_10,ar_s[4]);  set_pvar(SPVAR_11,ar_e[0]); set_pvar(SPVAR_12,ar_e[1]);
            set_pvar(SPVAR_13,ar_e[2]);  set_pvar(SPVAR_14,ar_e[3]); set_pvar(SPVAR_15,ar_e[4]);
            set_pvar(SPVAR_16,key);      Rumble(TRUE, 3);         combo_run(Flash);
        }
        
        //Block buttons
        set_val(PS4_OPTIONS,0);  //set_val(PS4_SQUARE,0);
        set_val(PS4_CIRCLE,0);   set_val(PS4_CROSS,0);
        set_val(PS4_UP,0);       set_val(PS4_DOWN,0);
        set_val(PS4_RIGHT,0);    set_val(PS4_LEFT,0);
    }
    
//---------------------------------------

  //Anti-Recoil Feature by Batts :
  
    ar_x = (AR[idx][3] + ar_h[idx]);
  
    if((AR[idx][1] + ar_s[idx]) < (AR[idx][2] + ar_e[idx]))
        i_val = 1; 
    else
        i_val = -1;
    i_pnt = ((AR[idx][0] + ar_t[idx]) * 10) / (abs((AR[idx][1] + ar_s[idx]) - (AR[idx][2] + ar_e[idx]))); 
    

    if(!get_lval(PS4_R2)) 
    {
       ar_y = AR[idx][1] + ar_s[idx];
       i_cnt = 0;
       i_num = 0;
    }   

    if(get_val(PS4_L2) && get_val(PS4_R2))  
    {
		combo_run(X_Val);
		
        if(!p_complete())  
            ar_y = p_val();
        else
            ar_y = AR[idx][2] + ar_e[idx];
            
            if(y_val() < 100)
                set_val(PS4_RY,y_val());
    }
    
    if(abs(get_val(PS4_RX)) > abs(ar_x) + 5)
  	  	combo_stop(X_Val);

//_______________________________________________________________________________________________________________________//
//    _   _                 _                   
//   | | | | __ _ _ __   __| | __ _ _   _ _ __  
//   | |_| |/ _` | '_ \ / _` |/ _` | | | | '_ \ 
//   |  _  | (_| | | | | (_| | (_| | |_| | | | |
//   |_| |_|\__,_|_| |_|\__,_|\__, |\__,_|_| |_|
//                            |___/                
 
if(Pistol_ON) 
{  // Pistol start 

    idx = 4;
    
/* RapidFire with toggle on/off and adjustable on the fly for semi auto weapons like Pistols, Shotguns, Snipers or Rifles (Range between 0 and 25 round per second)
    You can activate RapidFire independently on 3 weapons: primary, or secondary or handgun ... all combinations are possible (primary ON, secondary OFF, Handgun ON ... ... ...)
    When RapidFire is enable, LEDs are flashing

    *Toggle on/off:
     Hold CROSS/A + SQUARE/X and:
      - tap R2/RT to enable or disable this feature in game
      
    *Rate of fire adjust: (only if RapidFire is enable)
     Hold CROSS/A + SQUARE/X and:
      - tap D Pad UP to increase RapidFire value by 1
      - tap D Pad DOWN to decrease RapidFire value by 1
      Controller vibrate when you are at maximum or minimum value
*/
    if(get_val(PS4_CROSS) && get_val(PS4_SQUARE) && event_press(PS4_R2))
    {
        RF_Handgun_ON = !RF_Handgun_ON;
        Rumble(RF_Handgun_ON, 0);
    }
        
    if(RF_Handgun_ON)
    {
        RoF_Handgun = RoF_Adjust(RoF_Handgun); 
        RF (); 
    }
     
}  // Pistol end

//_______________________________________________________________________________________________________________________//
if(!Pistol_ON) 
{  // NOT Pistol start
//_______________________________________________________________________________________________________________________//
 
//    ____       _                                 __ __        __                           _ 
//   |  _ \ _ __(_)_ __ ___   __ _ _ __ _   _     / / \ \      / /__  __ _ _ __   ___  _ __ / |
//   | |_) | '__| | '_ ` _ \ / _` | '__| | | |   / /   \ \ /\ / / _ \/ _` | '_ \ / _ \| '_ \| |
//   |  __/| |  | | | | | | | (_| | |  | |_| |  / /     \ V  V /  __/ (_| | |_) | (_) | | | | |
//   |_|   |_|  |_|_| |_| |_|\__,_|_|   \__, | /_/       \_/\_/ \___|\__,_| .__/ \___/|_| |_|_|
//                                      |___/                             |_|                  

if(!Switch) 
{

    idx = Weapon1;
    
/* Weapon type selection (all combinations are possible in primary weapon and secondary weapon)
     Hold D Pad DOWN and press TRIANGLE/Y to switch between 4 profiles of weapons with color identification
     Controller vibrate
     All combinations are possible in primary weapon and secondary weapon
*/
 
    if(get_val(PS4_UP))
    {
        if(event_press(PS4_TRIANGLE)) 
        {
            Weapon1++;
            Rumble(TRUE, 0);
        }
        
        set_val(PS4_TRIANGLE, 0);
    }
    
    if(Weapon1 > 3) 
    {
        Weapon1 = 0;
    }
    
/* RapidFire with toggle on/off and adjustable on the fly for semi auto weapons like Pistols, Shotguns, Snipers or Rifles (Range between 0 and 25 round per second)
    You can activate RapidFire independently on 3 weapons: primary, or secondary or handgun ... all combinations are possible (primary ON, secondary OFF, Handgun ON ... ... ...)
    When RapidFire is enable, LEDs are flashing

    *Toggle on/off:
     Hold CROSS/A + SQUARE/X and:
      - tap R2/RT to enable or disable this feature in game
      
    *Rate of fire adjust: (only if RapidFire is enable)
     Hold CROSS/A + SQUARE/X and:
      - tap D Pad UP to increase RapidFire value by 1
      - tap D Pad DOWN to decrease RapidFire value by 1
      Controller vibrate when you are at maximum or minimum value
*/
    if(get_val(PS4_CROSS) && get_val(PS4_SQUARE) && event_press(PS4_R2))
    {
        RF_Primary_ON = !RF_Primary_ON;
        Rumble(RF_Primary_ON, 0);
    }
        
    if(RF_Primary_ON)
    { 
        RoF_Primary = RoF_Adjust(RoF_Primary); 
        RF (); 
    }

//---------------------------------------
}	//PRIMARY end

//_______________________________________________________________________________________________________________________//

//    ____                           _                       __ __        __                           ____  
//   / ___|  ___  ___ ___  _ __   __| | __ _ _ __ _   _     / / \ \      / /__  __ _ _ __   ___  _ __ |___ \ 
//   \___ \ / _ \/ __/ _ \| '_ \ / _` |/ _` | '__| | | |   / /   \ \ /\ / / _ \/ _` | '_ \ / _ \| '_ \  __) |
//    ___) |  __/ (_| (_) | | | | (_| | (_| | |  | |_| |  / /     \ V  V /  __/ (_| | |_) | (_) | | | |/ __/ 
//   |____/ \___|\___\___/|_| |_|\__,_|\__,_|_|   \__, | /_/       \_/\_/ \___|\__,_| .__/ \___/|_| |_|_____|
//                                                |___/                             |_|                      

if(Switch) 
{

    idx = Weapon2;
    
/* Weapon type selection (all combinations are possible in primary weapon and secondary weapon)
     Hold D Pad DOWN and press TRIANGLE/Y to switch between 4 profiles of weapons with color identification
     Controller vibrate
     All combinations are possible in primary weapon and secondary weapon
*/
 
    if(get_val(PS4_UP))
    {
        if(event_press(PS4_TRIANGLE)) 
        {
            Weapon2++;
            Rumble(TRUE, 0);
        }
        
        set_val(PS4_TRIANGLE, 0);
    }
    
    if(Weapon2 > 3) 
    {
        Weapon2 = 0;
    }
    
/* RapidFire with toggle on/off and adjustable on the fly for semi auto weapons like Pistols, Shotguns, Snipers or Rifles (Range between 0 and 25 round per second)
    You can activate RapidFire independently on 3 weapons: primary, or secondary or handgun ... all combinations are possible (primary ON, secondary OFF, Handgun ON ... ... ...)
    When RapidFire is enable, LEDs are flashing

    *Toggle on/off:
     Hold CROSS/A + SQUARE/X and:
      - tap R2/RT to enable or disable this feature in game
      
    *Rate of fire adjust: (only if RapidFire is enable)
     Hold CROSS/A + SQUARE/X and:
      - tap D Pad UP to increase RapidFire value by 1
      - tap D Pad DOWN to decrease RapidFire value by 1
      Controller vibrate when you are at maximum or minimum value
*/
    if(get_val(PS4_CROSS) && get_val(PS4_SQUARE) && event_press(PS4_R2))
    {
        RF_Secondary_ON = !RF_Secondary_ON;
        Rumble(RF_Secondary_ON, 0);
    }
        
    if(RF_Secondary_ON)
    { 
        RoF_Secondary = RoF_Adjust(RoF_Secondary); 
        RF (); 
    }
 
//---------------------------------------
}    // SECONDARY end
//_______________________________________________________________________________________________________________________//

}   // NOT Pistol end
//_______________________________________________________________________________________________________________________//

}   // NOT Special end
//_______________________________________________________________________________________________________________________//

}   // Script Enable end
//_______________________________________________________________________________________________________________________//

/*  Block buttons for Panic and L3+R3 on/off
*/
	if(get_lval(PS4_L3))
	{
		set_val(PS4_TRIANGLE, 0);
		set_val(PS4_R3, 0);
	}

  // COLOR INDICATION
    if(!Script_ON) led_color(-3); // OFF
        else if(Special_ON) led_color(7); // WHITE
            else
                led_color(idx);
//_______________________________________________________________________________________________________________________//

}    //main end
//---------------------------------------
//                    _          _____           _ 
//    _ __ ___   __ _(_)_ __    | ____|_ __   __| |
//   | '_ ` _ \ / _` | | '_ \   |  _| | '_ \ / _` |
//   | | | | | | (_| | | | | |  | |___| | | | (_| |
//   |_| |_| |_|\__,_|_|_| |_|  |_____|_| |_|\__,_|
//_______________________________________________________________________________________________________________________//
//_______________________________________________________________________________________________________________________//
//     ____                _           
//    / ___|___  _ __ ___ | |__   ___  
//   | |   / _ \| '_ ` _ \| '_ \ / _ \ 
//   | |__| (_) | | | | | | |_) | (_) |
//    \____\___/|_| |_| |_|_.__/ \___/
 
//----------------------------------------------------- Weapons combos -------------------------------------------------//

combo RAPID_FIRE {
    wait(hold_time);
    set_val(PS4_R2, 0);
    wait(rest_time);
    }

//----------------------------------------------------- Features combos -------------------------------------------------//

combo X_Val { // Antirecoil Horizontal
	x_ref = get_val(PS4_RX) + ar_x;
    if(x_ref > 100) x_ref = 100;
    set_val(PS4_RX, x_ref);
}

//---------------------------------------

combo Strafe_Shot {
    set_val(PS4_LX, 100);
    wait(Strafe_Shot_Time); // Time to run to the right
    wait(50);
    set_val(PS4_LX, -100);
    wait(Strafe_Shot_Time); // Time to run to the left
    wait(50);
    }

//---------------------------------------

combo Grenade {
    set_val(PS4_LEFT, 100);
    wait(20);
    wait(800);
    set_val(PS4_R2, 100);
    wait(100);
    set_val(PS4_L2, 0);
    wait(10);
    }

//---------------------------------------

combo Hold {
    set_val(Button, 100);
    wait(2500);
    }

//---------------------------------------

combo Vibrate {
    set_rumble(rumble_side, 100);
    wait(rumble_time);
    reset_rumble();
    wait(100);
    }
    
//---------------------------------------

combo Flash {
    wait(300);
    led_color(-3);
    wait(500);
    }
    
//_______________________________________________________________________________________________________________________// 
//    _____                 _   _             
//   |  ___|   _ _ __   ___| |_(_) ___  _ __  
//   | |_ | | | | '_ \ / __| __| |/ _ \| '_ \ 
//   |  _|| |_| | | | | (__| |_| | (_) | | | |
//   |_|   \__,_|_| |_|\___|\__|_|\___/|_| |_|

 
function RoF_Adjust (RoF_ID){
    if(get_val(PS4_CROSS) && get_val(PS4_SQUARE))
    {
        if(event_press(PS4_UP))
            RoF_ID +=1;
        if(event_press(PS4_DOWN))
            RoF_ID -=1;
        set_val(PS4_CROSS, 0);  set_val(PS4_SQUARE, 0);
        set_val(PS4_UP, 0);     set_val(PS4_DOWN, 0);
        
    
        if(RoF_ID > 25)
        {
            RoF_ID = 25;  
            Rumble(TRUE, 0);
        }
        if(RoF_ID < 1)
        {
            RoF_ID = 1;  
            Rumble(TRUE, 0);
        }
    }
    RATE_OF_FIRE = RoF_ID;
    return RoF_ID;
}

//---------------------------------------

function RF () {
  //RoF Calculation
    hold_time = 500 / RATE_OF_FIRE;
    rest_time = hold_time - 20;
    if(rest_time < 0) rest_time = 0;
    
    combo_run(Flash);
    
     if(get_val(PS4_R2))
        combo_run(RAPID_FIRE);
        else 
            combo_stop(RAPID_FIRE);
}

//---------------------------------------

function SkillDestroy (f_btn){
    if(event_press(f_btn)) 
    {
        if(double_tap)
        {
            Button = f_btn;
            combo_run(Hold);
        }
            else
                double_tap = 200;
    }
}

//---------------------------------------

function Rumble (f_var, f_num) {
    if(f_var)						
 	{
 		if(!f_num)
			run_rumble = 1;
			else
				run_rumble = f_num;
		
		rumble_side = RUMBLE_A;
		rumble_time = 300;
		set_ledx(2, 1);
	}
		else 
		{
 			if(!f_num)
				run_rumble = 2;
				else
					run_rumble = f_num;
				
    		rumble_side= RUMBLE_B;
    		rumble_time = 150;
    		set_ledx(1, 2);
    	}
}
//---------------------------------------

// Antirecoil by Batts
function p_complete() { 
    i_cnt++;
    if (i_cnt > (AR[idx][0] + ar_t[idx]) * 10) 
    {
        i_cnt = (AR[idx][0] + ar_t[idx]) * 10;
        return 1;
    }
    return 0;
}

//---------------------------------------

function p_val() {
    i_num++;
    if(i_num == i_pnt) 
    {
        i_num = 0;
        ar_y += i_val;
    }
    return ar_y;
}

//---------------------------------------

function y_val() {
    v = get_val(10);
    if(abs(v) < 10)
        v = 0;
    if(abs(v) > ar_y + 5)
        return v;
    return v + ar_y;           
}

//---------------------------------------

function led_color(f_color) {
   for(i = 0; i <= 3; i++) 
   {
     set_led(i,dbyte((f_color * 4) + i));
   }
}

//    _____           _ 
//   | ____|_ __   __| |
//   |  _| | '_ \ / _` |
//   | |___| | | | (_| |
//   |_____|_| |_|\__,_|