/*     
                                                                                             
 █████╗ ██╗   ██╗██╗  ██╗███████╗ ██████╗██████╗ ██╗██████╗ ████████╗    ██╗   ██╗██╗██████╗ 
██╔══██╗██║   ██║╚██╗██╔╝╚══███╔╝██╔════╝██╔══██╗██║██╔══██╗╚══██╔══╝    ██║   ██║██║██╔══██╗
███████║██║   ██║ ╚███╔╝   ███╔╝ ██║     ██████╔╝██║██████╔╝   ██║       ██║   ██║██║██████╔╝
██╔══██║██║   ██║ ██╔██╗  ███╔╝  ██║     ██╔══██╗██║██╔═══╝    ██║       ╚██╗ ██╔╝██║██╔═══╝ 
██║  ██║╚██████╔╝██╔╝ ██╗███████╗╚██████╗██║  ██║██║██║        ██║        ╚████╔╝ ██║██║     
╚═╝  ╚═╝ ╚═════╝ ╚═╝  ╚═╝╚══════╝ ╚═════╝╚═╝  ╚═╝╚═╝╚═╝        ╚═╝         ╚═══╝  ╚═╝╚═╝     

- 𝙒𝙚𝙡𝙘𝙤𝙢𝙚 𝙩𝙤 𝙩𝙝𝙚 𝘼𝙪𝙭𝙯𝙘𝙧𝙞𝙥𝙩 𝙑𝙄𝙋 𝙎𝙘𝙧𝙞𝙥𝙩
- 𝙏𝙝𝙞𝙨 𝙞𝙨 𝙑𝙚𝙧𝙨𝙞𝙤𝙣 1.0 (𝙋𝙪𝙗𝙡𝙞𝙘 𝙍𝙚𝙡𝙚𝙖𝙨𝙚)
- 𝙈𝙚𝙨𝙨𝙖𝙜𝙚 𝙢𝙚 𝙛𝙤𝙧 𝙩𝙝𝙚 𝙨𝙚𝙩𝙩𝙞𝙣𝙜𝙨 𝙮𝙤𝙪 𝙣𝙚𝙚𝙙 𝙩𝙤 𝙪𝙨𝙚 𝙩𝙝𝙞𝙨 𝙨𝙘𝙧𝙞𝙥𝙩 𝙤𝙣
- 𝙏𝙝𝙖𝙣𝙠 𝙮𝙤𝙪 𝙛𝙤𝙧 𝙟𝙤𝙞𝙣𝙞𝙣𝙜 𝙑𝙄𝙋 - 𝙥𝙡𝙚𝙖𝙨𝙚 𝙚𝙣𝙟𝙤𝙮 𝙮𝙤𝙪𝙧 𝙗𝙚𝙣𝙚𝙛𝙞𝙩𝙨 ;)

═════════════════════════════
-- 𝐒𝐞𝐜𝐭𝐢𝐨𝐧 𝟏: 𝐂𝐮𝐬𝐭𝐨𝐦𝐢𝐬𝐚𝐛𝐥𝐞 --
═════════════════════════════
*/

//Aim Assists
int HipFireVIP = 7;              //Hip-Fire Aim Assist Positive Strength
int HipFireVIP2 = -7;          //Hip-Fire Aim Assist Negative Strength

int AimingVIP = 15;         //ADS Aim Assist Positive Strength
int AimingVIP2 = -15;     //ADS Aim Assist Positive Strength

int DynaShootVIP = 13;      //Shooting Aim Assist Positive Strength
int DynaShootVIP2 = -13;  //Shooting Aim Assist Negative Strength

int Delay = 10;                 //Delay until restart Aim Exploit (ms)
int Release = 6;                //Release until restart Aim Exploit (ms)

//Anti-Recoil
int AntiRecoil_Ver = 20;         //Anti Recoil Vertical Strength
int AntiRecoil_Hor = 0;         //Anti Recoil Horizontal Strength
int AntiRecoil_Invert = 1;      //Change 1 to -1 If you play with Inverted
int ARS;

//Sniper Assistance
int HoldBreath
int ScopeCorrection

/*
═════════════════════════════
-- 𝐒𝐞𝐜𝐭𝐢𝐨𝐧 𝟐: 𝐌𝐚𝐢𝐧 𝐁𝐥𝐨𝐜𝐤 --
═════════════════════════════
*/

main{

if(get_val(7)) combo_run(ZenS);

if(get_val(4)) combo_run(ZenS2);
    
if(get_val(7) && get_val(4))
    combo_run(AntiRecoil_Ver);
if(abs(get_val(10)) > AntiRecoil_Ver + 2 || abs(get_val(9)) > AntiRecoil_Ver + 2) {
    combo_stop(AntiRecoil_Ver);}
    
if((get_val(7)) >= 95) {
    set_val(8, 100);
    }
    combo_run(ZenX);}
    
/*
═════════════════════════════
-- 𝐒𝐞𝐜𝐭𝐢𝐨𝐧 𝟑: 𝐂𝐨𝐦𝐛𝐨𝐬 + 𝐅𝐮𝐧𝐜𝐭𝐢𝐨𝐧𝐬 --
═════════════════════════════
*/

combo ZenX { 
    set_val(10,a_f(10,HipFireVIP));
    wait(Delay)
    set_val(9,a_f(9,HipFireVIP));
    wait(Delay)
    set_val(10,a_f(10,HipFireVIP2));
    wait(Delay)
    set_val(9,a_f(9,HipFireVIP2));
    wait(Delay)}
    
combo ZenS { 
    set_val(10,a_f(10,AimingVIP));
    wait(Delay)
    set_val(9,a_f(9,AimingVIP));
    wait(Delay)
    set_val(10,a_f(10,AimingVIP2));
    wait(Delay)
    set_val(9,a_f(9,AimingVIP2));
    wait(Delay)}
    
combo ZenS2 { 
    set_val(10,a_f(10,DynaShootVIP));
    wait(Delay)
    set_val(9,a_f(9,DynaShootVIP));
    wait(Delay)
    set_val(10,a_f(10,DynaShootVIP2));
    wait(Delay)
    set_val(9,a_f(9,DynaShootVIP2));
    wait(Delay)}
    
combo AntiRecoil_Ver {
    ARS = get_val(10) + AntiRecoil_Ver;
    if(ARS > 100) ARS = 100;
    set_val(10,ARS * AntiRecoil_Invert);
    ARS = get_val(9) + AntiRecoil_Hor;
    if(ARS > 100) ARS = 100;
    set_val(9,ARS);}
 
function a_f(p,m) {
if(abs(get_val(p)) < Release)
return m;
return get_val(p);}