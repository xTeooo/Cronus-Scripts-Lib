/*
 
████████╗██╗░░██╗███████╗  ███╗░░░███╗███████╗░██████╗░██╗░░░░░░█████╗░██████╗░░█████╗░███╗░░██╗
╚══██╔══╝██║░░██║██╔════╝  ████╗░████║██╔════╝██╔════╝░██║░░░░░██╔══██╗██╔══█▒█╗██╔══██╗████╗░██║
░░░██║░░░███████║█████╗░░  ██╔████╔██║█████╗░░██║░░██╗░██║░░░░░███████║██║░░██║██║░░██║██╔██╗██║
░░░██║░░░██╔══██║██╔══╝░░  ██║╚██╔╝██║██╔══╝░░██║░░╚██╗██║░░░░░██╔══██║██║░░██║██║░░██║██║╚████║
░░░██║░░░██║░░██║███████╗  ██║░╚═╝░██║███████╗╚██████╔╝███████╗██║░░██║██████╔╝╚█████╔╝██║░╚███║
░░░╚═╝░░░╚═╝░░╚═╝╚══════╝  ╚═╝░░░░░╚═╝╚══════╝░╚═════╝░╚══════╝╚═╝░░╚═╝╚═════╝░░╚════╝░╚═╝░░╚══╝                                                                           
                                                                                                                                                                                     
                      ░░░░░░░░    ░░  ░░░░  ░░░░░░██████████████  ░░░░    ░░                      
                      ░░  ░░      ░░    ░░  ██████▒▒▓▓▒▒▓▓▒▒▓▓██  ░░    ░░                        
                        ░░░░      ░░    ░░▓▓▒▒▒▒▓▓▒▒▒▒▓▓████▓▓  ░░░░      ░░                      
                            ██████████████▒▒▒▒▒▒▒▒▒▒▒▒██                                          
                    ████████▓▓▒▒▒▒▓▓▒▒▓▓▒▒▒▒▒▒▒▒▒▒▒▒██                                            
                ████▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒████                                          
            ████▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓████▒▒                                    
          ██▓▓▒▒▒▒▒▒▒▒▒▒▓▓██▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓████                                
        ██▓▓▒▒▒▒▒▒▒▒▒▒▓▓▒▒▓▓██▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓▓▓████                            
      ██▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒██▒▒▒▒██▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓▒▒████                        
    ██▒▒▒▒▒▒▒▒████▒▒▒▒▒▒▓▓██▒▒██▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓▓▓██                      
  ██▒▒▒▒▒▒▒▒██░░▒▒▒▒▒▒██▒▒██▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓██                    
  ██▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒████▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒██  ████████████████
░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒██░░██▒▒▒▒▒▒██▒▒▒▒▒▒▒▒██▒▒░░░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓██▓▓▓▓▓▓▓▓▓▓▓▓▒▒██
██▒▒▒▒▒▒▒▒▒▒██████░░██▒▒░░░░░░██▒▒▒▒▒▒▒▒▒▒██░░▒▒████████████████████▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒████  
  ██████████░░░░░░██░░▒▒░░░░▒▒░░██▒▒▒▒▒▒▒▒██████                    ████████▒▒▒▒▒▒▒▒▒▒▓▓████      
        ██████████▒▒▒▒░░▒▒░░████  ██▒▒▒▒▒▒██                                ██▒▒▒▒▒▒▒▒██          
          ██░░░░▒▒░░░░██████        ██▒▒▒▒▒▒██                              ██▒▒▒▒▒▒██            
            ████▓▓████                ▓▓██▒▒██                              ██▒▒▒▒██              
                                          ████                              ██▒▒▒▒██              
                                                                              ██▒▒██              
                                                                              ██▒▒██              
                                                                                ████              
███╗░░░███╗░█████╗░██████╗░███████╗  ██████╗░██╗░░░██╗█╔╝░
██║╚██╔╝██║██╔══██║██║░░██║██╔══╝░░  ██╔══██╗░░╚██╔╝░░
██║░╚═╝░██║██║░░██║██████╔╝███████╗  ██████╦╝░░░██║░░░
╚═╝░░░░░╚═╝╚═╝░░╚═╝╚═════╝░╚══════╝  ╚═════╝░░░░╚═╝░░░

██╗░░░██╗░█████╗░███╗░░██╗░██████╗░███████╗███████╗████████╗░█████╗░
██║░░░██║██╔══██╗████╗░██║██╔════╝░██╔════╝╚════██║╚══██╔══╝██╔══██╗
╚██╗░██╔╝███████║██╔██╗██║██║░░██╗░█████╗░░░░███╔═╝░░░██║░░░██║░░██║
░╚████╔╝░██╔══██║██║╚████║██║░░╚██╗██╔══╝░░██╔══╝░░░░░██║░░░██║░░██║
░░╚██╔╝░░██║░░██║██║░╚███║╚██████╔╝███████╗███████╗░░░██║░░░╚█████╔╝              
░░░╚═╝░░░╚═╝░░╚═╝╚═╝░░╚══╝░╚═════╝░╚══════╝╚══════╝░░░╚═╝░░░░╚════╝░
┈╱▔▔▔▔▔▔▔▔╲┈┈┈┈ 
████╗░████║██╔══██╗██╔══██╗██╔════╝  ██╔══██╗╚██╗░██╔╝
██╔████╔██║███████║██║░░██║█████╗░░  ██████╦╝░╚███
╱▔▔▔▔▔▔▔▔╲╱┈┈┈┈
▏┳╱╭╮┓┏┏┓▕╱▔▔╲┈
▏┃╱┃┃┃┃┣▏▕▔▔╲╱▏
▏┻┛╰╯╰╯┗┛▕▕▉▕╱╲
▇▇▇▇▇▇▇▇▇▇▔▔▔╲▕
▇▇╱▔╲▇▇▇▇▇╱▔╲▕╱                
┈┈╲▂╱┈┈┈┈┈╲▂╱▔┈
Welcome To vangezto script!
 ░▒▓█ 𝙁𝙀𝘼𝙏𝙐𝙍𝙀𝙎  █▓▒░
|||||||||||||||||||||||||||||||||||||||||||                               
||1-Shoot Power                          ||
||2-Shooting at 90 degree                ||
||3-pass power                           ||
||4- SKILLS                              ||      
||5-DEFENCE TRACKING                     ||
||6-PENALTY SCRIPT                       ||
||7- low driven shot                     ||
||||||||||||||||||||||||||||||||||||||||||| 
!!!!!!!ATTENTION PLEASE!!!!!!
HOW TO USE ?
-------------------------------------------------|
1- ((CIRCLE)) FOR SHOOTING INSIDE THE BOX        |
2- ((R1)) FOR SHOOTING FROM OUTSIDE THE BOX      
3- ((R3)) FOR STRONG PASS                        |
4- ((SQUARE)) FOR TACKLING                       |
5- ((L2)) TO TRACK WHILE DEFENDING               | 
6- ((OPTION+L1)) TO ACTIVE PENALTY SCRIPT AND    |
    CHOOSE DIRECTIONS FROM DPAD DONT FORGET TO   |
    TURN IT OFF AFTER FINISHING BY USING THE SAME|
    BUTTONS                                      |
7- low driven shot using touch pad     
|9- ((Touchpad)) lob shoot
-------------------------------------------------|
YOU SHOULD CHANGE THE IN GAME SETTINGS
DONT FORGET!
ATTENTION!!
_______________________________________
EACH SCRIPT HAVE A SERIAL NUMBER      |
SO IF THIS SCRIPT IS SHARED IN PUPLIC |
I WILL KNOW THE SERIAL  AND PREVENT   |
SENDING THE FREE UPDATES TO THE OWNER |
AND WILL BE BANNED FROM THE GROUP     |
______________________________________|

_░▒███████
░██▓▒░░▒▓██
██▓▒░__░▒▓██___██████
██▓▒░____░▓███▓__░▒▓██
██▓▒░___░▓██▓_____░▒▓██
██▓▒░_______________░▒▓██
_██▓▒░______________░▒▓██
__██▓▒░____________░▒▓██
___██▓▒░__________░▒▓██
____██▓▒░________░▒▓██
_____██▓▒░_____░▒▓██
______██▓▒░__░▒▓██
_______█▓▒░░▒▓██
_________░▒▓██
_______░▒▓██
_____░▒▓██

*/
int NORMALSHOTPOWER=224;// range 220-225  bro thats the heigt of normal shot okay? but that is height of normal shot
int FINESSE_POWER=175;// range 160 to 175 and finesse  on max power no need to change it cause tthats  the power not  aheight so max power  is good
/*
█████████████████████████▀████████████████████████
█▄─█─▄██▀▄─██▄─▀█▄─▄█─▄▄▄▄█▄─▄▄─█░▄▄░▄█─▄─▄─█─▄▄─█
██▄▀▄███─▀─███─█▄▀─██─██▄─██─▄█▀██▀▄█▀███─███─██─█
▀▀▀▄▀▀▀▄▄▀▄▄▀▄▄▄▀▀▄▄▀▄▄▄▄▄▀▄▄▄▄▄▀▄▄▄▄▄▀▀▄▄▄▀▀▄▄▄▄▀
*/ 
define timelimit     = 200; // vangezto 
define PaceCtrol     = 7; // vangezto
define PlayerRun     = 6; // vangezto  
define FinesseShot   = 3; // vangezto
define ShotBtn    = 18; // vangezto
define SprintBtn     = 4; // vangezto
define PassBtn       = 19; // vangezto 
define MOVE_X        = 11; // vangezto        
define MOVE_Y        = 12;   // vangezto      
define SKILL_STICK_X = 9;    // vangezto     
define SKILL_STICK_Y = 10;  // vangezto  
define DOnotUSE      =   1; // vangezto 
define DelayNormal   =  80; // vangezto 
define DelayRnbwHOLD = 160; // vangezto 
define DeyRest     = 200; // vangezto 
define DeyLeft_move= 500; // vangezto 
                                                         
/*
█████████████████████████▀████████████████████████
█▄─█─▄██▀▄─██▄─▀█▄─▄█─▄▄▄▄█▄─▄▄─█░▄▄░▄█─▄─▄─█─▄▄─█
██▄▀▄███─▀─███─█▄▀─██─██▄─██─▄█▀██▀▄█▀███─███─██─█
▀▀▀▄▀▀▀▄▄▀▄▄▀▄▄▄▀▀▄▄▀▄▄▄▄▄▀▄▄▄▄▄▀▄▄▄▄▄▀▀▄▄▄▀▀▄▄▄▄▀
*/
define FAKE_SHOT_SKILL                 = 1;// Fake Shot                    
define HEEL_TO_HEEL_FLICK_SKILL        = 2;// Heel to Heel                 
define HEEL_FLICK_TURN_SKILL           = 3;// R1 + Heel to Heel            
define RAINBOW_SKILL                   = 4;// Simple Rainbow               
define DRAG_BACK_SOMBRERO_SKILL        = 5;// Drag Back + R3 press         
define FAKE_PASS_SKILL                 = 6;// R2 + Fake Shot               
define DRAG_BACK_UNIVERSAL_SKILL       = 7;// hold R1, LS down              
define STEP_OVER_FEINT_SKILL           = 8;//                               
define DRAG_TO_DRAG_SKILL              = 9;// L2 + Fake Shot + LS zero      
define HOCUS_POCUS_SKILL               =10;// RS D to L, half circle L to R 
define TRIPLE_ELASTICO_SKILL           =11;// RS D to R, half circle R to L 
define ELASTICO_SKILL                  =12;// half circle from R to L       
define REVERSE_ELASTICO_SKILL          =13;// half sircle from L to R       
define CRUYFF_TURN_SKILL               =14;// Fake Shot + LS down           
//--------------------------------------------------------------            
define LA_CROQUETA_SKILL               =15;// L1 + RS                         
define RONALDO_CHOP_SKILL              =16;// L2 + Fake Shot                 
define ROULETTE_SKILL                  =17;// Roulette                       
define FIR_ROULETTE_SKILL            =18;// L1 + Roulette                  
define BALL_ROLL_SKILL                 =19;// Ball Roll                     
define BERBA_MCGEADY_SPIN_SKILL        =20;// RS Up , <-/->                  
define BOLASIE_FLICK_SKILL             =21;// R1 + BERBA Spin                 
define TORNADO_SKILL                   =22;// L1 + Berba Spin                  
define THREE_TOUCH_ROULETTE_SKILL      =23;// L2 + RS Down, <-/->               
define ALTERNATIVE_ESTICO_CHOP_SKILL =24;// R1 + RS Down, <-/->                 
define BALL_ROLL_CHOP_SKILL            =25;// hold RS <-/ hold RS ->                
define FEINT_AND_EXIT_SKILL            =26;// hold L1 + RS half circle from L to R / from R to L 
define FEINT_L_EXIT_R_SKILL            =27;// RS half circle from L to R / from R to L 
define TERAL_HEEL_TO_HEEL_SKILL      =28;//  L1 + RS <-/->
define WAKA_WAKA_SKILL                 =29;// WAKA WAKA 
define BODY_FEINT_SKILL                =30;// BODY FEINT 
define DRAG_TO_HEEL                    =31;// Drag to Heel move  
define BALL_ROLL_FAKE_TURN             =32;// Ball Roll Fake Turn : L2 + Berba Spin
define FEINT_FORWARD_AND_TURN          =33;// Feint Forward & Turn : RS double down
define TURN_BACK                       =34;// Turn Back                          
define ADVANCED_CROQUETA               =35;// Advanced Croqueta                  
define CAYqLnTTThKqhV4npsciGstSpAa1XdkrrBP=36;                              
define REVERSE_STEP_OVER_SKILL         =37;// Reverse Step Over         
define FAKE_DRAG_BACK_SKILL            =38;// Fake Drag Back
define RAINBOW_TO_SCORPION_KICK_SKILL  =39;  
define STEP_OVER_BOOST_SKILL          =40;  
define CANCEL_SHOOT_SKILL              =41;  /*
█████████████████████████▀████████████████████████
█▄─█─▄██▀▄─██▄─▀█▄─▄█─▄▄▄▄█▄─▄▄─█░▄▄░▄█─▄─▄─█─▄▄─█
██▄▀▄███─▀─███─█▄▀─██─██▄─██─▄█▀██▀▄█▀███─███─██─█
▀▀▀▄▀▀▀▄▄▀▄▄▀▄▄▄▀▀▄▄▀▄▄▄▄▄▀▄▄▄▄▄▀▄▄▄▄▄▀▀▄▄▄▀▀▄▄▄▄▀
*/ 
int ACTIVE;                                     
int SKILL ;  
int LX, LY;               
int right_on ;                            
int w_rstick  = 50;                        
int OnOffMods = TRUE;                            
int Sombrero;     
int btn_tap;     
int tap;     
int flick_up; 
int flick_d;  
int flick_l;  
int flick_r;
int Finesse =TRUE    
int RightON   =FALSE;                            
int Estico  =FALSE;                            
int time_to_DblClick_R=0;                      
int time_to_DblClick_L=0;                      
int IndL=0;         
int IndR_L=0;       
int Ind=0;                        
int Zone;          
int temp_Zone;                                               
int mX,mY;                                     
int OnOff =TRUE;                                                            
int Points=0;                                 
int ZX, ZY;
int vangezto1=100; 
int vangezto2=200;
int vangezto3=470;
int vangezto4=222;
int vangezto5=220;
int vangezto6=1;
int vangezto7=0;
int vangezto8=9999;
int vangezto9=20;
int vangezto10=5;
int vangezto11=160;  
int vangezto12=215;
int vangezto13=60;
int vangezto14=220;
int vangezto99=200;
int vangezto87=120;
int vangezto2222 = 220;
int vangeztobaby=999;
int normalpowerheight=217  
int HEIGHT_OF_FINESSE_SHOT=1600; 
int w_AdvancedEstico =10;                    
int SKill ;                                                                                                                                            
int PassPower    = 80; 
int hold_btn=200   
define UP         = 0;  
define UP_RIGHT   = 1;  
define RIGHT      = 2;  
define DOWN_RIGHT = 3;  
define DOWN       = 4;  
define DOWN_LEFT  = 5;  
define LEFT       = 6;  
define UP_LEFT    = 7;  
int dTemp, dStart, dMid, dEnd;

/*
█████████████████████████▀████████████████████████
█▄─█─▄██▀▄─██▄─▀█▄─▄█─▄▄▄▄█▄─▄▄─█░▄▄░▄█─▄─▄─█─▄▄─█
██▄▀▄███─▀─███─█▄▀─██─██▄─██─▄█▀██▀▄█▀███─███─██─█
▀▀▀▄▀▀▀▄▄▀▄▄▀▄▄▄▀▀▄▄▀▄▄▄▄▄▀▄▄▄▄▄▀▄▄▄▄▄▀▀▄▄▄▀▀▄▄▄▄▀
*/ 
main {  
if(get_val(PS4_L2)&& event_press(PS4_UP))    .
 load_slot(2); 
if(get_val(FinesseShot)) set_val(SprintBtn,vangezto7);       
if(get_val(ShotBtn)) set_val(SprintBtn,vangezto7);   
if(get_val(PS4_TOUCH))set_val(SprintBtn,vangezto7)
if(get_val(PS4_R3))set_val(SprintBtn,vangezto7)


 

if(event_press(FinesseShot) ){                                                      
    	 if(event_press(ShotBtn)  > 200 )
    		set_val(ShotBtn,vangezto7);                           
    }    

 if(get_val(ShotBtn) > 200) {  
              set_val(ShotBtn,  vangezto7);                                               
      }   

 if(get_val(ShotBtn)) {         
       if(event_press(ShotBtn)  > 200 ) 
    		set_val(ShotBtn,vangezto7);                           
    }        
                                                                                                                                                                                                                          
    if(event_press (PS4_R3)){
    		combo_run(Timed_Finesse_Finish);
    		combo_run(ALGA7ED); 	
    		     		      		
    	}              
                 
          
            
    	if(event_press(ShotBtn)){
     		    combo_run(vangeztofinish); 
     		    set_val(ShotBtn,vangezto7);
     		  
    	}   
    	   	    		   	
    	 if (event_press(PassBtn)) {   
        combo_run(PASS); }  
              
        
        	if(get_val(SprintBtn)&& event_press(PS4_DOWN)){  
				combo_run(SPEED_BOOST_VANGEZTO); 
				combo_run(sprintbutton);
					  set_val(SprintBtn,vangezto7); 
					 
			}    			
			
   
        
 if (event_press(PS4_TOUCH)) combo_run(LOBAVANGEZTO);



                          
	  /*
█████████████████████████▀████████████████████████
█▄─█─▄██▀▄─██▄─▀█▄─▄█─▄▄▄▄█▄─▄▄─█░▄▄░▄█─▄─▄─█─▄▄─█
██▄▀▄███─▀─███─█▄▀─██─██▄─██─▄█▀██▀▄█▀███─███─██─█
▀▀▀▄▀▀▀▄▄▀▄▄▀▄▄▄▀▀▄▄▀▄▄▄▄▄▀▄▄▄▄▄▀▄▄▄▄▄▀▀▄▄▄▀▀▄▄▄▄▀
*/     
	 if(abs(get_val(MOVE_X))> 60 || abs(get_val(MOVE_Y))> 60){   
	       LX = get_val(MOVE_X);                                      
	       LY = get_val(MOVE_Y);                                      
    }    
    
 if(get_val(PS4_L3)) { // all Skills mode                
                                                     
	      //  Right Stick -->  UP                          
	      if( get_val(PS4_RY) < -70  && !flick_up ) {   
	      		 flick_up = TRUE;                          
            right_on = FALSE; dEnd = LEFT;        
	      	  ACTIVE =  WAKA_WAKA_SKILL; combo_run(WAKA_WAKA);  // 29. WAKA WAKA
	      }                                              
	      //  Right Stick -->  DOWN                               
	      if( get_val(PS4_RY) >  70  && !flick_d ) {     
	      		flick_d = TRUE;                            
	      		right_on = TRUE; dEnd = RIGHT;     
	      	  ACTIVE = BOLASIE_FLICK_SKILL; combo_run(TURN_AND_SPIN);  // 21. BOLASIE_FLICK_SKILL
	      }                                               
                                                        
	      //  Right Stick --> LEFT                                
	      if( get_val(PS4_RX) < -70  && !flick_l ) {     
	      		flick_l = TRUE;                             
	      		right_on = FALSE;dEnd = LEFT;             
	      		ACTIVE = STEP_OVER_BOOST_SKILL ; combo_run(BOOSTED_STEPOVER);
	      }                                               
                                                        
	      // Right Stick --> RIGHT                                   
	      if( get_val(PS4_RX) >  70  && !flick_r ) {      
	      		flick_r = TRUE;                             
	      		right_on = TRUE; dEnd = RIGHT;           
	      		 ACTIVE = REVERSE_ELASTICO_SKILL; combo_run(REVERSE_ELASTICO);  // 13. REVERSE_ELASTICO_SKILL
	      }                                                
                                                         
                                                          
        if(abs(get_val(PS4_RY))<20  && abs(get_val(PS4_RX))<20){  
	     		  flick_up = 0;                                 
	     		  flick_d  = 0;                                 
	     		  flick_l  = 0;                                 
	     		  flick_r  = 0;                                 
        }                                              
        set_val(SKILL_STICK_X,0); 
        set_val(SKILL_STICK_Y,0); 
    }// end of modifier button  
                                                
      if(ACTIVE == BOLASIE_FLICK_SKILL && combo_running(TURN_AND_SPIN)) set_val(FinesseShot,100);// + R1
    // all Skills mode                
   //--------------------------------------------------------------
} // end of main block   
/*
█████████████████████████▀████████████████████████
█▄─█─▄██▀▄─██▄─▀█▄─▄█─▄▄▄▄█▄─▄▄─█░▄▄░▄█─▄─▄─█─▄▄─█
██▄▀▄███─▀─███─█▄▀─██─██▄─██─▄█▀██▀▄█▀███─███─██─█
▀▀▀▄▀▀▀▄▄▀▄▄▀▄▄▄▀▀▄▄▀▄▄▄▄▄▀▄▄▄▄▄▀▄▄▄▄▄▀▀▄▄▄▀▀▄▄▄▄▀
*/
                      
 
/*
█████████████████████████▀████████████████████████
█▄─█─▄██▀▄─██▄─▀█▄─▄█─▄▄▄▄█▄─▄▄─█░▄▄░▄█─▄─▄─█─▄▄─█
██▄▀▄███─▀─███─█▄▀─██─██▄─██─▄█▀██▀▄█▀███─███─██─█
▀▀▀▄▀▀▀▄▄▀▄▄▀▄▄▄▀▀▄▄▀▄▄▄▄▄▀▄▄▄▄▄▀▄▄▄▄▄▀▀▄▄▄▀▀▄▄▄▄▀
*/
 combo SPEED_BOOST_VANGEZTO {     
	LA(0,0);               
	wait(50);               
	set_val(SprintBtn,vangezto2);
	wait(1);           
}    
   combo agille2{
      set_val(FinesseShot,100);
     set_val(PS4_LY,100) //DOWN 
    wait(vangezto2);   
    set_val(FinesseShot,100);
     set_val(PS4_LY,-100)//Up	
       wait(vangezto2);
} 
 combo PASS {          
set_val(PassBtn,vangezto1)  
wait(PassPower);      
}
combo sprintbutton {              
	wait(w_rstick);        
	RA_UP();       // up   
	wait(w_rstick);        
	wait(w_rstick);        
	RA_UP();       // up   
	wait(w_rstick);    
	wait(w_rstick);        
	RA_UP();       // up   
	wait(w_rstick);  
	wait(w_rstick);        
 
} 
/*
█████████████████████████▀████████████████████████
█▄─█─▄██▀▄─██▄─▀█▄─▄█─▄▄▄▄█▄─▄▄─█░▄▄░▄█─▄─▄─█─▄▄─█
██▄▀▄███─▀─███─█▄▀─██─██▄─██─▄█▀██▀▄█▀███─███─██─█
▀▀▀▄▀▀▀▄▄▀▄▄▀▄▄▄▀▀▄▄▀▄▄▄▄▄▀▄▄▄▄▄▀▄▄▄▄▄▀▀▄▄▄▀▀▄▄▄▄▀
*/
combo LOBAVANGEZTO {
	set_val(6, vangezto1);
	wait(vangezto9); 
	set_val(6, vangezto1);
	set_val(18, vangezto1);
	wait(150);
	set_val(6, vangezto1);
	set_val(18, vangezto7);
	wait(150);
	set_val(6, vangezto7);
}
combo VANGEZTODRIVEN { 
    set_val(ShotBtn, 1600);    
    wait(vangezto12);    
    set_val(ShotBtn,1600);  
    wait(vangezto12); 
           
}
combo DRIVEN_SHOT  { 
wait(vangezto9);
   set_val(FinesseShot,100); 
   set_val(PlayerRun,100);   
   set_val(ShotBtn,100);     
   wait(390);
} 
  combo vangeztofinish2 { 
	wait(20);
    set_val(ShotBtn, 210);             
    wait(vangezto2222);  
    set_val(ShotBtn, 0);             
    wait(vangezto2222);  
    set_val(ShotBtn, 210);             
    wait(vangezto2222);  
    set_val(ShotBtn, 0);  
    }
  combo vangeztofinish {
    set_val(ShotBtn, vangezto8);             
    wait(NORMALSHOTPOWER);  
    set_val(ShotBtn, vangezto7);             
    wait(120);
          
      
                
    }
     
combo Timed_Finesse_Finish {  
wait(28);
    set_val(ShotBtn, vangezto8)             
    wait(210);               
    set_val(ShotBtn, vangezto8);             
    wait(210);  

                 
}  

combo ALGA7ED  {     
set_val(ShotBtn,vangezto11); 
   if( Finesse ) set_val(FinesseShot,vangezto2);
   wait(vangezto12);      
   if( Finesse ) set_val(FinesseShot,vangezto2); 
   set_val(ShotBtn,  vangezto7); 
   wait(vangezto13);          
   if( Finesse ) set_val(FinesseShot,vangezto8); 
   set_val(ShotBtn,FINESSE_POWER); 
   wait(HEIGHT_OF_FINESSE_SHOT);               
   } 

/*

██████╗░██╗░░░░░░█████╗░░█████╗░██╗░░██╗  ░░██╗██╗
██╔══██╗██║░░░░░██╔══██╗██╔══██╗██║░██╔╝  ░██╔╝██║
██████╦╝██║░░░░░██║░░██║██║░░╚═╝█████═╝░  ██╔╝░██║
██╔══██╗██║░░░░░██║░░██║██║░░██╗██╔═██╗░  ███████║
██████╦╝███████╗╚█████╔╝╚█████╔╝██║░╚██╗  ╚════██║
╚═════╝░╚══════╝░╚════╝░░╚════╝░╚═╝░░╚═╝  ░░░░░╚═╝
*/
combo REVERSE_ELASTICO  {  
	right_on = FALSE;   
	RA_L_R () ;    // R  
	wait(w_rstick);      
	RA_DOWN ();    // down
	wait(w_rstick);     
	right_on = TRUE;   
	RA_L_R () ;    // L 
	wait(w_rstick);   
}                  
//////////////////////////////////////////////////////   
// 20. Berba / Mcgeady Spin  / 21. Bolasie Flick + R1 / 32 Ball Roll Fake Turn L2 + Berba Spin 
combo TURN_AND_SPIN {  
  if(ACTIVE == BALL_ROLL_FAKE_TURN ) hold_btn = 200;//  Ball Roll Fake Turn L2 
	else hold_btn = 1;      
 wait(hold_btn);
	RA_UP ();      // up   
	wait(w_rstick);         
	RA_ZERO ();    // ZERO  
	wait(w_rstick);          
	RA_L_R () ;    // Left or Right 
	wait(w_rstick);    
}                   
combo WAKA_WAKA {      
	RA_OPP();  // L       
	wait(w_rstick);       
	LA (0,0);             
	RA_UP();       // up  
	wait(w_rstick);       
                       
	LA (0,0);             
	RA_L_R()     // L     
	wait(w_rstick);       
	right_on = !right_on; 
	LA_L_R();             
	wait(1000);           
}                      
      
      ////////////////////////////////////////////////////////////////
// COMBO BLOCKS   //////////////////////////////////////////////
////////////////////////////////////////////////////////////////

combo BOOSTED_STEPOVER  {
	if (dEnd == RIGHT) dEnd = UP_RIGHT;
    if (dEnd == LEFT)  dEnd = UP_LEFT;
	calc_relative_xy(dEnd);
	RA_UP ();
	wait(w_rstick);	
	RA_L_R();
	LA (move_lx,move_ly);
	wait(w_rstick);	
	LA (move_lx,move_ly);
	wait(1000);
}
/*
█████████████████████████▀████████████████████████
█▄─█─▄██▀▄─██▄─▀█▄─▄█─▄▄▄▄█▄─▄▄─█░▄▄░▄█─▄─▄─█─▄▄─█
██▄▀▄███─▀─███─█▄▀─██─██▄─██─▄█▀██▀▄█▀███─███─██─█
▀▀▀▄▀▀▀▄▄▀▄▄▀▄▄▄▀▀▄▄▀▄▄▄▄▄▀▄▄▄▄▄▀▄▄▄▄▄▀▀▄▄▄▀▀▄▄▄▄▀
*/          
int onoff_penalty;                                   
int dir;                                      
int LeftRight,UpDown;                       
                                                                               
main {                                            
                                                  
           
   if(onoff_penalty)   colorled(0,0,2,0); 
   else        colorled(0,2,0,0); 
                                                  
  
    if(get_val(PS4_L1)){                      
        if(event_press(PS4_OPTIONS)){             
            onoff_penalty = !onoff_penalty;   
        }                                         
       set_val(PS4_OPTIONS,0);                    
    }                                              
    if(onoff_penalty){ fPenalties ();  }                                                                                                        
}                                  
function fPenalties () {                            
                                                      
      if(event_press(PS4_RIGHT) )LeftRight = 1;
                                                      
      if(event_press(PS4_LEFT) ) LeftRight = 2;
                                                      
      if(event_press(PS4_DOWN))  UpDown    = 3;
                                                      
      if(event_press(PS4_UP))    UpDown    = 4; 
                                                      
      if(LeftRight && !UpDown){                       
        if(LeftRight == 1) dir = 1;       
        else   dir = 2;                        
                                                      
        if(dir == 1 ){                                
           set_val(PS4_LX,87);            
           set_val(PS4_LY, 0);                        
        }                                             
                                                      
        if(dir == 2 ){                                
           set_val(PS4_LX,-86);            
           set_val(PS4_LY,  0);                       
        }                                             
      }                                               
      else if(!LeftRight && UpDown){                  
        if(UpDown == 3) dir = 3;            
        else   dir = 4;                       
        if(dir == 3 ){                                
           set_val(PS4_LX,  0);             
           set_val(PS4_LY,100);                       
        }                                             
                                                      
        if(dir == 4 ){                                
           set_val(PS4_LX,  0);               
           set_val(PS4_LY,-70);                       
        }                                             
                                                      
      }                                               
      else if(LeftRight && UpDown){                        
          dir = (LeftRight * UpDown) + 5 ;            
                                   
          if(dir == 8 ){                              
              set_val(PS4_LX,56);                     
              set_val(PS4_LY,90);                     
          }                                           
                                          
          if(dir == 9 ){                              
              set_val(PS4_LX, 78);                    
              set_val(PS4_LY,-36);                    
          }                                           
                                        
          if(dir == 13 ){                             
              set_val(PS4_LX,-78);                    
              set_val(PS4_LY,-38);                    
          }                                                                          
          if(dir == 11 ){                             
              set_val(PS4_LX,-56);                    
              set_val(PS4_LY, 90);                    
          }                                           
      }                                               
                                           
      set_val(13,0);                       
      set_val(14,0);                       
      set_val(15,0);                      
      set_val(16,0);                      
    
      if(event_press(XB1_RS)){           
      	LeftRight = 0;                   
      	UpDown    = 0;                  
      	dir       = 0;                 
      }                              
      set_val(XB1_RS,0);           
}                                
function colorled(a,b,c,d) { 
set_led(LED_1,a);            
set_led(LED_2,b);            
set_led(LED_3,c);            
set_led(LED_4,d);            
}                                                                            
                                                          
     
/*
████████████████████████▀████████████████████████
█▄─█─▄██▀▄─██▄─▀█▄─▄█─▄▄▄▄█▄─▄▄─█░▄▄░▄█─▄─▄─█─▄▄─█
██▄▀▄███─▀─███─█▄▀─██─██▄─██─▄█▀██▀▄█▀███─███─██─█
▀▀▀▄▀▀▀▄▄▀▄▄▀▄▄▄▀▀▄▄▀▄▄▄▄▄▀▄▄▄▄▄▀▄▄▄▄▄▀▀▄▄▄▀▀▄▄▄▄▀
*/

function LA (x,y){ 
	set_val(PS4_LX,x);
	set_val(PS4_LY,y);
}                  
function LA_L_R() {          
	if(right_on) {// right      
		set_val(PS4_LX,inv(LY)); //RIGHT 
		set_val(PS4_LY,LX);       //DOWN
	}   
	
	else {       //  left       
	    set_val(PS4_LX,LY );    
	    set_val(PS4_LY,inv(LX)); 
    }                         
}                              
function RA_L_R() {             
	if(right_on) {// right          
		set_val(PS4_RX,inv(LY));
		set_val(PS4_RY,LX);      
	}                                  
	else {       //  left               
	    set_val(PS4_RX,LY );     
	    set_val(PS4_RY,inv(LX)); 
    }                                
}                                    
function RA_OPP() {                  
	if(!right_on) {// right             
		set_val(PS4_RX,inv(LY));   
		set_val(PS4_RY,LX);        
	}                                   
	else {       //  left               
	    set_val(PS4_RX,LY );     
	    set_val(PS4_RY,inv(LX)); 
    }                                
}                                    
function RA_UP () {                  
	set_val(PS4_RX,LX );        
	set_val(PS4_RY,LY );        
}                                   
function RA_DOWN () {               
	set_val(PS4_RX,inv(LX) );   
	set_val(PS4_RY,inv(LY) );   
}                                  
function RA_ZERO () {             
	set_val(SKILL_STICK_X,0 );      
	set_val(SKILL_STICK_Y,0 );     
}  


data
(  0, 100, 100, 100,   0, 156, 156, 156, 
 156, 156,   0, 100, 100, 100,   0, 156
);

data
(  0, 100, 100, 100,   0, 156, 156, 156, 
 156, 156,   0, 100, 100, 100,   0, 156
);

int move_lx, move_ly, zone_p;

function calc_relative_xy(d) {
    if(get_val(XB1_LX) >= 50) move_lx = 100;
    else if(get_val(XB1_LX) <= -50) move_lx = -100;
    else move_lx = 0;
    if(get_val(XB1_LY) >= 50) move_ly = 100;
    else if(get_val( XB1_LY) <= -50) move_ly = -100;
    else move_ly = 0;
    
    
    if(move_lx != 0 || move_ly != 0) {
        zone_p = 0; while(zone_p < 8) {
            if(dchar(zone_p) == move_lx && dchar(8 + zone_p) == move_ly) {
                break;
            } zone_p += 1;
        }
        zone_p += d;
        if(zone_p >= 8) zone_p = zone_p - 8;
        move_lx = dchar(zone_p);
        move_ly = dchar(8 + zone_p);
    }
    return;
}

/*
░██████╗░░█████╗░░█████╗░██████╗░  ██████╗░██╗░░░██╗███████╗
██╔════╝░██╔══██╗██╔══██╗██╔══██╗  ██╔══██╗╚██╗░██╔╝██╔════╝
██║░░██╗░██║░░██║██║░░██║██║░░██║  ██████╦╝░╚████╔╝░█████╗░░
██║░░╚██╗██║░░██║██║░░██║██║░░██║  ██╔══██╗░░╚██╔╝░░██╔══╝░░
╚██████╔╝╚█████╔╝╚█████╔╝██████╔╝  ██████╦╝░░░██║░░░███████╗
░╚═════╝░░╚════╝░░╚════╝░╚═════╝░  ╚═════╝░░░░╚═╝░░░╚══════╝
*/