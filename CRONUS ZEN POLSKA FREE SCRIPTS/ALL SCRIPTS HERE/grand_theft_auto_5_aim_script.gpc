// GPC Online Library
// grand_theft_auto_5_aim_script.gpc

// GPC Online Library
// all_in_one_GTA_for_xaim.gpc

// Script was generated with *FORTNITE app* ver. 3.2 Date :02/22/19 Time: 10:41:23 PM
                                                    
/**********************************************************************
  
                                                                       
**********************************************************************/
                                                                     
/*********************************************************************
    
    Grand Theft Auto
                                                                      
    Game    : Grand Theft Auto                                                   
                                                                      
                                 
                                                                      
**********************************************************************/
/////////////////////////////////////////////////////////////////////// 
//                                                                      
//                                        
/////////////////////////////////////////////////////////////////////// 
//                                                                      
//--------------------------------------------------------------------- 
//    TOGGLE SWITCHES                                                   
//   Turn AIM ABUSE OFF/ON     
//   ---------------------------------
//                                                                             
//  in X-AIM plugin bind button EXTRA_INPU1 to some of your keyboard button
//                                                                             
//   Turn AIM ASSIST OFF/ON     
//   ---------------------------------
//                                                                             
//  in X-AIM plugin bind button EXTRA_INPU2 to some of your keyboard button
//                                                                             
//   Turn ANTI RECOIL OFF/ON     
//   ---------------------------------
//                                                                             
//  in X-AIM plugin bind button EXTRA_INPU2 to some of your keyboard button
//                                                                             
//                 
                  
                 
//--------------------------------------------------------------------- 
//                                                                      
define FIRE_BTN   = PS4_R2; 
define ADS_BTN    = PS4_L2; 
define CROUCH_BTN = PS4_R3; 
define SPRINT_BTN = PS4_L3; 
define JUMP_BTN   = PS4_CROSS; 
define NEXT_PIECE = PS4_R1; 
define LEFT_BUMP  = PS4_L1; 
define SWAP_BTN   = PS4_TRIANGLE; 
define BUILD_BTN  = PS4_CIRCLE; 
define RELOAD_BTN = PS4_SQUARE; 
//--------------------------------------------------------------------- 


//   BUILD BUTTONS                                                      
define WALL_BTN   = PS4_R2; 
define STAIRS_BTN = PS4_L2; 
define FLOOR_BTN  = PS4_R1; 
define ROOF_BTN   = PS4_L1; 
//______________________________________________________________________|
//########## VARIABLES BELOW USED BY SCRIPT (DO NOT TOUCH) #############|
//----------------------------------------------------------------------|
int AimAbuse_onoff   = TRUE;               
int PerfectAccuracy  = TRUE;
int AR_AimAssist_on  = TRUE;               
int AimAssist_onoff  = TRUE;               
int shake            = 8; 
int OneBtnBuild_onoff= TRUE;               
int BTN_BUILD        = PS4_R2;               
//---------------------------------------- 
define w_btn   = 60; 
define w_press = 60;            
int build_on   =  0;            
int InstaBuild = TRUE;  
int AntiRecoil_onoff = TRUE;             
int ANTI_RECOIL      = 6;               
int ANTI_RECOIL_H    =  0;               
int anti_recoil;                         
int anti_recoil_H;                       
int aimabuse_hold; 
int aimabuse_rest; 
//--------------------------------------------------------------------------------------
//  MAIN BLOCK BEGIN                                  
main {    
       
       
    if(event_press(PS4_ACCY)){ // EXTRA_INPU2
        AimAssist_onoff = !AimAssist_onoff;        
    }                           
              
    ///////////////////////////////////////////////////////////////////////////////// 
    //Aim Assist V 2                                     
    if (AimAssist_onoff) {                            
        if (get_val(ADS_BTN))                       
            combo_run(Auto_Aimm);                     
        else        
            combo_stop(Auto_Aimm);                    
                                                     
                                                      
        if (get_val(ADS_BTN)) {                        
            if (abs(get_val(9)) > 21 || abs(get_val(10)) > 21){ 
	            combo_stop(Auto_Aimm);                  
            }                                         
        }                                             
    }//------------------------------------------------------------------------------- 
       
    //100% ACCURACY
if (get_val(ADS_BTN) && get_val(NEXT_PIECE)) {
  combo_run(PerfectAccuracy);
set_val(NEXT_PIECE, 0);
      } else {
  combo_stop(PerfectAccuracy);
}
       
    //  ON/OFF AIM ABUSE  
    if(event_press(PS4_ACCX)){ // EXTRA_INPU1
        AimAbuse_onoff = !AimAbuse_onoff;        
    }                           
     
     
    if(AimAbuse_onoff){   
       /////////////////////////////////////////////////////////////////////////////////
       // ASSAULT RIFLES AIM ABUSE                                            
       if (AR_AimAssist_on) {                             
           if (get_val(ADS_BTN)) {  
               aimabuse_hold = 320;
               aimabuse_rest = 18;
                           
               combo_run(AIM_ABUSE);                  
           } else if (combo_running(AIM_ABUSE)) {     
               combo_stop(AIM_ABUSE);                 
           }                                             
       }//-----------------------------------------------
                                                      
     }   
     
 
     
     
     
    if(event_press(PS4_ACCY)) { // EXTRA_INPU2
          AntiRecoil_onoff = !AntiRecoil_onoff;   
    }                           
    /////////////////////////////////////////////////////////////////////////////////
    // ANTI RECOIL                                    
    if(AntiRecoil_onoff){                             
	    if (get_val(ADS_BTN)&& get_val(FIRE_BTN)) {     
	        combo_run(AntiRecoil);                      
	    }                                               
    }                                                 
    // ON/OFF One Btn Build 
        if(event_press(PS4_TOUCHX)){ // EXTRA_INPU8
             OneBtnBuild_onoff = !OneBtnBuild_onoff;   
        }                                              
                                                       
    if(event_press(SWAP_BTN) || event_press(NEXT_PIECE) || event_press(LEFT_BUMP)) build_on = FALSE;  
                                          
    if(event_press(BUILD_BTN)){          
    	  build_on = !build_on ;   
        if(build_on) BTN_BUILD = PS4_R2;  
    }                                
    //////////////////////////////////////////////////////////////////////
    // ONE BTN BUILD                                 
    if(OneBtnBuild_onoff){                           
	     if(build_on){                                 
                                                     
	        //***********************************
	    	if (event_press(WALL_BTN)) {                 
	            BTN_BUILD = PS4_R2;                    
              combo_run(BUILD_PIECE);                
	        }                                          
	        if (event_press(FLOOR_BTN)) {              
	            BTN_BUILD = PS4_R1;                    
              combo_run(BUILD_PIECE);                
	        }                                          
	        if (event_press(STAIRS_BTN)) {             
	            BTN_BUILD = PS4_L2;                    
              combo_run(BUILD_PIECE);                
	        }                                          
                                                     
	        if (event_press(ROOF_BTN)) {               
	            BTN_BUILD = PS4_L1;                    
              combo_run(BUILD_PIECE);                
	        }                                          
	    }//***********************************
    }//-----------------------------------------     
                                                     
                        
}//  MAIN BLOCK END    
//--------------------------------------------------------------------------------------
                        
//--------------------------------------------------------------------------------------
// COMBO BLOCK                                                                   
  
  
combo PerfectAccuracy {
set_val(FIRE_BTN,100);
wait(100);
wait(250);
set_val(FIRE_BTN,100);
}
  
  
combo AIM_ABUSE { //
    set_val(ADS_BTN, 100);    
    wait(aimabuse_hold);                
    set_val(ADS_BTN, 0);      
    wait(aimabuse_rest);                 
} //end                       
                          
combo Auto_Aimm {          
    set_val(10, shake * -1); //1  
    wait(20)               
    set_val(9,  shake); //1  
    wait(20)              
    set_val(10, shake); //1  
    wait(20)               
    set_val(9,  shake * -1); //1  
    wait(20)               
}                          
combo BUILD_PIECE {          
    set_val(BTN_BUILD, 100); 
    wait(60);
    wait(60);
    if(InstaBuild) set_val(BTN_BUILD, 100); 
    wait(60);
    wait(60);
}                            
combo AntiRecoil { // This combo must be the last one 
        anti_recoil = get_val(10) + ANTI_RECOIL;      
        if (anti_recoil > 100) anti_recoil = 100;     
        set_val(10, anti_recoil);                      
        anti_recoil_H = get_val(9) + ANTI_RECOIL_H; 
        if(anti_recoil_H > 100) anti_recoil_H = 100; 
        set_val(9, anti_recoil_H);                      
}                                              