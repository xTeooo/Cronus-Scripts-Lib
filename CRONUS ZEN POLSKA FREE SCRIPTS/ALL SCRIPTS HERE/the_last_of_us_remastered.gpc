// GPC Online Library
// the_last_of_us_remastered.gpc


 /*
 = = = = = = = = = = = = = = = = = = =
 = /\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\  =
 = /\/\/\  Made By ItzSnack  /\/\/\  =
 = /\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\  =
 = = = = = = = = = = = = = = = = = = =

 ===================
 === Version 1.0 ===
 ===================
 
 ================
 === FEATURES ===
 ================
 Aim Assist
 Anti Recoil
 Auto Run
 Auto Spot
 Rapid Fire
 Drop Shot
 Hair Trigger
 Custom Sensitivity

 =================
 === Important ===
 =============================================================
 === Some features will have to be turned on in the script ===
 =============================================================
 
 =====================
 === Reset Toggles ===
 ==================================================
 === OPTIONS/MENU + SHARE/VIEW to reset toggles ===
 ==================================================
 
 ===================
 === Toggle Menu ===
 =============================================================================================================
 === Before being able to turn ON/OFF toggles you will have to open the toggle menu by doing the following ===
 === OPTIONS/MENU + D-PAD UP                                                                               ===
 === When ON your LED will flash Rainbow now you able to turn on any features you want                     ===
 === After you done make sure to disable the toggle menu                                                   ===
 === Your LED will be Black when your out of the toggle menu                                               ===
 =============================================================================================================
 
 ===================================================================================
 ===                          TOGGLES YOU CAN ACTIVATE                           ===
 ===================================================================================
 === Hold L2/LT And Press UP For Rapid Fire                                      ===
 === 1 Rumble = ON 2 = OFF                                                       ===
 ===================================================================================
 === Hold L2/LT And Press RIGHT For Drop Shot                                    ===
 === 1 Rumble = ON 2 = OFF                                                       ===
 ===================================================================================
 === Hold CROSS/A And Press UP For +1 to Anti Recoil and DOWN For -1             ===
 ===================================================================================
 === Hold CROSS/A And Press RIGHT For +5 to Rapid Fire and LEFT For -5           ===
 ===================================================================================
 */

    //Layout
    define PS = 0;
    define SHARE = 1;
    define OPTIONS = 2;
    define R1 = 3;
    define R2 = 4;
    define R3 = 5;
    define L1 = 6;
    define L2 = 7;
    define L3 = 8;
    define RX = 9;
    define RY = 10;
    define LX = 11;
    define LY = 12;
    define UP = 13;
    define DOWN = 14;
    define LEFT = 15;
    define RIGHT = 16;
    define TRIANGLE = 17;
    define CIRCLE = 18;
    define CROSS = 19;
    define SQUARE = 20
    define TOUCHPAD = 27;
    
    //Customize
    int Flipped = OFF; //Change OFF TO ON If you play with Flipped Triggers
    int AS = ON; //Change ON TO OFF If you don't want Aim Assist
    int SPOT = ON; //Change ON TO OFF If you don't want Auto Spot
    int RECOIL = ON; //Change ON TO OFF If you don't want Anti Recoil
    int RUN = ON; //Change ON TO OFF If you don't want Auto Run
    int HT = ON; //Change ON TO OFF If you don't want Hair Trigger
    int CS = ON; //Change ON TO OFF If you don't want Custom Sensitivity
    
    //Custom Buttons
    int Crouch_Button = CIRCLE; //Your crouch button
    
    //Speed Of Features
    int RF_Speed = 40; //Rapid Fire Speed
    int DS_Speed = 80; //Drop Shot Speed
    /*NOTE:
    Higher values = Slower
    Lower values = Faster
    Everything is in milliseconds*/
    
    //Custom Sensitivity
    int GEN_SENS = 100;
    int ADS_SENS = 100;
    /*NOTE:
    Default = 100
    Ranges from 0 to 327*/
    
    //Anti Recoil
    int AR = 10; //Anti Recoil
    
    //Aim Assist
    int AP = 18;
    int AM = -18
    int Delay = 20
    int ARelease = 19;
    /*NOTE:
    Increase AP & AM For more Assist but it can cause shake
    Decrease AP & AM If you feel shake and don't like it
    ARelease Is recommended to be 1 higher than AP & AM*/
    
    //Toggles
    int ARS;
    int USE_SENS;
    int Remove_Block;
    int RF_Toggle;
    int DS_Toggle;
    int Toggle_Menu;
    int Toggle_Rumble;
    
    main {
    
    if(get_val(OPTIONS) && event_press(SHARE)) {
    RF_Toggle = OFF;
    DS_Toggle = OFF;
    Toggle_Menu = OFF;
    combo_run(Menu_Rumble);}
    
    if(CS)
    if(!get_val(L2) && !get_val(R2)) { 
    USE_SENS=GEN_SENS;}
    else if(get_val(L2) && !get_val(R2)) { 
    USE_SENS=ADS_SENS;}
    sensitivity(RY,NOT_USE,USE_SENS);
    sensitivity(RX,NOT_USE,USE_SENS);
    
    LED(0,0,0,0);
    
    if(Flipped) {
    swap(R1,R2);
    swap(L1,L2);}
    
    if(HT)
    deadzone(L2,R2,100,100);
    
    if(SPOT)
    if(get_val(L2)) combo_run(AP);
    
    if(RUN)
    if(get_val(LY)<-90 && !get_val(R1)) set_val(L1,100);
    
    if(AS)
    if(get_val(L2)) combo_run(AS);
    
    if(RECOIL)
    if(get_val(L2) && get_val(R2))
    combo_run(AR);
    
    if(RF_Toggle && get_val(R2))
    combo_run(RF);
    
    if(DS_Toggle && get_val(R2))
    combo_run(DS);
    
    if(get_val(OPTIONS) && event_press(UP)) {
    Toggle_Menu=!Toggle_Menu;
    Toggle_Rumble=!Toggle_Rumble;}
    if(Toggle_Rumble) 
    combo_run(Menu_Rumble);
    
    if(Toggle_Menu) {
    combo_run(Rainbow_Flash);
    
    if(get_val(L2) && event_press(UP)) {
    RF_Toggle=!RF_Toggle;
    if(RF_Toggle) combo_run(Flash_ON); 
    else combo_run(Flash_OFF);}
    
    if(get_val(L2) && event_press(RIGHT)) {
    DS_Toggle=!DS_Toggle;
    if(DS_Toggle) combo_run(Flash_ON); 
    else combo_run(Flash_OFF);}
    
    if(get_val(CROSS)) {
    if(event_press(UP)) {
    AR = AR + 1;}
    if(event_press(DOWN)) {
    AR = AR - 1;}
    if(event_press(RIGHT)) {
    RF_Speed = RF_Speed + 5;}
    if(event_press(LEFT)) {
    RF_Speed = RF_Speed - 5;}
    set_val(UP,0);set_val(DOWN,0);set_val(RIGHT,0);set_val(LEFT,0);}
    
    if(get_val(L2)) {
    if(event_press(UP)) {
    Remove_Block=!Remove_Block;}
    if(event_press(RIGHT)) {
    Remove_Block=!Remove_Block;}
    if(event_press(DOWN)) {
    Remove_Block=!Remove_Block;}
    if(event_press(LEFT)) {
    Remove_Block=!Remove_Block;}
    set_val(UP,0);set_val(RIGHT,0);}}
    
    if(get_val(OPTIONS)) {
    if(event_press(SHARE)) {
    Remove_Block=!Remove_Block;}
    set_val(SHARE,0);}

    if(abs(get_val(RY)) > AR || abs(get_val(RX)) > AR) {
    combo_stop(AR);}}
    
    combo AR {
    ARS = get_val(RY) + AR;
    if(ARS > 100) ARS = 100;
    set_val(RY,ARS);}
     
    combo AS { 
    set_val(RY,a_f(RY,AP));
    wait(Delay)
    set_val(RX,a_f(RX,AP));
    wait(Delay)
    set_val(RY,a_f(RY,AM));
    wait(Delay)
    set_val(RX,a_f(RX,AM));
    wait(Delay)}

    function a_f(p,m) {
    if(abs(get_val(p)) < ARelease)
    return m;
    return get_val(p);}
    
    combo DS {
    set_val(Crouch_Button,100);
    wait(40);
    set_val(Crouch_Button,0);
    wait(DS_Speed);}
    
    combo AP {
    set_val(R3,100);
    wait(40);
    set_val(R3,0);
    wait(40);}
    
    combo RF {
    set_val(R2,100);
    wait(40);
    set_val(R2,0);
    wait(RF_Speed);}
    
    combo Rainbow_Flash {
    LED(2,0,2,0);
    wait(100);
    LED(0,0,0,0);
    wait(100);
    LED(0,0,0,2);
    wait(100);
    LED(0,0,0,0);
    wait(100);
    LED(0,2,2,0);
    wait(100);
    LED(0,0,0,0);
    wait(100);}
    
    combo Menu_Rumble {
    set_rumble(RUMBLE_B,100);
    wait(200);
    reset_rumble();
    Toggle_Rumble = OFF;}
    
    combo Flash_ON {
    LED(0,0,2,0);
    set_rumble(RUMBLE_A,100);
    wait(400);
    reset_rumble();}
 
    combo Flash_OFF {
    LED(0,2,0,0);
    set_rumble(RUMBLE_B,100);
    wait(200);
    reset_rumble();
    LED(0,0,0,0);
    wait(100);
    set_rumble(RUMBLE_B,100);
    LED(0,2,0,0);
    wait(200);
    reset_rumble();}
 
    function LED(a,b,c,d) {
    set_led(LED_1,a);
    set_led(LED_2,b);
    set_led(LED_3,c);
    set_led(LED_4,d);}
    
    define ON = TRUE;
    define OFF = FALSE;