//headshotbuild
//linear + expo compatible
//universal
//private script - NOT FOR PUBLIC RELEASE
// - Linear + Exponential Headshot/Uplift Aim Assist
// --/08/2021 public release ready

int AimAssistX = 6;
int AimAssistXNeg = -6;
int AimAssist_LinearExpo = 11; 
int NegativeAimAssist_LinearExpo = -11;
int AimAssist_LinearExpo2 = 17;
int NegativeAimAssist_LinearExpo2 = -17;
int Delay = 15;
int Release = 12;
int Release2 = 18;
int AntiRecoil_Ver = 14;   
int AntiRecoil_Hor = 0;   
int ARS;
 
 main {
 
 
    if(get_val(7)) combo_run(AS);
    if(get_val(4)) combo_run(AS2);
    
    if(get_val(7) && get_val(4))
    combo_run(AntiRecoil_Ver);
    if(abs(get_val(10)) > AntiRecoil_Ver + 2 || abs(get_val(9)) > AntiRecoil_Ver + 2) {
    combo_stop(AntiRecoil_Ver);}
 
    combo_run(AX);}
 
    combo AX { 
    set_val(10,a_f(10,AimAssistX));
    wait(Delay)
    set_val(9,a_f(9,AimAssistX));
    wait(Delay)
    set_val(10,a_f(10,AimAssistXNeg));
    wait(Delay)
    set_val(9,a_f(9,AimAssistXNeg));
    wait(Delay)}
 
    combo AS { 
    set_val(10,a_f(10,AimAssist_LinearExpo));
    wait(Delay)
    set_val(9,a_f(9,AimAssist_LinearExpo));
    wait(Delay)
    set_val(10,a_f(10,NegativeAimAssist_LinearExpo));
    wait(Delay)
    set_val(9,a_f(9,NegativeAimAssist_LinearExpo));
    wait(Delay)}
    
    combo AS2 { 
    set_val(10,a_f(10,AimAssist_LinearExpo2));
    wait(Delay)
    set_val(9,a_f(9,AimAssist_LinearExpo2));
    wait(Delay)
    set_val(10,a_f(10,NegativeAimAssist_LinearExpo2));
    wait(Delay)
    set_val(9,a_f(9,NegativeAimAssist_LinearExpo2));
    wait(Delay)}
    
    combo AntiRecoil_Ver {
    ARS = get_val(10) + AntiRecoil_Ver;
    if(ARS > 100) ARS = 100;
    ARS = get_val(9) + AntiRecoil_Hor;
    if(ARS > 100) ARS = 100;
    set_val(9,ARS);}
 
    function a_f(p,m) {
    if(abs(get_val(p)) < Release)
    return m;
    return get_val(p);}
 