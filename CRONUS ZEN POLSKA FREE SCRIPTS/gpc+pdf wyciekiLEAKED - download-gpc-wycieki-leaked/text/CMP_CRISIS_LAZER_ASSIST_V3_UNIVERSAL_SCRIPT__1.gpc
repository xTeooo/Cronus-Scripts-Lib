/*
				F O R  C R O N U S M A X - V E R S I O N  3 
					C O M P A T I B L E  W I T H  Z E N
____o__  ____o__  ____o__  ____o__  ____o__  ____o__  ____o__  ____o__  ____o__  ____o__
				
	 _____ _____ ____     _____ __    _____ _____ _____    _____ _____ _____ _ 
	|     |     |    \   | __  |  |  |  _  |     |  |  |  |     |  _  |   __|_|
	|   --|  |  |  |  |  | __ -|  |__|     |   --|    -|  |  |  |   __|__   |_ 
	|_____|_____|____/   |_____|_____|__|__|_____|__|__|  |_____|__|  |_____|_|
			    __________  __    ____     _       _____    ____ 
			   / ____/ __ \/ /   / __ \   | |     / /   |  / __ \
			  / /   / / / / /   / / / /   | | /| / / /| | / /_/ /
			 / /___/ /_/ / /___/ /_/ /    | |/ |/ / ___ |/ _, _/ 
			 \____/\____/_____/_____/     |__/|__/_/  |_/_/ |_|  
  __   ___  __   ___  ___  __  ___                     ___  __    ___    __       
 |__) |__  |__) |__  |__  /  `  |      /\  |  |\/|    |__  |  \ |  |  | /  \ |\ | 
 |    |___ |  \ |    |___ \__,  |     /~~\ |  |  |    |___ |__/ |  |  | \__/ | \|                                                               
                             
 		 A  M O D E R N  W A R F A R E  C R O S S  O V E R  S C R I P T 
 		 
____o__  ____o__  ____o__  ____o__  ____o__  ____o__  ____o__  ____o__  ____o__  ____o__

		  T H E  N O .  1  C O D  S C R I P T   W O R L D W I D E  
		  
		       CRISIS BOT V3 (UNIVERSAL WARZONE-COLD WAR)
		       
		                  CRISIS (YOUTUBE)
		 _______  ______ _______ _______ _______ _______ __   _ _______
		                                                              

____o__  ____o__  ____o__  ____o__  ____o__  ____o__  ____o__  ____o__  ____o__  ____o__

BUTTON / STICK LAYOUT    : ALL BUTTON & STICK LAYOUTS ARE SUPPORTED
BUMPERS / TRIGGERS       : DEFAULT & FLIPPED ARE SUPPORTED
PLATFORMS                : XBOX ONE, PS4 (works on both consoles)
Instagram					 : @crisis_scriptz
____o__  ____o__  ____o__  ____o__  ____o__  ____o__  ____o__  ____o__  ____o__  ____o__

		B E S T  A I M  A S S I S T  O N  C O D  B O  C O L D  W A R 
   W A N T  P R O O F?  L O O K  I N  M Y  D I S C O R D  C H A N N E L !
____o__  ____o__  ____o__  ____o__  ____o__  ____o__  ____o__  ____o__  ____o__  ____o__

WE HAVE HAD THE BEST AIM ASSIST ON COD. THE SECERET BEHIND IT? 
WELL IT IS NOT EVEN A SECRET TO BEGIN WITH. IT IS THE COMBINATION WITH MY AIM CORRECTIONS
THAT DOES THE TRIC. SO MAKE SURE YOU FOLLOW THE INSTRUCTIONS TO ENJOY THE BEST AIM ASSIST 
AVAILABLE ON BOTH ZEN & MAX. 

IF YOU ARE GOING TO USE THIS SCRIPT, THEN THESE ARE THE SETTINGS FOR YOUR IN-GAME-MENU 
(MAKE THE CHANGES BEFORE YOU PLAY):

-1- HOLD PRONE TO SLIDE (IN COD MW ONLY)
-2- HIGHER YOUR GENERAL SENSITIVTY ON BOTH STICKS (INCREASE WITH AT LEAST 3 POINTS I WOULD SAY, YOU HAVE TO TRY HOW MUCH 
  	YOU INCREASE THIS EXACTLY. TIP: COMPILE THIS SCRIPT 2 OR 3 TIMES ON DIFFERENT SLOTS SO YOU CAN TRY WHICH SLOT WORKS BEST))
-3- DO NOT CHANGE ANY OTHER SENSITIVITY SETTINGS IN THE GAME MENU: MY SCRIPT DOES IT FOR YOU, AND IT  
  	DOES IT SOO MUCH BETTER. BESIDES, THE SCRIPT CONTROLS YOUR SENSITIVITY ALSO
  	THROWING GRENADES, TACTICAL GRENADES AND HELP YOU LOCK DOWN EVEN BETTER ON YOUR ENEMY ONCE
  	YOU OPEND FIRE - SO FOLLOW MY INSTRCUTIONS, TRUST ME I GOT YOU COVERED. AND DON`T BE A PUSSY, 
  	HIGHER YOUR IN-GAME-SENS AS I EXPLAINED (SEE FURTHER DETAILS BELOW). 
-4- DEPENDING ON THE VERSION, ALSO ACTIVATE VIBRATIONS IN THE GAME MENU (JUST LOOK IF THERE ARE ANY INSTRUCTIONS
  	BELOW THAT TELL YOU TO SWITCH THIS ON OR OFF).
  	
  	NUMBERS 2 - 4 ON BOTH COLD WARE AND MODERN WARFARE. 

____o__  ____o__  ____o__  ____o__  ____o__  ____o__  ____o__  ____o__  ____o__  ____o__

IMPORTANT NOTES:

This script will NOT function as expected when you don`t follow through with the instructions.
For example: the cancel reload requires you to calibrate the time value.
If you fail to do this, the cancel reload will not work.
This script is only recommended for advanced users, because I am not supporting OLED display features. 

And, for those who are in doubt: this script is developped for both COD BOCW as for COD MW. That is
the idea behind a cross over script, you should be able to use it for both games. That said, always 
compile one script for COD BOCW and one for COD MW because of the seperate settings, mods and features
for each of the two games.  

COD PAE will advance your gameplay with the highest accuracy and best practice game-control without ever
losing pace. 

Key words: mobility, movement speed, recoil control, aim assist and aim stability â€“ all mods in this script
are custom to the specific COD game mechanics. And: no other script and no game pack does a better job than 
this script (depending on your game style, if you are using this script whilst you only sit in corners - thus
in other words if you are only camping - then you have downloaded the wrong script. This script is written 
for good players and for players that want to become better: only they will benefit the most. 

COD PAE: Perfected over more than 5 years, PAE was written from the ground up with every new COD release to 
make the essential mods for COD play out seemingly with your personal play style.

COD PAE will never, never ever, under no circumstances let you down. That is guaranteed.

THE #1 SCRIPT FOR CALL OF DUTY - 5 MILLION DOWNLOADS WORLDWIDE - THE PERFECT AIM EDITION

						_______________________________________
						
						DISCORD: https://https://discord.gg/9zdb8fTZD2
						_______________________________________


                               _    ,----------------------------------------------.
                             __))   | INSTRUCTIONS: below -  read the instructions |
                            ( oo)   _)---------------------------------------------'
------------------------ooO--(_)--Ooo---------------------------------------------------

---------------------------/ START USER CONFIG \------------------------------------------
    USER CONFIGURATION                         
         _             	___   
     ___| |_ ___ ___   |_  |  
    |_ -|  _| -_| . |   _| |_ 
    |___|_| |___|  _|  |_____|
    USER CONFIG |_|Sticks, Buttons

    
    CHECK THE STICK & BUTTON LAYOUTS BELOW. DO NOT MIND THE CONSOLE/PLATFORM,
    BUT MAKE SURE THAT THE BUTTON DISCRIPTIONS (FIRE, ADS, ETC) MATCHES WITH YOURS.
    IF YOU NEED TO MAKE CHANGES, THERE IS A LIST OF IDENTIFIERS JUST BELOW.
    
    //-- STICKS        */
    define WALK=PS4_LY;                     
    define STRAFE=WII_LX;                    
    define AIM_H=XB360_RX;//AIM HORIZONTAL                  
    define AIM_V=PS3_RY;//AIM VERTICAL                      
    
    //--BUTTONS                         
    define FIRE=XB1_RT;                      
    define ADS=XB1_LT;                        
    define SPRINT=XB1_LS;                
    define TACTICAL=PS4_L1;                
    define LETHAL=PS4_R1;                   
    define PRONE=XB1_RS;                              
    define MELEE=XB1_B;
    define JUMP=XB1_A;
    /*
       PS4_CIRCLE            XB1_B         STICKS: 
       PS4_CROSS             XB1_A
       PS4_R1                XB1_RB
       PS4_R2                XB1_RT        PS4_LY          XB1_LY  
       PS4_R3                XB1_RS        PS4_LX          XB1_LX    
       PS4_L1                XB1_LB        PS4_RX          XB1_RX      
       PS4_L2                XB1_LT        PS4_RY          XB1_RY  
       PS4_L3                XB1_LS          
         _              ___ 
     ___| |_ ___ ___   |_  |
    |_ -|  _| -_| . |  |  _|
    |___|_| |___|  _|  |___|
    USER CONFIG |_| Mod Menu 
                    & Settings   
*/
    define MW_X = 5;// Fill out the first slot 
    define MW_B = 6;// Fill out the second slot
    define MW_A = 7;// Fill out the third slot  
    define MW_Y = 8;// Fill out the fourth slot  
   	int    in_game_menu_sens=14; //PLEASE READ "AIM CORRECTIONS" BELOW ABOUT THIS VALUE
//------------------ -- - --- -   ---- -- -- --    ----  --- -   ---- -- -- --     ---- 
define aim_sens_corrections=1; // [0 = OFF / 1 = ON] ++++++++++do not combine with dynasens++++++++++++++
define dynasens_on=0; // [0 = OFF / 1 = ON] ++++++++++++do not combine with aim_sens_corrections++++++++++++++
//------------------ -- - --- -   ---- -- -- --     ----  --- -   ---- -- -- --     ---- 
define sticky_aim_assist=1;//[0 = OFF / 1 = ON] strongest aim assist for COD BLACK OPS COLD WAR I tested so far!
define _v=22;//If your screen shakes whilst using aim assist - lower this value (try 22, 20)
define smart_reload=1;//[0 = OFF / 1 = ON] cancel reload with fire or ads - calibrate reload times to make it work (see below)
//------------------ -- - --- -   ---- -- -- --     ----  -- - --- -   ---- -- -- --     ---- 
define smart_thumb_stick=2;//[1= Easy Sprint ON / 2 = Easy Sprint ON & Easy Melee, Easy Jump or Easy Prone is ON]
int 	l_stick_click = XB1_B; //[FILL OUT THE BUTTON THAT NEEDS TO BE PRESSED under left stick click]
								// if no other button is suppossed to be pressed then smart_thumb_stick=1!
//------------------ -- - --- -   ---- -- -- --     ----  -- - --- -   ---- -- -- --     ---- 
define walk_tresh= -50;//Easy sprint stick treshhold (-75 = pressed more than 75%)
define StickNoise=10; //Dead Zone value for your thumbsticks (only active when you fire, allowing micro aiming)
define dynamic_RF=0; // do not change this, there is no other option yet in the script. (work in progres)
//-- -- ------- ---- --- COD MW -------------------- -- ------- ---- --- COD MW ------------------
int sprint_cncl_reload=0; // !! see instructions further below !! Playing Cold War? 0/OFF  
define cancel_slide=1;//[0 = OFF / 1 = ON] Whilst sprinting, tap prone to slide. Tap Prone again to cancel slide. 
//						In the game menu activate hold prone to slide. (Modern Warfare Only)/*
define s=0; //Auto Dead Silence (Modern Warfare Only)
//-- -- ------- ---- --- END COD MW -------------------- -- ------- ---- --- END COD MW --------------

/*-- -- ------- ---- --- END OF USER CONFIG ------ -- ------- ---- --- END OF USER CONFIG  -----------
   		
   					   !! MAKE SURE THAT YOU READ THE INSTRUCTIONS !!   				
									   IN THIS UPDATE:
		- FIX FOR SLOTS: THE SCRIPT WOULD ONLY WORK PROPERLY ON SLOT 1-4, THIS IS FIXED
      
    ---------------------------------/ START SHORT INSTRUCTIONS \-------------------------------------
    
    _____________________________________ MENU ADS & LEDS ___________________________________________    
     
       HOLD ADS + 
                     - TAP UP            = ANTI RECOIL ON / RAPID FIRE OFF (LED: SKYBLUE; PINK; GREEN; OR YELLOW (DEPENDING ON THE SLOT)
                     - TAP RIGHT         = RAPID FIRE ON / ANTI RECOIL OFF (LED: RED)
                     - TAP LEFT          = RAPID FIRE SECONDARY ON / ANTI RECOIL OFF (blue led = primary weapon, red led is secondary weapon (with rapid fire)
                     - HOLD LEFT         = RAPID FIRE SECONFARY ON + ANTI RECOIL ON (recoil profile color = primary weapon, red led is secondary weapon (with rapid fire)
                     - TAP DOWN          = RAPID FIRE OFF / ANTI RECOIL OFF (blue led)
                     - HOLD VIEW/SHARE   = RESET DEFAULTS (to reset aim correction value and reload time value)
                     - TAP MENU/OPTIONS  = CANCEL THE SPRINT TIMER AFTER RELOAD ON/OFF(DO NOT USE WITH PERK GUN HO)
                     
    WHEN RAPID FIRE SECONDARY = ON
                     
                     - TAP "SWITCH WEAPON" shortly TO SWITCH BETWEEN RAPID FIRE AND NORMAL FIRE (RED LED = RAPID FIRE)
                     - TAP "RELOAD" shortly TO RELOAD
                     - TO RESET/SYNC LED COLORS IF YOU DIED USING YOUR SECONDARY WEAPON: HOLD "RELOAD" FOR >180ms
    LEDS
                      - ANY COLOR OTHER THAN THE 2 BELOW     = ANTI RECOIL IS ON
                      - RED                                  = RAPID FIRE IS ON                      
                      - BLUE                                 = NEUTRAL (RAPID FIRE & ANTI RECOIL BOTH OFF) 
                      - OFF                                  = EDIT MODE IS ON
                      - KEEPS BLINKING						 = ANTI RECOIL TIME VALUE NEEDS TO BE CALIBRATED!!
                     
  ____________________________ ANTI RECOIL ________________________________________________                    
    
    HOLD D_PAD DOWN +
                       - TAP A / CROSS    -> MW_ SLOT MW_A
                       - TAP B / CIRCLE   -> MW_ SLOT MW_B                       
                       - TAP X / SQUARE   -> MW_ SLOT MW_X 
                       - TAP Y / TRIANGLE -> MW_ SLOT MW_Y
                      
    NOTE: YOU CAN SWITCH BETWEEN THE PROFILES/SLOTS AT ANY TIME. ALL VALUES YOU SAVE, INCLUDING RELOAD TIMES 
    ARE AUTO SAVED ON THE ACTIVE SLOT ONLY. FOR THIS TO WORK WITHOUT ANY ISSUES, MAKE SURE THAT - BEFORE YOU COMPILE
    THE SCRIPTS TO THE SLOTS OF YOUR CRONUSMAX THAT YOU CLEAN THE DEVICE MEMORY ("DEVICE CLEANUP"). 
                     
    HOW TO CHANGE ANTI RECOIL VALUES ON THE FLY:
     
         1. ACTIVATE THE ANTI RECCOIL SLOT YOU WANT TO MODIFY
         2. START ANTI RECOIL IF IT IS SWITCHED OFF (HOLD ADS + TAP UP)
         3. ENTER THE EDIT MENU -> IN EDIT MODE THE LED WILL BE OFF
         4. EDIT VALUES (SEE BELOW)
         5. LEAVE EDIT MENU 
        
       

     
    TOGGLE THE EDIT MENU ON/OFF 
             HOLD B / CIRCLE AND HOLD Y / TRIANGLE +
             
                 - TAP D_PAD DOWN (RESETS THE RECOIL TIME VALUE TO 0, use this option if you are setting AR for the first time or for a new weapon)
                     
                 OR
                 
                - TAP D_PAD UP (DOES NOT RESET THE RECOIL TIME VALUE, use this option if you only want to tweak the recoil values of a saved weapon))
                 
    EDIT MENU:
   
    *IMPORTANT* *IMPORTANT* *IMPORTANT* *IMPORTANT* *IMPORTANT* *IMPORTANT* *IMPORTANT* *IMPORTANT* *IMPORTANT* 
    *IMPORTANT* if the time value is not calibrated, the advanced anti recoil will not work *IMPORTANT* *IMPORTANT* 
        
        TIME VALUE:
            HOLD PS4_L2 / XB1_LT AND HOLD D-PAD DOWN +
                - HOLD FIRE UNTIL YOU YOUR LAST BULLET IS FIRED FROM YOUR CLIP
    
        START VALUE VERTICAL: 
               HOLD PS4_L2 / XB1_LT  AND HOLD RELOAD BUTTON + 
                - TAP UP = +1 (*)
                - TAP DOWN = -1 (*)
                - TAP RIGHT = +10 (*)
                - TAP DOWN = -10 (*)
 
          END VALUE VERTICAL: 
               HOLD PS4_L2 / XB1_LT  AND HOLD PS4_CIRCLE / XB1_B BUTTON + 
                - TAP UP = +1 (*)
                - TAP DOWN = -1 (*)
                - TAP RIGHT = +10 (*)
                - TAP DOWN = -10 (*)
                
        HORIZONTAL VALUE:
            HOLD PS4_L2 / XB1_LT  AND HOLD PS4_TRIANGLE / XB1_Y BUTTON + 
                - TAP UP = +1 (*)
                - TAP DOWN = -1 (*)    
                - TAP RIGHT = +10 (*)
                - TAP DOWN = -10 (*)
            
        * =    FLASHES LED WITH EACH TAP
                - FLASH 1x if a value changes by plus or minus 1 
                - FLASH 2x if changed by plus or minus 10 

         SAVE VALUES
            Values are auto saved
            
                      
   ____________________________ RELOAD TIME CALIBRATION ________________________________________________                    
       
IMPORTANT: THE SCRIPT WILL NOT FUNCTION PROPERLY IF YOU DO NOT CALIBRATE THE RELOAD TIME
SO DO NOT SKIP THIS STEP

THIS TIME VALUE IS USED FOR:
- 	AUTO CANCEL RELOAD (to cancel out of a reload press fire or press ads)
- 	(Modern Warfare:) PREVENT "SPRINT CANCEL RELOAD" WHEN EASY_RUN (AUTO SPRINT) IS ON

TO CALIBRATE THE RELOAD & SPRINT CANCEL TIME VALUE:

- BEFORE RELOADING; HOLD D-PAD DOWN
- THEN PRESS RELOAD TO START RELOADING AND HOLD DOWN THE RELOAD BTN DURING RELOAD ANIMATION
- IT WILL RUMBLE ONCE AFTER 500ms TO CONFIRM THAT YOU ARE CALIBRATING
- RELEASE THE RELOAD BTN EXACTLY AT THE END OF THE RELOAD ANIMATION
- IT WILL RUMBLE TWICE TO CONFIRM SUCCESSFULL CALIBRATION
- NOW YOU CAN RELEASE ALSO THE D_PAD DOWN BTN

AGAIN: THE RELOAD TIME YOU JUST CALIBRATED PREVENTS "SPRINT CANCEL RELOAD" BUT IT IS
ALSO IS THE TIME IN WHICH YOU CAN CANCEL OUT OF A RELOAD BY FIRING OR AIMING YOUR WEAPON
  
  ____________________________ AIM CORRECTIONS ________________________________________________  
    
THE IDEA BEHIND AIM CORRECTIONS IS THAT YOU HIGHER YOUR IN-GAME SENSITIVITY WITH 2 OR 3
CLICKS. THIS WILL ALLOW YOU TO TURN AROUND FAST WITHOUT LOSING CONTROL OVER YOUR AIM:
THE SCRIPT WILL LOWER YOUR SENSITIVITY WHEN YOU AIM AND EVEN MORE WHEN YOU AIM & FIRE
SO THAT YOU CAN LOCK ON TARGET. SO FOR EXAMPLE: IF YOU PLAY NORMALLY WITH SENS 8 IN THE
GAME, SET YOUR SENSITIVITY TO 11 IN THE GAME MENU. THIS IS IMPORTANT IF YOU WANT TO GET 
THE MOST OUT OF THIS SCRIPT. OKAY, LET`S DO THIS STEP BY STEP. FOLLOW THE STEPS BELOW.

1) HIGHER YOUR IN-GAME-STICK SENSIVITY. RECOMMENDED: 3 OR 4 CLICKS. 
2) IN THIS SCRIPT FILL OUT THE IN-GAME STICK SENSITIVITY YOU JUST CONFIGURED. 
   YOU FILL THIS OUT UNDER "USER CONFIG STEP 2". 
3) THAT`S IT! YOU`RE ALL SET AND GOOD TO GO!

AIM CORRECTIONS IS NOW AUTOMATICALLY OPTIMIZED TO YOUR IN GAME SENSITIVITY, MAKING THE
AIM ASSIST STRONGER. IT WILL TAKE A FEW ROUNDS TO ADJUST, BUT IF YOU FEEL THAT THE AIM
CORRECTIONS ARE NOT "RIGHT" FOR YOU TWEAK THE VALUES ON THE FLY:

TO TWEAK AIM CORRECTIONS ON THE FLY

- HOLD B/CIRCLE AND HOLD TRIANGLE / Y + TAP SHARE / VIEW (-1)
- HOLD B/CIRCLE AND HOLD TRIANGLE / Y + TAP MENU / OPTIONS (+1)

TO GIVE YOU A RANDOM EXAMPLE: BEFORE THIS SCRIPT I WAS PLAYING ON SENS 8 IN THE GAME MENU.
I STARTED USING THIS SCRIPT WITH IN THE GAME SENS AT 11, AND FILLED OUT 11 IN THIS SCRIPT.
AFTER TWEAKING THE VALUE, I DISCOVERED THAT 11/14 (11 IN THE GAME MENU, 14 IN THE SCRIPT) 
WORKS PERFECT FOR ME. AGAIN, I TRULY RECOMMEND YOU TO FOLLOW THESE INSTRUCTIONS TO THE 
LETTER. YES, YOU WILL HAVE A COUPLE OF GAMES THAT YOU ARE OUT OF YOUR COMFORT ZONE, BECAUSE
YOUR MOVEMENT SENS IS HIGHER THAN WHAT YOU ARE USED TO, BUT 100% GUARANTEED YOU WILL BENEFIT
LIKE YOU NEVER IMAGINED BEFORE ONCE YOU GET USED TO IT: IT WILL BOOST YOUR GAME PLAY TO THE NEXT
LEVEL AND YOU WILL EXPERIENCE THE BEST POSSIBLE AIM ASSIST IN COD. THIS IS NO BULLSHIT, BELIEVE
ME - I KNOW WHAT I AM TALKING ABOUT, WE INVENTED THE AIM
ASSIST IN COD, I LEARNED A GREAT DEAL FROM HIM). I ADDED AIM ASSIT TO MY SCRIPT SINCE BLACK OPS 3
AND UNTIL KNOW IT REMAINS UNBEATEN WHEN IT COMES TO IT`S STRENGTH. YES, THE CODE IS THE SAME
AS ALL THE OTHERS ARE USING, BUT THE DIFFERENCE IS BECAUSE OF THE AIM CORRECTION WHICH I INVENTED
TO GAIN THE MOST OUT OF AIM ASSIST AT HIGHER SENSITIVITY LEVELS. 
             
        
   ____________________________ DYNAMIC RAPID FIRE ________________________________________________ 
    
    DYNAMIC RAPID FIRE: FIRE RATE INCREASES WITH THE AMOUNT OF PRESSURE APPLIED TO THE TRIGGER
    
    
   ____________________________ CANCEL SLIDE (MODERN WARFARE ONLY)_________________________________
  
  WHILST SPRINTING (USING EASY_RUN FROM THE SCRIPT) TAP PRONE TO SLIDE. TAP AGAIN PRONE TO CANCEL SLIDE. 
  IN THE GAME MENU YOU DO NOT ACTIVATE THE AUTO SLIDE. SO IN THE GAME MENU YOU ACTIVATE HOLD PRONE FOR SLIDE. 
  
        
 ------------------------------------/ END SHORT INSTRUCTIONS \--------------------------------------------      

         
 __________________________________________________________________________________________________________
     
                SCRIPT STARTS HERE / MAKE NO CHANGES UNLESS INDICATED
 __________________________________________________________________________________________________________    


+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
| | | | | |S|T|I|M|P|S|O|N|`|S| |L|E|D|S| | | | | | | | | | | | | | | | | | | | | | | |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+*/
define Blue       =  1;  
define Red        =  2;  
define Green      =  3;  
define Pink       =  4;  
define SkyBlue    =  5;  
define Yellow     =  6;  
define White      =  7;  
define ColorOFF   =  8;  
//--------------------------------------
data(1,// begin of data segment-------- 
  2,0,0,0, //1. Blue     
  0,2,0,0, //2. Red      
  0,0,2,0, //3. Green    
  0,0,0,2, //4. Pink     
  2,0,2,0, //5. SkyBlue 
  0,2,2,0, //6. Yellow   
  2,2,2,2, //7. White    
  0,0,0,0  //8. Color OFF 
); // end of data segment--------------  


/*
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 | | | | | | | | |V|A|R|I|A|B|L|E|S| | | | | | | | | | | | | | | | | | | | | | | | | | |
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ 

------------------------------------------- AR values*/ 

int ar_sY;
int ar_eY;
int ar_tm;
int ar_sX;


int interval, iteration_point;
int i_, i_count;
int AR_V;
int RY, RX;

int pin = 145;   
int code;       
int record;     
int default_v;
int current_x, current_y;

int edit = FALSE;
int no_recoil=TRUE;
int wtime;


int switch=TRUE;
int b=0;
//---aim corrections variables (script controls sens for: hip fire, general, tactical & lethal grenade, ads, ads + fire and long shots (zoom sens))
int ads_grenade_sens, ads_fire_sens, Sens;
//--RF

//--EASY THUMBS
int auto_run=0;


 
//---other variables used by the script

int notify, notifier;
int wpn_holster=FALSE; 
int d_click;

int rld_time, b_reload=FALSE;
int rapid_fire=FALSE;
int first_time;
int newt;
int slot;
int once=1;
int Profile_clr;
int Col_ind;



init {

    //global saved values (applies to all slots)    
    in_game_menu_sens = get_pvar(PVAR_15, 3, 20, 12); 
    first_time = get_pvar(PVAR_16, 0, 1, 1);
    default_v = get_pvar(PVAR_14, 3, 20, 12);
    //local saved values (applies only to the slot where the script is installed)
    rld_time= get_pvar(SPVAR_3, 0, 4000, 1200);    
	slot = get_slot () 
    code = get_pvar(SPVAR_16,140,150,140);
    if (pin ==145){
     if (slot == MW_X){
 	ar_sY = 26; // start value v
 	ar_eY = 22; // end value v
 	ar_tm = 2600; // time value
 	ar_sX = -11; // horizontal value
 	Profile_clr = SkyBlue;}
     if (slot == MW_B){
 	ar_sY = 29; // start value v
 	ar_eY = 17; // end value v
 	ar_tm = 2700; // time value
 	ar_sX = -13; // horizontal value
 	Profile_clr = Green;}
     if (slot == MW_A){
 	ar_sY = 29; // start value v
 	ar_eY = 10; // end value v
 	ar_tm = 6400; // time value
 	ar_sX = -9; // horizontal value
 	Profile_clr = Pink;}
 	if (slot == MW_Y){
     ar_sY = 26; // start value v
     ar_eY = 22; // end value v
     ar_tm = 2600; // time value
     ar_sX = -11; // horizontal value
     Profile_clr = Yellow;}
     }
/*    these values are just good start values (I used NO attachments)        
            time    start    end        horiz
kilo 141    2800    28        28         4
m4a1        2700    29        17        -13
oden        3200    30        26         9
m13         2500    23        29        -18
fn scar 17  2300    33        25        -13
ak47        3700    33        15         7
                
mp5          2600    26        22        -11
mp7          2900    25        25         7
aug          2300    26        26        -11
p90          3800    28        22        -14
uzi          0       29        0         1
bizon        6400    29        10        -9

----------------------------------------- end AR values*/
    if(code == pin) {    
    ar_tm = get_pvar(SPVAR_4, -30000,30000,5000); ar_sY = get_pvar(SPVAR_9, -100,100,15);        
    ar_eY = get_pvar(SPVAR_14,-100,100,35); ar_sX = get_pvar(SPVAR_5, -100,100,5); 
    }

}

main{


if(d_click) {d_click -= get_rtime();}

    if (get_val (FIRE)) // only active when firing to allow microaim 
    {    

     //---stick noise
    current_x = dz(AIM_H,0);
    current_y = dz(AIM_V,0);
    }

   if (first_time == 1)//this should automatically clear any old data saved to your eprom memory to avoid issues 
                       {
                       default_v=in_game_menu_sens;
                       RESET_Defaults(); 
                       }  
                       
 //--cancel slide by Crescens

if (cancel_slide) 
								
				{
				if((get_val(WALK) < -60) || (get_val(WALK) > 60) || (get_val(STRAFE) < -60) || (get_val(STRAFE) > 60)) 
					{
					if (event_press(PRONE)&& d_click ) 	
													{
													combo_run (CNL_SLIDE);
													}
					else if (event_press(PRONE)&& !d_click)
                                                	{
                                                 	d_click = 1200;
                                                 	combo_run (EASY_SLIDE);
                                                 	}
                  	}
									 
									 
									
				}			                 
                    
/*    
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 | | | |M|E|N|U| |A|D|S| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | |
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+*/
   if(get_val(ADS) && get_val(PS4_SHARE) && get_ptime (PS4_SHARE) > 800)
                     { 
                     RESET_Defaults();  
                     }
                         
           if(get_val(ADS) && !edit)
           {
                
     //--FIRE MODS OFF 
     if(event_press(PS4_DOWN))
                 {//D-pad DOWN
                     switch=FALSE
                     rapid_fire=FALSE;
                     notify (rapid_fire);
                     wpn_holster=FALSE;
                     no_recoil=FALSE;
                  }
 //--FIRE MODS OFF / anti recoil on
     if(event_press(PS4_UP))
                 {//D-pad UP
                     switch=TRUE
                     rapid_fire=FALSE;
                     notify (rapid_fire);
                     wpn_holster=FALSE;
                     no_recoil=TRUE;
                       
                 }
 //--RAPID FIRE ON
     if(event_press(PS4_RIGHT))
                 {//D-pad RIGHT
                     switch=FALSE
                     rapid_fire=TRUE;           
                     notify (rapid_fire);
                     wpn_holster=FALSE;
                     no_recoil=FALSE;                     
                 }
 //--rapid_fire SECONDANRY
     if(event_press(PS4_LEFT))
                 {//D-pad LEFT
                      switch = TRUE
                      rapid_fire=TRUE;
                      wpn_holster=TRUE;
                      notify (wpn_holster);
                      no_recoil=FALSE;     
                 }
     if (get_val (PS4_LEFT)&& get_ptime (PS4_LEFT) > 800)
                 {
                     no_recoil=TRUE;
                     notify (no_recoil);
                     
                 }
 
     if(event_press (WII_PLUS))
                { 
                      sprint_cncl_reload = !sprint_cncl_reload;    notify (sprint_cncl_reload);       
                }
        
    btn (PS4_SHARE);btn (PS4_LEFT);btn (PS4_RIGHT);btn (PS4_UP);btn (PS4_DOWN);btn (WII_HOME); btn (WII_PLUS);
                 
     }
     if (wpn_holster){
                         if (event_press(FIRE)&& d_click)       
                                             { 
                                            switch = FALSE; notify (switch); 
                                             }
                 else if (event_press(FIRE)&& !d_click)
                                                 {
                                                 d_click = 300;
                                                 }
     }//--END
 /*
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  | | | | | | | | |R|E|C|O|R|D| |T|I|M|E| | | | | | | | | | | | | | | | | | | | | | | | |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+*/ 
     if(!edit && get_val(XB1_DOWN) && get_val (XB1_X) && get_ptime (XB1_X)>500 && !record)     
                                             { 
                                             record = TRUE; notify (record); 
                                             }
       
                 if (record)
                                  {
                                  rld_time = get_ptime(XB1_X);
                                                          if (event_release (XB1_X))
                                                          { 
                                                         record = FALSE; b=2;
                                                         }
                                 }                                
  
 
 
  /*
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  | | | | | | | | |C|A|N|C|E|L| |R|E|L|O|A|D| | | | | | | | | | | | | | | | | | | | | | |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+*/
   
     if(event_release(XB1_X) && get_ptime(XB1_X) < 300) b_reload = rld_time; 
                 
            if(smart_reload && b_reload &&!edit ) 
            {//--countdown 
            	b_reload -= get_rtime();
            		if(b_reload < 0) b_reload = 0;
            			if(event_press(FIRE) || event_press(ADS)) combo_run(CANCEL_RLD);
            }

 /*
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  | | | | | | | | |W|E|A|P|O|N| |F|I|R|E| |M|O|D|S| | | | | | | | | | | | | | | | | | | |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+*/     
     if(event_release(XB1_Y) && get_ptime(XB1_Y) < 300 && wpn_holster)
                                 {                          
                                 switch = !switch; notify (switch); 
                                 }  
 
 
     if (record==FALSE &&wpn_holster && get_val (XB1_X) && get_ptime(XB1_X) > 180 && once == 1) 
                            	{//--RESET 
		 						switch = !switch; notify (!switch); once = once - 1; 
								}
								if (once < 1 && event_release (20))once = 1;
                                 
                                  
								
 //-- Rapid fire 
     if (rapid_fire)
     {
    	wtime = 125 - (get_val(FIRE)) ;
 
         {
         if (!switch && wpn_holster || !switch &&!wpn_holster)
                                             {
                                             if (get_val (FIRE) && rapid_fire )                       
                                                                             {
                                                                             combo_run (RAPID_FIRE);                                                                           
                                                                             }
                                             }else if(combo_running(RAPID_FIRE)){  
            combo_stop(RAPID_FIRE);}
         }
 
     }
                      /*
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 | | | | | | | | |A|I|M| | |C|O|R|R|E|C|T|I|O|N|S| | | | | | | | | | | | | | | | | | | |
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+                                                      _     _    
*/
 
  if(aim_sens_corrections)
                         {//----------------------------start AIM CORRECTIONS
                        ads_grenade_sens=100-(in_game_menu_sens); ads_fire_sens=96-(in_game_menu_sens); 
                        
       if (get_val (ADS))
                   
           
                          {
                                      if(get_val(FIRE) && get_val(ADS))                              
                                              { 
                                              Sens = ads_fire_sens;                                              
                                              }
                                    if(!get_val(FIRE) && !get_val(ADS) || get_val (FIRE) &&!get_val(ADS)) 
                                              {
                                            Sens = 100; //--general sens & hip fire sens 
                                              }   
                                      if(!get_val(FIRE) && get_val(ADS) || get_val (LETHAL) && !get_val (ADS) || get_val (TACTICAL) && !get_val (ADS)) 
                                              {
                                            Sens = ads_grenade_sens;
                                              }
           
        if(Sens > 100) Sens = 100;  
        sensitivity(AIM_H, NOT_USE, Sens);
        sensitivity(AIM_V, NOT_USE, Sens);
    }
    }  //----------------------------end AIM_CORRECTIONS 

if (get_val(XB1_B) &&get_val(XB1_Y))
         {
                     if (no_recoil && switch)
                                             {
                                             if (event_press (XB1_DOWN)) 
                                                                          {
                                                                          edit=!edit;
                                                                          notify (edit);
                                                                          if (edit){
                                                                          ar_t();}
                                                                          if (!edit)
                                                                          save__();
                                                                          }    
                                            if (event_press(XB1_UP))
                                                                         {
                                                                         edit=!edit;
                                                                          notify (edit);
                                                                          if (!edit)
                                                                          save__();
                                                                         } 
                                             }
                  
             
 
         btn (XB1_B); btn(XB1_Y);  btn (XB1_UP); btn (XB1_DOWN); btn (XB1_VIEW); btn(XB1_MENU);//-START     
         }/*
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 | | | | | | | | |A|U|T|O| |R|U|N| |+| |E|A|S|Y| |T|H|U|M|B| | | | | | | | | | | | | | |
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+*/
 if (smart_thumb_stick >  0)     auto_run=1;
 if (smart_thumb_stick == 2 && get_val(XB1_LS)){set_val(l_stick_click, 100);}
 if (sprint_cncl_reload == 1){
  if (auto_run)
                  if (!b_reload && !get_val(ADS)&& get_val(WALK) < (walk_tresh))
                                                                                {
                                                                                 combo_run (EASY_RUN);
                                                                                 }
                                                                                 }
if (sprint_cncl_reload == 0){
  if (auto_run)
                  if (!get_val(ADS)&& get_val(WALK) < (walk_tresh))
                                                                                {
                                                                                 combo_run (EASY_RUN);
                                                                                 }
                                                                                 }                                                          
                                                                                 
                                                             /*
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 | | | | | | | | |A|I|M| |A|S|S|I|S|T| | | | | | | | | | | | | | | | | | | | | | | | | |
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+*/
if (sticky_aim_assist)
                {
                if(get_val(ADS)) combo_run(STICKY_AIM);
                else combo_stop(STICKY_AIM);                
                }/*
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 | | | | | | | | |A|N|T|I| |R|E|C|O|I|L| | | | | | | | | | | | | | | | | | | | | | | | |
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 */   
 if(get_val(XB1_DOWN) && !get_val(ADS)) 
    { 
     if(event_release(XB1_X) && get_ptime (XB1_X)<500)
            {load_slot(MW_X);} 
        if(event_press(XB1_A))
            {load_slot(MW_A);} 
        if(event_press(XB1_B))
            {load_slot(MW_B);} 
        if(event_press(XB1_Y))
            {load_slot(MW_Y);} 
    btn(XB1_B);btn (XB1_A);btn (XB1_Y); btn (XB1_LB); btn (XB1_RB); btn (XB1_RS);
    } 
    

if (no_recoil && switch)
                {  
 if(ar_sY < ar_eY)
        interval = 1;
       else
        interval = -1;

      iteration_point = (ar_tm / 10) / (abs(ar_sY - ar_eY));

    if(!get_lval(FIRE))
                        {
                           AR_V = ar_sY;
                           i_count = 0;
                           i_ = 0;
                        }
  

    if(get_val(FIRE))
                    {
                   
                    AntiRecoil(AIM_H, ar_sX);
                    if(!p())
                    AR_V = c();
                    else
                    AR_V = (ar_eY);
                    AntiRecoil(AIM_V, AR_V)
                    }
   
   
    // DOWN end 

    if (edit){
     if(get_val(ADS) && get_val(XB1_DOWN) && get_val (FIRE)) {newt=TRUE;}   
                                          
       
                 if (newt)
                                  {
                                  ar_tm = ar_tm + get_rtime();b=4;
                                                          if (event_release (FIRE))
                                                          { 
                                                         set_pvar(SPVAR_4 ,ar_tm); newt=FALSE; notify (newt);
                                                          }
                                  }
 
    if(get_val(ADS)) 
    { 
        if(get_val(XB1_X)) 
        {
            if(event_press(XB1_UP))
                {ar_sY += 1;  b=1;}        
            if(event_press(XB1_DOWN))
                {ar_sY -= 1;  b=1;}   
            if(event_press(XB1_RIGHT))
                {ar_sY += 10;  b=2;} 
            if(event_press(XB1_LEFT))
                {ar_sY -= 10; b=2;} 
        }
 
        if(get_val(XB1_B)) 
        {
            if(event_press(XB1_UP)) 
                {ar_eY += 1;  b=1;}        
            if(event_press(XB1_DOWN))
                {ar_eY -= 1;  b=1; }   
            if(event_press(XB1_RIGHT))
                {ar_eY += 10;   b=2; } 
            if(event_press(XB1_LEFT))
                {ar_eY -= 10;  b=2; } 
        }
 
   
        
        if(get_val (XB1_Y))
        { 
            if(event_press(XB1_UP))
                {ar_sX += 1;  b=1;}         
            if(event_press(XB1_DOWN))
                {ar_sX -= 1;  b=1;} 
            if(event_press(XB1_RIGHT))
                {ar_sX += 10;   b=2; } 
            if(event_press(XB1_LEFT))
                {ar_sX -= 10;  b=2; } 
        } 
        
 btn(XB1_X);btn(XB1_A);btn(XB1_Y);btn(XB1_B);btn(XB1_UP);btn(XB1_DOWN);btn(XB1_RIGHT);btn(XB1_LEFT);
    } // ADS end


        } // EDIT end
     
 } // no_recoil && switch end

 /*
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  | | | | | | | | |L|E|D|S| |R|U|M|B|L|E| | | | | | | | | | | | | | | | | | | | | | | | |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+*/ 
       	if (b>0) blink ();
		if (!get_ledx())
    				{
    				if(edit==TRUE) colourled (ColorOFF);
    				else if (ar_tm==0) set_ledx(LED_1, 1);
   					else if (wpn_holster && !switch || !wpn_holster && rapid_fire && !switch)  colourled (Red);
   					else if (no_recoil) colourled (Profile_clr);
   					else colourled (Blue);
   					}
      
    if(notify) {
        notifier += get_rtime();
        if(notifier < 150) set_rumble(1,75);
        else if(notifier < 400) reset_rumble();
        else {
            notify -= 1;
            notifier = 0;
        }
        
    }

}
//--END OF MAIN
/*
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 | | | | | | | | |C|O|M|B|O| |S|E|C|T|I|O|N| | | | | | | | | | | | | | | | | | | | | | |
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+*/
  combo STICKY_AIM {
    set_val(AIM_V,xy_val(AIM_V, _v));
    wait(20);
    set_val(AIM_H,xy_val(AIM_H, _v));
    set_val(STRAFE,xy_val(STRAFE, _v));
    wait(20);
    set_val(AIM_V,xy_val(AIM_V, _v * -1));
    wait(20);
    set_val(AIM_H,xy_val(AIM_H, _v * -1));
    set_val(STRAFE,xy_val(STRAFE, _v * -1));
    wait(20);
    }
combo EASY_SLIDE{
	set_val (PRONE, 100)
	wait(1200);
	set_val (PRONE, 0)
	wait(500);
	}
combo CNL_SLIDE { 
	combo_stop (EASY_SLIDE);
	wait(14); 
	set_val(PRONE, 100);
	wait(14); 
	set_val(PRONE, 100);
	set_val(JUMP, 100);
	wait(12);
	set_val(PRONE, 0);
	set_val(JUMP, 100);
	wait(12);
	set_val(JUMP, 0);
	} 
combo RAPID_FIRE { 
    set_val(FIRE,100);
    wait(wtime); 
    set_val(FIRE,  0); 
    wait(wtime);
    } 
 combo CANCEL_RLD {  
     set_val(XB1_Y, 100);
     wait(30);
     wait(20);
     set_val(XB1_Y, 100);
     wait(30);
     wait(20);
     b_reload=FALSE;
     }
combo EASY_RUN{
    set_val(SPRINT,100);       
    wait(30);                     
    wait(100);      
    } 
function notify(pos) {
    if(pos)
        notify = 1;
    else
        notify = 2;
} 
function btn(f__btn) {
    if (!get_val(f__btn)) return; 
    set_val(f__btn, 0);
    }  
function RESET_Defaults () { 
    in_game_menu_sens=default_v;
    first_time=0;  
    rld_time=1200;   
    save_pvars ();    
    }
function save_pvars () {            
    set_pvar(PVAR_15, in_game_menu_sens);
    set_pvar(PVAR_14, default_v);
    set_pvar(PVAR_16, first_time); 
    set_pvar(SPVAR_3, rld_time); 
    notify (!1);
    }
function save__ (){
    set_pvar(SPVAR_5 ,ar_sX); 
    set_pvar(SPVAR_9 ,ar_sY);
    set_pvar(SPVAR_14,ar_eY); 
    set_pvar(SPVAR_16,pin); notify(!1);
    }
function ar_t (){
    ar_tm=0;
    }
function blink (){
    set_ledx(LED_1, b);
    set_ledx(LED_2, b);
    set_ledx(LED_4, b);
    if (b==1 || b==2) save_pvars ();
    b=0;
    }

function dz(f_axis,f_val) {
    f_val = get_val(f_axis);
    if(abs(f_val) < StickNoise) {
    set_val(f_axis,0); 
    return 0;
    }
    return f_val;
}
function xy_val(f_axis,f_val) {
    if(abs(get_val(f_axis)) < (_v + 1))  
    return f_val;    
    return get_val(f_axis);     
} 
function p() {
    i_count++;
     if (i_count > (ar_tm / 10))
    {
    i_count = (ar_tm / 10);
    return 1;
    }
    return 0;
    }
function c() {
    i_++;
    if(i_ == iteration_point)
    {
    i_ = 0;
    AR_V += interval;
    }
    return AR_V;
    }

function AntiRecoil (axis, recoil){
 
     RY = current_y;
     RX = current_x;
 
    if (get_val(FIRE) && (isqrt(RX*RX + RY*RY)) <= abs(recoil))
    {
        if(abs(RY) <= abs(recoil))
        {
            set_val(axis,(recoil * (100 - abs(get_val(axis)))) / 100 + get_val(axis));
        }
    }
}
function colourled(Colour) {         
	Col_ind=(Colour*4)- 3;             
	set_led(LED_1,dbyte(Col_ind  ));   
	set_led(LED_2,dbyte(Col_ind+ 1));  
	set_led(LED_3,dbyte(Col_ind+ 2));  
	set_led(LED_4,dbyte(Col_ind+ 3));  
} 
/*Credits:
- script by CRISIS
- based on open source libraries from multiple platforms and own development 
- in general my scripts may contain a mix of the earlY and evolved work from Excalibur.
*/