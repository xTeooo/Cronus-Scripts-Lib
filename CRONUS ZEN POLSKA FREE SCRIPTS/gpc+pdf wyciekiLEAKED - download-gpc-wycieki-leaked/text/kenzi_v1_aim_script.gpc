// GPC Online Library
// fortnite_destroyer.gpc


 /*
 = = = = = = = = = = = = = = = = = = =
 = /\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\  =
 = /\/\/\  Made By kenzi  /\/\/\  =
 = /\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\  =
 = = = = = = = = = = = = = = = = = = =
 
 ==========================
 === Fortnite Destroyer ===
 ==========================
 
 ===================
 === Version 3.0 ===
 ===================
 
 ================
 === FEATURES ===
 ================
 Aim Abuse
 Aim Assist
 Ghost Peek
 Rapid Fire
 100% Accuracy
 Drop Shot
 Jump Shot
 Insta Edit
 Auto Run
 Strafe
 
 =================
 === Important ===
 ========================================================================
 === Recommended you read all the text below to understand everything ===
 ========================================================================
 
 ======================
 === In-Game Layout ===
 ============================================================
 === Builder Pro - Can be adjusted in Layout & Insta Edit ===
 ============================================================
 
 =================
 === Aim Abuse ===
 =============================================================
 === Must Use Legacy Look Controls For Aim Abuse To Work   ===
 =============================================================
 
 =====================
 === Reset Toggles ===
 ==================================================
 === OPTIONS/MENU + SHARE/VIEW To Reset Toggles ===
 ==================================================
 
 ===================
 === Toggle Menu ===
 =============================================================================================================
 === Before being able to turn ON/OFF Toggles you will have to open the Toggle Menu by doing the following ===
 === R1/RB + D-PAD UP                                                                                      ===
 === When ON your LED will flash Rainbow now you able to turn on any features you want                     ===
 === After you done make sure to disable the Toggle Menu                                                   ===
 === Your LED will be Black when your out of the Toggle Menu                                               ===
 =============================================================================================================
 
 ================================
 === TOGGLES YOU CAN ACTIVATE ===
 ================================
 
 ==================
 === Rapid Fire ===
 =====================================
 === Hold L2/LT And Press D-PAD UP ===
 === 1 Rumble = ON 2 = OFF         ===
 =====================================
 === Activation In-Game ===
 ==========================
 === Hold R2/RT ===
 ==================
 
 =====================
 === 100% Accuracy ===
 ======================================================
 === Hold L2/LT And Press CROSS/A For 100% Accuracy ===
 === 1 Rumble = ON 2 = OFF                          ===
 ======================================================
 === Activation In-Game ===
 =====================================
 === Hold L2/LT And Hold/Tap R1/RB ===
 =====================================
 
 =================
 === Drop Shot ===
 ========================================
 === Hold L2/LT And Press D-PAD RIGHT ===
 === 1 Rumble = ON 2 = OFF            ===
 ========================================
 === Activation In-Game ===
 ============================
 === Hold L2/LT And R2/RT ===
 ============================
 
 ==================
 === Ghost Peek ===
 =====================================
 === Hold L2/LT And Press SQUARE/X ===
 === 1 Rumble = ON 2 = OFF         ===
 =====================================
 === Activation In-Game ===
 ==========================================
 === Hold L2/LT And Hold/Tap D-PAD LEFT ===
 ==========================================
 
 =================
 === Jump Shot ===
 =======================================
 === Hold L2/LT And Press D-PAD DOWN ===
 === 1 Rumble = ON 2 = OFF           ===
 =======================================
 === Activation In-Game ===
 ==========================
 === Press R2/RT ===
 ===================
 
 ==============
 === Strafe ===
 ==================================
 === Hold L2/LT And Press R3/RS ===
 === 1 Rumble = ON 2 = OFF      ===
 ==================================
 === Activation In-Game ===
 =================================
 === Hold L2/LT And Hold R2/RT ===
 =================================
 
 ===================
 === Anti Recoil ===
 =======================================
 === Hold L2/LT And Press TRIANGLE/Y ===
 === 1 Rumble = ON 2 = OFF           ===
 =======================================
 === Activation In-Game ===
 =================================
 === Hold L2/LT And Hold R2/RT ===
 =================================
 
 =================
 === Aim Abuse ===
 ==================================
 === Hold L2/LT And Press L1/LB ===
 === 1 Rumble = ON 2 = OFF      ===
 ==================================
 === Activation In-Game ===
 ===================================
 === Hold L2/LT All The Way Down ===
 ===================================
 */

    //Layout
    define PS = PS4_PS; //XBOX
    define SHARE = PS4_SHARE; //VIEW
    define OPTIONS = PS4_OPTIONS; //MENU
    define R1 = PS4_R1; //RB
    define R2 = PS4_R2; //RT
    define R3 = PS4_R3; //RS
    define L1 = PS4_L1; //LB
    define L2 = PS4_L2; //LT
    define L3 = PS4_L3; //LS
    define RX = PS4_RX;
    define RY = PS4_RY;
    define LX = PS4_LX;
    define LY = PS4_LY;
    define UP = PS4_UP;
    define DOWN = PS4_DOWN;
    define LEFT = PS4_LEFT;
    define RIGHT = PS4_RIGHT;
    define TRIANGLE = PS4_TRIANGLE; //Y
    define CIRCLE = PS4_CIRCLE; //B
    define CROSS = PS4_CROSS; //A
    define SQUARE = PS4_SQUARE //X
    define TOUCHPAD = PS4_TOUCH;
    
    //Customize Non Toggles
    int R1L1 = OFF; //Change OFF TO ON If you want Flipped Triggers
    int AST = ON; //Change ON TO OFF If you don't want Aim Assist
    int ART = OFF; //Change OFF TO ON If you want Auto Run
    
    //Customize Toggles
    int Recoil = OFF; //Change OFF TO ON If you want Anti Recoil ON By Default
    int ABT = OFF; //Change OFF TO ON If you want Aim Abuse ON By Default
    int ACR = OFF; //Change OFF TO ON If you want 100% Accuracy ON By Default
    int RFT = OFF; //Change OFF TO ON If you want Rapid Fire ON By Default
    int DST = OFF; //Change OFF TO ON If you want Drop Shot ON By Default
    int JST = OFF; //Change OFF TO ON If you want Jump Shot ON By Default
    int STT = OFF; //Change OFF TO ON If you want Strafe ON By Default
    int GP = OFF; //Change OFF TO ON If you want Ghost Peek ON By Default
    
    //Speed Of Features
    int RF_Speed = 40; //Rapid Fire Speed
    int DS_Speed = 30; //Drop Shot Speed
    int JS_Speed = 40; //Jump Shot Speed
    int ST_Left = 160; //Left Strafe Speed
    int ST_Right = 160; //Right Strafe Speed
    /*NOTE:
    Higher values = Slower
    Lower values = Faster
    Everything is in milliseconds*/
    
    //Insta Edit
    int EDIT_BUTTON_HOLD = ON; //Does your edit button has a hold delay? ON means Yes -- OFF mean No
    int HOLD_TIME = 100; //Type the hold time which is shown in Fortnite settings, in hundereds because cronusmax already know its in MS. |0.10 = 100| |0.25 = 250|
    int EDIT_BUTTON = CIRCLE; //Your Edit Button
    int CONFIRM_BUTTON = CIRCLE; //Your Confirm Button
    int RESET_EDIT_BUTTON = R3 //Your Reset Edit Button

    //Aim Assist
    int AP = 17; //Decrease if shake
    int AM = -17; //Decrease if shake
    int Delay = 20 //Aim Assist speed
    int Release = 18; //Recommended to be 1 higher than AP & AM

    //Aim Abuse
    int HOLD = 230; //How long L2/LT is held
    int RELEASE = 20; //How long before L2/LT is held again after release

    //Anti Recoil
    int AR = 6; //Vertical Recoil
    int AR_H = 0; //Horizontal Recoil
    int AR_I = 1; //Change 1 to -1 If you play with Inverted

    //Toggles
    int ARS;
    int WAIT,num,i,a,button,edit = OFF;
    int Remove_Block,Toggle_Rumble,Toggle_Menu,Build_Toggle;

    main {

    if(R1L1) {
    swap(R1,R2); 
    swap(L1,L2);}
    
    if(get_val(OPTIONS) && event_press(SHARE)) {
    RFT = OFF;
    DST = OFF;
    JST = OFF;
    STT = OFF;
    GP = OFF;
    ACR = OFF;
    ABT = OFF;
    Recoil = OFF;
    Build_Toggle = OFF;
    Toggle_Menu = OFF;
    combo_run(Menu_Rumble);}
    
    LED(0,0,0,0);
    
    if(event_press(CIRCLE) || event_press(EDIT_BUTTON)) {
    Build_Toggle=!Build_Toggle;}
    
    if(!Build_Toggle) {    
    if(JST && event_press(R2))
    combo_run(JumpShot);
    if(STT && get_val(L2) && get_val(R2))
    combo_run(Strafe);
    if(RFT && get_val(R2)) 
    combo_run(RapidFire);
    if(DST && get_val(L2) && get_val(R2))
    combo_run(DropShot);
    if(Recoil && get_val(L2) && get_val(R2))
    combo_run(AR);
    if(ABT && get_val(L2)> 90)
    combo_run(AimAbuse);
    if(AST && get_val(L2)) combo_run(AS);
    if(GP && get_val(L2) && get_val(LEFT)) {
    set_val(LEFT,0);
    combo_run(GhostPeek);}
    if(ACR && get_val(L2) && get_val(R1)) {
    set_val(R1,0);
    combo_run(PerfectAccuracy);
    } else {
    combo_stop(PerfectAccuracy);}}
    if(get_val(TRIANGLE))
    Build_Toggle = OFF;
    
    if(ART)
    if(get_val(LY) <-90) set_val(L3,100);
 
    if(get_val(R1) && event_press(UP)) {
    Toggle_Menu=!Toggle_Menu;
    Toggle_Rumble=!Toggle_Rumble;
    Build_Toggle = OFF;}
    if(Toggle_Rumble) 
    combo_run(Menu_Rumble);
    
    if(Toggle_Menu) {
    combo_run(Rainbow_Flash);
    
    if(get_val(L2) && event_press(UP)) { 
    RFT=!RFT;
    if(RFT) combo_run(Flash_ON); 
    else combo_run(Flash_OFF);}
    
    if(get_val(L2) && event_press(RIGHT)) {
    DST=!DST;
    if(DST) combo_run(Flash_ON); 
    else combo_run(Flash_OFF);}
    
    if(get_val(L2) && event_press(DOWN)) {
    JST=!JST;
    if(JST) combo_run(Flash_ON); 
    else combo_run(Flash_OFF);}
    
    if(get_val(L2) && event_press(CROSS)) { 
    ACR=!ACR;
    if(ACR) combo_run(Flash_ON); 
    else combo_run(Flash_OFF);}
    
    if(get_val(L2) && event_press(L1)) { 
    ABT=!ABT;
    if(ABT) combo_run(Flash_ON); 
    else combo_run(Flash_OFF);}
    
    if(get_val(L2) && event_press(R3)) {
    STT=!STT;
    if(STT) combo_run(Flash_ON); 
    else combo_run(Flash_OFF);}
    
    if(get_val(L2) && event_press(TRIANGLE)) { 
    Recoil=!Recoil;
    if(Recoil) combo_run(Flash_ON); 
    else combo_run(Flash_OFF);}
    
    if(get_val(L2) && event_press(SQUARE)) { 
    GP=!GP;
    if(GP) combo_run(Flash_ON); 
    else combo_run(Flash_OFF);}
 
    if(get_val(L2)) {
    if(event_press(UP)) {
    Remove_Block=!Remove_Block;}
    if(event_press(RIGHT)) {
    Remove_Block=!Remove_Block;}
    if(event_press(DOWN)) {
    Remove_Block=!Remove_Block;}
    if(event_press(R3)) {
    Remove_Block=!Remove_Block;}
    if(event_press(TRIANGLE)) {
    Remove_Block=!Remove_Block;}
    if(event_press(SQUARE)) {
    Remove_Block=!Remove_Block;}
    if(event_press(L1)) {
    Remove_Block=!Remove_Block;}
    if(event_press(CROSS)) {
    Remove_Block=!Remove_Block;}
    set_val(UP,0);set_val(RIGHT,0);set_val(DOWN,0);set_val(R3,0);set_val(TRIANGLE,0);set_val(L1,0);set_val(CROSS,0);set_val(SQUARE,0);}}   
    if(get_val(OPTIONS)) {
    if(event_press(SHARE)) {
    Remove_Block=!Remove_Block;}
    set_val(SHARE,0);}
    if(get_val(R1)) {
    if(event_press(UP)) {
    Remove_Block=!Remove_Block;}
    set_val(UP,0);}
    
    if(event_release(L2)) combo_stop(AimAbuse);
    if(abs(get_val(RY)) > AR + 2 || abs(get_val(RX)) > AR + 2) {
    combo_stop(AR);}

    if(EDIT_BUTTON_HOLD) {
    if(get_val(EDIT_BUTTON) && get_ptime(EDIT_BUTTON) > HOLD_TIME) {
    edit = ON;}}
    else if(!EDIT_BUTTON_HOLD) {
    if(get_val(EDIT_BUTTON)) {
    edit = ON; }}
    if(edit == ON) {  
    if(event_release(R2) || event_press(RESET_EDIT_BUTTON) || get_val(TRIANGLE)) {
    set_click(CONFIRM_BUTTON,1,0);
    edit = OFF;}}
    if(a) {
    if(i < num) {
    if(!combo_running(Reset)) {
    combo_run(Reset);}}
    else if 
    (i > num) {a = OFF;}}}
 
    combo GhostPeek {
    set_val(R3,100);
    wait(20);
    wait(10);
    set_val(R2,100);
    wait(20);
    set_val(R3,100);
    wait(15);
    wait(5);}
    
    combo Strafe {
    set_val(LX,-100);
    wait(ST_Left);
    set_val(LX,100);
    wait(ST_Right);}
    
    combo JumpShot {
    set_val(CROSS,100);
    wait(JS_Speed);}

    combo AS { 
    set_val(RY,a_f(RY,AP));
    wait(Delay)
    set_val(RX,a_f(RX,AP));
    wait(Delay)
    set_val(RY,a_f(RY,AM));
    wait(Delay)
    set_val(RX,a_f(RX,AM));
    wait(Delay)}

    function a_f(p,m) {
    if(abs(get_val(p)) < Release)
    return m;
    return get_val(p);}

    combo AR {
    ARS = get_val(RY) + AR;
    if(ARS > 100) ARS = 100;
    set_val(RY,ARS * AR_I);
    ARS = get_val(RX) + AR_H;
    if(ARS > 100) ARS = 100;
    set_val(RX,ARS);}
 
    combo DropShot {
    set_val(R3,100);
    wait(60);
    wait(DS_Speed);
    set_val(R3,100);} 

    combo PerfectAccuracy {
    set_val(R2,100);
    wait(100);
    wait(250);
    set_val(R2,100);}
 
    combo AimAbuse {
    set_val(L2,100);
    wait(HOLD);
    set_val(L2,0);
    wait(RELEASE);}
 
    combo RapidFire {
    set_val(R2,100);
    wait(40);
    set_val(R2,0);
    wait(RF_Speed);}
    
    combo Reset {
    wait(WAIT);
    set_val(button,100);
    wait(28);
    set_val(button,0);
    wait(28);
    i=i + 1;}
	
    function set_click(B,Num,Wait) {
    WAIT=Wait;
    i=0;
    button = B;
    num = Num;
    a = ON;}
    
    combo Menu_Rumble {
    set_rumble(RUMBLE_B,100);
    wait(200);
    reset_rumble();
    Toggle_Rumble = OFF;}
 
    combo Rainbow_Flash {
    LED(2,0,2,0);
    wait(100);
    LED(0,0,0,0);
    wait(100);
    LED(0,0,0,2);
    wait(100);
    LED(0,0,0,0);
    wait(100);
    LED(0,2,2,0);
    wait(100);
    LED(0,0,0,0);
    wait(100);}
    
    combo Flash_ON {
    LED(0,0,2,0);
    set_rumble(RUMBLE_A,100);
    wait(400);
    reset_rumble();
    reset_leds();}
 
    combo Flash_OFF {
    LED(0,2,0,0);
    set_rumble(RUMBLE_B,100);
    wait(200);
    reset_rumble();
    LED(0,0,0,0);
    wait(100);
    set_rumble(RUMBLE_B,100);
    LED(0,2,0,0);
    wait(200);
    reset_rumble();
    reset_leds();}
 
    function LED(a,b,c,d) {
    set_led(LED_1,a);
    set_led(LED_2,b);
    set_led(LED_3,c);
    set_led(LED_4,d);}
    
    define ON = TRUE;
    define OFF = FALSE;