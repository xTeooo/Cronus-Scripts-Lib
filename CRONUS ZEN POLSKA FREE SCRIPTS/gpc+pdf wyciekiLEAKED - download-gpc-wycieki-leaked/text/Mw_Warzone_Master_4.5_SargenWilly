/*
       ░░███████╗░░█████╗░░██████╗░░███████╗░░███████╗░███╗░░██╗░░██╗░░░░██╗░██╗░██╗░░   ░██╗░░  ██╗ ░░░░██╗░
       ░░██╔════╝░██╔══██╗░██╔══██╗░██╔════╝░░██╔════╝░████╗░██║░░██║░░░░██║░██║░██║░░   ░██║░░  ███╗ ░░███║░
       ░░███████╗░███████║░██████╔╝░██║ ████╗░█████╗░░░██╔██╗██║░░██║░█╗░██║░██║░██║░░░░ ░██║░░░░  ██████══╝░                                             
       ░░░░░░░██║░██╔══██║░██╔══██╗░██║░░░██║░██╔══╝░░░██║╚████║░░██║███╗██║░██║░██║░░░░ ░██║░░░░  ░░██║░░░░░
       ░░███████║░██║░░██║░██║░░██║░████████║░███████╗░██║░╚███║░░╚███╔███╔╝░██║░███████╗░███████╗ ░░██║░░░
       ░░╚══════╝░╚═╝░░╚═╝░╚═╝░░╚═╝░░░╚═════╝░╚══════╝░╚═╝░░╚══╝░░░╚══╝╚══╝░░╚═╝░╚══════╝░╚══════╝ ░░╚═╝░░                                                                                                                                                                       */
/*
	 ░███╗░░░░░███╗░██╗░░░░░░░██╗      ░██╗░░░░░░░██╗░█████╗░██████╗░███████╗░█████╗░███╗░░██╗███████╗    ░███╗░░░░░███╗░█████╗░███████╗████████╗███████╗░██████╗░░  
     ░████╗░░░████║░██║░░██╗░░██║      ░██║░░██╗░░██║██╔══██╗██╔══██╗╚════██║██╔══██╗████╗░██║██╔════╝    ░████╗░░░████║██╔══██╗██╔════╝░░░██╔══╝██╔════╝░██╔══██╗░  █░░██░░███░░░░░░█
     ░██╔██╗░██░██║░╚██╗████╗██╔╝      ░╚██╗████╗██╔╝███████║██████╔╝░░███╔═╝██║░░██║██╔██╗██║█████╗░░    ░██╔██╗░██░██║███████║███████╗░░░██║ ░░█████╗░░░██████╔╝░  █░░██░░███░░█████
     ░██║╚████╝░██║░░████╔═████║░      ░░████╔═████║░██╔══██║██╔══██╗██╔══╝░░██║░░██║██║╚████║██╔══╝░░    ░██║╚████╝░██║██╔══██║░░░░░██║░░░██║ ░░██╔══╝░░░██╔══██╗░  █░░░░░░███░░░░░░█
     ░██║░╚██╝ ░██║░░╚██╔╝░╚██╔╝░ ██░  ░░╚██╔╝░╚██╔╝░██║░░██║██║░░██║███████╗╚█████╔╝██║░╚███║███████╗    ░██║░╚██╝ ░██║██║░░██║███████║░░░██║ ░░███████╗░██║░░██║░  █████░░███████░░█
      ╚═╝░░░ ░░░╚═╝░░░╚═╝░░░╚═╝░░ ░░░  ░░░╚═╝░░░╚═╝░░╚═╝░░╚═╝╚═╝░░╚═╝╚══════╝░╚════╝░╚═╝░░╚══╝╚══════╝     ╚═╝░░░ ░░░╚═╝╚═╝░░╚═╝╚══════╝░░░░╚╝ ░░╚══════╝░╚═╝░░╚═╝░  █████░░█░█░░░░░░█ */
			                                                                
 /* ZEN EDITION ONLY NUCLEAR INFERNO EDITION BY SARGENWILLY
                                                                           
                              COMPLETAMENTE ADAPTABLE Y PERSONALIZABLE CON LOS 25 MEJORES MODS Y LAS MEJORES INSTRUCCIONES , TODO ES ACTIVABLE Y DESACTIVABLE DESDE EL MANDO O EN LINEA 196 (ACTIVABLES)
                                                                                            MODERN WARFARE Y WARZONE  
   Aim Assist Insane Spiroide , Aim Abuse Optimizado , Rapid Fire , Fast Reload , Cancel Reload , Burst Fire , AntiRecoil Ajustable ,Unico Con Quick Scope Con Inteligencia Artificial , Ads Ping On Fire 
                    Easy Revive ,Slide Cancel , Hop Throw C4 , Sniper Focus , Bunny Hop, Slide And Turn , Turbo Melee , Strafe Fire , Strafe Aim , Jump Shot , Hop Shot y Mas..
                                                                          ESTA VERSION INCLUYE 9 MODS EXCLUSIVOS DEL DESARROLLO DE SARGENWILLY
         ██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████       
     █████████████████████████████████████████████████████████████████████████████████████████████CARACTERISTICAS MODS█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████
 ██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████
             English                            Espanol
 (EXCLUSIVO) Aim Assist Insane Spiroide_________/Asistencia Espiral Mejorada
             Aim Abuse On Fire                  /Abuso de Apuntado Disparando.(Mejorado a Velocidades Optimas)/ Se Puede Activar y Desactivar En Juego
             Aim Abuse Precise__________________/Abuso de Apuntado Preciso Solo ADS / Se Puede Activar y Desactivar En Juego
 (EXCLUSIVO) Fast Reload With Weapon AI         /Recarga Rapida con Perfiles de Armas Actuales
             Cancel Reload                      /Cancelar Recarga , Que no te Sorprendan Recargando Jamas
 (EXCLUSIVO) Easy Revive________________________/Revive Facil a tus Compañeros      
             Anti Recoil Quick Edit             /Antiretroceso Ajustable / Se Puede Editar en Juego 
             Sniper Focus Precision_____________/Concentracion y Respiracion(ESTE MOD NO PERMITE USAR MIRAS DE ZOOM VARIABLE) Se Puede Activar y Desactivar En Juego
 (EXCLUSIVO) Quick Scope With AI Customize      /Mira Rapida Para Sniper Con Tiempo de Retardo Ajustable y Inteligencia Artificial Ajustable / Se Puede Activar y Desactivar En Juego
             Auto Ping On Fire__________________/Marca Un Punto en el mapa al disparar(SE PUEDE DESACTIVAR MAS DELANTE)
             Bunny Hop                          /Salto Turbo De Conejo (DEJE OPRIMIDO BOTON DE SALTO PARA REALIZARLO)
             Rapid Fire_________________________/Fuego Rapido / Se Puede Activar y Desactivar En Juego
             Burst Fire                         /Fuego de Rafagas / Se Puede Activar y Desactivar En Juego
             Rapid Crouch Fire__________________/Disparo Con TeeBag Rapido / Se Puede Activar y Desactivar En Juego
             Strafe Fire                        /Muevete De Lado A Lado Al Disparar / Se Puede Activar y Desactivar En Juego
 (EXCLUSIVO) Strafe Aim_________________________/Muevete de lado a lado al apuntar / Se Puede Activar y Desactivar En Juego
 (EXCLUSIVO) Smart Slide Cancel                 /Desliza y Corta Con Opcion de Deslizarse Completamente solo Deje Oprimido / Importante Usar En Opciones *Movimiento *Opciones de Deslizamiento / Oprimir/pulsar y Recomendable Esprint tactico Automatico
 (EXCLUSIVO) Slide And Turn_____________________/Deslizate al girar (MOD MAS UTIL EN MW)
 (EXCLUSIVO) Hop Throw C4                       /Convierte De manera Automatica Tu Boton RB en un Hop Throw Que Lanzara 40 % mas lejos tus C4.
             Turbo Melee________________________/Golpe Turbo
             Jump On Shot                       /Saltar al Disparar / Se Puede Activar y Desactivar En Juego
 (EXCLUSIVO) ADS Hop Shot_______________________/Brinca Como Conejo al Apuntar y Disparar / Se Puede Activar y Desactivar En Juego
             Drop On Shot                       /Tumbarse al Disparar / Se Puede Activar y Desactivar En Juego
             Hair Triggers______________________/Gatillos Sensibles
 (NUEVO)     Custom Sensitivity Simple          /Sensibilidad Personalizable Simplificada

 ███████████████████████████████████████████████████████████████████████████████        
 ███████████████████████████IMPORTANTE LEER█████████████████████████████████████
 ███████████████████████████████████████████████████████████████████████████████
 === Recomiendo que lea todo el texto a continuación para comprender el Script==  
 -+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
 
 -+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
 ********************* Diseño de botones de juego ******************************
 -+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
 *************** Predeterminado: Se puede ajustar en el diseño*****************
 -+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
 ****Favor Use Configuracion de Botones en Script Exactamente Como En Juego ****
 -+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
 ******Comando Para Resetear: Esto Resetea los Mods de la Linea 196 a 208*******
 -+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
 **************MENU/OPTIONS + VIEW/SHARE Para Resetear Fire Mods****************
 -+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
 
 ███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████      
                                            MODO ARCOIRIS      LB/L1+FLECHA ARRIBA
 ███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████
 -+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+--+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 ░░░░░ Antes de poder activar / desactivar los MODS deberá abrir el modo arcoiris haciendo lo siguiente                ░░░░░
 ░░░░░ LB/L1 + D-PAD UP/FLECHA ARRIBA / NO SE PREOCUPE YA NO SE LANZA LA GRANADA TACTICA SOLA                          ░░░░░ 
 ░░░░░ Cuando esté encendido, los Ojos Del Alien parpadearán Arcoiris, ahora puede activar las funciones que desee     ░░░░░
 ░░░░░ Una vez que haya terminado, asegúrese de desactivar el MODO ARCOIRIS *recomendado                               ░░░░░
 ░░░░░ Los Ojos del Alien estaran Negros cuando esté fuera del MODO ARCOIRIS                                           ░░░░░
 -+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+--+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 SEA CUAL SEA SU CONFIGURACION DE BOTONES LOS SIGUIENTES COMANDOS SIEMPRE SERAN LOS MISMOS
 ███████████████████████████████████████████████████████████████████████████████        
 ████████████MODS QUE PUEDE ACTIVAR O DESACTIVAR DEL MANDO██████LT/L2+██████████
 ███████████████████████████████████████████████████████████████████████████████
 ████ Sostenga   LT/L2 y Presione RS/R3       Para: Rapid Fire              ████
 ████ 1 Vibracion = ON 2 = OFF                                              ████
 ████-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-████
 ████Sostenga    LT/L2 Y Presione MENU/OPTION Para: Burst fire              ████ 
 ████1 Vibracion = ON 2 = OFF                                               ████ 
 ████-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-████
 ████Sostenga    LT/L2 Y Presione  Y/TRIANGULO Para: Aim Abuse Precise Ads  ████ 
 ████1 Vibracion = ON 2 = OFF                                               ████ 
 ████-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-████
 ████Sostenga    LT/L2 Y Presione  X/CUADRO   Para: Aim Abuse On Fire       ████ 
 ████1 Vibracion = ON 2 = OFF                                               ████ 
 ████-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-████
 ████Sostenga    LT/L2 Y Presione  A/CRUZ     Para: ADS Hop Shot            ████
 ████1 Vibracion = ON 2 = OFF                                               ████
 ████-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-████
 ████Sostenga    LT/L2 Y Presione  LS/L3      Para: Sniper Focus            ████
 ████1 Vibracion = ON 2 = OFF                                               ████ 
 ████-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-████
 ████Sostenga    LT/L2 Y Presione  LB/L1      Para: Quick Scope             ████
 ████1 Vibracion = ON 2 = OFF                                               ████ 
 ████-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-████
 ████Sostenga    LT/L2 Y Presione  RB/R1      Para: Hop Throw               ████
 ████1 Vibracion = ON 2 = OFF                                               ████ 
 ████-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-████
 ████Sostenga    LT/L2 Y Presione  ARRIBA     Para: Jump On Shot            ████
 ████1 Vibracion = ON 2 = OFF                                               ████
 ████-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-████
 ████Sostenga    LT/L2 Y Presione  ABAJO      Para: Rapid Crouch Fire       ████ 
 ████1 Vibracion = ON 2 = OFF                                               ████ 
 ████-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-████
 ████Sostenga    LT/L2 And Press   DERECHA    Para: Drop On Shot            ████ 
 ████1 Vibracion = ON 2 = OFF                                               ████ 
 ████-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-████
 ████Sostenga    LT/L2 Y Presione  IZQUIERDA  Para: Strafe Fire             ████ 
 ████1 Vibracion = ON 2 = OFF                                               ████ 
 ████-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-████
 ████Sostenga    LT/L2 Y Presione  VIEW/SHARE Para: Strafe Aim              ████
 ████1 Vibracion = ON 2 = OFF                                               ████
 ████                PARA EDITAR EL ANTIRECOIL DESDE EL MANDO               ████
 ████Sostenga A/CRUZ y Press Arriba Para: +1 a Anti Recoil Y Abajo Para -1  ████
 ████Sostenga A/CRUZ y Press Derecha Para +1 a Horizontal Y Izqui  Para -1  ████
 ████Vibracion Pesada = Aumentar. Vibracion Ligera = Disminuir              ████ 
 ███████████████████████████████████████████████████████████████████████████████
 ███████████████████████████████████████████████████████████████████████████████
 ███████████████████████████████████████████████████████████████████████████████
 */
    //MATCH IN GAME * DEBE COINCIDIR CON EL JUEGO SU CONFIGURACION DE BOTONES
    //Diseño de Botones (MODIFICAR LOS BOTONES YA NO MODIFICA LOS COMANDOS DE ACTIVACION DE MODS ASI QUE TENGALO EN CUENTA
           //XBOX           //PLAYSTATION
    define VIEW = XB1_VIEW; //SHARE
    define MENU = XB1_MENU; //OPTIONS
    define RB = XB1_RB;     //R1
    define RT = XB1_RT;     //R2
    define RS = XB1_RS;     //R3
    define LB = XB1_LB;     //L1
    define LT = XB1_LT;     //L2
    define LS = XB1_LS;     //L3
    define RX = XB1_RX;     //RX
    define RY = XB1_RY;     //RY
    define LX = XB1_LX;     //LX
    define LY = XB1_LY;     //LY
    define UP = XB1_UP;     //UP
    define DOWN = XB1_DOWN; //DOWN
    define LEFT = XB1_LEFT; //LEFT
    define RIGHT = XB1_RIGHT;//RIGHT
    define Y = XB1_Y;        //TRIANGLE
    define B = XB1_B;        //CIRCLE
    define A = XB1_A;        //CROSS
    define X = XB1_X;        //SQUARE
    
    //AIM ASSIST INSANE SPIROIDE
	define Sampling_Time = 10;
	define Aim_Boost = 22;
	define Aim_Correction = 12;
	define Aim_Perfection_Limit = 30;
	define POS_Aim_Limit = 70;
	define NEG_Aim_Limit = -70;
	define POS_Micro_MVT_Limit = 25;
	define NEG_Micro_MVT_Limit = -25;
	int X_Last_Value     = 2;
	int Y_Last_Value     = -2;
	int X_Current_Value  = 4;
	int Y_Current_Value  = -4;
	int Sampling_Done = TRUE; 
	int spiroide_pulse = 12;
	int fine_pulse = 6;
	int Joystick_calibration = TRUE;
	int RX_Axis_Joystick_calibrate = 3; 
	int RY_Axis_Joystick_calibrate = -3;
	//Mods Globales y Fire Mods Enseguida
    //████████████████████████████    ACTIVABLES    ██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████
    //Personalizar Cosas que no tienen Activacion rapida desde el mando( ON = ENCENDIDO OFF = APAGADO
    //Mods Globales*ACTIVADOS POR DEFAULT
    int AS  = ON;  //Aim Assist     = Asistencia de Apuntado
    int AR  = ON;  //Anti recoil    = Anti Retroceso
    int SC  = ON;  //Slide Cancel   = Desliza Y Corta
    int HT  = ON;  //Hair Triggers  = Gatillos Sensibles
    int CS  = ON;  //Sensitivity    = Sensibilidad Personalizada
    int SAT = OFF; //Slide And Turn = Deslizate al Girar (UTIL EN MW)
    int BH  = ON;  //Bunny Hop      = Salto de Conejo
    int POF = ON;  //Ping On Fire   = Marca Al Disparar
    int TM  = ON;  //Turbo Melee    = Turbo Golpe
    int ER  = ON;  //Easy Revive    = Revivir Facil Compañeros
    int FR  = ON;  //Fast Reload    = Recarga Rapida (SELECCIONAR SU ARMA EN LINEA 220)
    int CR  = OFF;  //Cancel Reload  = Cancela Recarga al Disparar
    
    //Mods Competitivos Fire Mods*DESACTIVADOS POR DEFAULT
    //Personalizar Cosas que si se pueden activar y desactivar del mando( ON = ENCENDIDO OFF = APAGADO)
    //████████████████████████████    ACTIVABLES    ██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████
    int AB_Toggle  = OFF;  // Aim Abuse On Fire     = Abuso De Apuntado Disparando
    int ABP_Toggle = OFF;  // Aim Abuse Precise ADS = Abuso De Apuntado Preciso Solo Apuntando
    int RF_Toggle  = OFF;  // Rapid Fire            = Fuego Rapido
    int BF_Toggle  = OFF;  // Burst Fire            = Fuego De Rafagas
    int CF_Toggle  = OFF;  // Rapid Crouch Fire     = Agacharse y Levantarse Rapido Al Disparar
    int JOS_Toggle = OFF;  // Jump On Shot          = 1 Salto Al Disparar
    int HS_Toggle  = OFF;  // ADS Hop Shot          = Saltos De Conejo Al Apuntar Y Disparar
    int STF_Toggle = OFF;  // Strafe Fire           = Moverse A Los Lados Al Disparar
    int STA_Toggle = OFF;  // Strafe Aim            = Moverse A Los Lados Al Apuntar
    int DS_Toggle  = OFF;  // Drop Shot             = Tumbarse Al Disparar
    int SF_Toggle  = OFF;  // Sniper Focus          = Sostener La Respiracion
    int QS_Toggle  = OFF;  // Quick Scope           = Disparo Al Apuntar Y Soltar
    int HP_Toggle  = OFF;  // Hop Throw             = Lanza Granada Lethal Lejos
    
    //Velocidad de funciones
    //APUNTADO
    int AB_Speed = 200; //Aim Abuse (Abuso de Apuntado Disparando)
    int ABP_Speed = 200; //Aim Abuse Precise (Abuso de Apuntado Preciso SOLO ADS)
    //DISPARO
    int RF_Speed = 20; //Rapid Fire(Fuego Rapido)
    int BF_Speed = 200; //Burst Fire (Fuego de Rafagas)
    int CF_Speed = 50; //Rapid Crouch Fire (Agacharse y Levantarse Rapido Al Disparar)
    int HS_Speed = 50; //Hop Shot (Saltos De Conejo Al Apuntar Y Disparar)
    //RECARGA RAPIDA AL ARMA SELECIONADA
    int FR_Speed     = GENERIC ; //POR FAVOR COLOCA TU ARMA EXACTAMENTE COMO ESTA ESCRITA ABAJO
    //ARMAS
    define GENERIC   = 2300 ; //CARGADOR CUALQUIERA '' SI TU ARMA NO ESTA PONLE GENERIC ARRIBA 
    define GRAU      = 1510 ; //CARGADOR 50  BALAS
    define CRAMAX    = 2100 ; //CARGADOR 45  BALAS
    define MP5       = 1950 ; //CARGADOR 45  BALAS
    define RAM7      = 1770 ; //CARGADOR 50  BALAS
    define M4A1      = 1500 ; //CARGADOR 50  BALAS
    define KILO141   = 1520 ; //CARGADOR 60  BALAS
    define MP7       = 1630 ; //CARGADOR 60  BALAS
    define FAL       = 1990 ; //CARGADOR 30  BALAS
    define M13       = 1490 ; //CARGADOR 60  BALAS
    define AK47      = 2100 ; //CARGADOR 45  BALAS
    define ASVAL     = 1600 ; //CARGADOR 30  BALAS
    define FARA83    = 1950 ; //CARGADOR 60  BALAS
    define MG82      = 6000 ; //CARGADOR 100 BALAS
    define AK47CW    = 1400 ; //CARGADOR 45  BALAS
    define XM4       = 1550 ; //CARGADOR 45  BALAS
    define MP5CW     = 2000 ; //CARGADOR 50  BALAS
    define C58       = 1600 ; //CARGADOR 25  BALAS
    define LC10      = 1800 ; //CARGADOR 55  BALAS
    define MAC10     = 1700 ; //CARGADOR 53  BALAS
    define MILANO    = 2000 ; //CARGADOR 32  BALAS
    define PP19BIZON = 1800 ; //CARGADOR 64  BALAS
    define PPSH      = 2050 ; //CARGADOR 71  BALAS'
    define KRIG6     = 1960 ; //CARGADOR 45  BALAS
    define FFAR      = 1900 ; //CARGADOR 50  BALAS
    define AUGCW     = 2300 ; //CARGADOR 54  BALAS
    define M16CW     = 2120 ; //CARGADOR 30  BALAS''
    define CARV2     = 2100 ; //CARGADOR 30  BALAS'
    define BULLFROG  = 1820 ; //CARGADOR 64  BALAS
    define QBZ       = 1650 ; //CARGADOR 60  BALAS
    define CLAVOS    = 1800 ; //CARGADOR 20  CLAVOS
    //SALTO
    int BH_Speed = 40; //Bunny Hop ( Conejito )
    //SNIPER
    int QS_Delay = 150;  //Retardo de disparo de (QUICK SCOPE)
    int QS_AI    = 5000; //Duracion de Inteligencia Artificial
    //STRAFES
    int RIGHT_Speed = 350; //Cuánto se mueve a la DERECHA           = Strafe Fire Velocidad
    int LEFT_Speed = 350; //Cuánto se mueve hacia la IZQUIERDA      = Strafe Fire Velocidad
    int STA_RIGHT_Speed = 250; //Cuánto se mueve a la DERECHA       = Strafe Aim   Velocidad
    int STA_LEFT_Speed = 250; //Cuánto se mueve hacia la IZQUIERDA  = Strafe Aim   Velocidad
    /*NOTA:
    Altos Valores = Lento
    Bajos Valores = Rapido*/
    
    /* Tienes que multiplicar por 10 tu sensibilidad del juego y te da el Valor que tienes que poner enseguida / SENSIBILIDADES ABAJO DE 10 ES PREFERIBLE DESACTIVAR EN LA LINEA 181 */
    //Sensibilidad Personalizable
    int GEN_SENS = 100; //Sensibilidad General
   
    /*NOTA:
    Predeterminada = 100
    Rangos de 0 a 327*/
    
    //Anti Recoil(Anti Retroceso)
    int AR_V = 25; //Anti Recoil Vertical
    int AR_H = 0: //Anti Recoil Horizontal
    int AR_I = 1; //Cambia de 1 a -1 Si juegas con invertida *Anti Recoil Invertido
    
    /*El Aim Assit esta personalizado para Una Configuracion de Zona Muerta de .10 en el Juego 
    //(Proporciones) .05 Dead Zone= 15-19 Aim Assist / .10 Dead Zone=20-24 Aim Assist / .15 Dead Zone= 25-29 Aim Assist / .20 Dead Zone= 30-34 Aim Assist */
    //Aim Assist
    int AP = 22; //Disminuyela si Tiembla
    int AM = -22; //Disminuyela si Tiembla
    int Delay = 20; //Aim Assist Velocidad
    int Release = 23; //Recomendable que sea 1 más alta que AP & AM
       
    //Alternas
    int ARS;
    int Check;
    int USE_SENS;
    int Remove_Block;
    int Toggle_Menu;
    int Toggle_Rumble;
    /*DISPLAY*/      
    const string TITLE = "SargenWilly";  
    const string WZ = "   INFERNO ";  
    const string MST = "NUCLEAR" 
    const string Renglon = "  4.5  ": 
    int display_title = TRUE; 
    /*-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-++-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-++-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | |M|A|I|N| | |S|E|C|T|I|O|N| | |D|E|V|E|L|O|P|E|R| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | 
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-++-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-++-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+*/   	
   	
    //DO NOT TOUCH
     main {
    //TOGGLE SWITCH ONLY DEVELOPER
    if(get_val(XB1_MENU) && event_press(XB1_VIEW)) {
    STF_Toggle = OFF;
    RF_Toggle = OFF;
    BF_Toggle = OFF;
    SF_Toggle = OFF;
    JOS_Toggle = OFF;
    HS_Toggle = OFF;
    CF_Toggle = OFF;
    DS_Toggle = OFF;
    STA_Toggle = OFF;
    AB_Toggle = OFF;
    ABP_Toggle = OFF;
    QS_Toggle = OFF;
    HP_Toggle = OFF;
    Check = OFF;
    Toggle_Menu = OFF;
    combo_run(Menu_Rumble);}
    //CUSTOM SENS ONLY DEVELOPER
    if(CS)
    if(!get_val(LT) && !get_val(RT)) { 
    USE_SENS=GEN_SENS;}
    sensitivity(RY,NOT_USE,USE_SENS);
    sensitivity(RX,NOT_USE,USE_SENS);
    
    LED(0,0,0,0);
    
    if(!Toggle_Menu)
    if(event_press(XB1_LB)) { 
    Check=!Check;}
    if(!Check) {
    if(RF_Toggle && get_val(RT))//RAPID FIRE
    combo_run(RF);
    if(AB_Toggle && get_val(LT))//AIM ABUSE
    combo_run(AB); else combo_stop(AB);    
    if(ABP_Toggle && get_val(LT) && !get_val(RT))//AIM ABUSE PRECISE
    combo_run(ABP); else combo_stop(ABP);}
    if(get_val(Y) || get_val(RB) || get_val(UP)) Check = OFF;
    if(SC)//SLIDE CANCEL
    if(get_val(LY)<-90 && get_val(B))
    combo_run(SlideCancel);
    if(SC)//SLIDE CANCEL CANCEL
    if(get_val(B) && get_ptime(B)>250)
    combo_stop(SlideCancel);
    if(SAT)  //SLIDE AND TURN RIGHT
    if(get_val(LY)<-90 && get_val(RX)>90)
    combo_run(SlideAndTurn);
    if(SAT)  //SLIDE AND TURN LEFT
    if(get_val(LY)<-90 && get_val(RX)<-90)
    combo_run(SlideAndTurn);
    if(BH) //BUNNY HOP
    if (get_val(A) && get_ptime(A) > 200) {
    combo_run(BunnyHop); }
    if(POF)  //PING ON FIRE  
    if(get_val(LT) && get_val(RT)) {
    combo_run(AdsPingOnFire); }
    if(SF_Toggle) //SNIPER FOCUS
    if(get_val(LT) && get_ptime(LT) > 150) {
    combo_run(SniperFocus); }
    if(QS_Toggle) //QUICK SCOPE
	if(event_release(LT) && get_ptime(LT) ){
	combo_run(QS);} 
	if(event_release(LT) && get_ptime(LT)> (QS_AI) ){
	combo_stop(QS);}
    if(HP_Toggle)  //HOP THROW 
    if(get_val(RB)) { 
    combo_run(HP); }
    if(HP_Toggle)  //HOP THROW CANCEL
    if(get_val(RB) && get_ptime(RB) > 200) {
    combo_stop(HP); }
    if(TM)//TURBO MELEE
    if(get_val(RS) && get_ptime(RS) > 200) {   
    combo_run(TurboMelee); }
    
    if(get_val(LT) && get_val(RT)) {//PURPLE FLASH
    combo_run(Purple_Flash); }
       	
    if(HT)//HAIR TRIGGERS
    deadzone(LT,RT,100,100);
    
    if(AS)//AIM ASSIST
    if(get_val(LT)) combo_run(AS);
    
    if(AR)//ANTI RECOIL
    if(get_val(LT) && get_val(RT))
    combo_run(AR);
    
    if(BF_Toggle && get_val(RT))//BURST FIRE
    combo_run(BF);
    
    if(DS_Toggle && get_val(RT))//DROP SHOT
    set_val(B,100);
    
    if(JOS_Toggle && event_press(RT))//JUMP ON SHOT
    combo_run(JOS);
    
    if(HS_Toggle)//HOP SHOT
    if (get_val(LT) && get_val(RT)) {
    combo_run(HS); }
    
    if(CF_Toggle && get_val(RT))//CROUCH FIRE
    combo_run(CF);
    
    
    if(ER) //EASY REVIVE
    if(get_val(X) && get_ptime(X) > 300) {
    combo_run(ER); }
    if(ER) //EASY REVIVE CANCEL BACKWARD
    if(get_val(LY)>10) { 
    combo_stop(ER); }
    if(ER) //EASY REVIVE CANCEL FORWARD
    if(get_val(LY)<-10) { 
    combo_stop(ER); }
    if(ER) //EASY REVIVE CANCEL FIRING
    if(get_val(RT)) { 
    combo_stop(ER); }
    
   
    if(FR) //FAST RELOAD
    if(get_val(X)>90) combo_run(FR);
    if(FR) //FAST RELOAD CANCEL
    if(get_val(X) && get_ptime(X) > 300) {
    combo_stop(FR); }
    if(FR) //FAST RELOAD CANCEL AIMING
    if(get_val(LT)) 
    combo_stop(FR);
    if(FR) //FAST RELOAD CANCEL FIRING
    if(get_val(RT)) combo_stop(FR); 
    
    
    if(CR) //CANCEL RELOAD LY
    if(get_val(LY) && get_val(RT)>90) {
    combo_run(CR); }
    if(CR) //CANCEL RELOAD LX
    if(get_val(LX) && get_val(RT)>90) {
    combo_run(CR); }
    if(CR) //CANCEL RELOAD CANCEL AIMING
    if(get_val(LT)) 
    combo_stop(CR);
    if(CR)//CANCEL RELOAD CANCEL FIRING
    if(get_val(RT) && get_ptime(RT) > 100){
    combo_stop(CR);}
    
    if(STF_Toggle && get_val(LT) && get_val(RT))//STRAFE SHOT
    combo_run(ST); else combo_stop(ST);
    
    if(STA_Toggle)//STRAFE AIM
    if (get_val(LT) && get_ptime(LT)> 300) {
    combo_run(STA);  }
    if(get_val(LT) && get_val(RT)) {
    combo_stop(STA);}
    if(get_val(LT) && event_release(LT)) {
    combo_stop(STA);}
    if(get_val(LB) && event_press(UP))     
    combo_run(CG);     
    
    if(get_val(XB1_LB) && event_press(XB1_UP)) {//TOGGLE MENU
    Toggle_Menu=!Toggle_Menu;
    Toggle_Rumble=!Toggle_Rumble;}
    if(Toggle_Rumble) 
    combo_run(Menu_Rumble);
    if(Toggle_Menu) {
    combo_run(Rainbow_Flash);
    //RAPID FIRE TOGGLE DONT TOUCH ME
    if(get_val(XB1_LT) && event_press(XB1_RS)) {
    RF_Toggle=!RF_Toggle;
    if(RF_Toggle) combo_run(Flash_ON);
    else combo_run(Flash_OFF);}
    //AIM ABUSE TOGGLE DONT TOUCH ME
    if(get_val(XB1_LT) && event_press(XB1_X)) {
    AB_Toggle=!AB_Toggle; ABP_Toggle = OFF;
    if(AB_Toggle) combo_run(Flash_ON);
    else combo_run(Flash_OFF);}
    //AIM ABUSE PRECISE TOGGLE DONT TOUCH ME
    if(get_val(XB1_LT) && event_press(XB1_Y)) {
    ABP_Toggle=!ABP_Toggle; AB_Toggle = OFF;
    if(ABP_Toggle) combo_run(Flash_ON);
    else combo_run(Flash_OFF);}
    //HOP SHOT TOGGLE DONT TOUCH ME
     if(get_val(XB1_LT) && event_press(XB1_A)) {
    HS_Toggle=!HS_Toggle;
    if(HS_Toggle) combo_run(Flash_ON); 
    else combo_run(Flash_OFF);}
    //SNIPER FOCUS TOGGLE DONT TOUCH ME
     if(get_val(XB1_LT) && event_press(XB1_LS)) {
    SF_Toggle=!SF_Toggle;
    if(SF_Toggle) combo_run(Flash_ON); 
    else combo_run(Flash_OFF);}
    //BURST FIRE TOGGLE DONT TOUCH ME
    if(get_val(XB1_LT) && event_press(XB1_MENU)) {
    BF_Toggle=!BF_Toggle;
    if(BF_Toggle) combo_run(Flash_ON);
    else combo_run(Flash_OFF);}
    //JUMP SHOT TOGGLE DONT TOUCH ME
    if(get_val(XB1_LT) && event_press(XB1_UP)) {
    JOS_Toggle=!JOS_Toggle;
    if(JOS_Toggle) combo_run(Flash_ON); 
    else combo_run(Flash_OFF);}
    //CROUCH FIRE TOGGLE DONT TOUCH ME
    if(get_val(XB1_LT) && event_press(XB1_DOWN)) {
    CF_Toggle=!CF_Toggle;
    if(CF_Toggle) combo_run(Flash_ON); 
    else combo_run(Flash_OFF);}
    //DROP SHOT TOGGLE DONT TOUCH ME
    if(get_val(XB1_LT) && event_press(XB1_RIGHT)) {
    DS_Toggle=!DS_Toggle;
    if(DS_Toggle) combo_run(Flash_ON); 
    else combo_run(Flash_OFF);}
    //STRAFE FIRE TOGGLE DONT TOUCH ME
    if(get_val(XB1_LT) && event_press(XB1_LEFT)) {
    STF_Toggle=!STF_Toggle;
    if(STF_Toggle) combo_run(Flash_ON); 
    else combo_run(Flash_OFF);}
    //STRAFE AIM TOGGLE DONT TOUCH ME
    if(get_val(XB1_LT) && event_press(XB1_VIEW)) {
    STA_Toggle=!STA_Toggle;
    if(STA_Toggle) combo_run(Flash_ON); 
    else combo_run(Flash_OFF);}
    //QUICK SCOPE TOGGLE DONT TOUCH ME
    if(get_val(XB1_LT) && event_press(XB1_LB)) {
    QS_Toggle=!QS_Toggle;
    if(QS_Toggle) combo_run(Flash_ON); 
    else combo_run(Flash_OFF);}
    //HopThrow TOGGLE DONT TOUCH ME
    if(get_val(XB1_LT) && event_press(XB1_RB)) {
    HP_Toggle=!HP_Toggle;
    if(HP_Toggle) combo_run(Flash_ON); 
    else combo_run(Flash_OFF);}
    //ANTIRECOIL VALUES DONT TOUCH ME
    if(get_val(XB1_A)) {
    if(event_press(XB1_UP)) {
    AR = AR + 1;
    combo_run(Increase);}
    if(event_press(XB1_DOWN)) {
    AR = AR - 1;
    combo_run(Decrease);}
    if(event_press(XB1_RIGHT)) {
    AR_H = AR_H + 1;
    combo_run(Increase);}
    if(event_press(XB1_LEFT)) {
    AR_H = AR_H - 1;
    combo_run(Decrease);}
    set_val(XB1_UP,0);set_val(XB1_DOWN,0);set_val(XB1_RIGHT,0);set_val(XB1_LEFT,0);}
    //AIM ASSIST INSANE SPIROIDE
    if (Joystick_calibration == FALSE){
    RX_Axis_Joystick_calibrate = get_val(RX); 
    RY_Axis_Joystick_calibrate = get_val(RY); 
    Joystick_calibration = TRUE;}     
    X_Last_Value = X_Current_Value;
    Y_Last_Value = Y_Current_Value;
    X_Current_Value = get_lval(RX)- RX_Axis_Joystick_calibrate;
    Y_Current_Value = get_lval(RY)- RY_Axis_Joystick_calibrate;
    if(get_val(LT)){ 
    if(abs(X_Current_Value) <= POS_Micro_MVT_Limit && abs(Y_Current_Value) <= POS_Micro_MVT_Limit){    
    if(abs(X_Last_Value - X_Current_Value) < 15){
    combo_stop(Aim_Assist_Perfection);
    Sampling_Done = FALSE;
    if(get_val(RT) > 95){ 
    combo_stop(Fine_Tune_Aim);
    fine_pulse = 0;
    combo_run(spiroide_Aim_Assit);}
    else{
    combo_stop(spiroide_Aim_Assit);
    spiroide_pulse = 0;
    combo_run(Fine_Tune_Aim);}}}
    else if(abs(X_Current_Value) <= POS_Aim_Limit && abs(Y_Current_Value) <= POS_Aim_Limit){ 
    combo_stop(Fine_Tune_Aim);
    combo_stop(spiroide_Aim_Assit);
    spiroide_pulse = 0;
    fine_pulse = 0;
    combo_run(Aim_Assist_Perfection);}}
    else {
    combo_stop(Fine_Tune_Aim);
    combo_stop(spiroide_Aim_Assit);
    combo_stop(Aim_Assist_Perfection);
    spiroide_pulse = 0;
    fine_pulse = 0;
    Sampling_Done = FALSE;}
    //REMOVE BLOCK * BLOQUE DE REMOVER FUNCION
    if(get_val(XB1_LT)) {
    if(event_press(XB1_UP)) {
    Remove_Block=!Remove_Block;}
    if(event_press(XB1_RIGHT)) {
    Remove_Block=!Remove_Block;}
    if(event_press(XB1_DOWN)) {
    Remove_Block=!Remove_Block;}
    if(event_press(XB1_LEFT)) {
    Remove_Block=!Remove_Block;}
    if(event_press(XB1_RS)) {
    Remove_Block=!Remove_Block;}
    if(event_press(XB1_X)) {
    Remove_Block=!Remove_Block;}
    if(event_press(XB1_A)) {
    Remove_Block=!Remove_Block;}
    if(event_press(XB1_MENU)) {
    Remove_Block=!Remove_Block;}
    if(event_press(XB1_VIEW)) {
    Remove_Block=!Remove_Block;}
    if(event_press(XB1_RB)) {
    Remove_Block=!Remove_Block;}
    if(event_press(XB1_LS)) {
    Remove_Block=!Remove_Block;}
    if(event_press(XB1_LB)) {
    Remove_Block=!Remove_Block;}
    if(event_press(XB1_Y)) {
    Remove_Block=!Remove_Block;}
    set_val(XB1_UP,0);set_val(XB1_RIGHT,0);set_val(XB1_DOWN,0);set_val(XB1_LEFT,0);set_val(XB1_RS,0);set_val(XB1_X,0);set_val(XB1_Y,0);set_val(XB1_A,0);set_val(XB1_MENU,0);set_val(XB1_VIEW,0);set_val(XB1_RB,0);set_val(XB1_LS,0);set_val(XB1_LB,0);}}
    if(get_val(XB1_MENU)) {
    if(event_press(XB1_VIEW)) {
    Remove_Block=!Remove_Block;}
    set_val(XB1_VIEW,0);}
    if(display_title){
    cls_oled(0);}
    printf(5, 5, 1, 1, TITLE[0]);  //DISPLAY DONT TOUCH ME . NO ME TOQUES  
    printf(16, 27, 0 , 1, WZ[0]);
    printf(40, 38, 0, 1, MST[0]);
    printf(25, 47, 1, 1, Renglon[0]);
    if(abs(get_val(RY)) > AR + 6 || abs(get_val(RX)) > AR + 6) {
    combo_stop(AR);}}
    //COMBO ANTIRECOIL
    combo AR {
    ARS = get_val(RY) + AR_V ;
    if(ARS > 100) ARS = 100;
    set_val(RY,ARS * AR_I);
    ARS = get_val(RX) + AR_H;
    if(ARS > 100) ARS = 100;
    set_val(RX,ARS);}
    //COMBO AIM ASSIST
    combo AS { 
    set_val(RY,a_f(RY,AP));
    wait(Delay)
    set_val(RX,a_f(RX,AP));
    wait(Delay)
    set_val(RY,a_f(RY,AM));
    wait(Delay)
    set_val(RX,a_f(RX,AM));
    wait(Delay)}
    //COMBO FINE TUNE
    combo Fine_Tune_Aim {
    set_val(RX,(15 - fine_pulse));
    set_val(LX,(-15 + fine_pulse));
    wait(Sampling_Time);
    wait(Sampling_Time);
    wait(Sampling_Time);
    set_val(RX,(15 - fine_pulse));
    set_val(RY,(10 - fine_pulse));
    set_val(LX,(-5 + fine_pulse));
    wait(Sampling_Time);
    wait(Sampling_Time);
    wait(Sampling_Time); 
    set_val(RY,(10 - fine_pulse));
    wait(Sampling_Time);
    wait(Sampling_Time);
    wait(Sampling_Time);
    wait(Sampling_Time);
    set_val(RX,(-15 + fine_pulse));
    set_val(RY,(10 - fine_pulse));
    set_val(LX,(5 - fine_pulse))
    wait(Sampling_Time);
    wait(Sampling_Time)
    wait(Sampling_Time)
    set_val(RX,(-15 + fine_pulse));
    set_val(LX,(15 - fine_pulse))
    wait(Sampling_Time);
    wait(Sampling_Time);
    wait(Sampling_Time);
    set_val(RX,(-15 + fine_pulse));
    set_val(RY,(-10 + fine_pulse));
    set_val(LX,(5 - fine_pulse))
    wait(Sampling_Time);
    wait(Sampling_Time);
    wait(Sampling_Time);
    set_val(RY,(-10 + fine_pulse)); 
    wait(Sampling_Time);
    wait(Sampling_Time);
    wait(Sampling_Time);
    wait(Sampling_Time);
    set_val(RX,(15 - fine_pulse));
    set_val(RY,(-10 + fine_pulse));
    set_val(LX,(-5 + fine_pulse))
    wait(Sampling_Time);
    wait(Sampling_Time);
    fine_pulse = fine_pulse + 2;
    if ( fine_pulse >10){
    fine_pulse = 0;}   }
    //COMBO AIM ASSIST PERFECTION
    combo Aim_Assist_Perfection{ 
    X_Last_Value = X_Current_Value
    Y_Last_Value = Y_Current_Value
    wait(Sampling_Time);
    X_Current_Value = get_lval(RX)- RX_Axis_Joystick_calibrate;
    Y_Current_Value = get_lval(RY)- RY_Axis_Joystick_calibrate; 
    if (Sampling_Done == TRUE ){
    Aim_Perfection(X_Last_Value, X_Current_Value, 1, 0, 1, 0 ); 
    Aim_Perfection(Y_Last_Value, Y_Current_Value, 1, 0, 0, 1 );} 
    X_Last_Value = X_Current_Value;
    Y_Last_Value = Y_Current_Value;
    wait(Sampling_Time);
    X_Current_Value = get_lval(RX)- RX_Axis_Joystick_calibrate;
    Y_Current_Value = get_lval(RY)- RX_Axis_Joystick_calibrate; 
    if (Sampling_Done == TRUE ){
    Aim_Perfection(X_Last_Value, X_Current_Value, 0, 1, 1, 0 ); 
	Aim_Perfection(Y_Last_Value, Y_Current_Value, 0, 1, 0, 1 );}
    Sampling_Done = TRUE; 
    wait(Sampling_Time);}        
    //COMBO AIM ASSIST INSANE SPIROIDE
    combo spiroide_Aim_Assit {
    set_val(RX,(4 + spiroide_pulse));
    set_val(LX,(-15+ spiroide_pulse));
    wait(Sampling_Time);
    wait(Sampling_Time);
    set_val(RY,(5 + spiroide_pulse));
    wait(Sampling_Time);
    wait(Sampling_Time);
    wait(Sampling_Time);
    wait(Sampling_Time);
    set_val(RX,(-4 - spiroide_pulse));
    set_val(LX,15 - spiroide_pulse );
    wait(Sampling_Time);
    wait(Sampling_Time)
    set_val(RY,(5 + spiroide_pulse));
    wait(Sampling_Time);
    wait(Sampling_Time);
    wait(Sampling_Time);
    wait(Sampling_Time);
	spiroide_pulse = spiroide_pulse + 2;
	if ( spiroide_pulse >10){
	spiroide_pulse = 0;}}  
    //COMBO AIM ABUSE
    combo AB {
    set_val(LT,100);
    wait(AB_Speed);
    set_val(LT,0):
    wait(40);}
    //COMBO AIM ABUSE PRECISE
    combo ABP {
    set_val(LT,100);
    wait(ABP_Speed);
    set_val(LT,0);
    wait(40);}
    //COMBO RAPID CROUCH FIRE
    combo CF {
    set_val(B,100);
    wait(40);
    set_val(B,0);
    wait(CF_Speed);}
    //COMBO CANCEL GRANADE RAINBOW
    combo CG {
    set_val(Y,100);
    wait(40);
    set_val(B,0);
    wait(1);}
   //COMBO HOP SHOT
    combo HS {
    set_val(A,100);
    wait(40);
    set_val(A,0);
    wait(HS_Speed);}
    //COMBO STRAFE FIRE
    combo ST {
	set_val(LX,100);
	wait(RIGHT_Speed);
	set_val(LX,0);
	wait(100);
	set_val(LX,-100);
	wait(LEFT_Speed);
	set_val(LX,-0);
	wait(100);}
	//COMBO STRAFE AIM
    combo STA {
	set_val(LX,100);
	wait(STA_RIGHT_Speed);
	set_val(LX,0);
	wait(100);
	set_val(LX,-100);
	wait(STA_LEFT_Speed);
	set_val(LX,-0);
	wait(100);}
    //COMBO JUMP ON SHOT
    combo JOS {
    set_val(A,100);
    wait(100);}
    //COMBO RAPID FIRE
    combo RF {
    set_val(RT,100);
    wait(40);
    set_val(RT,0);
    wait(RF_Speed);}
    //COMBO BURST FIRE
    combo BF {
    set_val(RT,100);
    wait(40);
    set_val(RT,0);
    wait(100);
    set_val(RT,100);
    wait(40);
    set_val(RT,0);
    wait(100);
    set_val(RT,100);
    wait(40);
    set_val(RT,0);
    wait(BF_Speed);}
    //COMBO SLIDE CANCEL 
    combo SlideCancel {
    set_val(B, 0);
	wait(200);
    set_val(B, 100);
	wait(150);
	set_val(B, 0);
	wait(50);
	set_val(B, 100);
	wait(150);
	set_val(B, 0);
	wait(50);
	set_val(A, 100);
	wait(150);
	set_val(A, 0);}
    //COMBO ADS PING ON FIRE
    combo AdsPingOnFire {
    set_val(UP, 100);    
    wait(100);                
    set_val(UP, 0);        
    wait(3000); 
    set_val(UP, 100);    
    wait(100);                
    set_val(UP, 0);        
    wait(3000); 
}
    //COMBO BUNNYHOP
    combo BunnyHop {
    
	set_val(A, 100);
	wait(40);
	set_val(A, 0);
	wait(BH_Speed);
	set_val(A, 100);
	wait(40);
	set_val(A, 0);
	wait(BH_Speed);
	set_val(A, 100);
	wait(40);
	set_val(A, 0);
	wait(BH_Speed);
	
}
    //COMBO SLIDE ANG TURN
    combo SlideAndTurn {
    
	set_val(B, 100);
	wait(200);
	set_val(B, 0);
	wait(1000);
	set_val(A, 100);
	wait(50);
	set_val(A, 0);
	wait(2500);
	
	
}
    //COMBO TURBO MELEE
    combo TurboMelee {
    set_val(RS, 100);    
    wait(40);                
    set_val(RS, 0);        
    wait(40);                
}
    //COMBO SNIPER FOCUS
    combo SniperFocus {
    
	set_val(LS, 100);
	wait(100);
	
}
    //COMBO QUICK SCOPE
    combo QS
{
	set_val(LT,100);
	wait(QS_Delay);
	set_val(LT,100);
	set_val(RT,100);
	wait(40);
	set_val(LT,100);
	wait(40);
}
    //COMBO HOP THROW
    combo HP {
    set_val(RB, 100);
	wait(400);
	set_val(RB, 0);
	wait(230);
	set_val(A, 100);
	wait(100);
	set_val(A, 0);                
}
    //COMBO EASY REVIVE
    combo ER {
    set_val(X,100);
    wait(7000);
    set_val(X,0);
    wait(1);}
    
    //COMBO FAST RELOAD
    combo FR {
    set_val(Y, 0);
	wait(FR_Speed);
	set_val(Y, 100);
	wait(30);
	set_val(Y, 0);
	wait(30);
	set_val(Y, 100);
	wait(30);
	set_val(Y, 0);
	wait(30);
}
    
    //COMBO CANCEL RELOAD
    combo CR {
    set_val(Y, 100);
	wait(30);
	set_val(Y, 0);
	wait(30);
	set_val(Y, 100);
	wait(30);
	set_val(Y, 0);
	wait(1000);
}
    //COMBO INCREASE
    combo Increase {
    set_rumble(RUMBLE_A,100);
    wait(100);
    reset_rumble();}
    //COMBO DECREASE
    combo Decrease {
    set_rumble(RUMBLE_B,100);
    wait(50);
    reset_rumble();}
    //COMBO MENU RUMBLE
    combo Menu_Rumble {
    set_rumble(RUMBLE_B,100);
    wait(200);
    reset_rumble();
    Toggle_Rumble = OFF;}
    //COMBO PURPLE FLASH
    combo Purple_Flash {
    LED(1,1,1,1);
    wait(100);
    LED(0,0,0,0);
    wait(100);
    LED(1,1,1,1);
    wait(100);
    LED(0,0,0,0);
    wait(100);
    LED(1,1,1,1);
    wait(100);
    LED(0,0,0,0);
    wait(100);}
    
    combo Rainbow_Flash {
    LED(2,0,2,0);
    wait(100);
    LED(0,0,0,0);
    wait(100);
    LED(0,0,0,2);
    wait(100);
    LED(0,0,0,0);
    wait(100);
    LED(0,2,2,0);
    wait(100);
    LED(0,0,0,0);
    wait(100);}
    
    combo Flash_ON {
    LED(0,0,2,0);
    set_rumble(RUMBLE_A,100);
    wait(400);
    reset_rumble();
    reset_leds();}
 
    combo Flash_OFF {
    LED(0,2,0,0);
    set_rumble(RUMBLE_B,100);
    wait(200);
    reset_rumble();
    LED(0,0,0,0);
    wait(100);
    set_rumble(RUMBLE_B,100);
    LED(0,2,0,0);
    wait(200);
    reset_rumble();
    reset_leds();}
    
    function a_f(p,m) {
    if(abs(get_val(p)) < Release)
    return m;
    return get_val(p);}
    
    function Aim_Perfection(Last_Value, Current_Value, Boost, Correction, X_AXIS, Y_AXIS ) {
	if(abs(Last_Value - Current_Value) < Aim_Perfection_Limit){ 
	if(Last_Value < Current_Value){
	if (Boost){
	if (X_AXIS)
	set_val(RX, (Current_Value + Aim_Boost)); 
	if (Y_AXIS)
	set_val(RY, (Current_Value + Aim_Boost));}
	else if(Correction){
	if (X_AXIS)
	set_val(RX, (Current_Value - Aim_Correction)); 
	if (Y_AXIS)
	set_val(RY, (Current_Value - Aim_Correction));}}            
	else{
	if (Boost){
	if (X_AXIS)
	set_val(RX, (Current_Value - Aim_Boost)); 
	if (Y_AXIS)
	set_val(RY, (Current_Value - Aim_Boost));}
	else if(Correction){                         
	if (X_AXIS)
	set_val(RX, (Current_Value + Aim_Correction)); 
	if (Y_AXIS)
	set_val(RY, (Current_Value + Aim_Correction));}}}
}
 
    function LED(a,b,c,d) {
    set_led(LED_1,a);
    set_led(LED_2,b);
    set_led(LED_3,c);
    set_led(LED_4,d);}
    
    define ON = TRUE;
    define OFF = FALSE;
   