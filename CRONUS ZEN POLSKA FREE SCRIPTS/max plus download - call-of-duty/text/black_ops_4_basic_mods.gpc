// GPC Online Library
// black_ops_4_basic_mods.gpc


 /*
 = = = = = = = = = = = = = = = = = = = 
 = /\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\  =
 = /\/\/\  Made By ItzSnack  /\/\/\  = 
 = /\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\  =
 = = = = = = = = = = = = = = = = = = = 

 ================                                                        
 === FEATURES ===
 ================
 Aim Assist
 Anti Recoil
 Rapid Fire
 Auto Run
 Jump on shot
 Hair Trigger
 Hold Breath
 Auto Heal
 Custom Sensitivity
 
 =================
 === Important ===
 =============================================================
 === Some features will have to be turned on in the script ===
 =============================================================
 
 ===================================================================================
 ===                          TOGGLES YOU CAN ACTIVATE                           ===
 ===================================================================================
 === Hold L2/LT And Press R3/RS For Rapid Fire                                   ===
 === 1 Rumbles = ON 2 = OFF                                                      ===
 ===================================================================================
 === Hold L2/LT And Press OPTIONS/START For Jump Shot                            ===
 === 1 Rumbles = ON 2 = OFF                                                      ===
 ===================================================================================
 */
 
    //Layout
    define PS = 0;
    define SHARE = 1;
    define OPTIONS = 2;   
    define R1 = 3;
    define R2 = 4;        
    define R3 = 5;        
    define L1 = 6;       
    define L2 = 7;      
    define L3 = 8;    
    define RX = 9;       
    define RY = 10;      
    define LX = 11;       
    define LY = 12;      
    define UP = 13;       
    define DOWN = 14;    
    define LEFT = 15; 
    define RIGHT = 16;
    define TRIANGLE = 17;
    define CIRCLE = 18;  
    define CROSS = 19;   
    define SQUARE = 20
    define TOUCHPAD = 27;
    
    //Customize
    int R1L1 = OFF; //Change OFF TO ON If you play with Fliped
    int ART = ON; //Change ON TO OFF If you don't want Auto Run
    int HRT = ON; //Change ON TO OFF If you don't want Hair Triggers
    int AHT = ON; //Change ON TO OFF If you don't want Auto Heal
    int HBT = ON; //Change ON TO OFF If you don't want Hold Breath
    int CST = ON; //Change ON TO OFF If you don't want Custom Sensitivity
    
    //Custom Sensitivity
    int GEN_SENS = 100;
    int ADS_SENS = 100;
    int FIRE_SENS = 100;
    int ADS_FIRE_SENS = 100;
    int USE_SENS;
    
    //Aim Assist
    int AP = 22;
    int AM = -22;
    int Delay = 20
    int ARelease = 23;
    
    //Anti Recoil
    int AR = 20; //Anti Recoil
    int Release = 24; //Maximum 10+ Higher than Anti Recoil
    
    //Toggles
    int ARS;
    int onoff;
    int b;
 
    main {
    
    if(CST)
    if(!get_val(L2) && !get_val(R2)) { 
    USE_SENS=GEN_SENS;}
    else if(get_val(L2) && !get_val(R2)) { 
    USE_SENS=ADS_SENS;}    
    else if(!get_val(L2) && get_val(R2)) { 
    USE_SENS=FIRE_SENS;}
    else if(get_val(L2) && get_val(R2)) { 
    USE_SENS=ADS_FIRE_SENS;}
    sensitivity(RY,NOT_USE,USE_SENS);
    sensitivity(RX,NOT_USE,USE_SENS);
    
    if(R1L1) {
    swap(R1,R2); 
    swap(L1,L2);}   
    
    if(HRT)
    deadzone(R2,L2,100,100);
    
    if(ART)
    if(get_val(LY) == -100)  
    set_val(L3,100);
    
    if(HBT)
    if(get_val(L2))
    set_val(L3,100);
    
    if(get_val(L2)) combo_run(AS);
    
    if(get_val(L2) && event_press(OPTIONS)) {
    b=!b;
    if(b == ON){combo_run(Flash_ON);} 
    if(b == OFF){combo_run(Flash_OFF);}}  
    if(b && get_val(R2)) {
    set_val(CROSS,100);}
 
    if(AHT)
    if(event_release(R2))
    combo_run(AUTOHEAL);
 
    if(get_val(L2) && get_val(R2)) {
    combo_run(AR);}
 
    if(abs(get_val(RY)) > Release || abs(get_val(RX)) > Release) {
    combo_stop (AR);}
 
    if(get_val(L2) && event_press(R3)) {
    onoff = !onoff;
    if(onoff == ON){combo_run(Flash_ON);} 
    if(onoff == OFF){combo_run(Flash_OFF);}}
    if(onoff && get_val(R2))
    combo_run(RF);}

 
    combo AS { 
    set_val(RY,a_f(RY,AP));
    wait(Delay)
    set_val(RX,a_f(RX,AP));
    wait(Delay)
    set_val(RY,a_f(RY,AM));
    wait(Delay)
    set_val(RX,a_f(RX,AM));
    wait(Delay)}
 
    function a_f(p,m) {
    if(abs(get_val(p)) < ARelease)
    return m;
    return get_val(p);}
 
    combo AR {
    ARS = get_val(RY) + AR;
    if(ARS > 100) ARS = 100;
    set_val(RY,ARS);}
 
    combo RF {
    set_val(R2, 100);
    wait(40);
    set_val(R2, 0);
    wait(40);}
 
    combo AUTOHEAL {
    wait(140);
    set_val(L1,100);
    wait(100);
    set_val(L1,0);
    wait(40);
    set_val(L1,100);
    wait(100);}
 
    combo Flash_ON {
    LED(0,0,2,0);
    set_rumble(RUMBLE_A,100);
    wait(400);
    reset_rumble();}
    
    combo Flash_OFF {
    LED(0,2,0,0);
    set_rumble(RUMBLE_B,100);
    wait(200);
    reset_rumble();
    LED(0,0,0,0);
    wait(100);
    set_rumble(RUMBLE_B,100);
    LED(0,2,0,0);
    wait(200);
    reset_rumble();}
    
    function LED(a,b,c,d) {
    set_led(LED_1,a);
    set_led(LED_2,b);
    set_led(LED_3,c);
    set_led(LED_4,d);}
    
    define ON = TRUE;
    define OFF = FALSE;