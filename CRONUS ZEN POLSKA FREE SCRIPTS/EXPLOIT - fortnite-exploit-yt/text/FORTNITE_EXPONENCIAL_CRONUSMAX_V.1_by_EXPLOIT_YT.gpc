
/*
███████╗ ██████╗ ██████╗ ████████╗███╗   ██╗██╗████████╗███████╗
██╔════╝██╔═══██╗██╔══██╗╚══██╔══╝████╗  ██║██║╚══██╔══╝██╔════╝
█████╗  ██║   ██║██████╔╝   ██║   ██╔██╗ ██║██║   ██║   █████╗  
██╔══╝  ██║   ██║██╔══██╗   ██║   ██║╚██╗██║██║   ██║   ██╔══╝  
██║     ╚██████╔╝██║  ██║   ██║   ██║ ╚████║██║   ██║   ███████╗
╚═╝      ╚═════╝ ╚═╝  ╚═╝   ╚═╝   ╚═╝  ╚═══╝╚═╝   ╚═╝   ╚══════╝

 
 ██████ ██████   ██████  ███    ██ ██    ██ ███████ ███    ███  █████  ██   ██          
██      ██   ██ ██    ██ ████   ██ ██    ██ ██      ████  ████ ██   ██  ██ ██           
██      ██████  ██    ██ ██ ██  ██ ██    ██ ███████ ██ ████ ██ ███████   ███            
██      ██   ██ ██    ██ ██  ██ ██ ██    ██      ██ ██  ██  ██ ██   ██  ██ ██           
 ██████ ██   ██  ██████  ██   ████  ██████  ███████ ██      ██ ██   ██ ██   ██          
                                                                                        
                                                                                        
███████ ██   ██ ██████   ██████  ███    ██ ███████ ███    ██  ██████ ██  █████  ██      
██       ██ ██  ██   ██ ██    ██ ████   ██ ██      ████   ██ ██      ██ ██   ██ ██      
█████     ███   ██████  ██    ██ ██ ██  ██ █████   ██ ██  ██ ██      ██ ███████ ██      
██       ██ ██  ██      ██    ██ ██  ██ ██ ██      ██  ██ ██ ██      ██ ██   ██ ██      
███████ ██   ██ ██       ██████  ██   ████ ███████ ██   ████  ██████ ██ ██   ██ ███████ 


                      _           _                   _            _ _ _     ____          _______  ______  _     ___ ___ _____  __   _______ 
   ___ _ __ ___  __ _| |_ ___  __| |   __ _ _ __   __| |   ___  __| (_) |_  | __ ) _   _  | ____\ \/ /  _ \| |   / _ \_ _|_   _| \ \ / /_   _|
  / __| '__/ _ \/ _` | __/ _ \/ _` |  / _` | '_ \ / _` |  / _ \/ _` | | __| |  _ \| | | | |  _|  \  /| |_) | |  | | | | |  | |    \ V /  | |  
 | (__| | |  __/ (_| | ||  __/ (_| | | (_| | | | | (_| | |  __/ (_| | | |_  | |_) | |_| | | |___ /  \|  __/| |__| |_| | |  | |     | |   | |  
  \___|_|  \___|\__,_|\__\___|\__,_|  \__,_|_| |_|\__,_|  \___|\__,_|_|\__| |____/ \__, | |_____/_/\_\_|   |_____\___/___| |_|     |_|   |_|  
                                                                                   |___/                                                      


// QUICK EDIT ASSIST & FAST RESET & RESET = CONFIRM ON RELEASE OFF IN GAME
// L3/LS = QUICK EDIT ASSIST
// R3/RS TO RESET NORMALLY WHILE HOLDING L3 (RELEASE L3/LS WITHIN 150ms OF PRESSING R3/RS TO STOP CONFIRM BEING PRESSED TWICE)(TIME CAN BE EXTENDED)
// DOWN = FAST RESET (DOWN WHILE NOT HOLDING L2/LT) 
// (DOWN GETS DISABLED IF PRESSED BY ITSELF WHICH RUNS A COMBO FOR USE, USE THE ANALOGUE STICK IN INVENTORY OR MENUS ETC)
// (HOLD L2/LT TO DISABLE FAST RESET COMBO = SO EG..TO EMOTE IN GAME HOLD L2 AND PRESS DOWN)
*/

define AIM                = PS4_L2;//LT  
define FIRE               = PS4_R2;//RT  
define RESET              = PS4_R3;//RS  
define BUILD              = PS4_CIRCLE;//B
define SELECT             = PS4_R2;//RT
define CONFIRM            = PS4_CIRCLE;//B
define PICKAXE            = PS4_TRIANGLE;//Y

define Wall     = PS4_R2;
define Floor    = PS4_R1;
define Ramp     = PS4_L2;
define Roof     = PS4_L1;

define ON   = TRUE;
define OFF  = FALSE;  
define RX   = PS4_RX;  
define RY   = PS4_RY;  
define X    = RX;                                    
define Y    = RY;


int BuildTrack,BuildCount;
int SHUNT,HOLD1,EDIT;

//AIM ASSIST
//===================================
int AimAssist  = ON;
int AimAssist_Strength  = 28; //28

//ANTI RECOIL
//===================================
int Anti_Recoil;
define ADSPos = ON;
define AntiRecoil = 12;


//BUILD TRACKER
//===================================
int BuildTracker  =  ON;
int BuildSyncTime = 6000;

//INSTANT RESET
//=================================== 
int FAST_RESET   = OFF;//FAST RESET
define FAST_RESET_EDIT 	  = PS4_L3;//LS
define FAST_RESET_BUTTON  = PS4_DOWN;//DOWN

//FAST EDIT
//===================================
int EDIT_ASSIST = OFF;//EDIT ASSIST
define EDIT_ASSIST_BUTTON = PS4_L3;//LS
define DELAY = 20;


main {
		
	if (EDIT_ASSIST) {
		if (get_val(EDIT_ASSIST_BUTTON)) {
			ASSIST();
			EDIT = ON;
		}
	if (event_release (EDIT_ASSIST_BUTTON)) {
		combo_run (CONFIRM);
		HOLD1 = OFF;
		EDIT = OFF;
		}
	}
	if (FAST_RESET) {
		if (!get_val(AIM) && event_press(FAST_RESET_BUTTON)) {                                                         
    		SHUNT = FAST_RESET_BUTTON;
    		combo_run(RESET);
			}
		}
	if (EDIT == ON) {
		if (event_press(RESET)) {  
    		combo_run (RESETS);
    		EDIT = OFF; 
}
	if (event_press(PICKAXE) || event_press(BUILD)) {
			EDIT = OFF;
	}
}
	if (BuildTracker) {
        
        if (event_press(BUILD)) {
            BuildTrack = !BuildTrack;
        }
    
        if (BuildTrack) {
            BuildCount += get_rtime();
            
            if (event_press(PICKAXE) || BuildCount == BuildSyncTime) {
                BuildTrack = OFF;
                BuildCount = OFF;
            }
            
                if (get_ival(Roof) || get_ival(Floor) || get_ival(Ramp) || get_ival(Wall)) 
                    BuildCount = OFF;
        }
    }

    if (!BuildTrack) { 	
   
    if (AimAssist) {   
      if (get_val(AIM)> 95){ combo_run(Auto_Aimm);}
         if (abs(get_val(9)) > 19 || abs(get_val(10)) > 19) 
               combo_stop(Auto_Aimm);
    }
		

    if(!ADSPos || get_val(AIM)) {
       combo_run(AntiRecoil);
    }
    
    if (SHUNT) {
    if (event_release(SHUNT)) {
		SHUNT = OFF;
	}
	else {
		set_val (SHUNT,OFF);
		}
	  }
   } 
}

combo Auto_Aimm {          
    set_val(10, (AimAssist_Strength)); wait(10)
    set_val(9, (AimAssist_Strength)); wait(10)
    set_val(10, AimAssist_Strength * -1); wait(10)
    set_val(9, AimAssist_Strength * -1); wait(10)
}
combo AntiRecoil { 
    if(get_val(FIRE)) {
    Anti_Recoil = get_val(10) + AntiRecoil;
    if(Anti_Recoil > 100) Anti_Recoil = 100;
    set_val(10, Anti_Recoil);
}
}
combo CONFIRM {
	set_val(CONFIRM,100);
	wait(50);
	set_val(CONFIRM,0);
	wait(150);
}
combo RESET {
	set_val(FAST_RESET_EDIT,100);
	wait(50)
	set_val(RESET,100);		
	wait(50);
	combo_run(CONFIRM);
}
combo RESETS {
	wait(20)
	combo_run(CONFIRM);
}
function ASSIST () {
	HOLD1 += get_rtime();
if (get_val(EDIT_ASSIST_BUTTON)) {
if (HOLD1 >= DELAY)
  	PRESS (SELECT);
  	}
}
function PRESS (BUTTON) {
if (get_val(BUTTON))
		return;
	set_val(BUTTON, 100);
}