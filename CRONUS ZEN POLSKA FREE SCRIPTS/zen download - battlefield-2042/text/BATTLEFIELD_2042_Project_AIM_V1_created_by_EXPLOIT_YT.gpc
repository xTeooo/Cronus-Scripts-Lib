/*//CREATED by EXPLOIT YT
███۞███████ ]▄▄▄▄▄▄▄▄▄▄▄▄▃
▂▄▅█████████▅▄▃▂
I███████████████████].
◥⊙▲⊙▲⊙▲⊙▲⊙▲⊙▲⊙◤...

██████   █████  ████████ ████████ ██      ███████ ███████ ██ ███████ ██      ██████      
██   ██ ██   ██    ██       ██    ██      ██      ██      ██ ██      ██      ██   ██       
██████  ███████    ██       ██    ██      █████   █████   ██ █████   ██      ██   ██      
██   ██ ██   ██    ██       ██    ██      ██      ██      ██ ██      ██      ██   ██      
██████  ██   ██    ██       ██    ███████ ███████ ██      ██ ███████ ███████ ██████     
                                                                                                                                                                                                                                                                                                           
                                                                                                                                                                                                                                                
 222222222222222         000000000            444444444   222222222222222                                                                                                                                                                       
2:::::::::::::::22     00:::::::::00         4::::::::4  2:::::::::::::::22                                                                                                                                                                     
2::::::222222:::::2  00:::::::::::::00      4:::::::::4  2::::::222222:::::2                                                                                                                                                                    
2222222     2:::::2 0:::::::000:::::::0    4::::44::::4  2222222     2:::::2                                                                                                                                                                    
            2:::::2 0::::::0   0::::::0   4::::4 4::::4              2:::::2                                                                                                                                                                    
            2:::::2 0:::::0     0:::::0  4::::4  4::::4              2:::::2                                                                                                                                                                    
         2222::::2  0:::::0     0:::::0 4::::4   4::::4           2222::::2                                                                                                                                                                     
    22222::::::22   0:::::0 000 0:::::04::::444444::::444    22222::::::22                                                                                                                                                                      
  22::::::::222     0:::::0 000 0:::::04::::::::::::::::4  22::::::::222                                                                                                                                                                        
 2:::::22222        0:::::0     0:::::04444444444:::::444 2:::::22222                                                                                                                                                                           
2:::::2             0:::::0     0:::::0          4::::4  2:::::2                                                                                                                                                                                
2:::::2             0::::::0   0::::::0          4::::4  2:::::2                                                                                                                                                                                
2:::::2       2222220:::::::000:::::::0          4::::4  2:::::2       222222                                                                                                                                                                   
2::::::2222222:::::2 00:::::::::::::00         44::::::442::::::2222222:::::2                                                                                                                                                                   
2::::::::::::::::::2   00:::::::::00           4::::::::42::::::::::::::::::2                                                                                                                                                                   
22222222222222222222     000000000             444444444422222222222222222222                                                                                                                                                                                                                                                                                                           
                                                                                                                                                                                                                                                


888888b.   8888888b.   .d88888b. Y88b   d88P 8888888888 .d8888b. 88888888888             d8888 8888888 888b     d888      888     888    d888   
888   Y88b 888   Y88b d88P" "Y88b Y88b d88P  888       d88P  Y88b    888                d88888   888   8888b   d8888      888     888   d8888   
888    888 888    888 888     888  Y88o88P   888       888    888    888               d88P888   888   88888b.d88888      888     888     888   
888   d88P 888   d88P 888     888   Y888P    8888888   888           888              d88P 888   888   888Y88888P888      Y88b   d88P     888   
8888888P"  8888888P"  888     888    888     888       888           888             d88P  888   888   888 Y888P 888       Y88b d88P      888   
888        888 T88b   888     888    888     888       888    888    888            d88P   888   888   888  Y8P  888        Y88o88P       888   
888        888  T88b  Y88b. .d88P    888     888       Y88b  d88P    888           d8888888888   888   888   "   888         Y888P  d8b   888   
888        888   T88b  "Y88888P"     888     8888888888 "Y8888P"     888          d88P     888 8888888 888       888          Y8P   Y8P 8888888 
                                                                                                                                                
                                                                                                                                                

███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████
█░░░░░░░░░░░░░░█░░░░░░░░██░░░░░░░░█░░░░░░░░░░░░░░█░░░░░░█████████░░░░░░░░░░░░░░█░░░░░░░░░░█░░░░░░░░░░░░░░████░░░░░░░░██░░░░░░░░█░░░░░░░░░░░░░░█
█░░▄▀▄▀▄▀▄▀▄▀░░█░░▄▀▄▀░░██░░▄▀▄▀░░█░░▄▀▄▀▄▀▄▀▄▀░░█░░▄▀░░█████████░░▄▀▄▀▄▀▄▀▄▀░░█░░▄▀▄▀▄▀░░█░░▄▀▄▀▄▀▄▀▄▀░░████░░▄▀▄▀░░██░░▄▀▄▀░░█░░▄▀▄▀▄▀▄▀▄▀░░█
█░░▄▀░░░░░░░░░░█░░░░▄▀░░██░░▄▀░░░░█░░▄▀░░░░░░▄▀░░█░░▄▀░░█████████░░▄▀░░░░░░▄▀░░█░░░░▄▀░░░░█░░░░░░▄▀░░░░░░████░░░░▄▀░░██░░▄▀░░░░█░░░░░░▄▀░░░░░░█
█░░▄▀░░███████████░░▄▀▄▀░░▄▀▄▀░░███░░▄▀░░██░░▄▀░░█░░▄▀░░█████████░░▄▀░░██░░▄▀░░███░░▄▀░░███████░░▄▀░░██████████░░▄▀▄▀░░▄▀▄▀░░███████░░▄▀░░█████
█░░▄▀░░░░░░░░░░███░░░░▄▀▄▀▄▀░░░░███░░▄▀░░░░░░▄▀░░█░░▄▀░░█████████░░▄▀░░██░░▄▀░░███░░▄▀░░███████░░▄▀░░██████████░░░░▄▀▄▀▄▀░░░░███████░░▄▀░░█████
█░░▄▀▄▀▄▀▄▀▄▀░░█████░░▄▀▄▀▄▀░░█████░░▄▀▄▀▄▀▄▀▄▀░░█░░▄▀░░█████████░░▄▀░░██░░▄▀░░███░░▄▀░░███████░░▄▀░░████████████░░░░▄▀░░░░█████████░░▄▀░░█████
█░░▄▀░░░░░░░░░░███░░░░▄▀▄▀▄▀░░░░███░░▄▀░░░░░░░░░░█░░▄▀░░█████████░░▄▀░░██░░▄▀░░███░░▄▀░░███████░░▄▀░░██████████████░░▄▀░░███████████░░▄▀░░█████
█░░▄▀░░███████████░░▄▀▄▀░░▄▀▄▀░░███░░▄▀░░█████████░░▄▀░░█████████░░▄▀░░██░░▄▀░░███░░▄▀░░███████░░▄▀░░██████████████░░▄▀░░███████████░░▄▀░░█████
█░░▄▀░░░░░░░░░░█░░░░▄▀░░██░░▄▀░░░░█░░▄▀░░█████████░░▄▀░░░░░░░░░░█░░▄▀░░░░░░▄▀░░█░░░░▄▀░░░░█████░░▄▀░░██████████████░░▄▀░░███████████░░▄▀░░█████
█░░▄▀▄▀▄▀▄▀▄▀░░█░░▄▀▄▀░░██░░▄▀▄▀░░█░░▄▀░░█████████░░▄▀▄▀▄▀▄▀▄▀░░█░░▄▀▄▀▄▀▄▀▄▀░░█░░▄▀▄▀▄▀░░█████░░▄▀░░██████████████░░▄▀░░███████████░░▄▀░░█████
█░░░░░░░░░░░░░░█░░░░░░░░██░░░░░░░░█░░░░░░█████████░░░░░░░░░░░░░░█░░░░░░░░░░░░░░█░░░░░░░░░░█████░░░░░░██████████████░░░░░░███████████░░░░░░█████
███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████
                                                                                                                                                                      
_____________¶____¶_______________________________
____________¶¶____¶¶______________________________                                             ＣＲＥＡＴＥＤ ＢＹ ＥＸＰＬＯＩＴ ＹＴ
___________¶¶¶___¶¶¶______________________________                                             ────────────────────────────────
___________¶¶¶___¶¶¶______________________________
___________¶¶___¶¶¶_______________________________                                       ＩＮＳＴＲＵＣＴＩＯＮＳ ＡＮＤ ＺＥＮ ＭＡＮＵＡＬ．
___________¶¶___¶¶________________________________ 
___________¶¶_¶¶__________________________________                                                                  
___________¶¶¶____________________________________                                            OPEN MENU ZEN =  L2/LT + OPTIONS
____________¶¶____________________________________ 
_____________888¶¶________________________________                                PRESS THE RIGHT BUTTON AND THE LEFT BUTTON TO NAVIGATE THE MENU                     
____________¶¶¶_8¶¶_______________________________                 
____________¶¶¶¶_88¶______________________________                           PRESS THE UP BUTTON AND THE DOWN BUTTON TO ACTIVATE OR DEACTIVATE THE MODS
_____________¶¶¶8_88¶_____________________________     
_____________8¶¶¶8_88¶____________________________                                   PRESS THE EQUIS / X BUTTON TO ENTER THE EDIT VALUES MODE
______________¶¶¶¶__888___________________________                                                    
______________¶¶¶¶¶_88¶8__________________________                                PRESS THE UP BUTTON AND DOWN BUTTON TO CHANGE THE MODS VALUES
_______________¶¶¶¶¶_88¶8_________________________                                     
________________¶¶¶¶8_88¶8________________________                                   PRESS CIRCLE / B TO RETURN TO MODS AND EXIT AND SAVE
________________¶¶¶¶¶__88¶________________________
_________________¶¶¶¶¶_88¶________________________                                   Recoil Profile PRIMARY AND SECUNDARY Press TRIANGLE/Y
_________________¶¶¶¶¶¶_88¶_______________________             
________________¶¶¶¶¶¶¶8_88¶______________________  THE RUMBLE ANTI RUMBLE MUST BE ACTIVATED IN THE GAME TO HAVE A BETTER PERFORMANCE, THE SCRIPT ALREADY CARRIES BLOCK RUMBLE, 
______________8¶88¶88¶¶¶8_¶8¶_____________________  THAT MEANS THAT THE CONTROLLER WILL NOT VIBRATE AND WILL NOT ANNOY YOU, THE MOD WILL RECEIVE THE VIBRATION OF THE GAME.                                                
______________¶¶_8¶¶¶¶¶¶¶_8¶8¶8___________________
______________8¶8_8¶¶¶¶¶¶¶8¶¶8¶¶__________________          Special thanks to Batts, Excalibur, TaylorDrift, Noozbar, DoGzTheFiGhTeRs, DoNotAtMe and all community staff 
_______________¶¶_8¶¶8¶¶¶¶88¶¶8¶¶8________________                                          
____________8888¶¶¶¶¶88¶¶8¶88¶¶¶¶8________________
_________8888_88¶¶¶¶¶¶¶¶¶¶8¶__¶¶¶_________________                                        
________8_8888__¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶_________________                 
_______8_888_888___888¶¶¶¶¶¶¶¶¶¶__________________                                                         𝗠𝗢𝗗𝗦
______8__8¶8__¶¶8_____88¶¶¶¶¶¶8___________________
_____¶¶8888888__8888____8¶¶¶¶¶¶8__________________                                            - SOFT AIM EXPLOIT (credit BATT´S)
____¶¶¶¶¶¶88¶8___8¶¶88_8¶¶¶¶¶8¶___________________                                            - ANTI RECOIL RUMBLE (credit TAYLOR)
____¶¶¶¶¶¶¶¶¶¶___8¶¶¶¶¶¶¶¶¶¶8_____________________                                            - CROUCH SHOT
_____¶¶¶8¶¶¶¶8__888¶¶888¶¶¶¶¶¶____________________                                            - STRAFE SHOT
______¶¶¶¶888¶8_88¶¶¶¶¶¶¶¶¶¶¶¶¶___________________                                            - RAPID FIRE
_______¶¶¶¶888¶¶¶¶¶8¶¶¶¶¶¶¶¶¶¶¶¶__________________                                            - AUTO SPRINT TACTICO
_______¶¶¶¶¶¶¶¶¶¶¶8___¶¶¶¶8¶¶¶¶¶¶_________________                                            - RAPID MELEE
______8¶¶¶¶¶¶¶¶¶¶______¶88¶¶¶¶¶¶¶¶8_______________                                            - HAIR TRIGGERS
______¶8¶¶¶¶¶¶¶¶8______¶¶¶¶¶¶8888¶¶8______________                                            - BLOCK RUMBLE
_____8¶8¶¶¶8¶¶¶¶________¶¶¶888__8888¶8____________
____8¶¶¶¶¶8¶¶¶¶¶________8¶8__88____888¶8__________
___88_88¶¶¶¶¶¶¶__________88__888______88¶8________
__88______888¶____________8____88________8¶8______ 

   ___              _          _   _           _____  _____ _    ___ ___ _____  __   _______ 
  / __|_ _ ___ __ _| |_ ___ __| | | |__ _  _  | __\ \/ / _ \ |  / _ \_ _|_   _| \ \ / /_   _|
 | (__| '_/ -_) _` |  _/ -_) _` | | '_ \ || | | _| >  <|  _/ |_| (_) | |  | |    \ V /  | |  
  \___|_| \___\__,_|\__\___\__,_| |_.__/\_, | |___/_/\_\_| |____\___/___| |_|     |_|   |_|  
                                        |__/                                                 
   ___ ___ ___ ___ ___ _____ ___   ___       ___    _____ _        ___ _  ___ _  _____    ___ 
  / __| _ \ __|   \_ _|_   _/ __| |   \ ___ / __|__|_   _| |_  ___| __(_)/ __| ||_   _|__| _ \
 | (__|   / _|| |) | |  | | \__ \ | |) / _ \ (_ |_ / | | | ' \/ -_) _|| | (_ | ' \| |/ -_)   /
  \___|_|_\___|___/___| |_| |___/ |___/\___/\___/__| |_| |_||_\___|_| |_|\___|_||_|_|\___|_|_\


 ███████████████████████████████████████████████████████████████████████████ 
 ██									                                      ██						
 ██             If you have any question add me on discord                ██
 ██                                                                       ██
 ██			    -Wizards n Kings GPC Scripts Moderator FPS                ██
 ██              Discord ----> https://discord.gg/TJcfFFgpj5		      ██
 ██									                                      ██  
 ██				-Exploit YT Moderator/Server creator.                     ██	
 ██	             Discord ----> https://discord.gg/TJcfFFgpj5	          ██	    
 ██	                                                                      ██	
 ██	                        or Exploit YT#4891		                      ██ 
 ██									                                      ██ 
 ███████████████████████████████████████████████████████████████████████████

© EXPLOIT YT FOR CRONUS ZEN, 2019-2021. ALL RIGHTS RESERVED.*/
const uint8 FontSize [][] = {{ 7, 10, 18 },{ 11, 18, 11 },{ 16, 26, 7 }};
const uint8 FontDigits [] = {48,49,50,51,52,53,54,55,56,57};
const string MiscString [] = {"MOD","ON","OFF","BATTLEFIELD 2042","Project AIM V.1","GPC Slot:","Enabled","Disabled","Mod Toggle On/Off"};
const string Profiles [] = {"  Primary"," Secondary","Ground Loot"};
const string ModToggle [] = {""  , " Soft Aim Exploit"  , "   Taylors AR" , "   Crouch Shot"  , "   Strafe Shot"  , "Dynamic RapidFire"  , "   Auto Sprint"  , "  Rapid Melee" , "  Hair Triggers"  , "   Block Rumble" };
const string ModValue [] = {""   , "  Soft Aim Power"  , "  Soft Aim Wait"  , "Taylor AR 1 RY"  , "Taylor AR 1 RX"  , "Taylor AR 2 RY"  , "Taylor AR 2 RX"  , "Taylor AR 3 RY"  , "Taylor AR 3 RX"  , "Crouch Shot Wait"  , "Strafe Shot Wait"  , "Dynamic Fire Hold" , "Dynamic Fire Wait" };//CREATED by EXPLOIT YT
const int16 ModDigitMin [] = {  0  , 1 , 10 , 1 , -50 , 1 , -50 , 1 , -50 , 40 , 100 , 30 , 33};
const int16 ModDigitMax [] = {  0  , 50 , 200 , 100 , 50 , 100 , 50 , 100 , 50 , 1500 , 3000 , 60 , 70};
const int16 ModDigitInc [] = {  0  , 1 , 10 , 1 , 1 , 1 , 1 , 1 , 1 , 10 , 10 , 10 , 1};/*


▀█▀ ░█▄─░█ 　 ░█▀▀█ ─█▀▀█ ░█▀▄▀█ ░█▀▀▀ 　 ░█▀▀█ ░█─░█ ▀▀█▀▀ ▀▀█▀▀ ░█▀▀▀█ ░█▄─░█ ░█▀▀▀█ 
░█─ ░█░█░█ 　 ░█─▄▄ ░█▄▄█ ░█░█░█ ░█▀▀▀ 　 ░█▀▀▄ ░█─░█ ─░█── ─░█── ░█──░█ ░█░█░█ ─▀▀▀▄▄ 
▄█▄ ░█──▀█ 　 ░█▄▄█ ░█─░█ ░█──░█ ░█▄▄▄ 　 ░█▄▄█ ─▀▄▄▀ ─░█── ─░█── ░█▄▄▄█ ░█──▀█ ░█▄▄▄█*/
define Fire     = PS4_R2;
define Ads      = PS4_L2;
define Lethal   = PS4_R1;
define Tactical = PS4_L1;
define Switch   = PS4_TRIANGLE;
define Reload   = PS4_SQUARE;
define Jump     = PS4_CROSS;
define Crouch   = PS4_R3;
define Melee    = PS4_CIRCLE;
define Sprint   = PS4_L3;
define Ping     = PS4_UP;
define Up       = PS4_UP;
define Down     = PS4_DOWN;
define Left     = PS4_LEFT;
define Right    = PS4_RIGHT;
define AimX     = PS4_RX;
define AimY     = PS4_RY;
define Strafe   = PS4_LX;
define Walk     = PS4_LY;
define PY       = POLAR_RY;
define PX       = POLAR_RX;
define PS       = POLAR_RS;
define On       = TRUE;
define Off      = FALSE;

/*
░█▀▄▀█ █▀▀█ █▀▀▄ 　 ▀▀█▀▀ █▀▀█ █▀▀▀ █▀▀▀ █── █▀▀ █▀▀ 
░█░█░█ █──█ █──█ 　 ─░█── █──█ █─▀█ █─▀█ █── █▀▀ ▀▀█ 
░█──░█ ▀▀▀▀ ▀▀▀─ 　 ─░█── ▀▀▀▀ ▀▀▀▀ ▀▀▀▀ ▀▀▀ ▀▀▀ ▀▀▀*/
int ModSwitch;

int Soft_Aim          =  On;
//-----------------------------
int TaylorAntiRecoil  =  On;
//-----------------------------
int CrouchShot        = Off;
//-----------------------------
int StrafeShot        = Off;
//-----------------------------
int DynaRapidFire     = Off;
//-----------------------------
int AutoSprint        =  On;
//-----------------------------
int RapidMelee        =  Off;
//-----------------------------
int HairTriggers      =  On;
//-----------------------------
int BlockRumble       =  On;
//-----------------------------

/*
░█▀▄▀█ █▀▀█ █▀▀▄ 　 ░█──░█ █▀▀█ █── █──█ █▀▀ █▀▀ 　 ▀▀█▀▀ ─▀─ █▀▄▀█ █▀▀ █▀▀ 　 ▀▀█▀▀ █▀▀█ █▀▀▀ █▀▀▀ █── █▀▀ █▀▀ 
░█░█░█ █──█ █──█ 　 ─░█░█─ █▄▄█ █── █──█ █▀▀ ▀▀█ 　 ─░█── ▀█▀ █─▀─█ █▀▀ ▀▀█ 　 ─░█── █──█ █─▀█ █─▀█ █── █▀▀ ▀▀█ 
░█──░█ ▀▀▀▀ ▀▀▀─ 　 ──▀▄▀─ ▀──▀ ▀▀▀ ─▀▀▀ ▀▀▀ ▀▀▀ 　 ─░█── ▀▀▀ ▀───▀ ▀▀▀ ▀▀▀ 　 ─░█── ▀▀▀▀ ▀▀▀▀ ▀▀▀▀ ▀▀▀ ▀▀▀ ▀▀▀*/
int ModDigit;

//SOFT AIM
int BattStickyPower  = 20;//strength target assist 
int BattStickyWait   = 10;
//-----------------------------
//ANTI RECOIL:
//ARMA PRINCIPIAL
int TaylorAR1RY      = 20;//VERTICAL
int TaylorAR1RX      = 0;//HORIZONTAL
//ARMA SECUNDARIA
int TaylorAR2RY      = 20;//VERTICAL
int TaylorAR2RX      = 0;//HORIZONTAL
//PERFIL HAZARDZONE
int TaylorAR3RY      = 20;//VERTICAL
int TaylorAR3RX      = 0;//HORIZONTAL
//-----------------------------
//CROUCH SHOT
int CrouchShotWait   = 150;
//-----------------------------
//STRAFE SHOT
int StrafeWait       = 1500;
//-----------------------------
//RAPID FIRE
int DynaFireHold     = 40;
int DynaFireWait     = 33;
//-----------------------------

/* 
░█▀▀█ █▀▀ █▀▀ █▀▀█ ─▀─ █── 　 ░█▀▀█ █▀▀█ █▀▀█ █▀▀ ─▀─ █── █▀▀ 　 ░█▀▀█ █──█ ▀▀█▀▀ ▀▀█▀▀ █▀▀█ █▀▀▄ █▀▀ 
░█▄▄▀ █▀▀ █── █──█ ▀█▀ █── 　 ░█▄▄█ █▄▄▀ █──█ █▀▀ ▀█▀ █── █▀▀ 　 ░█▀▀▄ █──█ ──█── ──█── █──█ █──█ ▀▀█ 
░█─░█ ▀▀▀ ▀▀▀ ▀▀▀▀ ▀▀▀ ▀▀▀ 　 ░█─── ▀─▀▀ ▀▀▀▀ ▀── ▀▀▀ ▀▀▀ ▀▀▀ 　 ░█▄▄█ ─▀▀▀ ──▀── ──▀── ▀▀▀▀ ▀──▀ ▀▀▀
*/
define RecoilProfilePress   = PS4_TRIANGLE;
define RecoilWZProfileHold  = PS4_SQUARE;
define RecoilWZProfilePress = PS4_LEFT;
define RecoilReSyncHold     = PS4_SQUARE;
define RecoilReSyncPress    = PS4_DOWN;

/*
░█▀▄▀█ █▀▀ █▀▀▄ █──█ 　 ░█▀▀█ █──█ ▀▀█▀▀ ▀▀█▀▀ █▀▀█ █▀▀▄ █▀▀ 
░█░█░█ █▀▀ █──█ █──█ 　 ░█▀▀▄ █──█ ──█── ──█── █──█ █──█ ▀▀█ 
░█──░█ ▀▀▀ ▀──▀ ─▀▀▀ 　 ░█▄▄█ ─▀▀▀ ──▀── ──▀── ▀▀▀▀ ▀──▀ ▀▀▀
*/
define MenuEnterHold   = PS4_L2;
define MenuEnterPress  = PS4_OPTIONS;
define MenuExitPress   = PS4_CIRCLE;
define ChangeMenuPress = PS4_CROSS;
//Show Current Slot Info Buttons;
define FindSlotHold    = PS4_R3;
define FindSlotPress   = PS4_LEFT;

/*
░█▀▀▀█ █▀▀ █▀▀█ ─▀─ █▀▀█ ▀▀█▀▀ 　 ░█──░█ █▀▀█ █▀▀█ ─▀─ █▀▀█ █▀▀▄ █── █▀▀ █▀▀ 
─▀▀▀▄▄ █── █▄▄▀ ▀█▀ █──█ ──█── 　 ─░█░█─ █▄▄█ █▄▄▀ ▀█▀ █▄▄█ █▀▀▄ █── █▀▀ ▀▀█ 
░█▄▄▄█ ▀▀▀ ▀─▀▀ ▀▀▀ █▀▀▀ ──▀── 　 ──▀▄▀─ ▀──▀ ▀─▀▀ ▀▀▀ ▀──▀ ▀▀▀─ ▀▀▀ ▀▀▀ ▀▀▀
*/
define TimeoutLimit  = 1;
define TimeoutLimitM = 20000;
define IndexMinSwitches = 1;
define IndexMaxSwitches = 9;
define IndexMinValues   = 1;
define IndexMaxValues   = 12;
int Position,Update,MenuTimeout,Count,MainMenu,ModIndex,MenuValues,MenuSwitch,NumX,NumY,NumS,Clear,Shunt,VibA,VibB;
int Number = 1,Slot = 20000;
int ScrollTime,ScrollWait,ScrollLine,ScrollIndex,ScrollChar;
int ScrollSpeed =  70;
int ScrollDelay = 950;
int ScrollX     =   8;
int ScrollY     =  50;
int ToggleT,ToggleTime,ToggleName,Modled;
int PRumbleRY,PRumbleRX,SmartRumble,AntirecoilStrength;
int RecoilValue;
int Output;
int DynamicWait;
int SprintTimer;
define Primary    = 0;
define Secondary  = 1;
define GroundLoot = 2;

/*
─█▀▀█ ─▀─ █▀▄▀█ 　 ─█▀▀█ █▀▀ █▀▀ ─▀─ █▀▀ ▀▀█▀▀ 　 ░█─░█ ─▀─ █▀▀█ 　 ░█▀▀▀ ─▀─ █▀▀█ █▀▀ 
░█▄▄█ ▀█▀ █─▀─█ 　 ░█▄▄█ ▀▀█ ▀▀█ ▀█▀ ▀▀█ ──█── 　 ░█▀▀█ ▀█▀ █──█ 　 ░█▀▀▀ ▀█▀ █▄▄▀ █▀▀ 
░█─░█ ▀▀▀ ▀───▀ 　 ░█─░█ ▀▀▀ ▀▀▀ ▀▀▀ ▀▀▀ ──▀── 　 ░█─░█ ▀▀▀ █▀▀▀ 　 ░█─── ▀▀▀ ▀─▀▀ ▀▀▀*/
define BattsAAHip     = Off;
//-------------------------------

/*
─█▀▀█ █▀▀▄ ▀▀█▀▀ ─▀─ 　 ░█▀▀█ █▀▀ █▀▀ █▀▀█ ─▀─ █── 　 ░█─░█ ─▀─ █▀▀█ 
░█▄▄█ █──█ ──█── ▀█▀ 　 ░█▄▄▀ █▀▀ █── █──█ ▀█▀ █── 　 ░█▀▀█ ▀█▀ █──█ 
░█─░█ ▀──▀ ──▀── ▀▀▀ 　 ░█─░█ ▀▀▀ ▀▀▀ ▀▀▀▀ ▀▀▀ ▀▀▀ 　 ░█─░█ ▀▀▀ █▀▀▀ 

░█▀▀▀ ─▀─ █▀▀█ █▀▀ ░█▀▀▀█ █▀▀ ▀▀█▀▀ ▀▀█▀▀ ─▀─ █▀▀▄ █▀▀▀ █▀▀ 
░█▀▀▀ ▀█▀ █▄▄▀ █▀▀ ─▀▀▀▄▄ █▀▀ ──█── ──█── ▀█▀ █──█ █─▀█ ▀▀█ 
░█─── ▀▀▀ ▀─▀▀ ▀▀▀ ░█▄▄▄█ ▀▀▀ ──▀── ──▀── ▀▀▀ ▀──▀ ▀▀▀▀ ▀▀▀*/
// Anti Recoil Hip Fire
define TaylorARHip      = Off;
// Anti Recoil Inverted
define InvertedYAxis    = Off;
// Anti Recoil Default Profile => [0 = Primary] [1 = Secondary] [2 = GroundLoot]
int RecoilProfile = Primary;
define TaylorARRumble   =  On;
//-------------------------------

/*
░█▀▀▀ ─▀─ █▀▀█ █▀▀ 　 ░█▀▄▀█ █▀▀█ █▀▀▄ █▀▀ 　 ░█─░█ ─▀─ █▀▀█ 　 ░█▀▀▀ ─▀─ █▀▀█ █▀▀ 
░█▀▀▀ ▀█▀ █▄▄▀ █▀▀ 　 ░█░█░█ █──█ █──█ ▀▀█ 　 ░█▀▀█ ▀█▀ █──█ 　 ░█▀▀▀ ▀█▀ █▄▄▀ █▀▀ 
░█─── ▀▀▀ ▀─▀▀ ▀▀▀ 　 ░█──░█ ▀▀▀▀ ▀▀▀─ ▀▀▀ 　 ░█─░█ ▀▀▀ █▀▀▀ 　 ░█─── ▀▀▀ ▀─▀▀ ▀▀▀*/
define DynaFireHip   = Off;
//-------------------------------


/*
█████████████████████████████████████████████████████████████████████████
█░░░░░░██████████░░░░░░█░░░░░░░░░░░░░░█░░░░░░░░░░█░░░░░░██████████░░░░░░█
█░░▄▀░░░░░░░░░░░░░░▄▀░░█░░▄▀▄▀▄▀▄▀▄▀░░█░░▄▀▄▀▄▀░░█░░▄▀░░░░░░░░░░██░░▄▀░░█
█░░▄▀▄▀▄▀▄▀▄▀▄▀▄▀▄▀▄▀░░█░░▄▀░░░░░░▄▀░░█░░░░▄▀░░░░█░░▄▀▄▀▄▀▄▀▄▀░░██░░▄▀░░█
█░░▄▀░░░░░░▄▀░░░░░░▄▀░░█░░▄▀░░██░░▄▀░░███░░▄▀░░███░░▄▀░░░░░░▄▀░░██░░▄▀░░█
█░░▄▀░░██░░▄▀░░██░░▄▀░░█░░▄▀░░░░░░▄▀░░███░░▄▀░░███░░▄▀░░██░░▄▀░░██░░▄▀░░█
█░░▄▀░░██░░▄▀░░██░░▄▀░░█░░▄▀▄▀▄▀▄▀▄▀░░███░░▄▀░░███░░▄▀░░██░░▄▀░░██░░▄▀░░█
█░░▄▀░░██░░░░░░██░░▄▀░░█░░▄▀░░░░░░▄▀░░███░░▄▀░░███░░▄▀░░██░░▄▀░░██░░▄▀░░█
█░░▄▀░░██████████░░▄▀░░█░░▄▀░░██░░▄▀░░███░░▄▀░░███░░▄▀░░██░░▄▀░░░░░░▄▀░░█
█░░▄▀░░██████████░░▄▀░░█░░▄▀░░██░░▄▀░░█░░░░▄▀░░░░█░░▄▀░░██░░▄▀▄▀▄▀▄▀▄▀░░█
█░░▄▀░░██████████░░▄▀░░█░░▄▀░░██░░▄▀░░█░░▄▀▄▀▄▀░░█░░▄▀░░██░░░░░░░░░░▄▀░░█
█░░░░░░██████████░░░░░░█░░░░░░██░░░░░░█░░░░░░░░░░█░░░░░░██████████░░░░░░█
█████████████████████████████████████████████████████████████████████████
*///CREATED by EXPLOIT YT

init { combo_run(Boot);}
main {

    if (BlockRumble) {
        block_rumble();
    }

/*
╦ ╦╔═╗╦╦═╗  ╔╦╗╦═╗╦╔═╗╔═╗╔═╗╦═╗╔═╗
╠═╣╠═╣║╠╦╝   ║ ╠╦╝║║ ╦║ ╦║╣ ╠╦╝╚═╗
╩ ╩╩ ╩╩╩╚═   ╩ ╩╚═╩╚═╝╚═╝╚═╝╩╚═╚═╝
*/            
        
        if (HairTriggers && !DynaRapidFire) {
            
            deadzone(PS4_L2,PS4_R2,100,100);
        
        } else {
        
            deadzone(PS4_L2,NOT_USE,100,NOT_USE);
        }

/*
╔═╗╔═╗╦═╗╦╔╗╔╔╦╗  ╔╦╗╔═╗╔═╗╔╦╗╦╔═╗╔═╗
╚═╗╠═╝╠╦╝║║║║ ║    ║ ╠═╣║   ║ ║║  ║ ║
╚═╝╩  ╩╚═╩╝╚╝ ╩    ╩ ╩ ╩╚═╝ ╩ ╩╚═╝╚═╝       
*/          
        
        if (AutoSprint) {
        
            if (!get_ival(Ads) && get_ival(Walk) < -90) {
                
                set_val(Sprint,100);
                SprintTimer += get_rtime();
                
                if (SprintTimer >= 2300 || event_press(Sprint)) {
                    
                    combo_run(Tactical);
                    SprintTimer = 0;
                }
            
            } else {
            
                SprintTimer = 0;
            }
        }

/*      
╔═╗╔═╗╔═╗╔╦╗  ╔═╗╦╔╦╗
╚═╗║ ║╠╣  ║   ╠═╣║║║║
╚═╝╚═╝╚   ╩   ╩ ╩╩╩ ╩     
*/   
        
        if (Soft_Aim) {
        
            if (get_ival(Ads) || (BattsAAHip && get_ival(Fire))) {
            
                combo_run(BattsStickyAssist);
            
            } else {
            
                combo_stop(BattsStickyAssist); 
            }
        }

/*
╔═╗╦═╗╔═╗╦ ╦╔═╗╦ ╦  ╔═╗╦ ╦╔═╗╔╦╗
║  ╠╦╝║ ║║ ║║  ╠═╣  ╚═╗╠═╣║ ║ ║ 
╚═╝╩╚═╚═╝╚═╝╚═╝╩ ╩  ╚═╝╩ ╩╚═╝ ╩        
*/         
       
       if (CrouchShot) {
        
            if (get_ival(Ads)) {
                
                combo_run(CrouchShot);
            
            } else {
                    
                combo_stop(CrouchShot);
            }
        }

/*
╔═╗╔╦╗╦═╗╔═╗╔═╗╔═╗  ╔═╗╦ ╦╔═╗╔╦╗
╚═╗ ║ ╠╦╝╠═╣╠╣ ║╣   ╚═╗╠═╣║ ║ ║ 
╚═╝ ╩ ╩╚═╩ ╩╚  ╚═╝  ╚═╝╩ ╩╚═╝ ╩
*/          
        
        if (StrafeShot) {
        
            if (get_ival(Ads) && get_ival(Fire)) {
            
                if (abs(get_ival(Strafe)) <= 35 && abs(get_ival(Walk)) <= 35) {    
                
                    combo_run(StrafeShot);
            
                } else {
                    
                    combo_stop(StrafeShot);
                }
            }
        }


/*//CRATED by EXPLOIT YT
╦═╗╔═╗╔═╗╦╔╦╗  ╔═╗╦╦═╗╔═╗
╠╦╝╠═╣╠═╝║ ║║  ╠╣ ║╠╦╝║╣ 
╩╚═╩ ╩╩  ╩═╩╝  ╚  ╩╩╚═╚═╝
*/            
       
       if (DynaRapidFire) { 
        
            DynamicWait = DynaFireWait * 10 - (get_ival(Fire) * 3);
            
            if (DynaFireHip) {
            
                if (get_ival(Fire)) {
                
                    combo_run(DynaFire);
                }    
            
            } else if (get_ival(Ads) && get_ival(Fire)) {
                
                 combo_run(DynaFire);
            
            } else {   
                
                combo_stop(DynaFire);
            }
        }
        
/*
╦═╗╔═╗╔═╗╦╔╦╗  ╔╦╗╔═╗╦  ╔═╗╔═╗
╠╦╝╠═╣╠═╝║ ║║  ║║║║╣ ║  ║╣ ║╣ 
╩╚═╩ ╩╩  ╩═╩╝  ╩ ╩╚═╝╩═╝╚═╝╚═╝
*/
        
        if (RapidMelee) {
            
            if (!get_ival(Ads) && get_ival(Melee)) {           
           
                combo_run(RapidMelee);
            
            }
        }  

/*
╔═╗╔╗╔╔╦╗╦  ╦═╗╔═╗╔═╗╔═╗╦╦    ╔╦╗╔═╗╦ ╦╦  ╔═╗╦═╗
╠═╣║║║ ║ ║  ╠╦╝║╣ ║  ║ ║║║     ║ ╠═╣╚╦╝║  ║ ║╠╦╝
╩ ╩╝╚╝ ╩ ╩  ╩╚═╚═╝╚═╝╚═╝╩╩═╝   ╩ ╩ ╩ ╩ ╩═╝╚═╝╩╚═
*/          
       
       if (TaylorAntiRecoil) {
                   
            if (TaylorARHip && get_ival(Fire) || get_ival(Ads) && get_ival(Fire) && !TaylorARHip) { 
                    
                if (!get_rumble(RUMBLE_A) || !get_rumble(RUMBLE_B))  { 
                
                    if (InvertedYAxis)
                    
                        set_val(PY,DoGzGetPolar(get_val(PY),inv(PRumbleRY) * 327));
                    else 
                    
                        set_val(PY,DoGzGetPolar(get_val(PY),PRumbleRY * 327)); 
                    
                } else {
                    
                    SmartRumble = get_rumble(RumbleToUse());
                            
                    if (SmartRumble > 10 && SmartRumble < 90) {
                        
                        AntirecoilStrength = PRumbleRY + SmartRumble / 4;
                        SmartRumble = 0; 
                    }
                    
/*                                                                                                    
╔═╗╔╗╔╔╦╗╦  ╦═╗╔═╗╔═╗╔═╗╦╦    ╦═╗╦ ╦╔╦╗╔╗ ╦  ╔═╗
╠═╣║║║ ║ ║  ╠╦╝║╣ ║  ║ ║║║    ╠╦╝║ ║║║║╠╩╗║  ║╣ 
╩ ╩╝╚╝ ╩ ╩  ╩╚═╚═╝╚═╝╚═╝╩╩═╝  ╩╚═╚═╝╩ ╩╚═╝╩═╝╚═╝
*/                      
                   
       if (TaylorARRumble) {
                    
             if (InvertedYAxis)                        
                        
                  set_val(PY,DoGzGetPolar(get_val(PY),inv(AntirecoilStrength) * 327)); 
                        
                      else
                        
                        set_val(PY,DoGzGetPolar(get_val(PY),AntirecoilStrength * 327)); 
                        
                        set_val(PX,DoGzGetPolar(get_val(PX),PRumbleRX)); 
                    
                    } else {     
                        
                        if (InvertedYAxis)
                        
                            set_val(PY,DoGzGetPolar(get_val(PY),inv(PRumbleRY) * 327)); 
                        
                        else
                        
                            set_val(PY,DoGzGetPolar(get_val(PY),inv(PRumbleRY) * 327));                        
                        
                        set_val(PX,DoGzGetPolar(get_val(PX),PRumbleRX * 327));                     
                    }
                    
                    SmartRumble        = 0;  
                    AntirecoilStrength = 0;   
                } 
            }
        
            
            if (RecoilProfile != GroundLoot && !MainMenu && event_release(RecoilProfilePress) && get_ptime(RecoilProfilePress) < 150) {
            
                RecoilProfile = !RecoilProfile;
                
                if (combo_running(RecoilProfile))
                
                    combo_restart(RecoilProfile);
                
                else 
                    
                    combo_run(RecoilProfile);
                
            } else if (!MainMenu && get_ival(RecoilReSyncHold) && event_press(RecoilReSyncPress)) {
                
                RecoilProfile = Off;
                
                if (combo_running(RecoilProfile))
                
                    combo_restart(RecoilProfile);
                
                else 
                    
                    combo_run(RecoilProfile);
            
            } else if (!MainMenu && get_ival(RecoilWZProfileHold) && event_press(RecoilWZProfilePress)) {
            
                RecoilProfile = GroundLoot;
                
                if (combo_running(RecoilProfile))
                
                    combo_restart(RecoilProfile);
                
                else 
                    
                    combo_run(RecoilProfile);
            }
            
            if (RecoilProfile == Primary) {
            
                   PRumbleRY = TaylorAR1RY;
                   PRumbleRX = TaylorAR1RX; 
            }
            
            if (RecoilProfile == Secondary) {
            
                   PRumbleRY = TaylorAR2RY;
                   PRumbleRX = TaylorAR2RX;
            }
            
            if (RecoilProfile == GroundLoot) {
            
                   PRumbleRY = TaylorAR3RY;
                   PRumbleRX = TaylorAR3RX;
            }            
    }


/*CREATED by EXPLOIT YT
╔╦╗╔═╗╦╔╗╔  ╔╦╗╔═╗╔╗╔╦ ╦
║║║╠═╣║║║║  ║║║║╣ ║║║║ ║
╩ ╩╩ ╩╩╝╚╝  ╩ ╩╚═╝╝╚╝╚═╝
*/   
       
    if (!MainMenu && get_ival(MenuEnterHold) && event_press(MenuEnterPress)) {

        Shunt = MenuEnterPress;
        MenuToggle(On,Off,On,On,On);
        VibB = On;
        combo_run(Rumble);
    }

    if (MainMenu) {

        Scroll();
        combo_stop(Boot);
        combo_stop(RecoilProfile);
        MenuTimeout += get_rtime();

        if (get_ival(Up) || get_ival(Down) || get_ival(Left) || get_ival(Right) || event_press(ChangeMenuPress)) {

            MenuTimeout = Off;
        }

            if (MenuTimeout >= TimeoutLimitM || event_press(MenuExitPress)) {
            
                if (event_press(MenuExitPress))
                
                    Shunt = MenuExitPress;
                
                MenuToggle(Off,Off,Off,Off,Off);
                VibB = On;
                combo_run(Rumble);
            }

            if (event_press(ChangeMenuPress)) {

                MenuValues = !MenuValues;
                MenuSwitch = !MenuSwitch;
                ModIndex = On;
                Update = On;
            }

        if (MenuValues) {

            ModDigit[ModIndex] = PrintMod(ModDigit[ModIndex],ModDigitMin[ModIndex],ModDigitMax[ModIndex],ModDigitInc[ModIndex],IndexMinValues,IndexMaxValues,ModValue[ModIndex]);
		}

        if (MenuSwitch) {

            ModSwitch[ModIndex] = PrintMod(ModSwitch[ModIndex],Off,On,1,IndexMinSwitches,IndexMaxSwitches,ModToggle[ModIndex]);
		}

				BlockButton(Down); BlockButton(Up); BlockButton(Left); BlockButton(Right); BlockButton(ChangeMenuPress);
	}
 
    if (!MainMenu) { 
        
        if (get_ival(FindSlotHold) && event_press(FindSlotPress)) {
            
            Shunt = FindSlotPress;
            Slot = On;
            combo_run(Boot);
        }
    }

    if (ToggleTime) {
        TimeToggle();
    }

    if (Shunt) {
        
        if (event_release(Shunt)) {
            
            Shunt = Off;
        
        } else {
                set_val(Shunt,Off);
        }
    }
}

/*
░█▀▀█ ░█▀▀▀█ ░█▀▄▀█ ░█▀▀█ ░█▀▀▀█ ░█▀▀▀█ 
░█─── ░█──░█ ░█░█░█ ░█▀▀▄ ░█──░█ ─▀▀▀▄▄ 
░█▄▄█ ░█▄▄▄█ ░█──░█ ░█▄▄█ ░█▄▄▄█ ░█▄▄▄█*/

combo BattsStickyAssist {
   
   set_val(AimY,AxisRelease(AimY,BattStickyPower));
   wait(BattStickyWait);
   set_val(AimX,AxisRelease(AimX,BattStickyPower));
   set_val(Strafe,AxisRelease(Strafe,BattStickyPower));
   wait(BattStickyWait);
   set_val(AimY,AxisRelease(AimY,inv(BattStickyPower)));
   wait(BattStickyWait);
   set_val(AimX,AxisRelease(AimX,inv(BattStickyPower)));
   set_val(Strafe,AxisRelease(Strafe,inv(BattStickyPower)));
   wait(BattStickyWait);
}

combo CrouchShot {

    set_val(Crouch,100);
    wait(50);
    set_val(Crouch,0);
    wait(20);
    wait(CrouchShotWait);
}

combo StrafeShot {

    set_val(Strafe,-100);
    wait(StrafeWait);
    set_val(Strafe,100);
    wait(StrafeWait);
}

combo DynaFire {

    set_val(Fire,100);
    wait(DynaFireHold);
    set_val(Fire,0);
    wait(DynamicWait);
}

combo Tactical {
  
    set_val(Sprint,0);
    wait(40);
    set_val(Sprint,100);
    wait(40);
    set_val(Sprint,0);
    wait(40);
    set_val(Sprint,100);
    wait(40);
}

combo RapidMelee {
    
    set_val(Melee,100);
    wait(50);
    set_val(Melee,0);
    wait(30);
}

combo Rumble {
    
    if (VibA)
        
        set_rumble(RUMBLE_A,15);
        
    else if (VibB)
            
        set_rumble(RUMBLE_B,15);
    
        wait(250);
        VibA = Off;
        VibB = Off;
        reset_rumble();
}

combo Boot {
        
        wait(Slot);
    if (Slot == 20000)    
        cls_oled(0);
        
        if (Slot) {
            cls_oled(0);
            printf(5,10,0,1,MiscString[3]);
            printf(5,25,0,1,MiscString[4]);
            printf(18,45,0,1,MiscString[5]);
            NumX = 32; NumY = 15; NumS = 0;
            FindDigit(get_slot(),DigitValue(get_slot()));
            Slot = Off;
        }    
        
        wait(20000);
        cls_oled(0);
        Clear = On;
}

combo VibrateBlink {
    
    if (Modled) {
        
        set_rgb(0,255,0);
        set_rumble(RUMBLE_A,15);
    
    } else {
        
        set_rgb(255,0,0);
        set_rumble(RUMBLE_B,15);
    }
    
    wait(150);
    set_rgb(0,0,0);
    wait(250);
    
    if (Modled)
        
        set_rgb(0,255,0);
    
        else
            
        set_rgb(255,0,0);

    reset_rumble();
    reset_leds();
}

combo RecoilProfile {
         
         RecoilValue = On;
         combo_stop(Boot);
     
     if (RecoilValue) {
         
        cls_oled(0);
        rect_oled(1,1,127,63,0,1);
        printf(4,23,1,1,Profiles[RecoilProfile]);
        RecoilValue = Off;
    }
        set_rumble(RUMBLE_B,15);
        wait(250);
        reset_rumble();
        wait(5000);
        cls_oled(0);
}

/*
░█▀▀▀ ░█─░█ ░█▄─░█ ░█▀▀█ ▀█▀ ░█▀▀▀█ ░█▄─░█ ░█▀▀▀█ 
░█▀▀▀ ░█─░█ ░█░█░█ ░█─── ░█─ ░█──░█ ░█░█░█ ─▀▀▀▄▄ 
░█─── ─▀▄▄▀ ░█──▀█ ░█▄▄█ ▄█▄ ░█▄▄▄█ ░█──▀█ ░█▄▄▄█*/

function RumbleToUse() {
    
    if (get_rumble(RUMBLE_A) >= get_rumble(RUMBLE_B)) 
        
        return RUMBLE_A;
    
    return RUMBLE_B;
}

function DoGzGetPolar(Current,Received) {
    
    Output = Current / 10 + Received / 10;
    
        if(Output <= -3276) return -32768; 
        if(Output >=  3276) return  32767; 

    return Current + Received; 
} 

function AxisRelease(AxisXY,AxisVal) {
    
    if (abs(get_ival(AxisXY)) <= BattStickyPower) 
        
        return AxisVal;
    
    return get_ival(AxisXY); 
}

function Toggle(ModT,ModP) {
    
    if (combo_running(Boot))    
        
        combo_stop(Boot);
    
        Modled = ModT;
        ToggleT = 0;
        ToggleTime = On;
        combo_run(VibrateBlink);
    
    if (ToggleName) {
        
        cls_oled(0);
        printf(5,2,0,1,MiscString[8]);
        rect_oled(0,11,128,20,0,1);    
        rect_oled(2,13,124,16,0,1);
        rect_oled(0,32,128,20,0,1);
        rect_oled(2,34,124,16,0,1);
        printf(5,17,0,1,ModP);

        if (ModT) {
            
            printf(41,38,0,1,MiscString[6]);    
        
        } else {
                
            printf(36,38,0,1,MiscString[7]);
        }
        
        ToggleName = Off;
    }
}

function TimeToggle() {
        
    ToggleT += get_rtime();
    
    if (!MainMenu && ToggleT >= 5000) {
        cls_oled(0);
        ToggleTime = Off;
        ToggleT = 0;
    }
}

function BlockButton(Button) { 

	if (!get_ival(Button))
		return; 
		set_val(Button,Off);
} 
  
function MenuToggle(Main,Vals,Indx,Print,Toggle) { 

	cls_oled(0); 
	MainMenu    = Main; 
	MenuValues  = Vals;
	ModIndex    = Indx;
	Update      = Print;
	MenuSwitch  = Toggle;
	MenuTimeout = Off;
}
  
function PrintMod(ModVal,ModValMin,ModValMax,ModValInc,IndexMin,IndexMax,ModValLbl) { 

	if (Update) { 
 
		rect_oled(2,2,127,46,1,0); 
		Grid  (); 
		printf(6,25,0,1,MiscString[0]);
		NumX = -43; NumY = 10; NumS = -1; 
		FindDigit(ModIndex,DigitValue(ModIndex));
		printf(5,8,0,1,ModValLbl); 

		if (MenuValues) {

			NumX = 0; NumY = 0; NumS = 0;
			FindDigit(ModVal,DigitValue(ModVal));
		} 
			if (MenuSwitch) { 
 
				if (ModVal) {
 
					printf(51,24,1,1,MiscString[1]); 
				}  
    			else { 
					printf(46,24,1,1,MiscString[2]); 
				} 
			} 
		Update = Off; 
	} 

    if (event_press(Up) || get_ival (Up) && get_ptime (Up) >= 450) {
 
        Update = On;
        ModVal += ModValInc;
        ModMonitor(ModValLbl);

        if (ModVal >= ModValMax) return ModValMax;

        if (ModVal >= ModValMax) return ModValMax;
    } 
 
    if (event_press(Down) || get_ival (Down) && get_ptime (Down) >= 450) { 

        Update = On;
        ModVal -= ModValInc;
        ModMonitor(ModValLbl);

        if (ModVal <= ModValMin) return ModValMin;

        if (ModVal <= ModValMin) return ModValMin;
    }

	if (event_press(Right)) {

		Update = On;
		ModIndex += 1;
 
			if (ModIndex > IndexMax) ModIndex = IndexMin;
	}
  
		if (event_press(Left)) {
			Update = On;
			ModIndex -= 1; 
 
				if (ModIndex < IndexMin) ModIndex = IndexMax;
		} 
	return ModVal;
} 
 
function ModMonitor (Mon) {
    
    if (Mon == ModToggle[1]) { 
    
    }
    
    if (Mon == ModToggle[5]) {
    
    }
    
}
    
function Grid() { 
  
	line_oled(126,20,2,20,2,1);
	rect_oled(1,1,127,63,0,1); 
	line_oled(126,46,2,46,2,1);
	line_oled(28,20,28,46,2,1);
}
 
function Scroll() {

		ScrollTime += get_rtime();

	if (ScrollTime >= ScrollWait) {
		ScrollWait = ScrollSpeed;
 
		for(ScrollIndex = 1; ScrollIndex <= 17; ScrollIndex++) { 
 
			if(ScrollIndex + ScrollLine >= sizeof(Scroll)) {
				putc_oled(ScrollIndex,Scroll[ScrollIndex + (ScrollLine - sizeof(Scroll))]); 
			} 
				else {  
					putc_oled(ScrollIndex,Scroll[ScrollIndex + ScrollLine]);
				} 
		} 
			puts_oled(ScrollX,ScrollY,0,ScrollIndex,1);
			ScrollLine++; 
 
	if(ScrollLine >= sizeof(Scroll)) {
		ScrollLine = 0;
	} 
		ScrollChar--; 
 
		if(ScrollChar < 1) {
			ScrollChar = 17; 
			ScrollWait = ScrollDelay;
		}
		ScrollTime = 0; 
	} 
}  
    
function FindDigit(Digit,Digits) { 
 
	if (Digit < 0) {  
		putc_oled(Number,45);
		Number += 1;
		Digit = abs(Digit);
		Count = 1;
	} 
	else  
		Count = 0;
    
	if (Digits == 5) {  
		putc_oled(Number,FontDigits[Digit / 10000]);
		Digit = Digit % 10000;
		Number +=  1;
	} 
	if (Digits >= 4) {
		putc_oled(Number,FontDigits[Digit / 1000]);
		Digit = Digit % 1000; 
		Number += 1;
	}  
	if (Digits >= 3) { 
		putc_oled(Number,FontDigits[Digit / 100]); 
		Digit = Digit % 100; 
		Number +=  1; 
	}  
	if (Digits >= 2) { 
		putc_oled(Number,FontDigits[Digit / 10]); 
		Digit = Digit % 10;
		Number += 1; 
	} 
		putc_oled(Number,FontDigits[Digit]); 
		puts_oled(CenterMod(Digits + Count,1) + NumX,25 + NumY,1 + NumS,Number,1);
		Number = 1; 
}   
    
function DigitValue(Number) { 
   
    	Number = abs(Number);
	if (Number / 10000 > 0) return 5;
	if (Number /  1000 > 0) return 4; 
	if (Number /   100 > 0) return 3; 
	if (Number /    10 > 0) return 2; 
		return 1;
} 
   
function CenterMod(Character,Font) { 
    Position = Character * FontSize[Font][0];
    Position = (127 - Position) / 2;
		return Position;
} 
   
/* 
─█▀▀█ ░█▀▀▀█ ░█▀▀█ ▀█▀ ▀█▀ 　 ▀▀█▀▀ █▀▀█ █▀▀▄ █── █▀▀ 
░█▄▄█ ─▀▀▀▄▄ ░█─── ░█─ ░█─ 　 ─░█── █▄▄█ █▀▀▄ █── █▀▀ 
░█─░█ ░█▄▄▄█ ░█▄▄█ ▄█▄ ▄█▄ 　 ─░█── ▀──▀ ▀▀▀─ ▀▀▀ ▀▀▀ 
*/ 
define SPACE       =  32; /*¦¦       ¦¦*/	define  _0 = 48,  A = 65, K = 75, U =  85, e = 101, o = 111, y = 121; 
define EXCLAMATION =  33; /*¦¦   !   ¦¦*/	define  _1 = 49,  B = 66, L = 76, V =  86, f = 102, p = 112, z = 122; 
define QUOTE       =  34; /*¦¦   "   ¦¦*/	define  _2 = 50,  C = 67, M = 77, W =  87, g = 103, q = 113; 
define HASH        =  35; /*¦¦   #   ¦¦*/	define  _3 = 51,  D = 68, N = 78, X =  88, h = 104, r = 114; 
define DOLLAR      =  36; /*¦¦   $   ¦¦*/	define  _4 = 52,  E = 69, O = 79, Y =  89, i = 105, s = 115; 
define PERCENT     =  37; /*¦¦   %   ¦¦*/	define  _5 = 53,  F = 70, P = 80, Z =  90, j = 106, t = 116; 
define AND         =  38; /*¦¦   &   ¦¦*/	define  _6 = 54,  G = 71, Q = 81, a =  97, k = 107, u = 117; 
define APOSTROPHE  =  39; /*¦¦       ¦¦*/	define  _7 = 55,  H = 72, R = 82, b =  98, l = 108, v = 118; 
define O_BRACKET   =  40; /*¦¦   (   ¦¦*/	define  _8 = 56,  I = 73, S = 83, c =  99, m = 109, w = 119; 
define C_BRACKET   =  41; /*¦¦   )   ¦¦*/	define  _9 = 57,  J = 74, T = 84, d = 100, n = 110, x = 120; 
define ASTERISK    =  42; /*¦¦   *   ¦¦*/ 
define PLUS        =  43; /*¦¦   +   ¦¦*/ 
define COMMA       =  44; /*¦¦   ,   ¦¦*/ 
define MINUS       =  45; /*¦¦   -   ¦¦*/ 
define FULLSTOP    =  46; /*¦¦   .   ¦¦*/ 
define F_SLASH     =  47; /*¦¦   /   ¦¦*/ 
define COLON       =  58; /*¦¦   :   ¦¦*/ 
define SEMICOLON   =  59; /*¦¦   ;   ¦¦*/ 
define B_ARROW     =  60; /*¦¦   <   ¦¦*/ 
define EQUAL       =  61; /*¦¦   =   ¦¦*/ 
define F_ARROW     =  62; /*¦¦   >   ¦¦*/ 
define QUESTION    =  63; /*¦¦   ?   ¦¦*/ 
define AT          =  64; /*¦¦   @   ¦¦*/ 
define O_SQUARE    =  91; /*¦¦   [   ¦¦*/ 
define b_SLASH     =  92; /*¦¦   \   ¦¦*/ 
define C_SQUARE    =  93; /*¦¦   ]   ¦¦*/ 
define U_ARROW     =  94; /*¦¦   ^   ¦¦*/ 
define UNDERSCORE  =  95; /*¦¦   _   ¦¦*/ 
define TICK        =  96; /*¦¦   `   ¦¦*/ 
define O_CURLY     = 123; /*¦¦   {   ¦¦*/ 
define BAR         = 124; /*¦¦   |   ¦¦*/ 
define C_CURLY     = 125; /*¦¦   }   ¦¦*/ 
define WAVE        = 126; /*¦¦   ~   ¦¦*/ 
define CROSS       = 127; /*¦¦   PS  ¦¦*/ 
define CIRCLE      = 128; /*¦¦   PS  ¦¦*/ 
define SQUARE      = 129; /*¦¦   PS  ¦¦*/ 
define TRIANGLE    = 130; /*¦¦   PS  ¦¦*/ 
define UP          = 131; /*¦¦ PS+XB ¦¦*/ 
define DOWN        = 132; /*¦¦ PS+XB ¦¦*/ 
define LEFT        = 133; /*¦¦ PS+XB ¦¦*/ 
define RIGHT       = 134; /*¦¦ PS+XB ¦¦*/ 
define VIEW        = 135; /*¦¦   XB  ¦¦*/ 
define MENU        = 136; /*¦¦   XB  ¦¦*/ 

/* 
░█▀▀▀█ █▀▀ █▀▀█ █▀▀█ █── █── 　 ─█▀▀█ █▀▀█ █▀▀█ █▀▀█ █──█ 
─▀▀▀▄▄ █── █▄▄▀ █──█ █── █── 　 ░█▄▄█ █▄▄▀ █▄▄▀ █▄▄█ █▄▄█ 
░█▄▄▄█ ▀▀▀ ▀─▀▀ ▀▀▀▀ ▀▀▀ ▀▀▀ 　 ░█─░█ ▀─▀▀ ▀─▀▀ ▀──▀ ▄▄▄█ 
*/ 
const uint8 Scroll[] = {/* 
 ¦¦> 0 < ¦¦  ¦¦> 1 < ¦¦  ¦¦> 2 < ¦¦  ¦¦> 3 < ¦¦  ¦¦> 4 < ¦¦  ¦¦> 5 < ¦¦  ¦¦> 6 < ¦¦  ¦¦> 7 < ¦¦  ¦¦> 8 < ¦¦  ¦¦> 9 < ¦¦ ¦¦> 10 < ¦¦ ¦¦> 11 < ¦¦ ¦¦> 12 < ¦¦ ¦¦> 13 < ¦¦ ¦¦> 14 < ¦¦ ¦¦> 15 < ¦¦ ¦¦> 16 < ¦¦*/
    SPACE   ,  SPACE   ,  TRIANGLE ,   SPACE   ,     O     ,     r     ,   SPACE   ,     Y     ,   SPACE   ,     T     ,     o     ,   SPACE   ,     E     ,     x     ,     i     ,     t     ,   SPACE   , 
    SPACE   ,  CROSS   ,   SPACE   ,     O     ,     r     ,   SPACE   ,     A     ,   SPACE   ,     T     ,     o     ,   SPACE   ,     N     ,     e     ,     x     ,     t     ,   SPACE   ,    MENU   , 
    SPACE   ,   UP     ,   SPACE   ,     O     ,     r     ,   SPACE   ,   DOWN    ,   SPACE   ,     T     ,     o     ,   SPACE   ,     A     ,     d     ,     j     ,     u     ,     s     ,     t     , 
    SPACE   ,  LEFT    ,   SPACE   ,     O     ,     r     ,   SPACE   ,   RIGHT   ,   SPACE   ,     N     ,     e     ,     x     ,     t     ,   SPACE   ,     M     ,     o     ,     d     ,   SPACE   };/*
╔════════════════════════════════════════════════════════════════════════════════════════╗    																			  
║   d88888b db    db d8888b. db       .d88b.  d888888b d888888b      db    db d888888b   ║
║   88'     `8b  d8' 88  `8D 88      .8P  Y8.   `88'   `~~88~~'      `8b  d8' `~~88~~'   ║
║   88ooooo  `8bd8'  88oodD' 88      88    88    88       88          `8bd8'     88      ║
║   88~~~~~  .dPYb.  88~~~   88      88    88    88       88            88       88      ║       
║   88.     .8P  Y8. 88      88booo. `8b  d8'   .88.      88            88       88      ║    
║   Y88888P YP    YP 88      Y88888P  `Y88P'  Y888888P    YP            YP       YP      ║   
║                                                                                        ║
║ 	                     CREATED  S c r i p t  B y  Exploit YT					 		 ║
╚════════════════════════════════════════════════════════════════════════════════════════╝		
			    © EXPLOIT YT FOR CRONUS ZEN, 2019-2021. ALL RIGHTS RESERVED.*/