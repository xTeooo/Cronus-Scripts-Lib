/*
SIMPLE INSTRUCTIONS
	LEFT OR RIGHT TO SELECT WORKOUT TYPE
	X(PS4) OR A(XBOX) TO TURN ON AND OFF WORKOUT 

*/
















int tread_mill,dumb_bells,battle_rope,clean_lift,GYM_SET;
const string idx_txt[] = {
"TREADMILL","BATTLE ROPE","CLEAN LIFT","DUMBELLS",
"X or A TOGGLE","PRESS LEFT","OR","PRESS RIGHT"
}

main {

if(GYM_SET == 0){
	cls_oled(0);
	printf(posx(15,OLED_FONT_SMALL_WIDTH),35,0,1,idx_txt[6]);
	printf(posx(15,OLED_FONT_SMALL_WIDTH),20,0,1,idx_txt[5]);
	printf(posx(15,OLED_FONT_SMALL_WIDTH),50,0,1,idx_txt[7]);
	}
if(event_press(PS4_RIGHT)){
	GYM_SET ++;
}
if(event_press(PS4_LEFT)){
	GYM_SET --;
}
if(GYM_SET < 0){
	GYM_SET = 4;
}
if(GYM_SET > 4){
	GYM_SET = 0;
}
if(GYM_SET == 1){		
	cls_oled(0);
	printf(posx(15,OLED_FONT_SMALL_WIDTH),5, 0,1,idx_txt[4]);
	printf(posx(15,OLED_FONT_SMALL_WIDTH),30,0,1,idx_txt[0]);
	if(event_press(XB1_A)){
		tread_mill = !tread_mill;
	}
	if(tread_mill){		
		combo_run(TREAD_MILL);
	}
}
if(GYM_SET == 2){
	cls_oled(0);
	printf(posx(15,OLED_FONT_SMALL_WIDTH),5, 0,1,idx_txt[4]);
	printf(posx(15,OLED_FONT_SMALL_WIDTH),30,0,1,idx_txt[3]);

	if(event_press(XB1_A)){
		dumb_bells = !dumb_bells;
	}
	if(dumb_bells ){		
		combo_run(DUMB_BELLS);
	}
}
if(GYM_SET == 3){
	cls_oled(0);
	printf(posx(15,OLED_FONT_SMALL_WIDTH),5, 0,1,idx_txt[4]);
	printf(posx(15,OLED_FONT_SMALL_WIDTH),30,0,1,idx_txt[1]);

	if(event_press(XB1_A)){
		battle_rope = !battle_rope;
	}
	if(battle_rope){		
		combo_run(BATTLE_ROPE);
	}
}	
if(GYM_SET == 4){
	cls_oled(0);
	printf(posx(15,OLED_FONT_SMALL_WIDTH),5, 0,1,idx_txt[4]);
	printf(posx(15,OLED_FONT_SMALL_WIDTH),30,0,1,idx_txt[2]);
	
	if(event_press(XB1_A)){
		clean_lift = !clean_lift;
	}
	if(clean_lift){		
		combo_run(CLEAN_LIFT);
	}
}

}


combo DUMB_BELLS{
clean_lift = FALSE;
tread_mill = FALSE;
battle_rope = FALSE;
set_val(PS4_CROSS, 100);
wait(40);
wait(100);
set_val(PS4_CROSS, 100);
wait(40);
wait(100);
set_val(PS4_CROSS, 100);
wait(40);
wait(100);
set_val(PS4_CROSS, 100);
wait(40);
wait(100);
set_val(PS4_CROSS, 100);
wait(40);
wait(100);
set_val(PS4_CROSS, 100);
wait(40);
wait(100);
set_val(PS4_CROSS, 100);
wait(40);
wait(100);
set_val(PS4_CROSS, 100);
wait(40);
wait(100);
set_val(PS4_R2, 100);
set_val(PS4_L2, 100);
wait(1200);
wait(500);
}
combo CLEAN_LIFT {
dumb_bells = FALSE;
tread_mill = FALSE;
battle_rope = FALSE;
set_val(XB1_RB,100);
set_val(XB1_LB,100);
wait(470);
wait(75);
}
combo TREAD_MILL {
clean_lift = FALSE;
dumb_bells = FALSE;
battle_rope = FALSE;
set_val(XB1_RT,100);
wait(50);
set_val(XB1_LT,100);
wait(50);
}
combo BATTLE_ROPE {
clean_lift = FALSE;
dumb_bells = FALSE;
tread_mill = FALSE;
set_val(XB1_RY,100);
set_val(XB1_LY,-100);
wait(40);
set_val(XB1_RY,-100);
set_val(XB1_LY,100);
wait(40);
}
function posx( chars, font ) { return( OLED_WIDTH / 2 ) - ( ( chars * font ) / 2 ); }


