// If you paid for this... Your a loser bozo. L + don‚Äôt care + didn‚Äôt ask + cry about it + who asked + stay mad + get real + bleed + mald seethe cope harder + dilate + incorrect + hoes mad + pound sand + basic skill issue + typo + ur dad left + you fell off + no u + the audacity + triggered + repelled + ur a minor + k. + any askers + get a life + ok and? + cringe + copium + go outside + touch grass + kick rocks + quote tweet + think again + not based + not funny didn‚Äôt laugh + social credits -999, 999, 999, 999 + get good + reported + ad hominem + ok boomer + small pp + ur allergic to sunlight + GG! + get rekt + trolled + your loss + muted + banned + kicked + permaban + useless + i slept with ur mom + yo momma + yo momma so fat + redpilled + no bitches allowed + i said it better + tiktok fan + get a life + unsubscribed + plundered + go tell reddit + donowalled + simp + get sticked bug LOL + talk nonsense + trump supporter + your‚Äôre a full time discord mod + you‚Äôre* + grammar issue + nerd + get clapped + kys + lorem ipsum dolor sit amet + go outside + bleach + lol + gay + retard + autistic + reported + ask deez + ez clap + straight cash + idgaf + ratio again + stay mad + read FAQ + youre lost + you ‚Äúre‚Äù + stay pressed + reverse double take back + pedophile + cancelled + done for + don't give a damn + get a job + sus + baka + sussy baka + get blocked + mad free + freer than air + furry + rip bozo + you're a (insert stereotype) + slight_smile + aired + cringe again + Super IdolÁöÑÁ¨ëÂÆπ + mad cuz bad + my pronouns are xe, xem & xyr + irrelevant + deal with it + screencapped your bio + karen/kyle + jealous + you're deaf + balls + i'll be right back + go ahead whine about it + not straight + eat paper + you lose + count to three + your problem + no one cares + log off + don't care even more + sex offender + sex defender + get religion + not okay + glhf + NFT owner + you make bad memes + problematic + fall in line + dog water + you look like a wall + you don‚Äôt know 2 + 2 with yo head ass + you are going to my cringe compilation + you can‚Äôt count to five + try again + you failed kindergarten + rickrolled + no lifer + guten freunden schickt man einen deutschen panzer + you have a anime profile picture + an* + fatherless + motherless + sisterless + brotherless + orphan + you can't catch this ratio + catch some bitches + I don't care about your opinion + genshin player + you dress like garbage + Êó•Êú¨Ë™û„Åå„Åä‰∏äÊâã„Åß„Åô„Å≠ + get fucked + you can‚Äôt understand what the word intelligence means with your dumb ass + you have hair + queued + put some thought into what you're going to do with that + stfu + go to bed + yes, i'm taller than you + i think your joke is funny + i rejected your mother's advances + marooned + you can‚Äôt read + I win + final ratio

// CREATORS: 
// | Zaspex |
// | Dhruvski |
//SENS AT BOTTOM\\

int LinearAA = On; // Aim Assist (Recommended)
int LinearHipFire = On; // Aim Assist HipeFire (Means It Works Without ADs As Well.)
int AntiRecoil = On; // (Recommended)
int Headshot = On; // Headshot Assist (Tiny Pull Up To Help Hit More Headshots.)
int HeadshotHipFire = On; // Headshot Assist HipFire (Recommended)
int BloomReducer = On; // Bloom Reducer (Moves Your Character A Tiny Bit To Make More Accurate Bloom.)
int LessInputDelay = On; // No Input Delay (Recommended)
int InstantTriggers = On; // (Recommended)
int BuilderPro = Off; // (Self Explanatory)
int BuildTracker = On; // (Recommended)
int TouchPad = Off; // (Self Explanatory)

define LinearPower = 2.3; // Tested (Recommended)
define AntiRecoilStrength = 15;  // (Recommended)
define AntiRecoilDisplacement =  0;  // (Recommended)
define HeadshotMax = 30; // (Recommended)
define HeadshotSteps = 5; // (Recommended)

define LTrigger = XB1_LT;define RTrigger = XB1_RT;
define Fire = XB1_RT;define Pickaxe = XB1_RIGHT;define ADS = XB1_LT;define Jump = XB1_A;define Pickup = XB1_X;define Edit = XB1_B; define Switch = XB1_Y;define Build = XB1_Y;define Wall = XB1_RT;define Floor = XB1_RB;define Ramp = XB1_LT;define Cone = XB1_LB;
define Trap = XB1_X;define Confirm = XB1_RB;define Reset = XB1_LT;
define Up = XB1_UP; define Down = XB1_DOWN; define Left = XB1_LEFT; define Right = XB1_RIGHT;define RX = PS4_RX;   define RY = PS4_RY;   define LX = PS4_LX;define LY = PS4_LY;define On = TRUE;define Off = FALSE;

//DONT TOUCH
int BloomRTime = 100;
define InputDelay = 5;
int BuildSyncTime = 0;
//DONT TOUCH

main{vm_tctrl(-5); block_rumble(); if(LessInputDelay) if(TouchPad) { swap(PS4_TOUCH, PS4_SHARE); } if (InstantTriggers) { deadzone(LTrigger,RTrigger,99,99); }
if (BuildTracker) { if (event_press(Build)) {BuildTrack = !BuildTrack;} if (BuildTrack) {BuildCount += get_rtime();if (event_press(Pickaxe) || BuildCount == BuildSyncTime) {BuildTrack = Off;BuildCount = Off;}if (get_ival(Floor) || get_ival(Cone) || get_ival(Ramp) || get_ival(Wall) || get_ival(Trap)) { BuildCount = Off;}} }
{ if(BloomReducer) { if(get_ival(ADS) && (get_ival(Fire))) { combo_run(AntiBloom); } if(abs(get_ival(LX)) > 40 || abs(get_ival(LY)) > 40) { combo_stop(AntiBloom); } } if (LinearAA) { if (get_ival(ADS) || LinearHipFire && get_ival(Fire)) { AimAssist(); } if (!get_ival(ADS) && !get_ival(Fire)) { AAT = 0; Axis = 0; } } if(AntiRecoil) { if(get_ival(ADS) && get_ival(Fire)) { combo_run(AntiRecoilS); } } if (Headshot) { if (get_ival(ADS) && get_ival(Fire) || HeadshotHipFire && get_ival(Fire)) { if (abs(get_ival(RY)) < HeadshotMax) { Head += HeadshotSteps; combo_run(HeadshotS); } } if (!get_ival(Fire)) Head = 0; if (Head >= HeadshotMax) combo_stop(HeadshotS); } } } combo BuildPro { set_val(Build,0); wait(50); set_val(Build,100); wait(50); } combo HeadshotS { set_val(RY,inv(Head) + 
get_ival(RY)); }  combo AntiBloom { set_val(LX,-40); wait(BloomRTime); set_val(LX, 40); wait(BloomRTime); if(BloomRTime < 160){BloomRTime = BloomRTime + 10;} else {BloomRTime = 100; } } combo AntiRecoilS { AntiRecoilVert = get_val(RY) + AntiRecoilStrength; if(AntiRecoilVert > 100) AntiRecoilVert = 100; if(abs(get_val(RY)) < abs(AntiRecoilStrength) + 5) set_val(RY, (AntiRecoilVert)); AntiRecoilHoriz = get_val(RX) + AntiRecoilDisplacement; if(AntiRecoilHoriz > 100) AntiRecoilHoriz = 100; if(abs(get_val(RX)) < abs(AntiRecoilDisplacement) + 5) set_val(RX, AntiRecoilHoriz); } 
function AimAssist() { AAT += get_rtime(); if (!Axis) set_Val(RY,AAT * LinearPower / 10); if (Axis == 1) set_Val(RX,AAT * LinearPower / 10); if (Axis == 2) set_Val(RY,inv(AAT * LinearPower / 10)); if (Axis == 3) { set_Val(RX,inv(AAT * LinearPower / 10)); if (AAT > 43) { AAT = 0; Axis = 0; } } else if (AAT > 43) { AAT = 0; Axis += 1; } } function set_Val(Input,Output) { set_val(Input,clamp(Output * (100 - abs(get_ival(Input))) / 100 + get_ival(Input),-100,100)); return; } function Set_Val(Input,Output) { set_val(Input,clamp(Output * (100 - abs(get_ival(Input))) / 100 + get_ival(Input),-100,100)); return; } 
const char Polar_Array[]={100,100,100,100,100,100,100,100,99,99,99,99,98,98,97,97,97,96,95,95,94,94,93,92,92,91,90,89,89,88,87,86,85,84,83,82,81,80,79,78,77,75,74,73,72,71,70,69,67,66,65,63,62,61,59,58,56,55,53,52,50,49,47,46,44,43,41,40,38,36,35,33,31,30,28,26,25,23,21,20,18,16,14,13,11,9,7,6,4,2,0,-1,-3,-5,-7,-8,-10,-12,-13,-15,-17,-19,-20,-22,-24,-25,-27,-29,-30,-32,-34,-35,-37,-39,-40,-42,-43,-45,-46,-48,-50,-51,-53,-54,-55,-57,-58,-60,-61,-62,-64,-65,-66,-68,-69,-70,-71,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-89,-90,-91,-92,-92,-93,-93,-94,-95,-95,-96,-96,-97,-97,-97,-98,-98,-99,-99,-99,-99,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-99,-99,-99,-98,-98,-98,-97,-97,-96,-96,-95,-94,-94,-93,-93,-92,-91,-90,-90,-89,-88,-87,-86,-85,-84,-83,-82,-81,-80,-79,-78,-77,-76,-75,-74,-72,-71,-70,-69,-67,-66,-65,-63,-62,-61,-59,-58,-56,-55,-53,-52,-50,-49,-47,-46,-44,-43,-41,-40,-38,-36,-35,-33,-31,-30,-28,-26,-25,-23,-21,-20,-18,-16,-14,-13,-11,-9,-7,-6,-4,-2,0,2,4,6,7,9,11,13,14,16,18,20,21,23,25,26,28,30,31,33,35,36,38,40,41,43,44,46,47,49,51,52,54,55,56,58,59,61,62,63,65,66,67,69,70,70,72,73,74,75,77,78,79,80,81,82,83,84,85,86,87,88,89,89,90,91,92,92,93,94,94,95,95,96,97,97,97,98,98,99,99,99,99,100,100,100,100,100,100,100}; int Head, AAT, Axis, actual_X, actual_Y, actual_Magnitude, max_Magnitude, time, angle, cos_angle, sin_angle, BuildPro, BuildTrack, BuildCount, AntiRecoilVert, AntiRecoilHoriz;

// Controller Auto-Run: ON
// Build Immediatley: ON
// EDIT HOLD TIME: 0.100 Seconds
// SLIDE HOLD TIME: 0.030 Seconds
// RESET CAMERA AXES: PITCH
// RESET CAMERA TIME: 0.100 Seconds
// VIBRATION: OFF
// ---------------------------
// USED ADVANCED OPTIONS \\
// ---------------------------
// Build Mode Sens Multi: 2.1X
// Edit Mode Sens Multi: 2.1X
// --------------------
// Look Horiz Speed: 42
// Look Verti Speed: 42
// Instant Boost When Building: ON
// (ADS) Look Horiz Speed: 9%
// (ADS) Look Verti Speed: 9%
// (ADS) Turning Horiz Boost: 8%
// (ADS) Turning Verti Boost: 8%
// ----------------------------
// LOOK INPUT CURVE: LINEAR
// Both DeadZones: 10% ˙∏ãøàπèπé∫âÃ˙À¸≈