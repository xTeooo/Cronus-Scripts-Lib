/*

 .----------------.  .----------------.  .----------------.  .----------------.  .-----------------. .----------------.  .----------------.  .----------------. 
| .--------------. || .--------------. || .--------------. || .--------------. || .--------------. || .--------------. || .--------------. || .--------------. |
| |  _________   | || |     ____     | || |  _______     | || |  _________   | || | ____  _____  | || |     _____    | || |  _________   | || |  _________   | |
| | |_   ___  |  | || |   .'    `.   | || | |_   __ \    | || | |  _   _  |  | || ||_   \|_   _| | || |    |_   _|   | || | |  _   _  |  | || | |_   ___  |  | |
| |   | |_  \_|  | || |  /  .--.  \  | || |   | |__) |   | || | |_/ | | \_|  | || |  |   \ | |   | || |      | |     | || | |_/ | | \_|  | || |   | |_  \_|  | |
| |   |  _|      | || |  | |    | |  | || |   |  __ /    | || |     | |      | || |  | |\ \| |   | || |      | |     | || |     | |      | || |   |  _|  _   | |
| |  _| |_       | || |  \  `--'  /  | || |  _| |  \ \_  | || |    _| |_     | || | _| |_\   |_  | || |     _| |_    | || |    _| |_     | || |  _| |___/ |  | |
| | |_____|      | || |   `.____.'   | || | |____| |___| | || |   |_____|    | || ||_____|\____| | || |    |_____|   | || |   |_____|    | || | |_________|  | |
| |              | || |              | || |              | || |              | || |              | || |              | || |              | || |              | |
| '--------------' || '--------------' || '--------------' || '--------------' || '--------------' || '--------------' || '--------------' || '--------------' |
 '----------------'  '----------------'  '----------------'  '----------------'  '----------------'  '----------------'  '----------------'  '----------------' 
  
   ___ ____   ____  ___  ______  ____ ____      ____  _  _     ____ _   _ ____  __      ___   __ ______    _  _ ______
  //   || \\ ||    // \\ | || | ||    || \\     || )) \\//    ||    \\ // || \\ ||     // \\  || | || |    \\// | || |
 ((    ||_// ||==  ||=||   ||   ||==  ||  ))    ||=)   )/     ||==   )X(  ||_// ||    ((   )) ||   ||       )/    ||  
  \\__ || \\ ||___ || ||   ||   ||___ ||_//     ||_)) //      ||___ // \\ ||    ||__|  \\_//  ||   ||      //     ||

 
  _     ___ _   _ _____    _    _        _________  ______   ___  _   _ _____ _   _  ____ ___    _    _     
 | |   |_ _| \ | | ____|  / \  | |      / / ____\ \/ /  _ \ / _ \| \ | | ____| \ | |/ ___|_ _|  / \  | |    
 | |    | ||  \| |  _|   / _ \ | |     / /|  _|  \  /| |_) | | | |  \| |  _| |  \| | |    | |  / _ \ | |    
 | |___ | || |\  | |___ / ___ \| |___ / / | |___ /  \|  __/| |_| | |\  | |___| |\  | |___ | | / ___ \| |___ 
 |_____|___|_| \_|_____/_/   \_\_____/_/  |_____/_/\_\_|    \___/|_| \_|_____|_| \_|\____|___/_/   \_\_____|
                                                                                                            
            
my youtube channel: https://www.youtube.com/channel/UCLPFWoE8Vngh4wuuwV4ItdQ
             
my cronus community profile: https://www.cronusmax.com/forums/member.php/398279-killeronfire23


‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà    ‚ñà‚ñà‚ñà      ‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà     ‚ñà‚ñà    ‚ñà‚ñà    ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà       ‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà ‚ñà‚ñà‚ñà    ‚ñà‚ñà‚ñà     ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà      
‚ñà‚ñà      ‚ñà‚ñà      ‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà      ‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà      ‚ñà‚ñà      ‚ñà‚ñà          ‚ñà‚ñà    ‚ñà‚ñà         ‚ñà‚ñà     ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà     ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà    ‚ñà‚ñà     
‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà      ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà     ‚ñà‚ñà    ‚ñà‚ñà     ‚ñà‚ñà‚ñà‚ñà‚ñà      ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà     ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà    ‚ñà‚ñà     
     ‚ñà‚ñà ‚ñà‚ñà      ‚ñà‚ñà  ‚ñà‚ñà  ‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà      ‚ñà‚ñà ‚ñà‚ñà           ‚ñà‚ñà      ‚ñà‚ñà  ‚ñà‚ñà     ‚ñà‚ñà          ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà ‚ñà‚ñà  ‚ñà‚ñà  ‚ñà‚ñà     ‚ñà‚ñà      ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà    ‚ñà‚ñà     
‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà      ‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà       ‚ñà‚ñà‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà     ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà ‚ñà‚ñà      ‚ñà‚ñà     ‚ñà‚ñà      ‚ñà‚ñà   ‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà


/*                                     *TEMPORADA 8 CAPITULO 2*
‚ñõ‚ñù‚ñù‚ñù‚ñù‚ñù‚ñù‚ñù‚ñù‚ñù‚ñù‚ñù‚ñù‚ñù‚ñù‚ñù‚ñù‚ñù‚ñù‚ñù‚ñù‚ñù‚ñù‚ñù‚ñù‚ñù‚ñù‚ñù‚ñù‚ñù‚ñù‚ñù‚ñù‚ñù‚ñù‚ñù‚ñù‚ñù‚ñù‚ñù‚ñù‚ñù‚ñù‚ñù‚ñù‚ñù‚ñù‚ñù‚ñù‚ñù‚ñù‚ñù‚ñù‚ñù‚ñù‚ñù‚ñù‚ñù‚ñù‚ñù‚ñù‚ñù‚ñù‚ñù‚ñù‚ñù‚ñù‚ñù‚ñù‚ñù‚ñù‚ñù‚ñù‚ñù‚ñù‚ñù‚ñù‚ñù‚ñù‚ñù‚ñù‚ñù‚ñù‚ñù ‚ñú
‚ñù You are currently using [VERSION 2] of Exploit YT [CRONUSMAX COMMUNITY ID: KillerOnFire23.
‚ñô ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ñü

//-- ùêíùêûùêúùê≠ùê¢ùê®ùêß ùüè - ùêàùêçùêàùêìùêàùêÄùêãùêàùêíùêÄùêìùêàùêéùêçùêí

  ___           _______                          _______       __   __                     
 |   .-----.   |   _   .---.-.--------.-----.   |   _   .--.--|  |_|  |_.-----.-----.-----.
 |.  |     |   |.  |___|  _  |        |  -__|   |.  1   |  |  |   _|   _|  _  |     |__ --|
 |.  |__|__|   |.  |   |___._|__|__|__|_____|   |.  _   |_____|____|____|_____|__|__|_____|
 |:  |         |:  1   |                        |:  1    \                                 
 |::.|         |::.. . |                        |::.. .  /                                 
 `---'         `-------'                        `-------'   
*/
define Fire   = XB1_RT;   define Pickaxe = XB1_Y;      define N_Weapon = XB1_RB;  
define Ads    = XB1_LT;   define Reload  = XB1_X;      define P_Weapon = XB1_LB;
                               
define Jump   = XB1_A;    define Edit    = XB1_RIGHT;  define Select   = XB1_VIEW;
define Crouch = XB1_RS;   define Ping    = XB1_XBOX;   define Confirm  = XB1_LS;

define Reset  = XB1_X;    define Wall    = XB1_RT;     define Ramp     = XB1_LT;  
define Build  = XB1_B;    define Floor   = XB1_RB;     define Roof     = XB1_LB;

define Up     = PS4_UP;   define Left    = PS4_LEFT;   define RX       = PS4_RX;
define Down   = PS4_DOWN; define Right   = PS4_RIGHT;  define RY       = PS4_RY;

define aimY   = PS4_RY;   define LX      = PS4_LX;     define On       = TRUE;
define aimX   = PS4_RX;   define LY      = PS4_LY;     define Off      = FALSE;


/*==============================================================================================================================================================
		                                                       DEAD ZONE
==============================================================================================================================================================*/

                                                    int deadZone   = 9; // Deazone in game       


/*==============================================================================================================================================================
		                                                AIM ASSIST [LINEAL] OPTIONS
==============================================================================================================================================================*/
                                                   
                                                    int AimAssist_LINEAR  = FALSE; 
                                                    
                                                    // Power/Strength of Aim Assist
                                                    int Strength  = 17;
                                                   
    // Must be able to increment 3 times at least within strength value ( Increment * 4 = 20 [5 * 4] = OK) <== Default Example as ( 7 * 3 = 21 )
                                                    int Increment = 5; 
                             

/*==============================================================================================================================================================
		                                               AIM ASSIST [EXPONENCIAL] OPTIONS
==============================================================================================================================================================*/
                                                   
                                                    int AimAssist_EXPO  = TRUE;
                                                   
                                                    // Power/Strength of Aim Assist
                                                    int AimAssist_Strength  = 29; 


/*==============================================================================================================================================================
		                                                       STICK MOVEMENT REDUCER
==============================================================================================================================================================*/ 

                                                   int Reducer =  TRUE;  // Reduces power on input (Stick movement)


/*==============================================================================================================================================================
		                                                      ANTI RECOIL
==============================================================================================================================================================*/

                                                   int LegacyARecoil =  TRUE;
                                                    
                                                   int ArLegacyRY    = 14;


/*==============================================================================================================================================================
		                                                       DROP SHOT
==============================================================================================================================================================*/

                                                   int DropShot      = TRUE;
                                                  
                                                   int DropShotWait  = 50;


/*==============================================================================================================================================================
		                                                       EDIT ASSIST
==============================================================================================================================================================*/ 

                                                   int QuickEditAssist =  FALSE;
                                                   
                                                   int EditDelay  = 15;

                                                   define EditAssist    = XB1_RIGHT;

/*==============================================================================================================================================================
		                                                      FAST RESET
==============================================================================================================================================================*/ 

                                                   int InstaFastReset  =  FALSE;

                                                   define FastReset     = XB1_DOWN;

/*==============================================================================================================================================================
		                                                       BUILD TRACK
==============================================================================================================================================================*/ 

                                                   int BuildTracker  =  TRUE;

                                                   int BuildSyncTime = 1000;
          
/*
 .~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 
(                Mod Values/Times etc..              ) 
 `-~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-* 
*/ define LegacyRumble = Off;
   define LegacyInvert = Off;
   define LegacyARHip  = Off;

int Edit1,Edit2,EditT,Shunt,BuildTrack,BuildCount;
int power,Ypower,Xpower,Power,CountPower,AxisXY;
int display_title = TRUE;
int display_black;      
int count_black;  

// ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ \\

//-- ùêíùêûùêúùê≠ùê¢ùê®ùêß ùüê - ùêåùêÄùêàùêç ùêÅùêãùêéùêÇùêä

main {

    if (QuickEditAssist) {
	 	if (!get_ival(Ads) && get_ival(EditAssist)) {
			EditAssist();
			Edit1 = On;
		}

			if (event_release(EditAssist)) {
				combo_run(Confirm);
				EditT = Off;
				Edit1 = Off;
			}
	}

    if (InstaFastReset && !get_ival(Ads) && event_press(FastReset)) { 
        Shunt = FastReset;
        combo_run(FastReset);
    }

    if (Edit1 || Edit2) {

            if (event_press(Reset)) {  
                combo_run (InstantReset);
                Edit1 = Off;
                Edit2 = Off; 
            }

                if (event_press(Pickaxe) || event_press(Build) || event_press(Ads)) {
                    Edit1 = Off;
                    Edit2 = Off;
                }
    }


    if (BuildTracker) {
        
        if (event_press(Build)) {
            BuildTrack = !BuildTrack;
        }
    
        if (BuildTrack) {
            BuildCount += get_rtime();
            
            if (event_press(Pickaxe) || BuildCount == BuildSyncTime) {
                BuildTrack = Off;
                BuildCount = Off;
            }
            
                if (get_ival(Roof) || get_ival(Floor) || get_ival(Ramp) || get_ival(Wall)) 
                    BuildCount = Off;
      }
}

    if (!BuildTrack) {       
        
        if (AimAssist_EXPO) {   
         
           if (get_val(Ads)> 95){ 
               combo_run(AimExpo);
           }
        
               if (abs(get_val(9)) > 19 || abs(get_val(10)) > 19) 
                   combo_stop(AimExpo);
      }
}
        
     if (AimAssist_LINEAR) {
	 
	    if (event_press(Ads)) { 
	    	
	    	Power = On;
}
	    
	    else if (!get_ival(Ads) && event_press(Fire)) {
	    	
	    	Power = On;
}
	    
	    if (get_ival(Ads) || get_ival(Fire)) {
	    	
	    	AxisXY = isqrt(abs(get_ival(aimX)) * abs(get_ival(aimX)) + abs(get_ival(aimY)) * abs(get_ival(aimY)));
	    	
	    	if (AssistProfile == 1)
	    		
	    		AimAssist(Strength,Increment);
	    		
         } else {
	    	
	    	CountPower = 0;
	    	power = Off;
        }
}
 
    if (!BuildTrack) {  
       
       if (DropShot && get_ival(Fire)) {
            combo_run(DropShot);
        }    
            else {
                combo_stop(DropShot);
            }
    

            if (LegacyARecoil){        
                    AR_Value = ArLegacyRY;  

                if ((((!LegacyRumble) && (LegacyARHip)) && (get_ival(Ads) || get_ival(Fire))) || 
                     ((!LegacyRumble) && (!LegacyARHip) && get_ival(Ads) && get_ival(Fire))) {

                    LegacyAR();
                }
                    else if ((((LegacyRumble) && (LegacyARHip)) && (get_ival(Ads) || get_ival(Fire)) && get_rumble(RUMBLE_A)) || 
                              ((LegacyRumble) && (!LegacyARHip) && get_ival(Ads) && get_ival(Fire) && get_rumble(RUMBLE_A))) {

                            LegacyAR();
                    }
            }
       
       
     if (Shunt) {
        
        if (event_release(Shunt)) {
            Shunt = Off;
        }
            else {
            set_val (Shunt,Off);
         }
      }
  
     if(display_title){           
         cls_oled(0);            
         DrawLogo(0, 0, 0);
         display_title = FALSE;  
         display_black = TRUE;
}                            

      if(display_black){                            
         count_black += get_rtime();

      if(count_black >= 9000){                        
         cls_oled(0);         
         count_black = 0;      
         display_black = FALSE; 
       }
     }
   }
 }


// ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ \\

//-- ùêíùêûùêúùê≠ùê¢ùê®ùêß ùüë - ùêÇùêéùêåùêÅùêéùêí

combo DropShot {

	set_val(Crouch,100);
	wait(50);
	set_val(Crouch,0);
	wait(20);
	wait(DropShotWait);
}

combo Confirm {
      
      set_val(Confirm,100);
      wait(20);
      set_val(Confirm,0);
      wait(100);
}

combo FastReset {
      
      set_val(EditAssist,100);
      wait(20)
      set_val(Reset,100);        
      wait(20);
      combo_run(Confirm);
}

combo InstantReset {

      wait(20)
      combo_run(Confirm);
}

combo AimExpo{          
     
     set_val(10, (AimAssist_Strength)); wait(10)
     set_val(9, (AimAssist_Strength)); wait(10)
     set_val(10, AimAssist_Strength * -1); wait(10)
     set_val(9, AimAssist_Strength * -1); wait(10)
}

// ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ‚ññ \\

//-- ùêíùêûùêúùê≠ùê¢ùê®ùêß ùüë - FUCTIONS

int AR_Value;
function LegacyAR () {
    
    if(LegacyInvert) {
        set_Val(RY,AR_Value * -1);
    }
        else {    
            set_Val(RY,AR_Value);
        }
}

function EditAssist () {

    EditT += get_rtime();
        if (get_ival(EditAssist)) {
            if (EditT >= EditDelay)
                  Press(Select);
          }
}

int AssistProfile = 1; 
function AimAssist (Strength,Step) {

	if (Power) {
		
		Ypower = Strength;
		Xpower = Strength * -1;
		Increment = Step;
		Power = Off;
	}
	
	if (!power) {
	
		Xpower += Increment;
		Ypower -= Increment;
	
	} else {
		
		Xpower -= Increment;
		Ypower += Increment;
	}
	
	CountPower ++;
	
	if (CountPower >= (Strength / Increment)) {
		
		power = !power;
		CountPower = 0;
	}	
	
	if (AxisXY > deadZone) {
	
		if (Reducer) {
		
			set_Val(aimY,(Ypower - Strength / 2));
			set_Val(aimX,(Xpower - Strength / 2 * -1));
		
		} else {
		
			set_val(aimY,(Ypower - Strength / 2) + get_ival(aimY));
			set_val(aimX,(Xpower - Strength / 2 * -1) + get_ival(aimX));	
		}
		
	} else {
		
		if (Reducer) {
				
			set_Val(aimY,(Ypower - Strength / 2));
			set_Val(aimX,(Xpower - Strength / 2 * -1));
			
		} else {
			
			set_val(aimY,(Ypower - Strength / 2));
			set_val(aimX,(Xpower - Strength / 2 * -1));
		}
	}
}

function Press (Button) {

    if (get_ival(Button))
        return;
            set_val(Button, 100);
}

function set_Val(Input,Output) {

	set_val(Input,clamp(Output * (100 - abs(get_ival(Input))) / 100 + get_ival(Input),-100,100));
    return; 
}
/*-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 | | | | | | | | | | | | | | | E | N | D | | | | | | | | | | | | | | | | | | | | | | | |
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+*/
/*    
============================================================================================================================ 
     Logo Picture : Fortnite ZEN Logo
============================================================================================================================ 
*/

const int16 BOOT_LOGO[] = { 
124, 38,
    0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
    0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
    0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
    0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
    0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
    0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x001C,0x07E1,0x0000,0x0000,0x0701,0xF81C,0x0080,0x8030,0x07F0,0xFF18,0x1C06,0x0701,0xFC3F,0xC3F8,
    0x0C18,0x0FC0,0x7F0F,0xE181,0xC060,0x703F,0xC3F8,0x7F80,0xC181,0xFC0C,0x00C0,0x1C1C,0x0607,0x8300,0x300C,0x000C,0x1818,0xC0C0,0x0C01,0xC3C0,0x60D8,0x3003,0x00C0,0x0063,0x000C,0x0E00,0xC01E,0x3C06,0x0D83,0x8030,0x0600,0x0630,
    0x00C0,0x7E0F,0xE1E6,0xC061,0x8C1F,0x83F8,0x7E00,0x6300,0x1800,0xF0FE,0x1B6C,0x0618,0xC07C,0x3F80,0xF803,0x6001,0x8001,0x8C01,0xBCC0,0x61FC,0x0063,0x0001,0x8036,0x0030,0x0018,0xC019,0xCC06,0x3FE0,0x0630,0x0018,0x03E0,0x0600,
    0x018C,0x0198,0xC0E3,0xFE00,0x6300,0x0180,0x1C00,0xC00F,0xF0FF,0x180D,0xFC30,0x73FC,0x3FCF,0xF801,0xC19F,0xE07E,0x0FF1,0x80C7,0x8603,0x1F83,0xFC7E,0x001C,0x19FE,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0001,0xFFFF,
    0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFF00
 } // picture 
/*     
============================================================================================================================ 
     DrawLogo(x, y, invert)                                                                                                  
============================================================================================================================ 
*/                                                    
int logoX,logoX2,logoY, logoY2;                       
int logoBit,logoOffset,logoData;                      
 
function DrawLogo(x, y, invert) {                     
    logoOffset = 2;                                    
    logoBit = 16;                                           
    for (logoY = 0; logoY < BOOT_LOGO[1]; logoY++) {         // Loop the Y axis 
        for (logoX = 0; logoX < BOOT_LOGO[0]; logoX++) {     // Loop the X axis 
            logoData = BOOT_LOGO[logoOffset]          
            logoX2 = x + logoX;                       
            logoY2 = y + logoY;                       
            if (logoX2 < 0 || logoX2 >= 128) {        
                logoX2 -= 128;                        
            }                                         
            if (logoY2 < 0 || logoY2 >= 64) {         
                logoY2 -= 64;                         
            }                                         
            if (test_bit(logoData, logoBit - 1)) {     
                pixel_oled(logoX2, logoY2, !invert);   
            }else{                                     
                pixel_oled(logoX2, logoY2, invert);    
            }                                            
            logoBit--;             // Decrement the bit flag, we are moving to the next bit 
            if (!logoBit) {     // Check if we have just handled the last bit  
                logoBit = 16;     // Reset the bit flag     
                logoOffset++;     // Move to the next value 
            }  
        }   
    }    
}