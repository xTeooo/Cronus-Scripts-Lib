/*
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------------------------------------------------    
---------------------------------------------------FABRICIO KEITEL ULTIMATE Red Dead Redemption 2 SCRIPT-------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------------------------------------------------

Version: 5.0
Platform: Multi
Controller: Multi
Game: Red Dead Redemption 2
Author: FABRICIO KEITEL


+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

 
INSTRUÇÕES PS4 / XBOX:


1-  Indicações de cor:
Cor OFF = Script desativado
Cor azul por padrão (se o RapidFire estiver ativado, o LED deverá piscar em vermelho)
Cor Branco = Ativação da câmera cinematográfica (acalme seu cavalo ao mesmo tempo)

2-  Se o HeadShot estiver ativado:
Cor Verde = Alcance próximo
Cor AzulCéu = Faixa Média
Cor Amarelo = Longo Alcance

3-  Cor flash ROSA:
O RapidFire está ativado
O Corrida Infinita do Cavalo mod está em execução
O modo Automático corpo a corpo está em execução
Corte a Corda mod está em execução


4-  Indicações de Vibração:
2 pequenas vibrações rápidas = mod está desativado
1 grande vibração = mod está LIGADO
3 pequenas vibrações rápidas a cada 5 segundos = seu controlador tem menos de 10% de bateria restante


5-  Ativação / desativação do script:
Toque duas vezes rapidamente no LB / L1 para ativar ou desativar TODOS OS RECURSOS
1 vibração grande = o mod está ativado, 2 pequenas vibrações rápidas = o mod está desativado


6-  Gatilhos Rápidos:
Seus gatilhos saltam pra 100% ao menor toque


7-  Câmera cinematográfica (acalme seu cavalo ao mesmo tempo):
Quando você está no modo Câmera Cinematográfica, seu personagem acalma seu cavalo automaticamente ao mesmo tempo
Você também pode usar o mod Corrida Infinita do Cavalo ao mesmo tempo


8-  Corrida Infinita do Cavalo:
Toque duas vezes e mantenha o botão Cruz / A apertado o (LED vermelho piscará)


9-  Visão de Águia Fácil:
Toque em R3 / RS para ativar a visão dE águia
Não funciona no mod Câmera cinematográfica, porque este botão altera a visualização da câmera


10- Corrida automática para layout de botão padrão:
Empurre o analogico esquerdo para a frente para correr


11- Corpo a corpo automatico:
Toque duas vezes e segure CIRCULO / B (LED Flash vermelho) para enviar spam ao botão corpo a corpo


12- Corte a corda:
Toque duas vezes e segure QUADRADO / X (LED vermelho piscando) para cortar a corda se você estiver amarrado


13- Rapid Fire com AIM Assist (com alternância ON / OFF):
Segure L2 / LT + CIRCULO / B e Toque em R2 / RT para ativar ou desativar
1 vibração grande = o mod está ativado, 2 pequenas vibrações rápidas = o mod está desativado
Aperte L2 / LT + R2 / RT para executar o RapidFire


14- Recarga automática:
Solte R2 / RT para recarregar um cartucho no rifle


15- Auto HeadShot
Segure L2 / LT e toque em R1 / RB para ativar ou desativar
1 vibração grande = o mod está ativado, 2 pequenas vibrações rápidas = o mod está desativado

Quando ativar: /! \ Pressione o gatilho sensível /! \
Se você segurar L2 / LT mais de 85%, o visor irá para a cabeça do inimigo, se você segurar menos de 85%, o visor não vai para a cabeça (mira normal)
Toque à direita para alternar entre a seleção de faixa
Cor Amarelo = Alcance próximo
Cor SkyBlue = Faixa Média
Cor Verde = Longo Alcance


16- AIM Assist (precisão 100%)
Mantenha pressionado a Seta-Baixo e pressione L2 / LT para ativar ou desativar
1 vibração grande = o mod está ativado, 2 pequenas vibrações rápidas = o mod está desativado


17- Troca rápida de armas e tônicos
Segure L1 / LB e
Toque em TRIANGULO / Y para pistolas
Toque duas vezes em TRIANGULO / Y para Estamina
Toque em Quadrado / X para obter uma arma na posição as 9 horas
Toque duas vezes em QUADRADO / X pra Vida
Toque CIRCULO / B para faca
Toque duas vezes em CIRCLE / B para DeadEye
Toque em CRUZ / A para a arma na posição as 6 horas
Toque para SETA-BAIXO para o laço
Segure TRIANGULO / Y para mudar a carta de habilidade (Red Dead Online)


18- Parada do DeadEye (útil para online):
Online, o DeadEye não para automaticamente quando você solta o botão de mira
Esse recurso interrompe o DeadEye quando você libera L2 / LT


19- DeadEye automático com alternância ON / OFF:
Mantenha pressionado a SETA-BAIXO e pressione R3 / RS para ativar ou desativar
1 vibração grande = o mod está ativado, 2 pequenas vibrações rápidas = o mod está desativado
Se ativado, pressione L2 / LT para ativar o DeadEye


20- Abaixar ao Atirar com alternância ON / OFF:
Mantenha pressionado a SETA-BAIXO e pressione CROSS / A para ativar ou desativar
1 vibração grande = o mod está ativado, 2 pequenas vibrações rápidas = o mod está desativado
Se ativado, pressione L2 / LT para agachar


21- Strafe shot com alternância ON / OFF:
Mantenha pressionado a SETA-BAIXO e pressione R1 / RB para ativar ou desativar
1 vibração grande = o mod está ativado, 2 pequenas vibrações rápidas = o mod está desativado
Se habilitado, mantenha L2 / LT + R2 / RT para se mover automaticamente


22- Para Rápida (para cavalo nível 3)
Toque duas vezes em R1 / RB para a parada:
	 		
--------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

// Button Layout:
int Standard_FPS_Layout = FALSE; //If you play with Standard FPS button layout, set TRUE, else set FALSE

//----------------------------------------------------------------------------------------------------------------------//

// HeadShot:
//Choose your range by defaut

int idx = 5; //4 = Close Range, 5 = Medium Range, 6 = Long Range - (Defaut: 6)
 
define WAIT_CLOSE   = 160; // Change this value for close range (color = Pink)
define WAIT_MEDIUM  = 140; // Change this value for medium range (color = SkyBlue) Defaut range
define WAIT_LONG    = 120; // Change this value for long range (color = Yellow)

//----------------------------------------------------------------------------------------------------------------------//

// Strafe Shot (Hold L2/LT and press SQUARE/X to toggle ON or OFF)

int RIGHT = 1000; //How long to go RIGHT
int LEFT = 1000; //How long to go LEFT

//----------------------------------------------------------------------------------------------------------------------//

//////////// DO NOT MODIFY ///////////////////
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	//
define CLOSE   = 4; //(color = Pink)		//
define MEDIUM  = 5; //(color = SkyBlue)		//
define LONG    = 6; //(color = Yellow)		//
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	//
define Off            = 0;					//
define Blue           = 1;					//
define Red            = 2;					//
define Pink           = 3;	
define Green          = 4;					//
define SkyBlue        = 5;					//
define Yellow         = 6;					//
define White          = 7;					//
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	//
// Toggles									//
int Script_ON = 1; 							//
int HeadShot_ON ; 							//
int Rapidfire_ON;							//
int Crouch_ON;								//
int Strafe_ON;								//
int cinema_ON;								//
int Horse_Sprint_ON; 						//
int DeadEye_ON;   							//
int Auto_DeadEye_ON;  						//
int Melee_ON; 								//
int Lasso_ON; 								//
int HS_ON;  								//
int Better_AA_ON;							//
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	//
int bit; 							    	//
int BTN; 									//
int Button;   								//
int Time_value; 							//
int wx_v,wy_v; 								//
int BTN_Tap;								//
int Timer;  								//
int Range;    								//
int Crouch_BTN; 							//
int Run_BTN; 								//
int ms;										//
int item;									//
int run_rumble;								//
int rumble_side;							//
int rumble_time;							//
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	//
//////////////////////////////////////////////
 
init {
    if(Standard_FPS_Layout)
    {
        Crouch_BTN = PS4_CROSS;
        Run_BTN = PS4_L3;
    }
        else
        {
            Crouch_BTN = PS4_L3;
            Run_BTN = PS4_CROSS;
        }
}

main {
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// Crossover
    if(get_controller() != PIO_PS4)
    {
        if(get_console() == PIO_PS4)
        {
            swap(PS4_SHARE,PS4_TOUCH);
            BTN = PS4_TOUCH;
 
                if(get_val(PS4_TOUCH) && get_val(PS4_R3))
                {
                    set_val(PS4_SHARE,100);
                    set_val(PS4_TOUCH,0);
                    set_val(PS4_R3,0);
                }
        }
 
        if(get_console() != PIO_PS4)
            BTN = PS4_SHARE;
    }
    	else
        	BTN = PS4_TOUCH;
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// Rumble start and restart
	if(run_rumble && !combo_running(Vibrate))
    {
		run_rumble -= 1;
		combo_restart(Vibrate);
	}
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// Battery warning
    if(get_battery() <= 1) 
    {
        ms += get_rtime();
            if(ms == 5000)
            {
                Rumble(FALSE, 3);
                ms = 0;
            }
    }
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// Double Tap function
    if(Timer > 0) 
    {
        Timer = Timer - get_rtime();
            if(Timer <= 0) BTN_Tap = FALSE;
    }
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// Script on/off
     if(event_press(PS4_R1))
    {
        if(double_tap (175) )
        {
            Script_ON = !Script_ON;
            Rumble(Script_ON, 0);
        }
 
    }
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//If script is ON:
if(Script_ON) 
{
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// Hair Trigger
    deadzone(PS4_L2,PS4_R2,99,99);
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// Cinematic Camera activation
    if((get_val(BTN) && get_ptime(BTN) >= 1500))
        cinema_ON = TRUE ; 
 
    if(cinema_ON)
    {
        combo_run(calm); 
        if(event_press(BTN) || event_press(PS4_L2))
            cinema_ON = FALSE;
    }
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// Eagle Vision
	if(!cinema_ON && !get_lval(PS4_DOWN))
	{
		if(event_press(PS4_R3) && !get_val(PS4_L2))
			combo_run(Eagle_vision);   
		}
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	if(!get_val(PS4_L1))
	{
	// Horse Sprint mod activation  (Double tap and hold CROSS/A)
    	if(event_press(PS4_CROSS))
   		{
        	if(double_tap (200))
            	Horse_Sprint_ON = TRUE;
    	}
        	if(event_release(PS4_CROSS))
            	Horse_Sprint_ON = FALSE ;
            
		Spammer (Horse_Sprint_ON, PS4_CROSS, 100);    
	//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	// Melee spam
    	if(event_press(PS4_CIRCLE))
    	{
        	if(double_tap (200))
            Melee_ON = TRUE;
    	}
    	if(event_release(PS4_CIRCLE))
        	Melee_ON = FALSE;
 
		Spammer (Melee_ON, PS4_CIRCLE, 50);
	//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	// Cut the Rope
    	if(event_press(PS4_SQUARE))
    	{
        	if(double_tap (200))
            	Lasso_ON = TRUE;
    	}
    	if(event_release(PS4_SQUARE))
        	Lasso_ON = FALSE;
 
		Spammer (Lasso_ON, PS4_SQUARE, 50);
	}
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// Toggles with L2 + DeadStop + Scope out
	if(get_val(PS4_L2))
	{
	//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	// Rapid Fire toggle
		if(get_val(PS4_CIRCLE))
		{
			if(event_press(PS4_R2))
			{
				Rapidfire_ON = !Rapidfire_ON;
				Rumble(Rapidfire_ON, 0);
			}
			set_val(PS4_R2, 0);
		}
	//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	// HeadShot toggle
		if(event_press(PS4_R1))
		{
        	HS_ON = !HS_ON;
        	Rumble(HS_ON, 0);
		}
		set_val(PS4_R1, 0);
	//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	// DeadEye stop for online	
		if(event_press(PS4_R3)) // && !Auto_DeadEye_ON
			DeadEye_ON = !DeadEye_ON;
	//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

	}
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// Rapid Fire	
     if(Rapidfire_ON && !get_val(PS4_L1) && (get_val(PS4_L2) && get_val(PS4_R2)))
    {
        Button = PS4_R2;
       	Time_value = 40;
        combo_run(Spam);
    }   
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// Rapid Reload
	if(!Rapidfire_ON)
   	{
   		if(event_release(PS4_R2) && !get_val(PS4_L1))
 			combo_run(Reload);
 	}
 		else
        	combo_run(Flash2);
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	if(event_release(PS4_R2))
	{
	// DeadEye stop for online
		if(DeadEye_ON)
			combo_run(DeadStop); //DeadEye_ON = FALSE;
	//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

	}
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// HeadShot   
	if(HS_ON)
	{
    	if(get_val(PS4_L2) && event_press(PS4_RIGHT))
        	idx++; 
    	if(idx == 7)
        	idx = 4; 
    	if(!get_val(PS4_L1) && (get_lval(PS4_L2) >= 86 && get_ptime(PS4_L2) > 300 && !HeadShot_ON))
    	{
        	if(idx == CLOSE)
            	Range = WAIT_CLOSE;
        	if(idx == MEDIUM)
            	Range = WAIT_MEDIUM;
        	if(idx == LONG)
            	Range = WAIT_LONG;
            	
      		combo_run(HeadShot);      
    	}
         
    if(event_release(PS4_L2))
        HeadShot_ON = FALSE;
	}
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// Switch Weapons / Tonics - Hold L1/LB and press:
    if(get_val(PS4_L1))
    {
	// TRIANGLE/Y for pistol / Double tap for Stamina
		if(event_release(PS4_TRIANGLE) && get_ptime(PS4_TRIANGLE) < 200)
		{
			if(double_tap(300)) 
        	{
        		item = TRUE;
               	wx_v = 0; 
               	wy_v = -100;
        	}
            	else
            	{
                	wx_v = 0;
               		wy_v = -100;
               	}
        }
	// SQUARE/X for 9 o'clock weapon / Double tap for Health
		if(event_press(PS4_SQUARE))
        {
            if(double_tap(300)) 
        	{
                item = TRUE;
                wx_v = -75; 
               	wy_v = -75;
        	}
            	else
            	{
                	wx_v = -100; 
                	wy_v =  0;
                }
        }
	// CROSS/A for 6 o'clock weapon
		if(event_press(PS4_CROSS))
		{
            wx_v =  0; 
            wy_v = 100;
        }
    // CIRCLE/B for knife / Double tap for DeadEye
        if(event_press(PS4_CIRCLE))
        {	 
            if(double_tap(300)) 
        	{
               	item = TRUE;
               	wx_v = 75; 
               	wy_v = -75;
        	}
        		else
        		{
        			wx_v = 75; 
	        		wy_v = 75;
        		}    
        }
	// DOWN for lasso
		if(event_press(PS4_DOWN))
        {
            wx_v = -75; 
            wy_v = 75;
        }
 
		if(wx_v || wy_v) 
			combo_run(Quick_Swap);
 
    // BLOCK
    	if(get_val(PS4_TRIANGLE) && (get_ptime(PS4_TRIANGLE) >= 250))
        	set_val(PS4_TRIANGLE, 100);
        	else
            	set_val(PS4_TRIANGLE, 0);

    	set_val(PS4_SQUARE, 0);
    	set_val(PS4_CROSS, 0);
    	set_val(PS4_CIRCLE, 0);
    	set_val(PS4_DOWN, 0);
    }
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// Toggles with DOWN
    if(get_val(PS4_DOWN))
    {
    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    // Auto DeadEye toggle
    	if(event_press(PS4_R3))
    	{
        	Auto_DeadEye_ON = !Auto_DeadEye_ON;
        	Rumble(Auto_DeadEye_ON, 0);
        }
	//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	// Crouch toggle
        if(event_press(PS4_CROSS))
        {
			Crouch_ON = !Crouch_ON;
			Rumble(Crouch_ON, 0);
        }
	//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	// Strafe shot toggle
        if(event_press(PS4_R1))
        {
        	Strafe_ON = !Strafe_ON;        
        	Rumble(Strafe_ON, 0)
        	//set_val(PS4_SQUARE, 0);
        }
	//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	// Better AIM Assist toggle
		if(event_press(PS4_L2))
		{
			Better_AA_ON = !Better_AA_ON;
			Rumble(Better_AA_ON, 0)
		}
	//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	// Block buttons
        set_val(PS4_R3, 0);
        set_val(PS4_CROSS, 0);
        set_val(PS4_R1, 0);
    }
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~   
// Auto DeadEye    
    if(Auto_DeadEye_ON && (event_press(PS4_R2) || event_release(PS4_R2)))
        combo_run(DeadStop);
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// Crouch        
	 if(Crouch_ON && (get_val(PS4_R2)))
        combo_run(Crouch);
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// Strafe shot        
    if(Strafe_ON && (get_val(PS4_L2)))
    {         
        set_val(Run_BTN, 100);
        combo_run(Strafe);
    }
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//Better AIM Assist    
    if(Better_AA_ON && (get_lval(PS4_L2) && !DeadEye_ON && get_val(PS4_R2)))
        combo_run(Better_Aim_Assist);
        
        if(Better_AA_ON && (get_lval(PS4_L2))) 
				combo_run(Flash2); 
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// Stop Horse (level 3)
    if(event_press(PS4_R1))
    {
        if(double_tap (200))
            combo_run(Stop_Horse);
            else
                combo_stop(Stop_Horse)
    }
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
} // Script is ON - END
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// Color Led
    if(!Script_ON) LED(Off);
    	else
    	{
        	if(!HS_ON)
        	{
            	if(cinema_ON) LED(White);
            		else LED(Blue);
        	}
        		else
        		{
            		if(cinema_ON) LED(White);
            			else LED(idx);
        		}
    	}
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
} // Main END
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

combo Spam { 
    set_val(Button, 100);
    wait(Time_value);
    set_val(Button, 0);
    wait(Time_value);
    }

combo Reload {
    wait(200);
    set_val(PS4_L2, 0);
    wait(50);
    set_val(PS4_L2, 100)
    wait(50);
    }
    
combo calm { //horse
    wait(250);
    set_val(PS4_L3, 100);
    wait(30);
    wait(5000);
    }
 
combo Crouch {
    set_val(PS4_L2, 100);
	wait(80);
	set_val(PS4_L2, 100);
	set_val(PS4_L3, 100);
	wait(60);
    }
 
combo Eagle_vision {
    wait(30);
    set_val(PS4_L3, 100);
    set_val(PS4_R3, 100);
    wait(50);
    }
  combo Flash2 {
    wait(500);
    LED(2);
    wait(500);
}
    combo Flash3 {
    wait(500);
    LED(5);
    wait(500);
}
combo HeadShot { 
    set_val(PS4_RY, -100);
    wait(Range);
    HeadShot_ON = TRUE;
    }
 
combo Better_Aim_Assist {
    set_val(PS4_L2,100);
    set_val(PS4_R2,100);
    set_val(PS4_R3,100);
    wait(40);
    set_val(PS4_L2,100);
    set_val(PS4_R2,0);
    set_val(PS4_R3,0);
    wait(40);
    set_val(PS4_L2,100);
    set_val(PS4_R2,0);
    set_val(PS4_R3,100);
    wait(40);
    set_val(PS4_L2,0);
    set_val(PS4_R2,0);
    wait(370);
    }    
 
combo Quick_Swap {
    set_val(PS4_SQUARE, 0);
    set_val(PS4_CIRCLE, 0);
    set_val(PS4_TRIANGLE, 0);
    set_val(PS4_RX,wx_v);
    set_val(PS4_RY,wy_v);
    if(item)
    set_val(PS4_R1, 100);
    wait(300);
    set_val(PS4_L1, 0);
    set_val(PS4_RX,wx_v);
    set_val(PS4_RY,wy_v);
    wait(300);
	set_val(PS4_SQUARE, 100);
	wait(100);
    set_val(PS4_LY, -100);
    set_val(PS4_LX, -100);
    wait(200)
    wx_v = 0;
    wy_v = 0;
    item = FALSE
    }
 
combo Run {
    wait(300);
    set_val(PS4_L3, 100);
    wait(90);
    }
 
combo DeadStop {
    wait(200);
    set_val(PS4_R3, 100);
    wait(90);
    DeadEye_ON = FALSE;
    }
 
 combo Strafe {
    set_val(PS4_LX, 100);
    wait(RIGHT);
    set_val(PS4_LX, -100);
    wait(LEFT);
    }

 
combo Stop_Horse {
    set_val(PS4_R1, 100);
    set_val(PS4_CROSS, 100);
    wait(1000);
    }
 
combo Vibrate {
    set_rumble(rumble_side, 100);
    wait(rumble_time);
    reset_rumble();
    wait(100);
    }

function double_tap (Time) {
    if(BTN_Tap){
        return TRUE;
    }
        BTN_Tap = TRUE; 
        Timer = Time;
        return FALSE;
}

function Rumble (f_var, f_num) {
    if(f_var)						
 	{
 		if(!f_num)
			run_rumble = 1;
			else
				run_rumble = f_num;
		
		rumble_side = RUMBLE_A;
		rumble_time = 300;
	}
		else 
		{
 			if(!f_num)
				run_rumble = 2;
				else
					run_rumble = f_num;
				
    		rumble_side= RUMBLE_B;
    		rumble_time = 150;
    	}
}

function Spammer (f_var, f_btn, f_time){            
 
    if(f_var)
    {
        Button = f_btn;
        Time_value = f_time;
 
        if(get_val(f_btn))
        {
            combo_run(Flash3);
            combo_run(Spam);
            if(Horse_Sprint_ON)
            	combo_run(calm);
        }
            else 
            { 
                combo_stop(Flash3);
                combo_stop(Spam); 
                combo_stop(calm);
            }
    }

}

function LED(color) {  //stimpson's LED colors
    for(bit=0;bit<3;bit++) {
        set_led(bit,test_bit(color,bit));
    }
}
//end