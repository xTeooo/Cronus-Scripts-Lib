



/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////                                                                                                                                                  /////////////////
//////////////////                            ////////////////////////////      ///////     //////     ///////////////            ////////////         /////////    /////////////////
//////////////////                           ///////////////////////////       ///////     //////     /////////////////          //////////////       /////////     /////////////////
//////////////////                          //////////////////////////        ///////     //////     ///////     //////         ////////////////     /////////      /////////////////
//////////////////                         /////////////////////////         ///////     //////     ///////      //////        //////////////////   /////////       /////////////////
//////////////////                                    ////////////          ///////     //////     //////////////////         ///////// ////////// /////////        /////////////////
//////////////////                                  ////////////           ///////     //////     /////////////              /////////   //////////////////         /////////////////
//////////////////                                ////////////            ///////     //////     //////  ///////            /////////     ////////////////          /////////////////
//////////////////                              ////////////             //////////////////     //////    ///////          /////////       //////////////           /////////////////
//////////////////                            ////////////              //////////////////     //////      ///////        /////////         ////////////            /////////////////
//////////////////                          ////////////               //////////////////     //////        ///////      /////////           //////////             /////////////////
//////////////////                        ////////////                                                                                                              /////////////////
//////////////////                      /////////////////////////////////////////////////////////////////////////////////////////////////////////////////           /////////////////
//////////////////                    ///////////////////////////////////////////////////////VERSION 2.2////////////////////////////////////////////////            /////////////////
//////////////////                  //////////////////////////////////////////////////////////BY CULAN/////////////////////////////////////////////////             /////////////////
//////////////////                ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////              /////////////////
//////////////////                                                                                                                                                  /////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////// BIG THANKS TO ALL SCRIPT TESTERS!  ////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////// without YOU, We wouldn't be where we are today! ///////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////  																																				/////////////////
//////////////////											   ///////////////////////////////////////////////////												    /////////////////
//////////////////											   /////										 /////												    /////////////////
//////////////////											   /////       HELP / FEEDACK / SUGGESTIONS      /////												    /////////////////
//////////////////											   /////										 /////												    /////////////////
//////////////////											   ///////////////////////////////////////////////////												    /////////////////
//////////////////      																																			/////////////////
//////////////////											  		   DISCORD - ROCKET LEAGUE ZURN SUPPORT														    /////////////////
//////////////////																																					/////////////////
//////////////////												 		 https://discord.gg/qdG5CvdtW8															    /////////////////
//////////////////																																					/////////////////
//////////////////											   ///////////////////////////////////////////////////												    /////////////////
//////////////////											   /////										 /////												    /////////////////
//////////////////											   /////    !!!!!!!!!      INFO     !!!!!!!!     /////												    /////////////////
//////////////////											   /////										 /////												    /////////////////
//////////////////											   ///////////////////////////////////////////////////												    /////////////////
//////////////////      																																			/////////////////
//////////////////                  		    !!IMPORTANT!!    ->>>>>      SCRIPT WORKS JUST INMATCH!		<<<<<-		!!IMPORTANT!!						        /////////////////
//////////////////                           																														/////////////////
//////////////////    			  			 !!!            IF BALLCAM_MOD IS >>ON<< CHANGE INGAME BALLCAMERA TO HOLD!       !!!     		 			 	        /////////////////
//////////////////                        				    															                                    		/////////////////
//////////////////        	!!    DRIFT_AFTER_JUMP/DODGE_MOD sadly JUST AVALAIBLE FOR PLAYERS, WHO USING DRIFT & AIRROLL >>NOT<< ON THE SAME BUTTON    !!   		/////////////////
//////////////////        																																		    /////////////////
//////////////////    ~/!IMPORTANT!IMPORTANT!/~ !!	THE MEMORY SPACE IS LIMITED, SAVE ONLY WHEN YOU HAVE SELECTED THE DESIRED MODS !!	~/!IMPORTANT!IMPORTANT!/~ 	/////////////////   	     																												    			/////////////////
//////////////////           																													 					/////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////										   //////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////              INSTRUCTIONS               //////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////										   //////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
define///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////																																				   //////////////////
//////////////////											     ///////////////////////////////////////////////////											   //////////////////
//////////////////											     /////										   /////											   //////////////////
//////////////////											     /////    ADD YOUR INGAME CONTROLLER LAYOUT    /////											   //////////////////
//////////////////											     /////										   /////											   //////////////////
//////////////////											     ///////////////////////////////////////////////////											   //////////////////
//////////////////																																				   //////////////////
//////////////////													~!~	ITS IMPORTANT TO BIND & MATCH ALL BUTTONS ~!~											   //////////////////
//////////////////																																				   //////////////////
/*//////////////*/															DRIVE_FORWARDS_BUTTON 	= PS4_R2												   	   ,/////////////////																													
/*//////////////*/															DRIVE_BACKWARDS_BUTTON 	= PS4_L2                                                       ,/////////////////                               				    					
/*//////////////*/															JUMP_BUTTON				= PS4_CIRCLE                                              	   ,/////////////////                                   	 							
/*//////////////*/															BOOST_BUTTON 			= PS4_CROSS 											       ,/////////////////	
/*//////////////*/															POWERDRIFT_BUTTON		= PS4_L1										          	   ,/////////////////
/*//////////////*/															AIRROLL_BUTTON		    = PS4_L2                                             		   ,/////////////////
/*//////////////*/															BALLCAM_BUTTON 			= PS4_SQUARE                                 			  	   ,/////////////////
/*//////////////*/															AIRROLL_RIGHT_BUTTON	= PS4_RIGHT	 	                                               ,/////////////////
/*//////////////*/															AIRROLL_LEFT_BUTTON 	= PS4_LEFT 												       ,/////////////////
//////////////////																																				   //////////////////
//////////////////											     ///////////////////////////////////////////////////											   //////////////////
//////////////////											     /////										   /////											   //////////////////
//////////////////											     /////          ADD YOUR POWER-BUTTONS         /////											   //////////////////
//////////////////											     /////										   /////											   //////////////////
//////////////////											     ///////////////////////////////////////////////////											   //////////////////
//////////////////     																																		       //////////////////
//////////////////					// !!  If you want any special Mods, you need to assign them to a POWER Button in the OLED SCREEN Menu.	!! //		    	   //////////////////
//////////////////																																				   //////////////////
//////////////////							                        	// !! NEEDS TO BE UNASIGNED BUTTONS  	!! //			           						   //////////////////
//////////////////							 																													   //////////////////
/*//////////////*/						 									POWER_BUTTON_1 = PS4_DOWN														  	   ,/////////////////
/*//////////////*/															POWER_BUTTON_2 = PS4_TRIANGLE														   ,/////////////////
/*//////////////*/															POWER_BUTTON_3 = PS4_LEFT														       ,/////////////////
/*//////////////*/															POWER_BUTTON_4 = PS4_RIGHT															   ,/////////////////
//////////////////																																				   //////////////////
//////////////////											     ///////////////////////////////////////////////////											   //////////////////
//////////////////											     /////										   /////											   //////////////////
//////////////////											     /////      HOW TO TURN SCRIPT ON OR OFF       /////											   //////////////////
//////////////////											     /////										   /////											   //////////////////
//////////////////											     ///////////////////////////////////////////////////											   //////////////////
//////////////////                                                                 		                                           								   //////////////////
//////////////////																																				   //////////////////
//////////////////												//~//		OPTIONAL TO CHANGE BUTTONS		//~//												   //////////////////
//////////////////																																			       //////////////////
/*//////////////*/															TURN_ON_BUTTON 				= PS4_CIRCLE 											   ,/////////////////
/*//////////////*/	                    									TURN_OFF_BUTTON            	= PS4_OPTIONS               			       			   ,/////////////////
/*//////////////*/																											 									   //////////////////
/*//////////////*/	                    									                      				   												   //////////////////
//////////////////													       !! SCRIPT STARTS >> ON << !!															   //////////////////
//////////////////																																				   //////////////////
//////////////////																																			       //////////////////
//////////////////	    					 >>  OFF <<		= 	 TAP TURN_OFF_BUTTON ONCE	    ->			 RED LED, soft RUMBLE								   //////////////////
//////////////////																																				   //////////////////
//////////////////     						 >>	 ON  << 	= 	DOUBLE-TAP TURN_ON_BUTTON	    -> 			 BLINKS GREEN LED, strong RUMBLE		   			   //////////////////
//////////////////                                                                 		                                           								   //////////////////
//////////////////                                                                 		                                           								   //////////////////
//////////////////									   /////////////////////////////////////////////////////////////////////									   //////////////////
//////////////////									   /////										                   /////									   //////////////////
//////////////////									   /////  HOW TO  OPEN / NAVIGATE /CLOSE /SAVE  OLED SCREEN MENU   /////									   //////////////////
//////////////////									   /////										                   /////									   //////////////////
//////////////////									   /////////////////////////////////////////////////////////////////////									   //////////////////
//////////////////                                                                 		                                           								   //////////////////
//////////////////                                      										                                                       			   //////////////////
//////////////////												//~//		OPTIONAL TO CHANGE BUTTONS		//~//												   //////////////////
//////////////////																																				   //////////////////
/*//////////////*/															MENU_OPEN_BUTTON_1 = PS4_L2												   			   ,/////////////////
/*//////////////*/															MENU_OPEN_BUTTON_2 = PS4_OPTIONS										  			   //////////////////
//////////////////																																				   //////////////////
//////////////////							   //~//			~~HOW TO OPEN/NAVIGATE/CLOSE/~SAVE~ OLED SCREEN MENU ~~			//~//							   //////////////////
//////////////////	 																																			   //////////////////
//////////////////										>> OPEN  <<  			=	HOLD MENU_OPEN_BUTTON_1 + MENU_OPEN_BUTTON_2								   //////////////////
//////////////////																																				   //////////////////
//////////////////						  			>> NAVIGATE PAGES <<		=   RIGHT & LEFT BUTTONS													       //////////////////
//////////////////																																				   //////////////////
//////////////////						   		   >> NAVIGATE OPTIONS <<		=   UP & DOWN BUTTONS															   //////////////////
//////////////////																																				   //////////////////
//////////////////							 		   >> CLOSE  <<	  			=	PRESS CIRCLE BUTTON															   //////////////////
//////////////////																																				   //////////////////
//////////////////~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~//////////////////
//////////////////																																				   //////////////////
//////////////////					>> SAVE SINGLE MOD PERMANENTLY ON/OFF<<  	=	CROSS BUTTON 																   //////////////////
//////////////////				  																																   //////////////////
//////////////////  ~/!IMPORTANT!IMPORTANT!/~ !! THE MEMORY SPACE IS LIMITED, SAVE ONLY WHEN YOU HAVE SELECTED THE DESIRED MODS !!	~/!IMPORTANT!IMPORTANT!/~      //////////////////
//////////////////																																				   //////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////




/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////																																								 														     	   //////////
//////////////////																			!!!!!!!!!					MODS					!!!!!!!!!!!					 															       	   //////////
//////////////////																																								 															       //////////
//////////////////																																																							       //////////
//////////////////    MODS:             	                                             WHAT THEY ARE DOING:                                                      HOW TO ACTIVATE:          												       //////////
////////////////// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  //////////
//////////////////	  FRONT_SPEEDFLIPS				 	--------		    PERFECT DIAGONAL-DODGES, FASTEST FLIP, LEFT & RIGHT     			------------  	    HOLD BOOST, HOLD LEFTSTICK IN DIAGONAL FORWARD DIRECTION AND DOUBLE TAP JUMP   //////////
//////////////////																																								 														     	   //////////
//////////////////    BACK-SPEEDFLIPS               	--------			FASTEST WAY TO TURN YOUR CAR	            						------------  		HOLD BACKWARDS(MIND. 0.4 Seconds), HOLD LEFTSTICK BACKWARD AND DOUBLE TAP JUMP //////////
//////////////////																																								 														     	   //////////
//////////////////	  CAMERASHAKE-BLOCKER           	--------			NO CAMERA SHAKE FOR  LOW CONTROLLER-STICK-DEADZONE					------------		AUTOMATIC			 												     	   //////////
//////////////////																																								 														     	   //////////
//////////////////    STALL					         	--------  			STALL(CHECK YOUTUBE)				        						------------     	PRESS YOUR DEFINED "STALL" BUTTON                             				   //////////
//////////////////																																								 														     	   //////////
//////////////////    AUTOBALLCAM(SHORT)          		--------     		RETURN TO BALLCAM AFTER 0.8 SEC AUTOMATICALLY 					 	------------      	TAP BALLCAMERA BUTTON ONCE (still possible to switch camera instantly manual)  //////////
//////////////////																																					>>>>>   FINE ADJUSTMENTS ON ADVANCED	<<<<								   //////////
//////////////////																																								 														     	   //////////
//////////////////    AUTOBALLCAM(LONG)              	--------          	RETURN TO BALLCAM AFTER 10 SEC AUTOMATICALLY 						------------    	DOUBLE TAP BALLCAMERA BUTTON (still possible to switch camera instantly manual)//////////
//////////////////																																					>>>>>   FINE ADJUSTMENTS ON ADVANCED	<<<<								   //////////
//////////////////																																								 														     	   //////////
//////////////////    SPEEDDRIFT                  		--------  			FASTEST TURN-DRIFT					     							------------       	HOLD DRIFT BUTTON,MORE THEN 0.4 Seconds						                   //////////
//////////////////																																								 														     	   //////////
//////////////////    STOP-CAR                  		--------          	STOPS INSTANTLY YOUR CAR                                      		------------  		HOLD DRIVE FORWARD & DRIVE BACKWARD  					                       //////////
//////////////////																																								 														     	   //////////
//////////////////    180° BACKSPEEDFLIP SHOT      	 	--------      		JUMP, 180°TURN, HALF A BACKWARDDODGE, AIROLL RIGHT, POWERDRIFT   	------------     	WHEN BALANCING THE BALL ON THE HOOD,                  						   //////////
//////////////////                                                                                                                                                  PRESS YOUR DEFINED "BACK_SPEEDFLIP_SHOT" BUTTON 						       //////////
//////////////////																																								 														     	   //////////   
//////////////////	  TAKEOFF							--------			FASTES WAY TO THE MOON												------------		PRESS YOUR DEFINED "TAKE_OFF" BUTTON                                           //////////
//////////////////																																								 														     	   //////////
//////////////////                                                                                                                                                  WHEN BALANCING THE BALL ON THE HOOD,			 						       //////////
//////////////////	  MUSTY-FLICK						--------			"MUSTY-FLICK"(CHECK YOUTUBE)										------------		PRESS YOUR DEFINED "MUSTY_FLICK" BUTTON										   //////////
//////////////////																																								 														     	   //////////
//////////////////	  DRIFT-AFTER-JUMP/DODGE			--------			DRIFT DURRING JUMP AND LANDING										------------		JUMP FOR ACTIVAT, PRESS DRIVE_FORWARDS FOR STOP DRIFTING					   //////////
//////////////////	  																																				>>>>>   FINE ADJUSTMENTS ON ADVANCED	<<<<								   //////////
//////////////////	  																																				(NOT AVALAIBLE FOR PLAYERS, WHO USING AIRROLL & DRIFT ON THE SAME BUTTON)	   //////////
//////////////////																																																								   //////////
//////////////////	  KICKOFF-SPEEDFLIP					--------			full KICKOFF inc Speedflip 										    ------------		HOLD BOOST AND DRIVE FORWARDS BUTTON WHILE COUNTDOWN						   //////////
//////////////////																																					+ RESS YOUR DEFINED L&R "KICK_OFF_SPEEDFLIP" BUTTON RIGHT AFTER THE THE 1! 	   //////////
//////////////////																																																								   //////////
//////////////////                                                                                                                                                  WHEN BALANCING THE BALL ON THE HOOD,			 						       //////////
//////////////////	  BREEZI-FLICK						--------			"BREEZI-FLICK"(CHECK YOUTUBE), BOOST								------------		PRESS YOUR DEFINED "BREEZI_FLICK" BUTTON									   //////////
//////////////////																																																								   //////////
//////////////////	  WAVEDASH							--------			"WAVEDASH"(CHECK YOUTUBE), BOOST									------------		PRESS YOUR DEFINED "WAVEDASH" BUTTON										   //////////
//////////////////																																					>>>>>   FINE ADJUSTMENTS ON ADVANCED	<<<<								   //////////
//////////////////																																																								   //////////
//////////////////	  TORNADOSPIN 						--------   			TORNADOSPIN(CHECK YOUTUBE), BOOST									------------		PRESS YOUR DEFINED "LEFT OR RIGHT_TORNADO_SPIN								   //////////
//////////////////																																																					     		   //////////
//////////////////	  BOOST_SAVER						--------			STOP BOOSTING AFTER SUPERSONIC										------------		AUTOMATICALLY AFTER HOLDING THE BOOST BUTTON FOR A CERTAIN TIME				   //////////
//////////////////																																					>>>>>   FINE ADJUSTMENTS ON ADVANCED	<<<<								   //////////
//////////////////																																																					     		   //////////
//////////////////	  FAST FLIP							--------			change FRONTFLIP TO A SPEEDFLIP										------------		DODGE STRAIGHT FORWARDS													   	   //////////
//////////////////																																																					     		   //////////
//////////////////																																																					     		   //////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////




/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////																																								 													     	   //////////
//////////////////																			!!!!!!!!!					ADVANCED					!!!!!!!!!!!					 														       //////////
//////////////////																																																							   //////////
//////////////////																							    FINE ADJUSTMENTS OF MODS																									   //////////
//////////////////																																																							   //////////
//////////////////																																																						       //////////
//////////////////    1000 = 1 SECOND :             	                                                     OF WHICH MOD:                                                      EXPLANATION OF FINE ADJUSTMENTS:          			   		   //////////
int/////////////// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  //////////
//////////////////    																																																					   //////////
/*//////////////*/																																												 											   //////////
/*//////////////*/		BOOST_SAFER_TIME_GROUND 		= 1200,					 //~~~~~~~~~~~~//					       BOOST_SAFER						//~~~~~~~~~~~~//		TIME TO STOP THE BOOST ON THE GROUND				       //////////
/*//////////////*/													 										  																					 								        	   //////////
/*//////////////*/		BOOST_SAFER_TIME_AIR			= 2500,					 //~~~~~~~~~~~~//						   BOOST_SAFER						//~~~~~~~~~~~~//		TIME TO STOP THE BOOST IN THE AIR	  			    	   //////////
/*//////////////*/																																							 														     	   //////////
/*//////////////*/		DRIFT_AFTER_JUMP_TIME 			= 1300,					 //~~~~~~~~~~~~// 						   DRIFT-AFTER-JUMP/DODGE  			//~~~~~~~~~~~~//		TIME OF DRIFT AFTER JUMP						           //////////
/*//////////////*/																																							 														     	   //////////
/*//////////////*/		DRIFT_AFTER_DODGE_TIME 			= 1300,					 //~~~~~~~~~~~~// 						   DRIFT-AFTER-JUMP/DODGE  			//~~~~~~~~~~~~//		TIME OF DRIFT AFTER DODGE							  	   //////////
/*//////////////*/																																								 													     	   //////////
/*//////////////*/		AUTO_BALL_CAMERA_TIME			= 800					 //~~~~~~~~~~~~//						   AUTO BALL CAMERA					//~~~~~~~~~~~~//		TIME OF FOCUS ON CAR, BEFOR THE FOCUS SWITCH BACK TO BALL  //////////
/*//////////////*/		       																																																				   //////////
/*//////////////*/																																								 														   	   //////////   
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

																									


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////              				                                                 																																								  ///////
///////               				                                                    	//////////////////////////////////////////////																											  ///////
///////        				               !!!!!!!!!!!!!!!!!!!!!!!!!                        //   !!!   NO CHANGES NEEDED BELOW   !!!    //                 !!!!!!!!!!!!!!!!!!!!!!!!!!!															   	  ///////
///////                 			     	                                                //////////////////////////////////////////////																										  	  ///////
///////																																																												  ///////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////





int onoff;
int TURN_SCRIPT_ON_OFF = TRUE;
int led;

	/* controller color vals */
	data( 2,0,0,0, 0,0,0,2, 2,0,2,0, 0,0,2,0, 0,2,2,0, 2,2,2,0, 0,2,0,0, 0,0,0,0 );
	
	define fm = OLED_FONT_MEDIUM_WIDTH;
	define fs = OLED_FONT_SMALL_WIDTH;
	
int menu;
int build = 1;
int screen = 1, clear;

int
FRONT_SPEEDFLIPS_MOD 	 	= FALSE,
BACK_SPEEDFLIPS_MOD 	 	= FALSE,
AUTO_BALLCAM_MOD		 	= FALSE,
SPEED_DRIFT_MOD				= FALSE,
STOP_CAR_MOD			 	= FALSE,
FAST_FLIPP_MOD				= FALSE,
CAMERA_SHAKE_BLOCK_MOD	 	= FALSE,
DRIFT_AFTER_JUMP_DODGE_MOD	= FALSE,
BOOST_SAVER_MOD				= FALSE
								
define p_cycle_limit = 13; /* cycle limit for amount of pages you have in menu / void counting page 0 */
define p_1_opt_cycle_limit = 13; /* amount of options/toggles for page 1 */
define p_2_opt_cycle_limit = 13;
define p_3_opt_cycle_limit = 13;
define p_4_opt_cycle_limit = 13;
define p_5_opt_cycle_limit = 1;
define p_6_opt_cycle_limit = 1;
define p_7_opt_cycle_limit = 1;
define p_8_opt_cycle_limit = 1;
define p_9_opt_cycle_limit = 1;
define p_10_opt_cycle_limit = 1;
define p_11_opt_cycle_limit = 1;
define p_12_opt_cycle_limit = 1;
define p_13_opt_cycle_limit = 1;
define p_0 = 0; /* home page */
define p_1 = 1;
define p_2 = 2;
define p_3 = 3;
define p_4 = 4;
define p_5 = 5;
define p_6 = 6;
define p_7 = 7;
define p_8 = 8;
define p_9 = 9;
define p_10 = 10;
define p_11 = 11;
define p_12 = 12;
define p_13 = 13;
int p_1_opt;
int p_2_opt;
int p_3_opt;
int p_4_opt;
int p_5_opt;
int p_6_opt;
int p_7_opt;
int p_8_opt;
int p_9_opt;
int p_10_opt;
int p_11_opt;
int p_12_opt;
int p_13_opt;


const string idx_txt[] = { /* text index for menu */
	"   ZURN","POWER-BUTTONS",
	"POWER",
	"POWER",
	"POWER",
	"POWER",
	"FRONT SPEEDFLIPS",
	"BACK SPEEDFLIPS",
	"AUTO BALLCAM",
	"SPEED DRIFT",
	"STOP CAR",
	"FAST FLIP",
	"CAMERA SHAKE",
	"DRIFT JUMP/DODGE",
	"BOOST SAVER"
};
const string idx_txt2[] = { /* text index for menu */
	"   ZURN","POWER-BUTTONS",
	"1",
	"2",
	"3",
	"4"
};

const string idx_opt[] = { /* option text index for menu */
	"OFF",
	"ONE EIGHTY",
	"   MUSTY",
	"  TAKE OFF",
	" R KICK-OFF",
	" L KICK-OFF",
	"   BREEZI",
	"  WAVEDASH",
	"I. WAVEDASH",
	" L TORNADO",
	" R TORNADO",
	"   STALL",
	"R SPEEDFLIP",
	"L SPEEDFLIP"
};

const int16 BOOT_LOGO[] = {
 
127, 61,
    0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x001F,0xFFFF,0xFE07,0xF87E,0x0FFF,0xE001,0xFFC0,0x1FF0,
    0x003F,0xFFFF,0xFC0F,0xF0FC,0x1FFF,0xC003,0xFF80,0x3FE0,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x07FF,0xFFFF,0x80FE,0x07C1,0xFFFF,0x007F,0xFE03,0xFE00,
    0x0FFF,0xFFFF,0x01FC,0x0F83,0xFFFE,0x00FF,0xFC07,0xFC00,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x7FFF,0xFFE0,0x1FC1,0xF87F,0x83F0,0x07FF,0xF87F,0xC000,
    0xFFFF,0xFFC0,0x3F83,0xF0FF,0x07E0,0x0FFF,0xF0FF,0x8000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x001F,0xFFFF,0xF803,0xF83F,0x07F0,0x7F81,0xFFFF,0x8FF8,0x003F,
    0xFFFF,0xF007,0xF07E,0x0FE0,0xFF03,0xFFFF,0x1FF0,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x1FFE,0x007F,0x87E0,0xFFFF,0xC03F,0xF7FF,0xFF80,0x0000,
    0x3FFC,0x00FF,0x0FC1,0xFFFF,0x807F,0xEFFF,0xFF00,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0007,0xFF80,0x0FE0,0xFC1F,0xFF00,0x03FE,0x7FFF,0xF000,0x000F,
    0xFF00,0x1FC1,0xF83F,0xFE00,0x07FC,0xFFFF,0xE000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x01FF,0xE001,0xFE1F,0x83F3,0xF800,0x7F81,0xFFFE,0x0000,0x03FF,
    0xC003,0xFC3F,0x07E7,0xF000,0xFF03,0xFFFC,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x7FF8,0x007F,0xFFF0,0x7E3F,0xC01F,0xF807,0xFFC0,0x0000,0xFFF0,
    0x00FF,0xFFE0,0xFC7F,0x803F,0xF00F,0xFF80,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x001F,0xFE00,0x07FF,0xFE1F,0xC0FE,0x01FF,0x007F,0xF800,0x003F,0xFC00,
    0x0FFF,0xFC3F,0x81FC,0x03FE,0x00FF,0xF000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x07FF,0x8000,0x7FFF,0xC1F8,0x07F0,0x1FF0,0x07FF,0x0000,0x0FFF,0x0000,
    0xFFFF,0x83F0,0x0FE0,0x3FE0,0x0FFE,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0003,0xFFE0,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0007,0xFFC0,0x0000,
    0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x00FF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFE00,0x01FF,0xFFFF,0xFFFF,
    0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFC00,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x3FFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xE000,0x7FFF,0xFFFF,0xFFFF,
    0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xC000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x000F,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFE,0x001F,0xFFFF,0xFFFF,0xFFFF,
    0xFFFF,0xFFFF,0xFFFF,0xFFFC,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x01FF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFE0,0x03FF,0xFFFF,0xFFFF,0xFFFF,
    0xFFFF,0xFFFF,0xFFFF,0xFFC0,0x0000
    };
    
const string idx_opt2[] = { /* option text index for menu */
"OFF","ON"
}
const string idx_opt4[] = { /* option text index for menu */
"(SAVED)"
}
int logoX,logoX2,logoY, logoY2;                       
int logoBit,logoOffset,logoData;
/* option toggle system */
int aa = 0; int ab = 0; int ac = 0; int ad = 0; int ae = 0; int af = 0; int ag = 0; int ah = 0; int ai = 0; int aj = 0; int ak = 0; int al = 0; int am = 0;
int ba = 0; int bb = 0; int bc = 0; int bd = 0; int be = 0; int bf = 0; int bg = 0; int bh = 0; int bi = 0; int bj = 0; int bk = 0; int bl = 0; int bm = 0;
int ca = 0; int cb = 0; int cc = 0; int cd = 0; int ce = 0; int cf = 0; int cg = 0; int ch = 0; int ci = 0; int cj = 0; int ck = 0; int cl = 0; int cm = 0;
int da = 0; int db = 0; int dc = 0; int dd = 0; int de = 0; int df = 0; int dg = 0; int dh = 0; int di = 0; int dj = 0; int dk = 0; int dl = 0; int dm = 0;



	 
int  AUTO_BALLCAMM_SAVER_SCREEN = 0, F_SPEEDFLIP_SAVER_SCREEN = 0, B_SPEEDFLIP_SAVER_SCREEN = 0, DRIFT_AFTER_J_D_SAVER_SCREEN = 0, ONE_EIGTHY_SHOT_SAVER_SCREEN = 0,
	 CAMERA_S_SAVER_SCREEN = 0, STOP_C_SAVER_SCREEN = 0, SPEED_D_SAVER_SCREEN = 0, FAST_FLIP_SAVER_SCREEN = 0, BOOST_S_SAVER_SCREEN = 0
	 
int 
	 AUTO_BALLCAMM = 0, F_SPEEDFLIP = 0, B_SPEEDFLIP = 0, DRIFT_AFTER_J_D = 0, CAMERA_S = 0, STOP_C = 0, SPEED_D = 0, FAST_FLIP = 0, BOOST_S = 0

int POWER_B_1 = 0, POWER_B_2 = 0, POWER_B_3 = 0, POWER_B_4 = 0

int POWER_B_1_SAVER_SCREEN = 0, POWER_B_2_SAVER_SCREEN = 0, POWER_B_3_SAVER_SCREEN = 0, POWER_B_4_SAVER_SCREEN = 0
	 
init {
	POWER_B_1		= get_pvar(SPVAR_1,  0, 13,  0)
	POWER_B_2		= get_pvar(SPVAR_2,  0, 13,  0)
	POWER_B_3		= get_pvar(SPVAR_3,  0, 13,  0)
	POWER_B_4		= get_pvar(SPVAR_4,  0, 13,  0)
    F_SPEEDFLIP 	= get_pvar(SPVAR_5,  0, 1,  0)
	B_SPEEDFLIP 	= get_pvar(SPVAR_6,  0, 1,  0)
	AUTO_BALLCAMM	= get_pvar(SPVAR_7,  0, 1,  0)
	SPEED_D 		= get_pvar(SPVAR_8,  0, 1,  0)
	STOP_C 			= get_pvar(SPVAR_9,  0, 1,  0)
	FAST_FLIP		= get_pvar(SPVAR_10, 0, 1,  0)
	CAMERA_S		= get_pvar(SPVAR_11, 0, 1,  0)
	DRIFT_AFTER_J_D	= get_pvar(SPVAR_12, 0, 1,  0)
	BOOST_S			= get_pvar(SPVAR_13, 0, 1,  0)	
}
init {
    F_SPEEDFLIP_SAVER_SCREEN 		= get_pvar(SPVAR_5,  0, 1,  0)
	B_SPEEDFLIP_SAVER_SCREEN 		= get_pvar(SPVAR_6,  0, 1,  0)
	AUTO_BALLCAMM_SAVER_SCREEN		= get_pvar(SPVAR_7,  0, 1,  0)
	SPEED_D_SAVER_SCREEN			= get_pvar(SPVAR_8,  0, 1,  0)
	STOP_C_SAVER_SCREEN 			= get_pvar(SPVAR_9,  0, 1,  0)
	FAST_FLIP_SAVER_SCREEN			= get_pvar(SPVAR_10, 0, 1,  0)
	CAMERA_S_SAVER_SCREEN			= get_pvar(SPVAR_11, 0, 1,  0)
	DRIFT_AFTER_J_D_SAVER_SCREEN	= get_pvar(SPVAR_12, 0, 1,  0)
	BOOST_S_SAVER_SCREEN			= get_pvar(SPVAR_13, 0, 1,  0)
}

main {

	if( menu > p_0 ){
	TURN_SCRIPT_ON_OFF = FALSE;
}
	if( build ){
	cls_oled( 1 ); 
	if( menu == p_0 ){
    draw_picture(0,0,0);/* home page */
	clear = 0; screen = 1; /* screen saver */
}
	if( menu ){
	rect_oled( 1, 1, 126, 30, 1, 0 ); /* page text, shapes, and options */
	if( menu == p_1 ){
	printf( posx( 13, fs ), 7, 1, 1, idx_txt[ 2 ] );
	printf( posx( -8, fs ), 5, 2, 1, idx_txt2[ 2 ] );
	if( p_1_opt == 0 ){
	printf( posx( 3, fm ), 37, 1, 0, idx_opt[ 0 ] ); 
	aa = 0;  ab = 0;  ac = 0;  ad = 0;  ae = 0;  af = 0;  ag = 0;  ah = 0;  ai = 0;  aj = 0; ak = 0; al = 0; am = 0; 
}
	if( p_1_opt == 1 ){
	printf( posx( 11, fm ), 37, 1, 0, idx_opt[ 1 ] ); 
	aa = 1;  ab = 0;  ac = 0;  ad = 0;  ae = 0; af = 0; ag = 0;  ah = 0;  ai = 0;  aj = 0;  ak = 0; al = 0; am = 0;  
}
	if( p_1_opt == 2 ){
	printf( posx( 11, fm ), 37, 1, 0, idx_opt[ 2 ] ); 
	aa = 0 ;  ab = 1;  ac = 0;  ad = 0;  ae = 0; af = 0; ag = 0;  ah = 0;  ai = 0;  aj = 0;  ak = 0; al = 0; am = 0; 
}
	if( p_1_opt == 3 ){
	printf( posx( 11, fm ), 37, 1, 0, idx_opt[ 3 ] ); 
	aa = 0;  ab = 0;  ac = 1;  ad = 0;  ae = 0; af = 0;  ag = 0;  ah = 0;  ai = 0;  aj = 0;  ak = 0; al = 0; am = 0;  
}
	if( p_1_opt == 4 ){
	printf( posx( 11, fm ), 37, 1, 0, idx_opt[ 4 ] ); 
	aa = 0;  ab = 0;  ac = 0;  ad = 1;  ae = 0; af = 0;  ag = 0;  ah = 0;  ai = 0;  aj = 0;  ak = 0; al = 0; am = 0;  
}
	if( p_1_opt == 5 ){
	printf( posx( 11, fm ), 37, 1, 0, idx_opt[ 5 ] ); 
	aa = 0;  ab = 0;  ac = 0;  ad = 0;  ae = 1;  af = 0;  ag = 0;  ah = 0;  ai = 0;  aj = 0;  ak = 0; al = 0; am = 0;  
}
	if( p_1_opt == 6 ){
	printf( posx( 11, fm ), 37, 1, 0, idx_opt[ 6 ] ); 
	aa = 0;  ab = 0;  ac = 0;  ad = 0;  ae = 0;  af = 1;  ag = 0;  ah = 0;  ai = 0;  aj = 0;  ak = 0; al = 0; am = 0;  
}
	if( p_1_opt == 7 ){
	printf( posx( 11, fm ), 37, 1, 0, idx_opt[ 7 ] ); 
	aa = 0;  ab = 0;  ac = 0;  ad = 0;  ae = 0;  af = 0;  ag = 1;  ah = 0;  ai = 0;  aj = 0;  ak = 0; al = 0; am = 0;  
}
	if( p_1_opt == 8 ){
	printf( posx( 11, fm ), 37, 1, 0, idx_opt[ 8 ] ); 
	aa = 0;  ab = 0;  ac = 0;  ad = 0;  ae = 0;  af = 0;  ag = 0;  ah = 1;  ai = 0;  aj = 0;  ak = 0; al = 0; am = 0;  
}
	if( p_1_opt == 9 ){
	printf( posx( 11, fm ), 37, 1, 0, idx_opt[ 9 ] ); 
	aa = 0;  ab = 0;  ac = 0;  ad = 0;  ae = 0;  af = 0;  ag = 0;  ah = 0;  ai = 1;  aj = 0;  ak = 0; al = 0; am = 0;  
}
	if( p_1_opt == 10 ){
	printf( posx( 11, fm ), 37, 1, 0, idx_opt[ 10 ] ); 
	aa = 0;  ab = 0;  ac = 0;  ad = 0;  ae = 0;  af = 0;  ag = 0;  ah = 0;  ai = 0;  aj = 1;  ak = 0; al = 0; am = 0;  
}
	if( p_1_opt == 11 ){
	printf( posx( 11, fm ), 37, 1, 0, idx_opt[ 11 ] ); 
	aa = 0;  ab = 0;  ac = 0;  ad = 0;  ae = 0;  af = 0;  ag = 0;  ah = 0;  ai = 0;  aj = 0;  ak = 1; al = 0; am = 0;  
}
	if( p_1_opt == 12 ){
	printf( posx( 11, fm ), 37, 1, 0, idx_opt[ 12 ] ); 
	aa = 0;  ab = 0;  ac = 0;  ad = 0;  ae = 0;  af = 0;  ag = 0;  ah = 0;  ai = 0;  aj = 0;  ak = 0; al = 1; am = 0;  
}
	if( p_1_opt == 13 ){
	printf( posx( 11, fm ), 37, 1, 0, idx_opt[ 13 ] ); 
	aa = 0;  ab = 0;  ac = 0;  ad = 0;  ae = 0;  af = 0;  ag = 0;  ah = 0;  ai = 0;  aj = 0;  ak = 0; al = 0; am = 1;  
}
}
	if( menu == p_2 ){
	printf( posx( 13, fs ), 7, 1, 1, idx_txt[ 3 ] );
	printf( posx( -8, fs ), 5, 2, 1, idx_txt2[ 3 ] );
	if( p_2_opt == 0 ){
	printf( posx( 3, fm ), 37, 1, 0, idx_opt[ 0 ] ); 
	ba = 0;  bb = 0;  bc = 0;  bd = 0;  be = 0;  bf = 0;  bg = 0;  bh = 0; bi = 0;  bj = 0;  bk = 0; bl = 0; bm = 0; 
}
	if( p_2_opt == 1 ){
	printf( posx( 9, fm ), 37, 1, 0, idx_opt[ 1 ] ); 
	ba = 1;  bb = 0;  bc = 0;  bd = 0;  be = 0;  bf = 0;  bg = 0;  bh = 0; bi = 0;  bj = 0;  bk = 0; bl = 0; bm = 0; 
 
}
	if( p_2_opt == 2 ){
	printf( posx( 11, fm ), 37, 1, 0, idx_opt[ 2 ] ); 
	ba = 0;  bb = 1;  bc = 0;  bd = 0;  be = 0;  bf = 0;  bg = 0;  bh = 0; bi = 0;  bj = 0;  bk = 0; bl = 0; bm = 0; 
}
	if( p_2_opt == 3 ) {
	printf( posx( 11, fm ), 37, 1, 0, idx_opt[ 3 ] ); 
	ba = 0;  bb = 0;  bc = 1;  bd = 0;  be = 0;  bf = 0;  bg = 0;  bh = 0; bi = 0;  bj = 0;  bk = 0; bl = 0; bm = 0; 
}
	if( p_2_opt == 4 ) {
	printf( posx( 11, fm ), 37, 1, 0, idx_opt[ 4 ] ); 
	ba = 0;  bb = 0;  bc = 0;  bd = 1;  be = 0;  bf = 0;  bg = 0;  bh = 0; bi = 0;  bj = 0;  bk = 0; bl = 0; bm = 0; 
}
	if( p_2_opt == 5 ) {
	printf( posx( 11, fm ), 37, 1, 0, idx_opt[ 5 ] ); 
	ba = 0;  bb = 0;  bc = 0;  bd = 0; be = 1;  bf = 0;  bg = 0;  bh = 0; bi = 0;  bj = 0;  bk = 0; bl = 0; bm = 0; 
}
	if( p_2_opt == 6 ){
	printf( posx( 11, fm ), 37, 1, 0, idx_opt[ 6 ] ); 
	ba = 0;  bb = 0;  bc = 0;  bd = 0;  be = 0; bf = 1;  bg = 0;  bh = 0; bi = 0;  bj = 0;  bk = 0; bl = 0; bm = 0;  
}
	if( p_2_opt == 7 ) {
	printf( posx( 11, fm ), 37, 1, 0, idx_opt[ 7 ] ); 
	ba = 0;  bb = 0;  bc = 0;  bd = 0;  be = 0; bf = 0;  bg = 1;  bh = 0; bi = 0;  bj = 0;  bk = 0; bl = 0; bm = 0; 
}
	if( p_2_opt == 8 ) {
	printf( posx( 11, fm ), 37, 1, 0, idx_opt[ 8 ] ); 
	ba = 0;  bb = 0;  bc = 0;  bd = 0;  be = 0; bf = 0;  bg = 0;  bh = 1; bi = 0;  bj = 0;  bk = 0; bl = 0; bm = 0;
}
	if( p_2_opt == 9 ) {
	printf( posx( 11, fm ), 37, 1, 0, idx_opt[ 9 ] ); 
	ba = 0;  bb = 0;  bc = 0;  bd = 0;  be = 0; bf = 0;  bg = 0;  bh = 0; bi = 1;  bj = 0;  bk = 0; bl = 0; bm = 0; 
}
	if( p_2_opt == 10 ) {
	printf( posx( 11, fm ), 37, 1, 0, idx_opt[ 10 ] ); 
	ba = 0;  bb = 0;  bc = 0;  bd = 0;  be = 0; bf = 0  bg = 0;  bh = 0; bi = 0;  bj = 1;  bk = 0; bl = 0; bm = 0; 
}
	if( p_2_opt == 11 ) {
	printf( posx( 11, fm ), 37, 1, 0, idx_opt[ 11 ] ); 
	ba = 0;  bb = 0;  bc = 0;  bd = 0;  be = 0; bf = 0  bg = 0;  bh = 0; bi = 0;  bj = 0;  bk = 1; bl = 0; bm = 0; 
}
	if( p_2_opt == 12 ) {
	printf( posx( 11, fm ), 37, 1, 0, idx_opt[ 12 ] ); 
	ba = 0;  bb = 0;  bc = 0;  bd = 0;  be = 0; bf = 0  bg = 0;  bh = 0; bi = 0;  bj = 0;  bk = 0; bl = 1; bm = 0; 
}
	if( p_2_opt == 13 ) {
	printf( posx( 11, fm ), 37, 1, 0, idx_opt[ 13 ] ); 
	ba = 0;  bb = 0;  bc = 0;  bd = 0;  be = 0; bf = 0  bg = 0;  bh = 0; bi = 0;  bj = 0;  bk = 0; bl = 0; bm = 1; 
}
}
	if( menu == p_3 ){
	printf( posx( 13, fs ), 7, 1, 1, idx_txt[ 4 ] );
	printf( posx( -8, fs ), 5, 2, 1, idx_txt2[ 4 ] );
	if( p_3_opt == 0 ){
	printf( posx( 3, fm ), 37, 1, 0, idx_opt[ 0 ] ); 
	ca = 0;  cb = 0;  cc = 0;  cd = 0;  ce = 0;  cf = 0;  cg = 0;  ch = 0;  ci = 0;  cj = 0;  ck = 0; cl = 0; cm = 0; 
}
	if( p_3_opt == 1 ){
	printf( posx( 11, fm ), 37, 1, 0, idx_opt[ 1 ] ); 
	ca = 1;  cb = 0;  cc = 0;  cd = 0;  ce = 0;  cf = 0;  cg = 0;  ch = 0;  ci = 0;  cj = 0;  ck = 0; cl = 0; cm = 0; 
}
	if( p_3_opt == 2 ){
	printf( posx( 11, fm ), 37, 1, 0, idx_opt[ 2 ] ); 
	ca = 0;  cb = 1;  cc = 0;  cd = 0;  ce = 0;  cf = 0;  cg = 0;  ch = 0;  ci = 0;  cj = 0;  ck = 0; cl = 0; cm = 0;
}
	if( p_3_opt == 3 ){
	printf( posx( 11, fm ), 37, 1, 0, idx_opt[ 3 ] ); 
	ca = 0;  cb = 0;  cc = 1;  cd = 0;  ce = 0;  cf = 0;  cg = 0;  ch = 0;  ci = 0;  cj = 0;  ck = 0; cl = 0; cm = 0;
}
	if( p_3_opt == 4 ){
	printf( posx( 11, fm ), 37, 1, 0, idx_opt[ 4 ] ); 
	ca = 0;  cb = 0;  cc = 0;  cd = 1;  ce = 0;  cf = 0;  cg = 0;  ch = 0;  ci = 0;  cj = 0;  ck = 0; cl = 0; cm = 0;
}
	if( p_3_opt == 5 ){
	printf( posx( 11, fm ), 37, 1, 0, idx_opt[ 5 ] ); 
	ca = 0;  cb = 0;  cc = 0;  cd = 0;  ce = 1;  cf = 0;  cg = 0;  ch = 0;  ci = 0;  cj = 0;  ck = 0; cl = 0; cm = 0;
}
	if( p_3_opt == 6 ){
	printf( posx( 11, fm ), 37, 1, 0, idx_opt[ 6 ] ); 
	ca = 0;  cb = 0;  cc = 0;  cd = 0;  ce = 0;  cf = 1;  cg = 0;  ch = 0;  ci = 0;  cj = 0;  ck = 0; cl = 0; cm = 0;
}
	if( p_3_opt == 7 ){
	printf( posx( 11, fm ), 37, 1, 0, idx_opt[ 7 ] ); 
	ca = 0;  cb = 0;  cc = 0;  cd = 0;  ce = 0;  cf = 0;  cg = 1;  ch = 0;  ci = 0;  cj = 0;  ck = 0; cl = 0; cm = 0;
}
	if( p_3_opt == 8 ){
	printf( posx( 11, fm ), 37, 1, 0, idx_opt[ 8 ] ); 
	ca = 0;  cb = 0;  cc = 0;  cd = 0;  ce = 0;  cf = 0;  cg = 0;  ch = 1;  ci = 0;  cj = 0;  ck = 0; cl = 0; cm = 0;
}
	if( p_3_opt == 9 ){
	printf( posx( 11, fm ), 37, 1, 0, idx_opt[ 9 ] ); 
	ca = 0;  cb = 0;  cc = 0;  cd = 0;  ce = 0;  cf = 0;  cg = 0;  ch = 0;  ci = 1;  cj = 0;  ck = 0; cl = 0; cm = 0;
}
	if( p_3_opt == 10 ){
	printf( posx( 11, fm ), 37, 1, 0, idx_opt[ 10 ] ); 
	ca = 0;  cb = 0;  cc = 0;  cd = 0;  ce = 0;  cf = 0;  cg = 0;  ch = 0;  ci = 0;  cj = 1;  ck = 0; cl = 0; cm = 0;
}
	if( p_3_opt == 11 ){
	printf( posx( 11, fm ), 37, 1, 0, idx_opt[ 11 ] ); 
	ca = 0;  cb = 0;  cc = 0;  cd = 0;  ce = 0;  cf = 0;  cg = 0;  ch = 0;  ci = 0;  cj = 0;  ck = 1; cl = 0; cm = 0;
}
	if( p_3_opt == 12 ){
	printf( posx( 11, fm ), 37, 1, 0, idx_opt[ 12 ] ); 
	ca = 0;  cb = 0;  cc = 0;  cd = 0;  ce = 0;  cf = 0;  cg = 0;  ch = 0;  ci = 0;  cj = 0;  ck = 0; cl = 1; cm = 0;
}
	if( p_3_opt == 13 ){
	printf( posx( 11, fm ), 37, 1, 0, idx_opt[ 13 ] ); 
	ca = 0;  cb = 0;  cc = 0;  cd = 0;  ce = 0;  cf = 0;  cg = 0;  ch = 0;  ci = 0;  cj = 0;  ck = 0; cl = 0; cm = 1;
}
}
	if( menu == p_4 ){
	printf( posx( 13, fs ), 7, 1, 1, idx_txt[ 5 ] );
	printf( posx( -8, fs ), 5, 2, 1, idx_txt2[ 5 ] );
	if( p_4_opt == 0 ){
	printf( posx( 3, fm ), 37, 1, 0, idx_opt[ 0 ] ); 
	da = 0;  db = 0;  dc = 0;  dd = 0;  de = 0;  df = 0;  dg = 0;  dh = 0;  di = 0;  dj = 0;  dk = 0; dl = 0; dm = 0; 
}
	if( p_4_opt == 1 ){
	printf( posx( 11, fm ), 37, 1, 0, idx_opt[ 1 ] ); 
	da = 1;  db = 0;  dc = 0;  dd = 0;  de = 0;  df = 0;  dg = 0;  dh = 0;  di = 0;  dj = 0;  dk = 0; dl = 0; dm = 0; 
}
	if( p_4_opt == 2 ){
	printf( posx( 11, fm ), 37, 1, 0, idx_opt[ 2 ] ); 
	da = 0;  db = 1;  dc = 0;  dd = 0;  de = 0;  df = 0;  dg = 0;  dh = 0;  di = 0;  dj = 0;  dk = 0; dl = 0; dm = 0;
}
	if( p_4_opt == 3 ){
	printf( posx( 11, fm ), 37, 1, 0, idx_opt[ 3 ] ); 
	da = 0;  db = 0;  dc = 1;  dd = 0;  de = 0;  df = 0;  dg = 0;  dh = 0;  di = 0;  dj = 0;  dk = 0; dl = 0; dm = 0;
}
	if( p_4_opt == 4 ){
	printf( posx( 11, fm ), 37, 1, 0, idx_opt[ 4 ] ); 
	da = 0;  db = 0;  dc = 0;  dd = 1;  de = 0;  df = 0;  dg = 0;  dh = 0;  di = 0;  dj = 0;  dk = 0; dl = 0; dm = 0;
}
	if( p_4_opt == 5 ){
	printf( posx( 11, fm ), 37, 1, 0, idx_opt[ 5 ] ); 
	da = 0;  db = 0;  dc = 0;  dd = 0;  de = 1;  df = 0;  dg = 0;  dh = 0;  di = 0;  dj = 0;  dk = 0; dl = 0; dm = 0;
}
	if( p_4_opt == 6 ){
	printf( posx( 11, fm ), 37, 1, 0, idx_opt[ 6 ] ); 
	da = 0;  db = 0;  dc = 0;  dd = 0;  de = 0;  df = 1;  dg = 0;  dh = 0;  di = 0;  dj = 0;  dk = 0; dl = 0; dm = 0;
}
	if( p_4_opt == 7 ){
	printf( posx( 11, fm ), 37, 1, 0, idx_opt[ 7 ] ); 
	da = 0;  db = 0;  dc = 0;  dd = 0;  de = 0;  df = 0;  dg = 1;  dh = 0;  di = 0;  dj = 0;  dk = 0; dl = 0; dm = 0;
}
	if( p_4_opt == 8 ){
	printf( posx( 11, fm ), 37, 1, 0, idx_opt[ 8 ] ); 
	da = 0;  db = 0;  dc = 0;  dd = 0;  de = 0;  df = 0;  dg = 0;  dh = 1;  di = 0;  dj = 0;  dk = 0; dl = 0; dm = 0;
}
	if( p_4_opt == 9 ){
	printf( posx( 11, fm ), 37, 1, 0, idx_opt[ 9 ] ); 
	da = 0;  db = 0;  dc = 0;  dd = 0;  de = 0;  df = 0;  dg = 0;  dh = 0;  di = 1;  dj = 0;  dk = 0; dl = 0; dm = 0;
}
	if( p_4_opt == 10 ){
	printf( posx( 11, fm ), 37, 1, 0, idx_opt[ 10 ] ); 
	da = 0;  db = 0;  dc = 0;  dd = 0;  de = 0;  df = 0;  dg = 0;  dh = 0;  di = 0;  dj = 1;  dk = 0; dl = 0; dm = 0;
}
	if( p_4_opt == 11 ){
	printf( posx( 11, fm ), 37, 1, 0, idx_opt[ 11 ] ); 
	da = 0;  db = 0;  dc = 0;  dd = 0;  de = 0;  df = 0;  dg = 0;  dh = 0;  di = 0;  dj = 0;  dk = 1; dl = 0; dm = 0;
}
	if( p_4_opt == 12 ){
	printf( posx( 11, fm ), 37, 1, 0, idx_opt[ 12 ] ); 
	da = 0;  db = 0;  dc = 0;  dd = 0;  de = 0;  df = 0;  dg = 0;  dh = 0;  di = 0;  dj = 0;  dk = 0; dl = 1; dm = 0;
}
	if( p_4_opt == 13 ){
	printf( posx( 11, fm ), 37, 1, 0, idx_opt[ 13 ] ); 
	da = 0;  db = 0;  dc = 0;  dd = 0;  de = 0;  df = 0;  dg = 0;  dh = 0;  di = 0;  dj = 0;  dk = 0; dl = 0; dm = 1;
}
}
	if( menu == p_5 ){
	printf( posx( 15, fs ), 9, 0 , 1, idx_txt[ 6 ] );
	if( p_5_opt == 0 ){
	printf( posx( 10, fm ), 37, 1, 0, idx_opt2[ 0 ] ); 
	F_SPEEDFLIP = 0;
	FRONT_SPEEDFLIPS_MOD = FALSE;
}
	if( p_5_opt == 1 ){
	printf( posx( 9, fm ), 37, 1, 0, idx_opt2[ 1 ] ); 
	F_SPEEDFLIP = 1;
}
}
	if( menu == p_6 ){
	printf( posx( 15, fs ), 9, 0 , 1, idx_txt[ 7 ] );
	if( p_6_opt == 0 ){
	printf( posx( 10, fm ), 37, 1, 0, idx_opt2[ 0 ] ); 
	B_SPEEDFLIP = 0;
	BACK_SPEEDFLIPS_MOD = FALSE;
}
	if( p_6_opt == 1 ){
	printf( posx( 9, fm ), 37, 1, 0, idx_opt2[ 1 ] ); 
	B_SPEEDFLIP = 1;
}
}
	if( menu == p_7 ){
	printf( posx( 13, fs ), 9, 0 , 1, idx_txt[ 8 ] );
	if( p_7_opt == 0 ){
	printf( posx( 10, fm ), 37, 1, 0, idx_opt2[ 0 ] ); 
	AUTO_BALLCAMM = 0;
	AUTO_BALLCAM_MOD = FALSE;
}
	if( p_7_opt == 1 ){
	printf( posx( 9, fm ), 37, 1, 0, idx_opt2[ 1 ] ); 
	AUTO_BALLCAMM = 1;  
}
}
	if( menu == p_8 ){
	printf( posx( 9, fs ), 9, 0 , 1, idx_txt[ 9 ] );
	if( p_8_opt == 0 ){
	printf( posx( 10, fm ), 37, 1, 0, idx_opt2[ 0 ] ); 
	SPEED_D = 0;
	SPEED_DRIFT_MOD = FALSE;
}
	if( p_8_opt == 1 ){
	printf( posx( 9, fm ), 37, 1, 0, idx_opt2[ 1 ] ); 
	SPEED_D = 1;  
}
}
	if( menu == p_9 ){
	printf( posx( 8, fs ), 9, 0, 1, idx_txt[ 10 ] );
	if( p_9_opt == 0 ){
	printf( posx( 10, fm ), 37, 1, 0, idx_opt2[ 0 ] ); 
	STOP_C = 0; 
	STOP_CAR_MOD = FALSE;
}
	if( p_9_opt == 1 ){
	printf( posx( 9, fm ), 37, 1, 0, idx_opt2[ 1 ] ); 
	STOP_C = 1; 
}
}
	if( menu == p_10 ){
	printf( posx( 8, fs ), 9, 0, 1, idx_txt[ 11 ] );
	if( p_10_opt == 0 ){
	printf( posx( 10, fm ), 37, 1, 0, idx_opt2[ 0 ] ); 
	FAST_FLIP = 0;
	FAST_FLIPP_MOD = FALSE;
}
	if( p_10_opt == 1 ){
	printf( posx( 9, fm ), 37, 1, 0, idx_opt2[ 1 ] ); 
	FAST_FLIP = 1; 
}
}
	if( menu == p_11 ){
	printf( posx( 11, fs ), 9, 0, 1, idx_txt[ 12 ] );
	if( p_11_opt == 0 ){
	printf( posx( 10, fm ), 37, 1, 0, idx_opt2[ 0 ] ); 
	CAMERA_S = 0;
	CAMERA_SHAKE_BLOCK_MOD = FALSE;
}
	if( p_11_opt == 1 ){
	printf( posx( 9, fm), 37, 1, 0, idx_opt2[ 1 ] ); 
	CAMERA_S = 1;  
}
}
	if( menu == p_12 ){
	printf( posx( 16, fs ), 9, 0, 1, idx_txt[ 13 ] );
	if( p_12_opt == 0 ){
	printf( posx( 10, fm ), 37, 1, 0, idx_opt2[ 0 ] ); 
	DRIFT_AFTER_J_D = 0;
	DRIFT_AFTER_JUMP_DODGE_MOD = FALSE;
}
	if( p_12_opt == 1 ){
	printf( posx( 9, fm), 37, 1, 0, idx_opt2[ 1 ] ); 
	DRIFT_AFTER_J_D = 1; 
}
}
	if( menu == p_13 ){
	printf( posx( 10, fs ), 9, 0, 1, idx_txt[ 14 ] );
	if( p_13_opt == 0 ){
	printf( posx( 10, fm ), 37, 1, 0, idx_opt2[ 0 ] ); 
	BOOST_S = 0;
	BOOST_SAVER_MOD = FALSE;
}
	if( p_13_opt == 1 ){
	printf( posx( 9, fm), 37, 1, 0, idx_opt2[ 1 ] ); 
	BOOST_S = 1; 
}
}
	screen = 0;
}
	build = 0;
}
	/* *ADVANCE* / controls / menu utilities / timings / screen saver + more */
	if( menu == p_0 ){
	if(get_val(MENU_OPEN_BUTTON_1) && get_val(MENU_OPEN_BUTTON_2)){
	menu = p_1; 
	build = 1; 
} 
}
	if( menu != p_0 ){
	if( get_val(PS4_CIRCLE)){
	menu = p_0;
	TURN_SCRIPT_ON_OFF = TRUE;
	build = 1; 
}
}
	/* if called upon from page option, tells it to play combo/script/mods */
	if((TURN_SCRIPT_ON_OFF)){
	if( aa ){
	if( get_val(POWER_BUTTON_1)) {
	combo_run(TURN_BACK_SPEEDFLIP);
	set_val(POWER_BUTTON_1, 0 );
	set_val(PS4_LY, 0);
	set_val(PS4_LX, 0);
}
}	
	if( ba ){
	if( get_val(POWER_BUTTON_2)){ 
	combo_run(TURN_BACK_SPEEDFLIP); 
	set_val(POWER_BUTTON_2, 0 );
	set_val(PS4_LY, 0);
	set_val(PS4_LX, 0);
}
}
	if( ca ){
	if( get_val(POWER_BUTTON_3)){ 
	combo_run(TURN_BACK_SPEEDFLIP);
	set_val(POWER_BUTTON_3, 0 );
	set_val(PS4_LY, 0);
	set_val(PS4_LX, 0);
}
}
	if( da ){
	if( get_val(POWER_BUTTON_4)){ 
	combo_run(TURN_BACK_SPEEDFLIP);
	set_val(POWER_BUTTON_4, 0 );
	set_val(PS4_LY, 0);
	set_val(PS4_LX, 0);
}
}
	if( ab ){
	if( get_val(POWER_BUTTON_1)){
	combo_run(MUSTY_FLICK);
	set_val(POWER_BUTTON_1, 0 );
	set_val(PS4_LY, 0);
	set_val(PS4_LX, 0);
}
}
	if( bb ){
	if( get_val(POWER_BUTTON_2)){ 
	combo_run(MUSTY_FLICK);
	set_val(POWER_BUTTON_2, 0 );
	set_val(PS4_LY, 0);
	set_val(PS4_LX, 0);
}
}
	if( cb ){
	if( get_val(POWER_BUTTON_3)){ 
	combo_run(MUSTY_FLICK);
	set_val(POWER_BUTTON_3, 0 );	
	set_val(PS4_LY, 0);
	set_val(PS4_LX, 0);
}
}
	if( db ){
	if( get_val(POWER_BUTTON_4)){ 
	combo_run(MUSTY_FLICK);
	set_val(POWER_BUTTON_4, 0 );	
	set_val(PS4_LY, 0);
	set_val(PS4_LX, 0);
}
}
	if( ac ){ 
	if( get_val(POWER_BUTTON_1)){ 
	combo_run(AUTO_TAKEOFF);
	combo_run(AUTO_TAKEOFF_BOOST_TIMER);
	combo_run(AUTO_TAKEOFF_BLOCK_CANCLE_TIMER);
}
}
	if( bc ){ 
	if( get_val(POWER_BUTTON_2)){ 
	combo_run(AUTO_TAKEOFF);
	combo_run(AUTO_TAKEOFF_BOOST_TIMER);
	combo_run(AUTO_TAKEOFF_BLOCK_CANCLE_TIMER);
}
}
	if( cc ){
	if( get_val(POWER_BUTTON_3)){ 
	combo_run(AUTO_TAKEOFF);
	combo_run(AUTO_TAKEOFF_BOOST_TIMER);
	combo_run(AUTO_TAKEOFF_BLOCK_CANCLE_TIMER);
}
}
	if( dc ){
	if( get_val(POWER_BUTTON_4)){ 
	combo_run(AUTO_TAKEOFF);
	combo_run(AUTO_TAKEOFF_BOOST_TIMER);
	combo_run(AUTO_TAKEOFF_BLOCK_CANCLE_TIMER);
}
}
	if( ad ){
	if( get_val(POWER_BUTTON_1)){ 
	combo_run(RIGHT_KICKOFF_SPEEDFLIP);
	set_val(JUMP_BUTTON, 0);
	set_val(POWER_BUTTON_1, 0);
	set_val(PS4_LX, 0);
	set_val(PS4_LY, 0);
	set_val(DRIVE_FORWARDS_BUTTON, 100);
	set_val(BOOST_BUTTON, 100);
}
}
	if( bd ){
	if( get_val(POWER_BUTTON_2)){ 
	combo_run(RIGHT_KICKOFF_SPEEDFLIP);
	set_val(POWER_BUTTON_2, 0);
	set_val(JUMP_BUTTON, 0);
	set_val(PS4_LX, 0);
	set_val(PS4_LY, 0);
	set_val(DRIVE_FORWARDS_BUTTON, 100);
	set_val(BOOST_BUTTON, 100);
}
}
	if( cd ){
	if( get_val(POWER_BUTTON_3)){ 
	combo_run(RIGHT_KICKOFF_SPEEDFLIP);
	set_val(POWER_BUTTON_3, 0);
	set_val(JUMP_BUTTON, 0);
	set_val(PS4_LX, 0);
	set_val(PS4_LY, 0);
	set_val(DRIVE_FORWARDS_BUTTON, 100);
	set_val(BOOST_BUTTON, 100);
}
}
	if( dd ){
	if( get_val(POWER_BUTTON_4)){ 
	combo_run(RIGHT_KICKOFF_SPEEDFLIP);	 
	set_val(POWER_BUTTON_4, 0);
	set_val(JUMP_BUTTON, 0);
	set_val(PS4_LX, 0);
	set_val(PS4_LY, 0);
	set_val(DRIVE_FORWARDS_BUTTON, 100);
	set_val(BOOST_BUTTON, 100);
}
}
	if( ae ){
	if( get_val(POWER_BUTTON_1)){ 
	combo_run(LEFT_KICKOFF_SPEEDFLIP);
	set_val(POWER_BUTTON_1, 0);
	set_val(JUMP_BUTTON, 0);
	set_val(PS4_LX, 0);
	set_val(PS4_LY, 0);
	set_val(DRIVE_FORWARDS_BUTTON, 100);
	set_val(BOOST_BUTTON, 100);
}
}
	if( be ){
	if( get_val(POWER_BUTTON_2)){ 
	combo_run(LEFT_KICKOFF_SPEEDFLIP);
	set_val(POWER_BUTTON_2, 0);
	set_val(JUMP_BUTTON, 0);
	set_val(PS4_LX, 0);
	set_val(PS4_LY, 0);
	set_val(DRIVE_FORWARDS_BUTTON, 100);
	set_val(BOOST_BUTTON, 100);
}
}
	if( ce ){
	if( get_val(POWER_BUTTON_3)){ 
	combo_run(LEFT_KICKOFF_SPEEDFLIP);
	set_val(POWER_BUTTON_3, 0);
	set_val(JUMP_BUTTON, 0);
	set_val(PS4_LX, 0);
	set_val(PS4_LY, 0);
	set_val(DRIVE_FORWARDS_BUTTON, 100);
	set_val(BOOST_BUTTON, 100);
}
}
	if( de ){
	if( get_val(POWER_BUTTON_4)){ 
	combo_run(LEFT_KICKOFF_SPEEDFLIP);
	set_val(POWER_BUTTON_4, 0);
	set_val(JUMP_BUTTON, 0);
	set_val(PS4_LY, 0);
	set_val(PS4_LX, 0);
	set_val(DRIVE_FORWARDS_BUTTON, 100);
	set_val(BOOST_BUTTON, 100);
}
}
	if( af ){
	if( get_val(POWER_BUTTON_1)){ 
	combo_run(BREEZI_FLICK);
	set_val(PS4_LY, 0);
	set_val(PS4_LX, 0);
	set_val(POWER_BUTTON_1, 0);
}
}
	if( bf ){
	if( get_val(POWER_BUTTON_2)){ 
	combo_run(BREEZI_FLICK);
	set_val(PS4_LX, 0);
	set_val(PS4_LY, 0);
	set_val(POWER_BUTTON_2, 0);
}
}
	if( cf ){
	if( get_val(POWER_BUTTON_3)){ 
	combo_run(BREEZI_FLICK);
	set_val(PS4_LX, 0);
	set_val(PS4_LY, 0);
	set_val(POWER_BUTTON_3, 0);
}
}
	if( df ){
	if( get_val(POWER_BUTTON_4)){ 
	combo_run(BREEZI_FLICK);
	set_val(PS4_LX, 0);
	set_val(PS4_LY, 0);
	set_val(POWER_BUTTON_4, 0);
}
}
	if( ag ){
	if( get_val(POWER_BUTTON_1)&& !combo_running(WAVE_DASH)){ 
	combo_run(WAVE_DASH);
	set_val(POWER_BUTTON_1, 0);
	set_val(PS4_LY, 0);
	set_val(BOOST_BUTTON, 100);
}
if	(get_val(POWER_BUTTON_1) && combo_running(WAVE_DASH)){
	set_val(POWER_BUTTON_1, 0);
	set_val(PS4_LX, 0);
	set_val(PS4_LY, 0);
	set_val(AIRROLL_BUTTON, 0);
}
}	
	if( bg ){
	if( get_val(POWER_BUTTON_2) && !combo_running(WAVE_DASH)){ 
	combo_run(WAVE_DASH);
	set_val(POWER_BUTTON_2, 0);
	set_val(PS4_LY, 0);
	set_val(BOOST_BUTTON, 100);
}
if	(get_val(POWER_BUTTON_2) && combo_running(WAVE_DASH)){
	set_val(POWER_BUTTON_2, 0);
	set_val(PS4_LX, 0);
	set_val(PS4_LY, 0);
	set_val(AIRROLL_BUTTON, 0);
}
}
	if( cg ){
	if( get_val(POWER_BUTTON_3)&& !combo_running(WAVE_DASH)){ 
	combo_run(WAVE_DASH);
	set_val(POWER_BUTTON_3, 0);
	set_val(PS4_LY, 0);
	set_val(BOOST_BUTTON, 100);
	set_val(JUMP_BUTTON, 0);
}
if	(get_val(POWER_BUTTON_3) && combo_running(WAVE_DASH)){
	set_val(POWER_BUTTON_3, 0);
	set_val(PS4_LX, 0);
	set_val(PS4_LY, 0);
	set_val(AIRROLL_BUTTON, 0);
}
}
	if( dg ){
	if( get_val(POWER_BUTTON_4)&& !combo_running(WAVE_DASH)){ 
	combo_run(WAVE_DASH);
	set_val(POWER_BUTTON_4, 0);
	set_val(PS4_LY, 0);
	set_val(BOOST_BUTTON, 100);
	set_val(JUMP_BUTTON, 0);
}
if	(get_val(POWER_BUTTON_4) && combo_running(WAVE_DASH)){
	set_val(POWER_BUTTON_4, 0);
	set_val(PS4_LX, 0);
	set_val(PS4_LY, 0);
	set_val(AIRROLL_BUTTON, 0);
}
}
	if( ah ){
	if( get_val(POWER_BUTTON_1)){ 
	combo_run(INFINITE_WAVE_DASH); 
}
}
	if( bh ){
	if( get_val(POWER_BUTTON_2)){ 
	combo_run(INFINITE_WAVE_DASH); 
}
}	
	if( ch ){
	if( get_val(POWER_BUTTON_3)){ 
	combo_run(INFINITE_WAVE_DASH); 
}
}
	if( dh ){
	if( get_val(POWER_BUTTON_4)){ 
	combo_run(INFINITE_WAVE_DASH); 
}
}
	if( ai ){
	if( get_val(POWER_BUTTON_1)){ 
	combo_run(LEFT_TORNADOSPIN); 
}
}
	if( bi ){
	if( get_val(POWER_BUTTON_2)){ 
	combo_run(LEFT_TORNADOSPIN)
}
}
	if( ci ){
	if( get_val(POWER_BUTTON_3)){ 
	combo_run(LEFT_TORNADOSPIN);
	set_val(POWER_BUTTON_3, 0 );
}
}
	if( di ){
	if( get_val(POWER_BUTTON_4)){ 
	combo_run(LEFT_TORNADOSPIN);
	set_val(POWER_BUTTON_3, 0 );
}
}
	if( aj ){
	if( get_val(POWER_BUTTON_1)){ 
	combo_run(RIGHT_TORNADOSPIN); 
}
}
	if( bj ){
	if( get_val(POWER_BUTTON_2)){ 
	combo_run(RIGHT_TORNADOSPIN); 
}
}	
	if( cj ){
	if( get_val(POWER_BUTTON_3)){ 
	combo_run(RIGHT_TORNADOSPIN);
}
}
	if( dj ){
	if( get_val(POWER_BUTTON_4)){ 
	combo_run(RIGHT_TORNADOSPIN);
}
}
	if( ak ){
	if( event_press(POWER_BUTTON_1)){
	set_val(POWER_BUTTON_1, 0);
	set_val(PS4_LX, 0);
	set_val(PS4_LY, 0);
	combo_run(STALL); 
}
if	(get_val(POWER_BUTTON_1) && combo_running(STALL)){
	set_val(POWER_BUTTON_1, 0);
	set_val(PS4_LX, 0);
	set_val(PS4_LY, 0);
	set_val(AIRROLL_BUTTON, 0);
}
}
	if( bk ){
	if( get_val(POWER_BUTTON_2)){ 
	set_val(POWER_BUTTON_2, 0);
	set_val(PS4_LX, 0);
	set_val(PS4_LY, 0);
	combo_run(STALL); 
}
if	(get_val(POWER_BUTTON_2) && combo_running(STALL)){
	set_val(POWER_BUTTON_2, 0);
	set_val(PS4_LX, 0);
	set_val(PS4_LY, 0);
	set_val(AIRROLL_BUTTON, 0);
}
}
	if( ck ){
	if( get_val(POWER_BUTTON_3)){
	set_val(POWER_BUTTON_3, 0);
	set_val(PS4_LX, 0);
	set_val(PS4_LY, 0);
	combo_run(STALL); 

}
if	(get_val(POWER_BUTTON_3) && combo_running(STALL)){
	set_val(POWER_BUTTON_3, 0);
	set_val(PS4_LX, 0);
	set_val(PS4_LY, 0);
	set_val(AIRROLL_BUTTON, 0);	 
}
}
	if( dk ){
	if( get_val(POWER_BUTTON_4)){
	set_val(POWER_BUTTON_4, 0);
	set_val(PS4_LX, 0);
	set_val(PS4_LY, 0);
	combo_run(STALL); 

}
if	(get_val(POWER_BUTTON_4) && combo_running(STALL)){
	set_val(POWER_BUTTON_4, 0);
	set_val(PS4_LX, 0);
	set_val(PS4_LY, 0);
	set_val(AIRROLL_BUTTON, 0);	 
}
}
	if( al ){
	if( get_val(POWER_BUTTON_1)) 
	combo_run(RIGHT_SPEEDFLIP);	 
}	
	if( bl ){
	if( get_val(POWER_BUTTON_2)) 
	combo_run(RIGHT_SPEEDFLIP);	
}	
	if( cl ){
	if( get_val(POWER_BUTTON_3)) 
	combo_run(RIGHT_SPEEDFLIP);	 
}
	if( dl ){
	if( get_val(POWER_BUTTON_4)) 
	combo_run(RIGHT_SPEEDFLIP);	 
}
	if( am ){
	if( get_val(POWER_BUTTON_1)) 
	combo_run(LEFT_SPEEDFLIP);	 
}
	if( bm ){
	if( get_val(POWER_BUTTON_2)) 
	combo_run(LEFT_SPEEDFLIP);	
}
	if( cm ){
	if( get_val(POWER_BUTTON_3)) 
	combo_run(LEFT_SPEEDFLIP);	 
}
	if( dm ){
	if( get_val(POWER_BUTTON_3)) 
	combo_run(LEFT_SPEEDFLIP);	 
}
	if(F_SPEEDFLIP){
	FRONT_SPEEDFLIPS_MOD = TRUE;
}
	if(B_SPEEDFLIP){
	BACK_SPEEDFLIPS_MOD = TRUE;
}
	if(AUTO_BALLCAMM){
	AUTO_BALLCAM_MOD = TRUE;
}
	if(SPEED_D){
	SPEED_DRIFT_MOD = TRUE;
}
	if(STOP_C){
	STOP_CAR_MOD = TRUE;
}
	if(FAST_FLIP){
	FAST_FLIPP_MOD = TRUE;
}
	if(CAMERA_S){
	CAMERA_SHAKE_BLOCK_MOD = TRUE;
}
	if(DRIFT_AFTER_J_D){
	DRIFT_AFTER_JUMP_DODGE_MOD = TRUE;
}
	if(BOOST_S){
	BOOST_SAVER_MOD = TRUE;
}
}
	if( menu ){
	block_all_inputs(); /* blocks inputs from cronus to console but not from controller to cronus */
	if(event_press(PS4_RIGHT)){
	menu++; 
	if( menu > p_cycle_limit ) {
	menu = 1;
}	build = 1; /* main menu option nav */
} 
	if( event_press(PS4_LEFT)){
	menu--; 
	if( menu < 1 ){
	menu = p_cycle_limit; 
} 	build = 1; /**/
}
	if( menu == p_1 ){ /* page 1 options nav */
	if( event_press( 14 )){
	p_1_opt++; 
	if( p_1_opt > p_1_opt_cycle_limit ){
	p_1_opt = 0; 
}	build = 1; 
}
	if( event_press( 13 )){
	p_1_opt--; 
	if( p_1_opt < 0 ){
	p_1_opt = p_1_opt_cycle_limit; 
}	build = 1; 
}
}
	if( menu == p_2 ){ /* page 2 options nav */
	if( event_press( 14 ) ) {
	p_2_opt++; 
	if( p_2_opt > p_2_opt_cycle_limit ) {
	p_2_opt = 0; 
} 	build = 1; 
}
	if( event_press( 13 )){
	p_2_opt--; if( p_2_opt < 0 ){
	p_2_opt = p_2_opt_cycle_limit; 
} 	build = 1; 
}
}
	if( menu == p_3 ){ /* page 3 options nav */
	if( event_press( 14 ) ) {
	p_3_opt++; 
	if( p_3_opt > p_3_opt_cycle_limit ) {
	p_3_opt = 0; 
} 	build = 1; 
}
	if( event_press( 13 )){
	p_3_opt--; if( p_3_opt < 0 ){
	p_3_opt = p_3_opt_cycle_limit; 
} 	build = 1; 
}
}
	if( menu == p_4 ){ /* page 4 options nav */
	if( event_press( 14 ) ) {
	p_4_opt++; 
	if( p_4_opt > p_4_opt_cycle_limit ) {
	p_4_opt = 0; 
} 	build = 1; 
}
	if( event_press( 13 )){
	p_4_opt--; if( p_4_opt < 0 ){
	p_4_opt = p_4_opt_cycle_limit; 
} 	build = 1; 
}
}
	if( menu == p_5 ){
	if( event_press( 13 ) ) {
	p_5_opt++; 
	if( p_5_opt > p_5_opt_cycle_limit ) {
	p_5_opt = 0; } build = 1; 
}
	if( event_press( 14 )){
	p_5_opt--; if( p_5_opt < 0 ){
	p_5_opt = p_5_opt_cycle_limit; 
} 	build = 1; 
}
}
	if( menu == p_6 ){ /* page 5 options nav */
	if( event_press( 13 ) ) {
	p_6_opt++; 
	if( p_6_opt > p_6_opt_cycle_limit ) {
	p_6_opt = 0; } build = 1; 
}
	if( event_press( 14 )){
	p_6_opt--; if( p_6_opt < 0 ){
	p_6_opt = p_6_opt_cycle_limit; 
} 	build = 1; 
}
}
	if( menu == p_7 ){ /* page 6 options nav */
	if( event_press( 13 ) ) {
	p_7_opt++; 
	if( p_7_opt > p_7_opt_cycle_limit ) {
	p_7_opt = 0; } build = 1; 
}
	if( event_press( 14 )){
	p_7_opt--; if( p_7_opt < 0 ){
	p_7_opt = p_7_opt_cycle_limit; 
} 	build = 1; 
}
}
	if( menu == p_8 ){ /* page 7 options nav */
	if( event_press( 13 ) ) {
	p_8_opt++; 
	if( p_8_opt > p_8_opt_cycle_limit ) {
	p_8_opt = 0; } build = 1; 
}
	if( event_press( 14 )){
	p_8_opt--; if( p_8_opt < 0 ){
	p_8_opt = p_8_opt_cycle_limit; 
} 	build = 1; 
}
}
	if( menu == p_9 ){ /* page 8 options nav */
	if( event_press( 13 ) ) {
	p_9_opt++; 
	if( p_9_opt > p_9_opt_cycle_limit ) {
	p_9_opt = 0; } build = 1; 
}
	if( event_press( 14 )){
	p_9_opt--; if( p_9_opt < 0 ){
	p_9_opt = p_9_opt_cycle_limit; 
} 	build = 1; 
}
}
	if( menu == p_10 ){ /* page 9 options nav */
	if( event_press( 13 ) ) {
	p_10_opt++; 
	if( p_10_opt > p_10_opt_cycle_limit ) {
	p_10_opt = 0; } build = 1; 
}
	if( event_press( 14 )){
	p_10_opt--; if( p_10_opt < 0 ){
	p_10_opt = p_10_opt_cycle_limit; 
} 	build = 1; 
}
}
	if( menu == p_11 ){ /* page 10 options nav */
	if( event_press( 13 ) ) {
	p_11_opt++; 
	if( p_11_opt > p_11_opt_cycle_limit ) {
	p_11_opt = 0; } build = 1; 
}
	if( event_press( 14 )){
	p_11_opt--; if( p_11_opt < 0 ){
	p_11_opt = p_11_opt_cycle_limit; 
} 	build = 1; 
}
}
	if( menu == p_12 ){ /* page 11 options nav */
	if( event_press( 13 ) ) {
	p_12_opt++; 
	if( p_12_opt > p_12_opt_cycle_limit ) {
	p_12_opt = 0; } build = 1; 
}
	if( event_press( 14 )){
	p_12_opt--; if( p_12_opt < 0 ){
	p_12_opt = p_12_opt_cycle_limit; 
} 	build = 1; 
}
}
	if( menu == p_13 ){ /* page 12 options nav */
	if( event_press( 13 ) ) {
	p_13_opt++; 
	if( p_13_opt > p_13_opt_cycle_limit ) {
	p_13_opt = 0; } build = 1; 
}
	if( event_press( 14 )){
	p_13_opt--; if( p_13_opt < 0 ){
	p_13_opt = p_13_opt_cycle_limit; 
} 	build = 1; 
}
}
} /* screen saver timer / control display */
	if( screen ){
	clear += get_rtime(); 
	if( clear >= 8000 ) {
	cls_oled( 0 );  
	screen = 0; 
} 
}

//////////////////////////
//	/* SAVE SYSTEM*/    //
//////////////////////////
	if(menu){
	if ( menu == p_1 ){
	if (p_1_opt == 0){
	if (event_press(PS4_CROSS)){
	POWER_B_1 = 0;
	set_pvar(SPVAR_1, POWER_B_1);
	combo_run(RUMBLE_ON);
	set_ledx(LED_2, 3)
}
}
	if (p_1_opt == 1){
	if (event_press(PS4_CROSS)){
	POWER_B_1 = 1;
	set_pvar(SPVAR_1, POWER_B_1);
	combo_run(RUMBLE_ON);
	set_ledx(LED_3, 3)
}
}
	if (p_1_opt == 2){
	if (event_press(PS4_CROSS)){
	POWER_B_1 = 2;
	set_pvar(SPVAR_1, POWER_B_1);
	combo_run(RUMBLE_ON);
	set_ledx(LED_3, 3)
}
}
	if (p_1_opt == 3){
	if (event_press(PS4_CROSS)){
	POWER_B_1 = 3;
	set_pvar(SPVAR_1, POWER_B_1);
	combo_run(RUMBLE_ON);
	set_ledx(LED_3, 3)
}
}
	if (p_1_opt == 4){
	if (event_press(PS4_CROSS)){
	POWER_B_1 = 4;
	set_pvar(SPVAR_1, POWER_B_1);
	combo_run(RUMBLE_ON);
	set_ledx(LED_3, 3)
}
}
	if (p_1_opt == 5){
	if (event_press(PS4_CROSS)){
	POWER_B_1 = 5;
	set_pvar(SPVAR_1, POWER_B_1);
	combo_run(RUMBLE_ON);
	set_ledx(LED_3, 3)
}
}
	if (p_1_opt == 6){
	if (event_press(PS4_CROSS)){
	POWER_B_1 = 6;
	set_pvar(SPVAR_1, POWER_B_1);
	combo_run(RUMBLE_ON);
	set_ledx(LED_3, 3)
}
}
	if (p_1_opt == 7){
	if (event_press(PS4_CROSS)){
	POWER_B_1 = 7;
	set_pvar(SPVAR_1, POWER_B_1);
	combo_run(RUMBLE_ON);
	set_ledx(LED_3, 3)
}
}
	if (p_1_opt == 8){
	if (event_press(PS4_CROSS)){
	POWER_B_1 = 8;
	set_pvar(SPVAR_1, POWER_B_1);
	combo_run(RUMBLE_ON);
	set_ledx(LED_3, 3)

}
}
	if (p_1_opt == 9){
	if (event_press(PS4_CROSS)){
	POWER_B_1 = 9;
	set_pvar(SPVAR_1, POWER_B_1);
	combo_run(RUMBLE_ON);
	set_ledx(LED_3, 3)
}
}
	if (p_1_opt == 10){
	if (event_press(PS4_CROSS)){
	POWER_B_1 = 10;
	set_pvar(SPVAR_1, POWER_B_1);
	combo_run(RUMBLE_ON);
	set_ledx(LED_3, 3)
}
}
	if (p_1_opt == 11){
	if (event_press(PS4_CROSS)){
	POWER_B_1 = 11;
	set_pvar(SPVAR_1, POWER_B_1);
	combo_run(RUMBLE_ON);
	set_ledx(LED_3, 3)
}
}
	if (p_1_opt == 12){
	if (event_press(PS4_CROSS)){
	POWER_B_1 = 12;
	set_pvar(SPVAR_1, POWER_B_1);
	combo_run(RUMBLE_ON);
	set_ledx(LED_3, 3)
}
}
	if (p_1_opt == 13){
	if (event_press(PS4_CROSS)){
	POWER_B_1 = 13;
	set_pvar(SPVAR_1, POWER_B_1);
	combo_run(RUMBLE_ON);
	set_ledx(LED_3, 3)

}
}
}
///////////////////////////////////////////////////////////
	if (menu == p_2){
	if (p_2_opt == 0){
	if (event_press(PS4_CROSS)){
	POWER_B_2 = 0;
	set_pvar(SPVAR_2, POWER_B_2);
	combo_run(RUMBLE_ON);
	set_ledx(LED_2, 3)
}
}
	if (p_2_opt == 1){
	if (event_press(PS4_CROSS)){
	POWER_B_2 = 1;
	set_pvar(SPVAR_2, POWER_B_2);
	combo_run(RUMBLE_ON);
	set_ledx(LED_3, 3)
}
}
	if (p_2_opt == 2){
	if (event_press(PS4_CROSS)){
	POWER_B_2 = 2;
	set_pvar(SPVAR_2, POWER_B_2);
	combo_run(RUMBLE_ON);
	set_ledx(LED_3, 3)
}
}
	if (p_2_opt == 3){
	if (event_press(PS4_CROSS)){
	POWER_B_2 = 3;
	set_pvar(SPVAR_2, POWER_B_2);
	combo_run(RUMBLE_ON);
	set_ledx(LED_3, 3)
}
}
	if (p_2_opt == 4){
	if (event_press(PS4_CROSS)){
	POWER_B_2 = 4;
	set_pvar(SPVAR_2, POWER_B_2);
	combo_run(RUMBLE_ON);
	set_ledx(LED_3, 3)
}
}
	if (p_2_opt == 5){
	if (event_press(PS4_CROSS)){
	POWER_B_2 = 5;
	set_pvar(SPVAR_2, POWER_B_2);
	combo_run(RUMBLE_ON);
	set_ledx(LED_3, 3)
}
}
	if (p_2_opt == 6){
	if (event_press(PS4_CROSS)){
	POWER_B_2 = 6;
	set_pvar(SPVAR_2, POWER_B_2);
	combo_run(RUMBLE_ON);
	set_ledx(LED_3, 3)
}
}
	if (p_2_opt == 7){
	if (event_press(PS4_CROSS)){
	POWER_B_2 = 7;
	set_pvar(SPVAR_2, POWER_B_2);
	combo_run(RUMBLE_ON);
	set_ledx(LED_3, 3)
}
}
	if (p_2_opt == 8){
	if (event_press(PS4_CROSS)){
	POWER_B_2 = 8;
	set_pvar(SPVAR_2, POWER_B_2);
	combo_run(RUMBLE_ON);
	set_ledx(LED_3, 3)
}
}
	if (p_2_opt == 9){
	if (event_press(PS4_CROSS)){
	POWER_B_2 = 9;
	set_pvar(SPVAR_2, POWER_B_2);
	combo_run(RUMBLE_ON);
	set_ledx(LED_3, 3)
}
}
	if (p_2_opt == 10){
	if (event_press(PS4_CROSS)){
	POWER_B_2 = 10;
	set_pvar(SPVAR_2, POWER_B_2);
	combo_run(RUMBLE_ON);
	set_ledx(LED_3, 3)
}
}
	if (p_2_opt == 11){
	if (event_press(PS4_CROSS)){
	POWER_B_2 = 11;
	set_pvar(SPVAR_2, POWER_B_2);
	combo_run(RUMBLE_ON);
	set_ledx(LED_3, 3)
}
}
	if (p_2_opt == 12){
	if (event_press(PS4_CROSS)){
	POWER_B_2 = 12;
	set_pvar(SPVAR_2, POWER_B_2);
	combo_run(RUMBLE_ON);
	set_ledx(LED_3, 3)
}
}
	if (p_2_opt == 13){
	if (event_press(PS4_CROSS)){
	POWER_B_2 = 13;
	set_pvar(SPVAR_2, POWER_B_2);
	combo_run(RUMBLE_ON);
	set_ledx(LED_3, 3)
}
}
}
///////////////////////////////////////////////////////////
	if ( menu == p_3 ){
	if (p_4_opt == 0){
	if (event_press(PS4_CROSS)){
	POWER_B_3 = 0;
	set_pvar(SPVAR_3, POWER_B_3);
	combo_run(RUMBLE_ON);
	set_ledx(LED_2, 3)

}
}
	if (p_3_opt == 1){
	if (event_press(PS4_CROSS)){
	POWER_B_3 = 1;
	set_pvar(SPVAR_3, POWER_B_3);
	combo_run(RUMBLE_ON);
	set_ledx(LED_3, 3)
}
}
	if (p_3_opt == 2){
	if (event_press(PS4_CROSS)){
	POWER_B_3 = 2;
	set_pvar(SPVAR_3, POWER_B_3);
	combo_run(RUMBLE_ON);
	set_ledx(LED_3, 3)
}
}
	if (p_3_opt == 3){
	if (event_press(PS4_CROSS)){
	POWER_B_3 = 3;
	set_pvar(SPVAR_3, POWER_B_3);
	combo_run(RUMBLE_ON);
	set_ledx(LED_3, 3)
}
}
	if (p_3_opt == 4){
	if (event_press(PS4_CROSS)){
	POWER_B_3 = 4;
	set_pvar(SPVAR_3, POWER_B_3);
	combo_run(RUMBLE_ON);
	set_ledx(LED_3, 3)
}
}
	if (p_3_opt == 5){
	if (event_press(PS4_CROSS)){
	POWER_B_3 = 5;
	set_pvar(SPVAR_3, POWER_B_3);
	combo_run(RUMBLE_ON);
	set_ledx(LED_3, 3)
}
}
	if (p_3_opt == 6){
	if (event_press(PS4_CROSS)){
	POWER_B_3 = 6;
	set_pvar(SPVAR_3, POWER_B_3);
	combo_run(RUMBLE_ON);
	set_ledx(LED_3, 3)
}
}
	if (p_3_opt == 7){
	if (event_press(PS4_CROSS)){
	POWER_B_3 = 7;
	set_pvar(SPVAR_3, POWER_B_3);
	combo_run(RUMBLE_ON);
	set_ledx(LED_3, 3)
}
}
	if (p_3_opt == 8){
	if (event_press(PS4_CROSS)){
	POWER_B_3 = 8;
	set_pvar(SPVAR_3, POWER_B_3);
	combo_run(RUMBLE_ON);
	set_ledx(LED_3, 3)
}
}
	if (p_3_opt == 9){
	if (event_press(PS4_CROSS)){
	POWER_B_3 = 9;
	set_pvar(SPVAR_3, POWER_B_3);
	combo_run(RUMBLE_ON);
	set_ledx(LED_3, 3)
}
}
	if (p_3_opt == 10){
	if (event_press(PS4_CROSS)){
	POWER_B_3 = 10;
	set_pvar(SPVAR_3, POWER_B_3);
	combo_run(RUMBLE_ON);
	set_ledx(LED_3, 3)
}
}
	if (p_3_opt == 11){
	if (event_press(PS4_CROSS)){
	POWER_B_3 = 11;
	set_pvar(SPVAR_3, POWER_B_3);
	combo_run(RUMBLE_ON);
	set_ledx(LED_3, 3)
}
}
	if (p_3_opt == 12){
	if (event_press(PS4_CROSS)){
	POWER_B_3 = 12;
	set_pvar(SPVAR_3, POWER_B_3);
	combo_run(RUMBLE_ON);
	set_ledx(LED_3, 3)
}
}
	if (p_3_opt == 13){
	if (event_press(PS4_CROSS)){
	POWER_B_3 = 13;
	set_pvar(SPVAR_3, POWER_B_3);
	combo_run(RUMBLE_ON);
	set_ledx(LED_3, 3)
}
}
}
///////////////////////////////////////////////////////////
	if ( menu == p_4 ){
	if (p_4_opt == 0){
	if (event_press(PS4_CROSS)){
	POWER_B_4 = 0;
	set_pvar(SPVAR_4, POWER_B_4);
	combo_run(RUMBLE_ON);
	set_ledx(LED_2, 3)

}
}
	if (p_4_opt == 1){
	if (event_press(PS4_CROSS)){
	POWER_B_4 = 1;
	set_pvar(SPVAR_4, POWER_B_4);
	combo_run(RUMBLE_ON);
	set_ledx(LED_3, 3)
}
}
	if (p_4_opt == 2){
	if (event_press(PS4_CROSS)){
	POWER_B_4 = 2;
	set_pvar(SPVAR_4, POWER_B_4);
	combo_run(RUMBLE_ON);
	set_ledx(LED_3, 3)
}
}
	if (p_4_opt == 3){
	if (event_press(PS4_CROSS)){
	POWER_B_4 = 3;
	set_pvar(SPVAR_4, POWER_B_4);
	combo_run(RUMBLE_ON);
	set_ledx(LED_3, 3)
}
}
	if (p_4_opt == 4){
	if (event_press(PS4_CROSS)){
	POWER_B_4 = 4;
	set_pvar(SPVAR_4, POWER_B_4);
	combo_run(RUMBLE_ON);
	set_ledx(LED_3, 3)
}
}
	if (p_4_opt == 5){
	if (event_press(PS4_CROSS)){
	POWER_B_4 = 5;
	set_pvar(SPVAR_4, POWER_B_4);
	combo_run(RUMBLE_ON);
	set_ledx(LED_3, 3)
}
}
	if (p_4_opt == 6){
	if (event_press(PS4_CROSS)){
	POWER_B_4 = 6;
	set_pvar(SPVAR_4, POWER_B_4);
	combo_run(RUMBLE_ON);
	set_ledx(LED_3, 3)
}
}
	if (p_4_opt == 7){
	if (event_press(PS4_CROSS)){
	POWER_B_4 = 7;
	set_pvar(SPVAR_4, POWER_B_4);
	combo_run(RUMBLE_ON);
	set_ledx(LED_3, 3)
}
}
	if (p_4_opt == 8){
	if (event_press(PS4_CROSS)){
	POWER_B_4 = 8;
	set_pvar(SPVAR_4, POWER_B_4);
	combo_run(RUMBLE_ON);
	set_ledx(LED_3, 3)
}
}
	if (p_4_opt == 9){
	if (event_press(PS4_CROSS)){
	POWER_B_4 = 9;
	set_pvar(SPVAR_4, POWER_B_4);
	combo_run(RUMBLE_ON);
	set_ledx(LED_3, 3)
}
}
	if (p_4_opt == 10){
	if (event_press(PS4_CROSS)){
	POWER_B_4 = 10;
	set_pvar(SPVAR_4, POWER_B_4);
	combo_run(RUMBLE_ON);
	set_ledx(LED_3, 3)
}
}
	if (p_4_opt == 11){
	if (event_press(PS4_CROSS)){
	POWER_B_4 = 11;
	set_pvar(SPVAR_4, POWER_B_4);
	combo_run(RUMBLE_ON);
	set_ledx(LED_3, 3)
}
}
	if (p_4_opt == 12){
	if (event_press(PS4_CROSS)){
	POWER_B_4 = 12;
	set_pvar(SPVAR_4, POWER_B_4);
	combo_run(RUMBLE_ON);
	set_ledx(LED_3, 3)
}
}
	if (p_4_opt == 13){
	if (event_press(PS4_CROSS)){
	POWER_B_4 = 13;
	set_pvar(SPVAR_4, POWER_B_4);
	combo_run(RUMBLE_ON);
	set_ledx(LED_3, 3)
}
}
}

///////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////
	if ( menu == p_5 ){
	if (p_5_opt == 1){
	if (event_press(PS4_CROSS)){
	F_SPEEDFLIP_SAVER_SCREEN = 1;
	set_pvar(SPVAR_5, F_SPEEDFLIP);
	combo_run(RUMBLE_ON);
	F_SPEEDFLIP = 1;
	set_ledx(LED_3, 3)
}
}
	if (p_5_opt == 0){
	if (event_press(PS4_CROSS)){
	F_SPEEDFLIP_SAVER_SCREEN = 0;
	set_pvar(SPVAR_5, F_SPEEDFLIP);
	combo_run(RUMBLE_ON);
	set_ledx(LED_2, 3)
}
}
}
///////////////////////////////////////////////////////////////////////
	if ( menu == p_6 ){
	if (p_6_opt == 1){
	if (event_press(PS4_CROSS)){
	B_SPEEDFLIP_SAVER_SCREEN = 1;
	set_pvar(SPVAR_6, B_SPEEDFLIP);
	combo_run(RUMBLE_ON);
	B_SPEEDFLIP = 1;
	set_ledx(LED_3, 3)
}
}
	if (p_6_opt == 0){
	if (event_press(PS4_CROSS)){
	B_SPEEDFLIP_SAVER_SCREEN = 0;
	set_pvar(SPVAR_6, B_SPEEDFLIP);
	combo_run(RUMBLE_ON);
	set_ledx(LED_2, 3)
}
}
}
////////////////////////////////////////////////////////////////////////////
	if ( menu == p_7 ){
	if (p_7_opt == 1){
	if (event_press(PS4_CROSS)){
	AUTO_BALLCAMM_SAVER_SCREEN = 1;
	set_pvar(SPVAR_7, AUTO_BALLCAMM);
	combo_run(RUMBLE_ON);
	AUTO_BALLCAMM = 1;
	set_ledx(LED_3, 3)
}
}
	if (p_7_opt == 0){
	if (event_press(PS4_CROSS)){
	AUTO_BALLCAMM_SAVER_SCREEN = 0;
	set_pvar(SPVAR_7, AUTO_BALLCAMM);
	combo_run(RUMBLE_ON);
	set_ledx(LED_2, 3)
}
}
}
//////////////////////////////////////////////////////////////////////
	if ( menu == p_8 ){
	if (p_8_opt == 1){
	if (event_press(PS4_CROSS)){
	SPEED_D_SAVER_SCREEN = 1;
	set_pvar(SPVAR_8, SPEED_D);
	combo_run(RUMBLE_ON);
	SPEED_D = 1;
	set_ledx(LED_3, 3)
}
}
	if (p_8_opt == 0){
	if (event_press(PS4_CROSS)){
	SPEED_D_SAVER_SCREEN = 0;
	set_pvar(SPVAR_8, SPEED_D);
	combo_run(RUMBLE_ON);
	set_ledx(LED_2, 3)
}
}
}
//////////////////////////////////////////////////////////////////////
	if ( menu == p_9 ){
	if (p_9_opt == 1){
	if (event_press(PS4_CROSS)){
	STOP_C_SAVER_SCREEN = 1;
	set_pvar(SPVAR_9, STOP_C);
	combo_run(RUMBLE_ON);
	STOP_C = 1;
	set_ledx(LED_3, 3)
}
}
	if (p_9_opt == 0){
	if (event_press(PS4_CROSS)){
	STOP_C_SAVER_SCREEN = 0; 
	set_pvar(SPVAR_9, STOP_C);
	combo_run(RUMBLE_ON);
	set_ledx(LED_2, 3)
}
}
}
//////////////////////////////////////////////////////////////////
	if ( menu == p_10 ){
	if (p_10_opt == 1){
	if (event_press(PS4_CROSS)){
	FAST_FLIP_SAVER_SCREEN = 1;
	set_pvar(SPVAR_10, FAST_FLIP);
	combo_run(RUMBLE_ON);
	FAST_FLIP = 1;
	set_ledx(LED_3, 3)
}
}
	if (p_10_opt == 0){
	if (event_press(PS4_CROSS)){
	FAST_FLIP_SAVER_SCREEN = 0;
	set_pvar(SPVAR_10, FAST_FLIP);
	combo_run(RUMBLE_ON);
	set_ledx(LED_2, 3)
}
}
}

/////////////////////////////////////////////////////////
	if ( menu == p_11 ){
	if (p_11_opt == 1){
	if (event_press(PS4_CROSS)){
	CAMERA_S_SAVER_SCREEN = 1;
	set_pvar(SPVAR_11, CAMERA_S);
	combo_run(RUMBLE_ON);
	CAMERA_S = 1;
	set_ledx(LED_3, 3)
}
}
	if (p_11_opt == 0){
	if (event_press(PS4_CROSS)){
	CAMERA_S_SAVER_SCREEN = 0;
	set_pvar(SPVAR_11, CAMERA_S);
	combo_run(RUMBLE_ON);
	set_ledx(LED_2, 3)
}
}
}
//////////////////////////////////////////////////
	if ( menu == p_12 ){
	if (p_12_opt == 1){
	if (event_press(PS4_CROSS)){
	DRIFT_AFTER_J_D_SAVER_SCREEN = 1;
	set_pvar(SPVAR_12, DRIFT_AFTER_J_D);
	combo_run(RUMBLE_ON);
	DRIFT_AFTER_J_D = 1;
	set_ledx(LED_3, 3)
}
}
	if (p_12_opt == 0){
	if (event_press(PS4_CROSS)){
	DRIFT_AFTER_J_D_SAVER_SCREEN = 0;
	set_pvar(SPVAR_12, DRIFT_AFTER_J_D);
	combo_run(RUMBLE_ON);
	set_ledx(LED_2, 3)

}
}
}
/////////////////////////////////////////////////////////////////
	if ( menu == p_13 ){
	if (p_13_opt == 1){
	if (event_press(PS4_CROSS)){
	BOOST_S_SAVER_SCREEN = 1;
	set_pvar(SPVAR_13, BOOST_S);
	combo_run(RUMBLE_ON);
	BOOST_S = 1;
	set_ledx(LED_3, 3)
}
}
	if (p_13_opt == 0){
	if (event_press(PS4_CROSS)){
	BOOST_S_SAVER_SCREEN = 0;
	set_pvar(SPVAR_13, BOOST_S);
	combo_run(RUMBLE_ON);
	set_ledx(LED_2, 3)
}
}
}
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

	/* SAVE SCREEN SYSTEM*/
	

}
///////////////////////////////////
	if (POWER_B_1 == 1){
	p_1_opt = 1;
	aa = 1
	if ( menu == p_1 ){
	POWER_B_1 = 0;
	
}
}
	if (POWER_B_1 == 2){
	p_1_opt = 2;
	ab = 1
	if ( menu == p_1 ){
	POWER_B_1 = 0;
	
}

}
	if (POWER_B_1 == 3){
	p_1_opt = 3;
	ac = 1;
	if ( menu == p_1 ){
	POWER_B_1 = 0;
}
}
	if (POWER_B_1 == 4){
	p_1_opt = 4;
	ad = 1;
	if ( menu == p_1 ){
	POWER_B_1 = 0;
}
}
	if (POWER_B_1 == 5){
	p_1_opt = 5;
	ae = 1;
	if ( menu == p_1 ){
	POWER_B_1 = 0;
}
}
	if (POWER_B_1 == 6){
	p_1_opt = 6;
	af = 1;
	if ( menu == p_1 ){
	POWER_B_1 = 0;
}
}
	if (POWER_B_1 == 7){
	p_1_opt = 7;
	ag = 1;
	if ( menu == p_1 ){
	POWER_B_1 = 0;
}
}
	if (POWER_B_1 == 8){
	p_1_opt = 8;
	ah = 1;
	if ( menu == p_1 ){
	POWER_B_1 = 0;
}
}
	if (POWER_B_1 == 9){
	p_1_opt = 9;
	ai = 1;
	if ( menu == p_1 ){
	POWER_B_1 = 0;
}
}
	if (POWER_B_1 == 10){
	p_1_opt = 10;
	aj = 1;
	if ( menu == p_1 ){
	POWER_B_1 = 0;
}
}
	if (POWER_B_1 == 11){
	p_1_opt = 11;
	ak = 1;
	if ( menu == p_1 ){
	POWER_B_1 = 0;
}
}
	if (POWER_B_1 == 12){
	p_1_opt = 12;
	al = 1;
	if ( menu == p_1 ){
	POWER_B_1 = 0;
}
}
	if (POWER_B_1 == 13){
	p_1_opt = 13;
	am = 1;
	if ( menu == p_1 ){
	POWER_B_1 = 0;
}
}
//~~~~~~~~~~~~~~~~~~~~/////////////////////////	
	if (POWER_B_2 == 1){
	p_2_opt = 1;
	ba = 1
	if ( menu == p_2 ){
	POWER_B_2 = 0;
}
}
	if (POWER_B_2 == 2){
	p_2_opt = 2;
	bb = 1
	if ( menu == p_2 ){
	POWER_B_2 = 0;
}
}
	if (POWER_B_2 == 3){
	p_2_opt = 3;
	bc = 1;
	if ( menu == p_2 ){
	POWER_B_2 = 0;
}
}
	if (POWER_B_2 == 4){
	p_2_opt = 4;
	bd = 1;
	if ( menu == p_2 ){
	POWER_B_2 = 0;
}
}
	if (POWER_B_2 == 5){
	p_2_opt = 5;
	be = 1;
	if ( menu == p_2 ){
	POWER_B_2 = 0;
}
}
	if (POWER_B_2 == 6){
	p_2_opt = 6;
	bf = 1;
	if ( menu == p_2 ){
	POWER_B_2 = 0;
}
}
	if (POWER_B_2 == 7){
	p_2_opt = 7;
	bg = 1;
	if ( menu == p_2 ){
	POWER_B_2 = 0;
}
}
	if (POWER_B_2 == 8){
	p_2_opt = 8;
	bh = 1;
	if ( menu == p_2 ){
	POWER_B_2 = 0;
}
}
	if (POWER_B_2 == 9){
	p_2_opt = 9;
	bi = 1;
	if ( menu == p_2 ){
	POWER_B_2 = 0;
}
}
	if (POWER_B_2 == 10){
	p_2_opt = 10;
	bj = 1;
	if ( menu == p_2 ){
	POWER_B_2 = 0;
}
}
	if (POWER_B_2 == 11){
	p_2_opt = 11;
	bk = 1;
	if ( menu == p_2 ){
	POWER_B_2 = 0;
}
}
	if (POWER_B_2 == 12){
	p_2_opt = 12;
	bl = 1;
	if ( menu == p_2 ){
	POWER_B_2 = 0;
}
}
	if (POWER_B_2 == 13){
	p_2_opt = 13;
	bm = 1;
	if ( menu == p_2 ){
	POWER_B_2 = 0;
}
}
/////////////////////////////
	if (POWER_B_3 == 1){
	p_3_opt = 1;
	ca = 1
	if ( menu == p_3 ){
	POWER_B_3 = 0;
	
}
}
	if (POWER_B_3 == 2){
	p_3_opt = 2;
	cb = 1
	if ( menu == p_3 ){
	POWER_B_3 = 0;
	
}

}
	if (POWER_B_3 == 3){
	p_3_opt = 3;
	cc = 1;
	if ( menu == p_3 ){
	POWER_B_3 = 0;
}
}
	if (POWER_B_3 == 4){
	p_3_opt = 4;
	cd = 1;
	if ( menu == p_3 ){
	POWER_B_3 = 0;
}
}
	if (POWER_B_3 == 5){
	p_3_opt = 5;
	ce = 1;
	if ( menu == p_3 ){
	POWER_B_3 = 0;
}
}
	if (POWER_B_3 == 6){
	p_3_opt = 6;
	cf = 1;
	if ( menu == p_3 ){
	POWER_B_3 = 0;
}
}
	if (POWER_B_3 == 7){
	p_3_opt = 7;
	cg = 1;
	if ( menu == p_3 ){
	POWER_B_3 = 0;
}
}
	if (POWER_B_3 == 8){
	p_3_opt = 8;
	ch = 1;
	if ( menu == p_3 ){
	POWER_B_3 = 0;
}
}
	if (POWER_B_3 == 9){
	p_3_opt = 9;
	ci = 1;
	if ( menu == p_3 ){
	POWER_B_3 = 0;
}
}
	if (POWER_B_3 == 10){
	p_3_opt = 10;
	cj = 1;
	if ( menu == p_3 ){
	POWER_B_3 = 0;
}
}
	if (POWER_B_3 == 11){
	p_3_opt = 11;
	ck = 1;
	if ( menu == p_3 ){
	POWER_B_3 = 0;
}
}
	if (POWER_B_3 == 12){
	p_3_opt = 12;
	cl = 1;
	if ( menu == p_3 ){
	POWER_B_3 = 0;
}
}
	if (POWER_B_3 == 13){
	p_3_opt = 13;
	cm = 1;
	if ( menu == p_3 ){
	POWER_B_3 = 0;
}
}
/////////////////////////////////////
	if (POWER_B_4 == 1){
	p_4_opt = 1;
	da = 1
	if ( menu == p_4 ){
	POWER_B_4 = 0;
	
}
}
	if (POWER_B_4 == 2){
	p_4_opt = 2;
	db = 1
	if ( menu == p_4 ){
	POWER_B_4 = 0;
	
}

}
	if (POWER_B_4 == 3){
	p_4_opt = 3;
	dc = 1;
	if ( menu == p_4 ){
	POWER_B_4 = 0;
}
}
	if (POWER_B_4 == 4){
	p_4_opt = 4;
	dd = 1;
	if ( menu == p_4 ){
	POWER_B_4 = 0;
}
}
	if (POWER_B_4 == 5){
	p_4_opt = 5;
	de = 1;
	if ( menu == p_4 ){
	POWER_B_4 = 0;
}
}
	if (POWER_B_4 == 6){
	p_4_opt = 6;
	df = 1;
	if ( menu == p_4 ){
	POWER_B_4 = 0;
}
}
	if (POWER_B_4 == 7){
	p_4_opt = 7;
	dg = 1;
	if ( menu == p_4 ){
	POWER_B_4 = 0;
}
}
	if (POWER_B_4 == 8){
	p_4_opt = 8;
	dh = 1;
	if ( menu == p_4 ){
	POWER_B_4 = 0;
}
}
	if (POWER_B_4 == 9){
	p_4_opt = 9;
	di = 1;
	if ( menu == p_4 ){
	POWER_B_4 = 0;
}
}
	if (POWER_B_4 == 10){
	p_4_opt = 10;
	dj = 1;
	if ( menu == p_4 ){
	POWER_B_4 = 0;
}
}
	if (POWER_B_4 == 11){
	p_4_opt = 11;
	dk = 1;
	if ( menu == p_4 ){
	POWER_B_4 = 0;
}
}
	if (POWER_B_4 == 12){
	p_4_opt = 12;
	dl = 1;
	if ( menu == p_4 ){
	POWER_B_4 = 0;
}
}
	if (POWER_B_4 == 13){
	p_4_opt = 13;
	dm = 1;
	if ( menu == p_4 ){
	POWER_B_4 = 0;
}
}
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	if (menu){
	if (F_SPEEDFLIP_SAVER_SCREEN == 1){
	if ( menu == p_5 ){
	if (p_5_opt == 1){
	printf( posx( 3, fm ), 37, 1, 0, idx_opt4[ 0 ] );
	set_ledx(LED_3, 3)
}
}
}
	if (F_SPEEDFLIP_SAVER_SCREEN == 0){
	if ( menu == p_5 ){
	if (p_5_opt == 0){
	printf( posx( 3, fm ), 37, 1, 0, idx_opt4[ 0 ] ); 
	set_ledx(LED_2, 3)

}
}
} 
	if (F_SPEEDFLIP == 1){
	if ( menu == p_5 ){
	p_5_opt = 1;
}
	if (event_press(13)){
	p_5_opt--;
}
	if (event_press(14)){
	p_5_opt--;
}
}
	if (F_SPEEDFLIP == 0){
	if ( menu == p_5 ){
	p_5_opt = 0;
}
	if (event_press(13)){
	p_5_opt++;
}
	if (event_press(14)){
	p_5_opt++;
}
}


/////////////////////////////////////////////////////////////////////////

 
	if (B_SPEEDFLIP_SAVER_SCREEN == 1){
	if ( menu == p_6 ){
	if (p_6_opt == 1){
	printf( posx( 3, fm ), 37, 1, 0, idx_opt4[ 0 ] );
	set_ledx(LED_3, 3)
}
}
}
	if (B_SPEEDFLIP_SAVER_SCREEN == 0){
	if ( menu == p_6 ){
	if (p_6_opt == 0){
	printf( posx( 3, fm ), 37, 1, 0, idx_opt4[ 0 ] ); 
	set_ledx(LED_2, 3)
}
}
}
	if (B_SPEEDFLIP == 1){
	if ( menu == p_6 ){
	p_6_opt = 1;
}
	if (event_press(13)){
	p_6_opt--;
}
	if (event_press(14)){
	p_6_opt--;
}
}
	if (B_SPEEDFLIP == 0){
	if ( menu == p_6 ){
	p_6_opt = 0;
}
	if (event_press(13)){
	p_6_opt++;
}
	if (event_press(14)){
	p_6_opt++;
}
}

//////////////////////////////////////////////////////////////////////////// 
	if (AUTO_BALLCAMM_SAVER_SCREEN == 1){
	if ( menu == p_7 ){
	if (p_7_opt == 1){
	printf( posx( 3, fm ), 37, 1, 0, idx_opt4[ 0 ] );
	set_ledx(LED_3, 3)
}
}
}
	if (AUTO_BALLCAMM_SAVER_SCREEN == 0){
	if ( menu == p_7 ){
	if (p_7_opt == 0){
	printf( posx( 3, fm ), 37, 1, 0, idx_opt4[ 0 ] ); 
	set_ledx(LED_2, 3)
}
}
}
	if (AUTO_BALLCAMM == 1){
	if ( menu == p_7 ){
	p_7_opt = 1;
}
	if (event_press(13)){
	p_7_opt--;
}
	if (event_press(14)){
	p_7_opt--;
}
}
	if (AUTO_BALLCAMM == 0){
	if ( menu == p_7 ){
	p_7_opt = 0;
}
	if (event_press(13)){
	p_7_opt++;
}
	if (event_press(14)){
	p_7_opt++;
}
}


////////////////////////////////////////////////////////////////////// 
	if (SPEED_D_SAVER_SCREEN == 1){
	if ( menu == p_8 ){
	if (p_8_opt == 1){
	printf( posx( 3, fm ), 37, 1, 0, idx_opt4[ 0 ] );
	set_ledx(LED_3, 3)
}
}
}
	if (SPEED_D_SAVER_SCREEN == 0){
	if ( menu == p_8 ){
	if (p_8_opt == 0){
	printf( posx( 3, fm ), 37, 1, 0, idx_opt4[ 0 ] ); 
	set_ledx(LED_2, 3)
}
}
}
 
	if (SPEED_D == 1){
	if ( menu == p_8 ){
	p_8_opt = 1;
}
	if (event_press(13)){
	p_8_opt--;
}
	if (event_press(14)){
	p_8_opt--;
}
}
	if (SPEED_D == 0){
	if ( menu == p_8 ){
	p_8_opt = 0;
}
	if (event_press(13)){
	p_8_opt++;
}
	if (event_press(14)){
	p_8_opt++;
}
}
////////////////////////////////////////////////////////////////////// 
	if(STOP_C_SAVER_SCREEN == 1){
	if ( menu == p_9 ){
	if (p_9_opt == 1){
	printf( posx( 3, fm ), 37, 1, 0, idx_opt4[ 0 ] );
	set_ledx(LED_3, 3)
}
}
} 
	if (STOP_C_SAVER_SCREEN == 0){
	if ( menu == p_9 ){
	if (p_9_opt == 0){
	printf( posx( 3, fm ), 37, 1, 0, idx_opt4[ 0 ] ); 
	set_ledx(LED_2, 3)
}
}
}
	if (STOP_C == 1){
	if ( menu == p_9 ){
	p_9_opt = 1;
}
	if (event_press(13)){
	p_9_opt--;
}
	if (event_press(14)){
	p_9_opt--;
}
}
	if (STOP_C == 0){
	if ( menu == p_9 ){
	p_9_opt = 0;
}
	if (event_press(13)){
	p_9_opt++;
}
	if (event_press(14)){
	p_9_opt++;
}
}

//////////////////////////////////////////////////////////////////
	if (FAST_FLIP_SAVER_SCREEN == 1){
	if ( menu == p_10 ){
	if (p_10_opt == 1){
	printf( posx( 3, fm ), 37, 1, 0, idx_opt4[ 0 ] );
	set_ledx(LED_3, 3)
}
}
}  
	if (FAST_FLIP_SAVER_SCREEN == 0){
	if ( menu == p_10 ){
	if (p_10_opt == 0){
	printf( posx( 3, fm ), 37, 1, 0, idx_opt4[ 0 ] ); 
	set_ledx(LED_2, 3)
}
}
}

	if (FAST_FLIP == 1){
	if ( menu == p_10 ){
	p_10_opt = 1;
}
	if (event_press(13)){
	p_10_opt--;
}
	if (event_press(14)){
	p_10_opt--;
}
}
	if (FAST_FLIP == 0){
	if ( menu == p_10 ){
	p_10_opt = 0;
}
	if (event_press(13)){
	p_10_opt++;
}
	if (event_press(14)){
	p_10_opt++;
}
}
/////////////////////////////////////////////////////////
	if (CAMERA_S_SAVER_SCREEN == 1){
	if ( menu == p_11 ){
	if (p_11_opt == 1){
	printf( posx( 3, fm ), 37, 1, 0, idx_opt4[ 0 ] );
	set_ledx(LED_3, 3)
}
}
}  
	if (CAMERA_S_SAVER_SCREEN == 0){
	if ( menu == p_11 ){
	if (p_11_opt == 0){
	printf( posx( 3, fm ), 37, 1, 0, idx_opt4[ 0 ] ); 
	set_ledx(LED_2, 3)
}
}
} 
	if (CAMERA_S == 1){
	if ( menu == p_11 ){
	p_11_opt = 1;
}
	if (event_press(13)){
	p_11_opt--;
}
	if (event_press(14)){
	p_11_opt--;
}
}
	if (CAMERA_S == 0){
	if ( menu == p_11 ){
	p_11_opt = 0;
}
	if (event_press(13)){
	p_11_opt++;
}
	if (event_press(14)){
	p_11_opt++;
}
}
//////////////////////////////////////////////////
	if (DRIFT_AFTER_J_D_SAVER_SCREEN == 1){
	if ( menu == p_12 ){
	if (p_12_opt == 1){
	printf( posx( 3, fm ), 37, 1, 0, idx_opt4[ 0 ] );
	set_ledx(LED_3, 3)
}
}
}
	if (DRIFT_AFTER_J_D_SAVER_SCREEN == 0){
	if ( menu == p_12 ){
	if (p_12_opt == 0){
	printf( posx( 3, fm ), 37, 1, 0, idx_opt4[ 0 ] ); 
	set_ledx(LED_2, 3)

}
}
}
	if (DRIFT_AFTER_J_D == 1){
	if ( menu == p_12 ){
	p_12_opt = 1;
}
	if (event_press(13)){
	p_12_opt--;
}
	if (event_press(14)){
	p_12_opt--;
}
}
	if (DRIFT_AFTER_J_D == 0){
	if ( menu == p_12 ){
	p_12_opt = 0;
}
	if (event_press(13)){
	p_12_opt++;
}
	if (event_press(14)){
	p_12_opt++;
}
}
/////////////////////////////////////////////////////////////////
	if (BOOST_S_SAVER_SCREEN == 1){
	if ( menu == p_13 ){
	if (p_13_opt == 1){
	printf( posx( 3, fm ), 37, 1, 0, idx_opt4[ 0 ] );
	set_ledx(LED_3, 3)
}
}
}
	if (BOOST_S_SAVER_SCREEN == 0){
	if ( menu == p_13 ){
	if (p_13_opt == 0){
	printf( posx( 3, fm ), 37, 1, 0, idx_opt4[ 0 ] ); 
	set_ledx(LED_2, 3)
}
}
}
	if (BOOST_S == 1){
	if ( menu == p_13 ){
	p_13_opt = 1;
}
	if (event_press(13)){
	p_13_opt--;
}
	if (event_press(14)){
	p_13_opt--;
}
}
	if (BOOST_S == 0){
	if ( menu == p_13 ){
	p_13_opt = 0;
}
	if (event_press(13)){
	p_13_opt++;
}
	if (event_press(14)){
	p_13_opt++;
}
}
}
//////////////////////////////////////////////////


//////////////////////////////
//                          //
//    TURN_SCRIPT_ON_OFF	//
//                          //
//////////////////////////////
	if ((TURN_SCRIPT_ON_OFF) && get_val(TURN_OFF_BUTTON)){
	TURN_SCRIPT_ON_OFF = FALSE;
	set_led(LED_2, 3)
	combo_run(RUMBLE_OFF);
	set_val(TURN_OFF_BUTTON, 0);

 } 
 	if ((!TURN_SCRIPT_ON_OFF) && event_release(TURN_ON_BUTTON) && !combo_running(TURN_ON_TIMER)){
 	combo_run(TURN_ON_TIMER);
	TURN_SCRIPT_ON_OFF = FALSE;
 	set_val(TURN_ON_BUTTON, 0);
 	
 }
    if ((!TURN_SCRIPT_ON_OFF) && combo_running(TURN_ON_TIMER) && event_press(TURN_ON_BUTTON)){
    TURN_SCRIPT_ON_OFF = TRUE;
	set_ledx(LED_3, 3)
	combo_run(RUMBLE_ON);
	set_val(TURN_ON_BUTTON, 0);
	set_val(TURN_OFF_BUTTON, 0);
 }
   if(!get_ledx() && TURN_SCRIPT_ON_OFF) {
   reset_leds();
   	set_rumble(RUMBLE_A, 0);
	set_rumble(RUMBLE_B, 0);
 }
  
//////////////////////////////
//                          //
//   CAMERASHAKE BLOCKERS   //
//                          //
//////////////////////////////
	if (TURN_SCRIPT_ON_OFF){
	if((CAMERA_SHAKE_BLOCK_MOD) && get_val(PS4_RX) <=10 && get_val(PS4_RY) <=10 && get_val(PS4_RX) >=-10 && get_val(PS4_RY) >=-10){
    set_val(PS4_RY, 0);
    set_val(PS4_RX, 0);
}

//////////////////////////
//                      //
//   BACK-SPEEDFLIPS    //
//                      //
//////////////////////////
    
    if  ((BACK_SPEEDFLIPS_MOD) && combo_running(TIMER_FOR_DODGE) && get_val(DRIVE_BACKWARDS_BUTTON) && get_val(PS4_LY) >= 21 && get_val(PS4_LX) >=-80 && get_val(PS4_LX) >=0 && !combo_running(INV_YX) && !combo_running(LEFT_SPEEDFLIP) && !combo_running(RIGHT_SPEEDFLIP) && combo_running(TIMER_AFTER_DODGE) && !combo_running(LEFT_BACK_SPEEDFLIP) && !combo_running(FAST_FLIPP)) {
    if	(get_val(JUMP_BUTTON)) {
        combo_run(LEFT_BACK_SPEEDFLIP);
        combo_stop(TIMER_FOR_DODGE);
        combo_stop(TIMER_AFTER_DODGE);
        combo_stop(RIGHT_SPEEDFLIP);
        combo_stop(LEFT_SPEEDFLIP);
        combo_stop(INV_YX);
        combo_stop(BOOST_SAFER);
        set_val(JUMP_BUTTON, 0);
        
    }
    }
    if  ((BACK_SPEEDFLIPS_MOD) && combo_running(TIMER_FOR_DODGE) && get_val(DRIVE_BACKWARDS_BUTTON)  && get_val(PS4_LY) >= 21 && get_val(PS4_LX) <=80 && get_val(PS4_LX) <=0 && !combo_running(INV_YX) && !combo_running(LEFT_SPEEDFLIP) && !combo_running(RIGHT_SPEEDFLIP) && combo_running(TIMER_AFTER_DODGE) && !combo_running(RIGHT_BACK_SPEEDFLIP) && !combo_running(FAST_FLIPP)) {
    if 	(get_val(JUMP_BUTTON)){
    	combo_run(RIGHT_BACK_SPEEDFLIP);
    	combo_stop(TIMER_FOR_DODGE);
        combo_stop(TIMER_AFTER_DODGE);
        combo_stop(RIGHT_SPEEDFLIP);
        combo_stop(LEFT_SPEEDFLIP);
        combo_stop(INV_YX);
        combo_stop(BOOST_SAFER);
        set_val(JUMP_BUTTON, 0);
    }
    }
    if  ((BACK_SPEEDFLIPS_MOD) && combo_running(TIMER_FOR_DODGE) && get_val(DRIVE_BACKWARDS_BUTTON) && get_val(PS4_LY) >= 95 && !combo_running(INV_YX) && !combo_running(LEFT_SPEEDFLIP) && !combo_running(RIGHT_SPEEDFLIP) && combo_running(TIMER_AFTER_DODGE) && !combo_running(LEFT_BACK_SPEEDFLIP) && !combo_running(RIGHT_BACK_SPEEDFLIP) && !combo_running(FAST_FLIPP)) {
    if  (get_val(JUMP_BUTTON)){
        combo_run(LEFT_BACK_SPEEDFLIP);
        combo_stop(TIMER_FOR_DODGE);
        combo_stop(TIMER_AFTER_DODGE);
        combo_stop(RIGHT_SPEEDFLIP);
        combo_stop(LEFT_SPEEDFLIP);
        combo_stop(INV_YX);
        combo_stop(BOOST_SAFER);
        set_val(JUMP_BUTTON, 0);
    }
	}

//////////////////////////
//                      //
//   FRONTFLIP-CANCEL   //
//                      //
//////////////////////////

 if  ((FAST_FLIPP_MOD) && !combo_running(FAST_FLIPP) && event_press(JUMP_BUTTON) && !combo_running(TIMER_FOR_DODGE) && get_val(PS4_LY) <= -96 && !combo_running(TIMER_BLOCK_DRIFT_CANCLE) && !combo_running(RIGHT_BACK_SPEEDFLIP) && !combo_running(LEFT_BACK_SPEEDFLIP)) {
        combo_run(FAST_FLIPP);
        combo_stop(INV_YX);
       	combo_stop(BLOCK_BOOST_DRIFT);
       	combo_stop(INV_YX);
    }
 if		(combo_running(FAST_FLIPP)){
 		set_val(JUMP_BUTTON, 0);
 		combo_stop(INV_YX);
 }

//////////////////////////
//                      //
//      SPEEDFLIPS      //
//                      //
//////////////////////////
  
    if  ((FRONT_SPEEDFLIPS_MOD) && event_press(JUMP_BUTTON) && get_val(BOOST_BUTTON) && combo_running(TIMER_FOR_DODGE) && get_val(PS4_LY) <= -20 && get_val(PS4_LX) >= -100 && get_val(PS4_LY) >= -100 && get_val(PS4_LX) <= -25 && combo_running(INV_YX) && !combo_running(LEFT_BACK_SPEEDFLIP)) {
        combo_run(F_LEFT_SPEEDFLIP);
        combo_stop(FAST_FLIPP);
        combo_stop(INV_YX);
        combo_stop(BLOCK_BOOST_DRIFT);
    }
	if 	(combo_running(RIGHT_SPEEDFLIP)){
		set_val(JUMP_BUTTON, 0);
		set_val(PS4_LX, 0)
	}
    if  ((FRONT_SPEEDFLIPS_MOD) && event_press(JUMP_BUTTON) && get_val(BOOST_BUTTON) && combo_running(TIMER_FOR_DODGE) && get_val(PS4_LY) <= -20 && get_val(PS4_LX) <= 100 && get_val(PS4_LY) >= -100 && get_val(PS4_LX) >= 25 && combo_running(INV_YX) && !combo_running(LEFT_BACK_SPEEDFLIP)) {
        combo_run(F_RIGHT_SPEEDFLIP);
        combo_stop(FAST_FLIPP);
        combo_stop(INV_YX);
       	combo_stop(BLOCK_BOOST_DRIFT);
    }
	if 	(combo_running(F_LEFT_SPEEDFLIP)){
		set_val(JUMP_BUTTON, 0);
		set_val(PS4_LX, 0)
	}

//////////////////////////
//                      //
//      INVERT AXES     //
//                      //
//////////////////////////

    if ((FRONT_SPEEDFLIPS_MOD) && event_press(JUMP_BUTTON) && get_val(PS4_LY) <= -25 && get_val(BOOST_BUTTON) && get_val(PS4_LX) >= -100 && get_val(PS4_LY) >= -100 && get_val(PS4_LX) <= -25 && !combo_running(TIMER_FOR_DODGE)){
        combo_run(INV_YX);
        combo_stop(BOOST_SAFER);
}
    if ((FRONT_SPEEDFLIPS_MOD) && event_press(JUMP_BUTTON) && get_val(PS4_LY) <= -25 && get_val(BOOST_BUTTON) && get_val(PS4_LX) <= 100 && get_val(PS4_LY) >= -100 && get_val(PS4_LX) >= 25 && !combo_running(TIMER_FOR_DODGE)){
        combo_run(INV_YX);
        combo_stop(BOOST_SAFER);
}
	if 	(combo_running(INV_YX)){
		set_val(PS4_LX, 0)
	}
//////////////////////////
//                      //
//      AUTOBALLCAM     //
//                      //
//////////////////////////

    if  ((AUTO_BALLCAM_MOD) && !onoff && !combo_running(AUTO_CARCAM_LONG)) {
        combo_run(BALLCAM);    
    }

    if  ((AUTO_BALLCAM_MOD) && event_press(BALLCAM_BUTTON) && combo_running(AUTO_CARCAM_SHORT))
            combo_stop(BALLCAM);
    else if  ((AUTO_BALLCAM_MOD) && event_press(BALLCAM_BUTTON) && combo_running(BALLCAM) && !combo_running(AUTO_CARCAM_SHORT)) {
        combo_run(AUTO_CARCAM_SHORT); 
        combo_run(TIMER_AUTOBALLCAM_LONG);
    }
    
    if  ((AUTO_BALLCAM_MOD) && event_press(BALLCAM_BUTTON) && combo_running(AUTO_CARCAM_SHORT) && !combo_running(BALLCAM) && !combo_running(AUTO_CARCAM_LONG) && !combo_running(TIMER_AUTOBALLCAM_LONG)) {
        combo_run(STOP_AUTO_CARCAM);
        combo_stop(AUTO_CARCAM_SHORT);
        combo_stop(AUTO_CARCAM_LONG);
    } 

    if  ((AUTO_BALLCAM_MOD) && event_press(BALLCAM_BUTTON) && combo_running(AUTO_CARCAM_LONG) && !combo_running(BALLCAM) && !combo_running(AUTO_CARCAM_SHORT)) {
        combo_run(STOP_AUTO_CARCAM);
        combo_stop(AUTO_CARCAM_LONG);
    }

    if  ((AUTO_BALLCAM_MOD) && event_press(BALLCAM_BUTTON) && combo_running(AUTO_CARCAM_SHORT) && !combo_running(BALLCAM) && combo_running(TIMER_AUTOBALLCAM_LONG)) {
        combo_run(AUTO_CARCAM_LONG);
        combo_stop(BALLCAM);
        combo_stop(AUTO_CARCAM_SHORT);
        combo_stop(STOP_AUTO_CARCAM);
    }


////////////////////////////////////////
//                                    //
//  JUMP & DRIFT-MOD-ACTIVATORS       //
//                                    //
////////////////////////////////////////

    if  (event_press(JUMP_BUTTON) && !combo_running(TIMER_FOR_DODGE) && !combo_running(LEFT_BACK_SPEEDFLIP) && !combo_running(RIGHT_BACK_SPEEDFLIP)) {
    	combo_run(TIMER_FOR_DODGE);
    	combo_run(TIMER_BLOCK_DRIFT_CANCLE);
    	combo_run(BOOST_SAFER_TIMER);
    	combo_run(TIMER_BLOCK_STOP_CAR_MOD);
    }
    else if  (event_press(JUMP_BUTTON) && !combo_running(FAST_FLIPP) && combo_running(TIMER_FOR_DODGE) && !combo_running(LEFT_SPEEDFLIP) && !combo_running(RIGHT_SPEEDFLIP) && !combo_running(LEFT_BACK_SPEEDFLIP) && !combo_running(RIGHT_BACK_SPEEDFLIP))
        combo_run(TIMER_AFTER_DODGE);
        
    if 	((DRIFT_AFTER_JUMP_DODGE_MOD) && event_press(JUMP_BUTTON) && !combo_running(DRIFT_AFTER_JUMP)) {
        combo_run(DRIFT_AFTER_JUMP);
    }
    else if  ((DRIFT_AFTER_JUMP_DODGE_MOD) && event_press(JUMP_BUTTON) && !combo_running(FAST_FLIPP) && combo_running(DRIFT_AFTER_JUMP) && !combo_running(LEFT_SPEEDFLIP) && !combo_running(RIGHT_SPEEDFLIP) && !combo_running(LEFT_BACK_SPEEDFLIP) && !combo_running(RIGHT_BACK_SPEEDFLIP))
        combo_run(DRIFT_AFTER_DODGE);
       
////////////////////////////////////////
//                                    //
//   SPEEDDRIFT & BLOCK-BOOST DRIFT   //
//                                    //
////////////////////////////////////////

    if  ((SPEED_DRIFT_MOD) && get_val(POWERDRIFT_BUTTON)) {
        combo_stop(BOOST);
        combo_run(BLOCK_BOOST_DRIFT);
    }

    if  ((STOP_CAR_MOD) && get_val(DRIVE_BACKWARDS_BUTTON) && !combo_running(TIMER_BLOCK_STOP_CAR_MOD) && !combo_running(DRIFT_AFTER_JUMP) && !combo_running(TIMER_FOR_DODGE) && !combo_running(TIMER_AFTER_DODGE) && get_val(DRIVE_FORWARDS_BUTTON) && !combo_running(LEFT_BACK_SPEEDFLIP)) {
        set_val(DRIVE_FORWARDS_BUTTON, 0);
        set_val(BOOST_BUTTON, 0);
        
    }


////////////////////////////////////////
//                                    //
//         BOOST & DRIFTSTOP          //
//                                    //
////////////////////////////////////////
    
    if  (get_val(DRIVE_FORWARDS_BUTTON)){
        combo_run(FORWARDS);        
}
    if  (event_press(DRIVE_FORWARDS_BUTTON) && combo_running(DRIFT_AFTER_DODGE)){
         combo_stop(DRIFT_AFTER_DODGE);
}
    if  (get_val(BOOST_BUTTON) && !combo_running(TIMER_FOR_DODGE)&& !combo_running(TIMER_AFTER_DODGE) && !combo_running(DRIFT_AFTER_JUMP) && !combo_running(DRIFT_AFTER_DODGE)){
        combo_run(BOOST);
}
    if  (event_press(BOOST_BUTTON)){
        combo_stop(BOOST);
}


//////////////////////////
//                      //
//      BOOST-SAFER		//
//                      //
//////////////////////////


	if (!combo_running(BLOCK_BOOST_DRIFT) && (BOOST_SAVER_MOD) && !combo_running(TIMER_FOR_DODGE) && !combo_running(AUTO_TAKEOFF) && !combo_running(TIMER_AFTER_DODGE) && !combo_running(BOOST_SAFER_TIMER) && get_ptime(BOOST_BUTTON)> (BOOST_SAFER_TIME_GROUND)){
		combo_run(BOOST_SAFER);
		combo_stop(BOOST);
}
	if ((BOOST_SAVER_MOD) && !combo_running(AUTO_TAKEOFF) && combo_running(BOOST_SAFER_TIMER) && get_ptime(BOOST_BUTTON)> (BOOST_SAFER_TIME_AIR)){
		combo_run(BOOST_SAFER);
} 
	if ((BOOST_SAVER_MOD) && combo_running(TIMER_FOR_DODGE)){
		combo_stop(BOOST_SAFER);
} 
	if ((BOOST_SAVER_MOD) && combo_running(TIMER_AFTER_DODGE)){
		combo_stop(BOOST_SAFER);
} 
	if ((BOOST_SAVER_MOD) && !combo_running(TIMER_FOR_DODGE) && !combo_running(AUTO_TAKEOFF) && !combo_running(TIMER_AFTER_DODGE) && !get_val(BOOST_BUTTON)){
		combo_stop(BOOST_SAFER);
}
}
}
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


combo TIMER_FOR_DODGE {
    wait(1500);
}

combo TIMER_AFTER_DODGE {
    wait(1300);
}
combo LEFT_BACK_SPEEDFLIP {
    set_val(PS4_LY, 100);
    set_val(POWERDRIFT_BUTTON, 100);
    wait(320);
    set_val(PS4_LY, -100);
    set_val(PS4_LX, 100);
    set_val(AIRROLL_LEFT_BUTTON, 100);
    set_val(AIRROLL_BUTTON, 100);
    set_val(POWERDRIFT_BUTTON, 100);
    set_val(BOOST_BUTTON, 100);
    wait(300);
    set_val(PS4_LY, -100);
    set_val(AIRROLL_BUTTON, 100);
    set_val(DRIVE_FORWARDS_BUTTON, 100);
    set_val(POWERDRIFT_BUTTON, 100);
    set_val(PS4_LX, 100);
    wait(50);
    set_val(AIRROLL_BUTTON, 100);
    set_val(JUMP_BUTTON, 100);
    set_val(DRIVE_FORWARDS_BUTTON, 100);
    set_val(PS4_LY, 0);
    set_val(POWERDRIFT_BUTTON, 100);
    wait(20);
    set_val(AIRROLL_BUTTON, 100);
    set_val(DRIVE_FORWARDS_BUTTON, 100);
    set_val(PS4_LX, 100);
    set_val(POWERDRIFT_BUTTON, 100);
    wait(50);
    set_val(POWERDRIFT_BUTTON, 100);
    set_val(PS4_LY, 100);
    wait(100);
}

combo RIGHT_BACK_SPEEDFLIP {
    set_val(PS4_LY, 100);
    set_val(AIRROLL_BUTTON, 100);
    set_val(POWERDRIFT_BUTTON, 100);
    wait(320);
    set_val(PS4_LY, -100);
    set_val(PS4_LX, -100);
    set_val(AIRROLL_RIGHT_BUTTON, 100);
    set_val(AIRROLL_BUTTON, 100);
    set_val(POWERDRIFT_BUTTON, 100);
    set_val(BOOST_BUTTON, 100);
    wait(300);
    set_val(PS4_LY, -100);
    set_val(AIRROLL_BUTTON, 100);
    set_val(DRIVE_FORWARDS_BUTTON, 100);
    set_val(POWERDRIFT_BUTTON, 100);
    set_val(PS4_LX, -100);
    wait(50);
    set_val(AIRROLL_BUTTON, 100);
    set_val(JUMP_BUTTON, 100);
    set_val(DRIVE_FORWARDS_BUTTON, 100);
    set_val(PS4_LY, 0);
    set_val(POWERDRIFT_BUTTON, 100);
    wait(40);
    set_val(AIRROLL_BUTTON, 100);
    set_val(DRIVE_FORWARDS_BUTTON, 100);
    set_val(PS4_LX, -100);
    set_val(POWERDRIFT_BUTTON, 100);
    wait(50);
    set_val(POWERDRIFT_BUTTON, 100);
    set_val(PS4_LX, -100);
    set_val(AIRROLL_BUTTON, 100);
    wait(100);
}
combo TIMER_BLOCK_DRIFT_CANCLE {
    wait(500);
}



combo TIMER_AUTOBALLCAM_LONG {
    wait(250);
}



combo FAST_FLIPP {	
	set_val(JUMP_BUTTON, 0);
	set_val(DRIVE_FORWARDS_BUTTON, 100);
	set_val(BOOST_BUTTON, 100);
	set_val(PS4_LX, 100);
	wait(80)	
	set_val(JUMP_BUTTON, 0);
	set_val(DRIVE_FORWARDS_BUTTON, 100);
	wait(100)
	set_val(JUMP_BUTTON, 100);
	set_val(PS4_LX, 25);
	set_val(PS4_LY, 100);
	set_val(BOOST_BUTTON, 100);
	set_val(DRIVE_FORWARDS_BUTTON, 100);
	set_val(POWERDRIFT_BUTTON, 100);
	wait(50);
	set_val(JUMP_BUTTON, 0);
    set_val(POWERDRIFT_BUTTON, 100);
    set_val(DRIVE_FORWARDS_BUTTON, 100);
	set_val(DRIVE_FORWARDS_BUTTON, 100);
    set_val(AIRROLL_BUTTON, 100);
    wait(30);
    set_val(POWERDRIFT_BUTTON, 100);
    set_val(JUMP_BUTTON, 100);
    set_val(PS4_LX, -100);
    set_val(PS4_LY, -100);
    set_val(AIRROLL_BUTTON, 100);
    set_val(BOOST_BUTTON, 100);
   	set_val(DRIVE_FORWARDS_BUTTON, 100);
    wait(20);
    set_val(POWERDRIFT_BUTTON, 100);
    set_val(JUMP_BUTTON, 0);
    set_val(PS4_LX, 100);
    set_val(PS4_LY, 80);
    set_val(AIRROLL_BUTTON, 100);
   	set_val(DRIVE_FORWARDS_BUTTON, 100);
    wait(600);
    set_val(PS4_LX, -100);
    set_val(AIRROLL_LEFT_BUTTON, 100);
    set_val(POWERDRIFT_BUTTON, 100);
    set_val(AIRROLL_BUTTON, 100);
   	set_val(DRIVE_FORWARDS_BUTTON, 100);
    wait(200);
    set_val(POWERDRIFT_BUTTON, 100);
    wait(450);	
}



combo F_RIGHT_SPEEDFLIP {
    set_val(PS4_LX, 0);
    set_val(PS4_LY, 0);
    set_val(JUMP_BUTTON, 0);
    set_val(POWERDRIFT_BUTTON, 100);
    set_val(DRIVE_FORWARDS_BUTTON, 100); 
    wait(20);
    set_val(POWERDRIFT_BUTTON, 100);
    set_val(JUMP_BUTTON, 100);
    set_val(PS4_LX, 100);
    set_val(PS4_LY, -80);
    set_val(AIRROLL_BUTTON, 100);
    wait(20);
    set_val(POWERDRIFT_BUTTON, 100);
    set_val(JUMP_BUTTON, 0);
    set_val(PS4_LX, -100);
    set_val(PS4_LY, 80);
    set_val(AIRROLL_BUTTON, 100);
    wait(600);
    set_val(PS4_LX, 100);
    set_val(AIRROLL_RIGHT_BUTTON, 100);
    set_val(POWERDRIFT_BUTTON, 100);
    set_val(AIRROLL_BUTTON, 100);
    wait(200);
    set_val(POWERDRIFT_BUTTON, 100);
    wait(100);
}



combo F_LEFT_SPEEDFLIP {
    set_val(PS4_LX, 0);
    set_val(PS4_LY, 0);
    set_val(JUMP_BUTTON, 0);
    set_val(POWERDRIFT_BUTTON, 100);
    set_val(DRIVE_FORWARDS_BUTTON, 100);
    wait(20);
    set_val(POWERDRIFT_BUTTON, 100);
    set_val(JUMP_BUTTON, 100);
    set_val(PS4_LX, -100);
    set_val(PS4_LY, -80);
    set_val(AIRROLL_BUTTON, 100);
    wait(20);
    set_val(POWERDRIFT_BUTTON, 100);
    set_val(JUMP_BUTTON, 0);
    set_val(PS4_LX, 100);
    set_val(PS4_LY, 80);
    set_val(AIRROLL_BUTTON, 100);
    wait(600);
    set_val(PS4_LX, -100);
    set_val(POWERDRIFT_BUTTON, 100);
    set_val(AIRROLL_BUTTON, 100);
    wait(200);
    set_val(POWERDRIFT_BUTTON, 100);
    wait(100);
}



combo INV_YX {
    set_val(PS4_LX, inv(get_val(PS4_LX)));
    set_val(PS4_LY, 30);
    wait(400);
}
combo BALLCAM {
    set_val(BALLCAM_BUTTON, 100);
}
combo AUTO_CARCAM_SHORT {
    set_val(BALLCAM_BUTTON, 0);
    wait(AUTO_BALL_CAMERA_TIME);
}
combo AUTO_CARCAM_LONG {
    set_val(BALLCAM_BUTTON, 0);
    wait(10000);
}
combo STOP_AUTO_CARCAM {
    set_val(BALLCAM_BUTTON, 100);
}

combo DRIFT_AFTER_JUMP {
    set_val(POWERDRIFT_BUTTON, 100);
    wait(DRIFT_AFTER_JUMP_TIME);
}
combo BOOST {
    set_val(BOOST_BUTTON, 100);
}
combo FORWARDS {
    set_val(DRIVE_FORWARDS_BUTTON, 100);
}
combo TIMER_BLOCK_STOP_CAR_MOD {
 	wait(3000);
}
combo BLOCK_BOOST_DRIFT {
    set_val(BOOST_BUTTON, 0);
    set_val(DRIVE_FORWARDS_BUTTON, 100);
}
combo DRIFT_AFTER_DODGE {
    set_val(POWERDRIFT_BUTTON, 100);
    wait(DRIFT_AFTER_DODGE_TIME);
}
combo TURN_BACK_SPEEDFLIP {
    set_val(JUMP_BUTTON, 100);
    set_val(JUMP_BUTTON, 100);
    set_val(PS4_LY, 0);
    set_val(POWERDRIFT_BUTTON, 100);
    set_val(AIRROLL_BUTTON, 0);
    wait(80);
    set_val(PS4_LX, 100);
    set_val(BOOST_BUTTON, 0);
    set_val(JUMP_BUTTON, 100);
    set_val(JUMP_BUTTON, 100);
    set_val(PS4_LY, 0);
    set_val(AIRROLL_BUTTON, 0);
    wait(850);
    set_val(PS4_LX, 100);
    set_val(BOOST_BUTTON, 0);
    set_val(JUMP_BUTTON, 0);
    set_val(JUMP_BUTTON, 0);
    set_val(PS4_LY, 0);
    set_val(AIRROLL_BUTTON, 0);
    wait(40);
    set_val(JUMP_BUTTON, 100);
    set_val(DRIVE_FORWARDS_BUTTON, 0);
    set_val(PS4_LY, 100);
    set_val(PS4_LX, 0);
    set_val(AIRROLL_BUTTON, 100);
    set_val(JUMP_BUTTON, 100);
    set_val(BOOST_BUTTON, 0);
    set_val(POWERDRIFT_BUTTON, 100);
    wait(319);
    set_val(PS4_LY, -100);
    set_val(JUMP_BUTTON, 0);
    set_val(PS4_LX, 100);
    set_val(AIRROLL_BUTTON, 100);
    set_val(POWERDRIFT_BUTTON, 100);
    set_val(BOOST_BUTTON, 100);
    wait(300);
    set_val(PS4_LY, -100);
    set_val(AIRROLL_BUTTON, 100);
    set_val(DRIVE_FORWARDS_BUTTON, 100);
    set_val(POWERDRIFT_BUTTON, 100);
    set_val(PS4_LX, 100);
    set_val(BOOST_BUTTON, 100);
    wait(250);
    set_val(AIRROLL_BUTTON, 100);
    set_val(PS4_LY, 100);
    set_val(JUMP_BUTTON, 100);
    set_val(DRIVE_FORWARDS_BUTTON, 100);
    set_val(PS4_LX, 100);
    set_val(POWERDRIFT_BUTTON, 100);
    set_val(BOOST_BUTTON, 100);
    wait(40);
    set_val(PS4_LY, 0);
    set_val(AIRROLL_BUTTON, 100);
    set_val(DRIVE_FORWARDS_BUTTON, 100);
    set_val(JUMP_BUTTON, 0);
    set_val(PS4_LX, 100);
    set_val(POWERDRIFT_BUTTON, 100);
    wait(50);
    set_val(PS4_LX, 100);
    set_val(DRIVE_FORWARDS_BUTTON, 100);
    set_val(POWERDRIFT_BUTTON, 100);
    set_val(AIRROLL_BUTTON, 100);
    wait(50);
    set_val(POWERDRIFT_BUTTON, 100);
    wait(100);
}
combo MUSTY_FLICK {
	set_val(JUMP_BUTTON, 100);
	set_val(BOOST_BUTTON, 0);
	set_val(PS4_LY, -100);
	wait(50)
	set_val(AIRROLL_BUTTON, 100);
	set_val(PS4_LY, -100);
	set_val(PS4_LX, 0)
	set_val(AIRROLL_BUTTON, 100);
	set_val(JUMP_BUTTON, 0);
	set_val(BOOST_BUTTON, 0);
	wait(520)
	set_val(JUMP_BUTTON, 100);
	set_val(PS4_LY, 100);
	set_val(PS4_LX, 0);
	set_val(AIRROLL_BUTTON, 100);
	wait(100)
	set_val(JUMP_BUTTON, 100);
	set_val(PS4_LY, 100);
	set_val(PS4_LX, 0);
	set_val(AIRROLL_BUTTON, 100);
	wait(250)// wait(200) for FRONTLANDING
	set_val(AIRROLL_BUTTON, 100);
	set_val(PS4_LY, -100);
	set_val(AIRROLL_LEFT_BUTTON, 100);
	set_val(POWERDRIFT_BUTTON, 100);
	wait(100);// wait(200) for FRONTLANDING
	set_val(PS4_LY, -100);
	wait(1000);
	wait(200);
	}	
combo AUTO_TAKEOFF {
	set_val(PS4_LY, 100);
	set_val(JUMP_BUTTON, 100);
	set_val(BOOST_BUTTON, 100);
	wait(200);
	set_val(JUMP_BUTTON, 0);
	set_val(BOOST_BUTTON, 100);
	wait(40);
	set_val(PS4_LY, 0);
	set_val(PS4_LX, 0);
	set_val(JUMP_BUTTON, 100);
	set_val(BOOST_BUTTON, 100);
	wait(50);
	set_val(JUMP_BUTTON, 100);
	set_val(BOOST_BUTTON, 100);
	wait(200);
	set_val(JUMP_BUTTON, 100);
	set_val(BOOST_BUTTON, 100)	
	wait(250);
	
}
combo AUTO_TAKEOFF_BOOST {
	set_val(BOOST_BUTTON, 100);
}
combo AUTO_TAKEOFF_BOOST_TIMER {
	wait(5000);
}	
combo AUTO_TAKEOFF_BLOCK_CANCLE_TIMER {
	wait(200);
}	
combo RIGHT_KICKOFF_SPEEDFLIP {
	set_val(PS4_LX, 0);
	set_val(PS4_LY, -100);
	set_val(DRIVE_FORWARDS_BUTTON, 100);
	set_val(BOOST_BUTTON, 100);
	set_val(JUMP_BUTTON, 0);
	wait(50);
	set_val(DRIVE_FORWARDS_BUTTON, 100);
	set_val(BOOST_BUTTON, 100);
	set_val(JUMP_BUTTON, 0);
	set_val(PS4_LX, 100);
	set_val(PS4_LY, -100);
	wait(40);
	set_val(PS4_LX, 0);
	set_val(PS4_LY, -100);
	set_val(DRIVE_FORWARDS_BUTTON, 100);
	set_val(BOOST_BUTTON, 100);
	set_val(JUMP_BUTTON, 0);
	wait(350);
	set_val(DRIVE_FORWARDS_BUTTON, 100);
	set_val(BOOST_BUTTON, 100);
	set_val(JUMP_BUTTON, 0);
	set_val(PS4_LX, 100);
	set_val(PS4_LY, -100);
	wait(140);
	set_val(JUMP_BUTTON, 100);
	set_val(PS4_LX, 0);
	set_val(PS4_LY, 100);
	set_val(BOOST_BUTTON, 100);
	set_val(DRIVE_FORWARDS_BUTTON, 100);
	wait(70);
	set_val(JUMP_BUTTON, 0);
    set_val(DRIVE_FORWARDS_BUTTON, 100);
	set_val(BOOST_BUTTON, 100);
    set_val(PS4_LX, 0);
    set_val(PS4_LY, 0);
    wait(17);
    set_val(JUMP_BUTTON, 100);
    set_val(PS4_LX, -100);
    set_val(PS4_LY, -100);
    set_val(BOOST_BUTTON, 100);
   	set_val(DRIVE_FORWARDS_BUTTON, 100);
    wait(17);
    set_val(JUMP_BUTTON, 0);
    set_val(PS4_LX, 100);
    set_val(PS4_LY, 100);
    set_val(BOOST_BUTTON, 100);
   	set_val(DRIVE_FORWARDS_BUTTON, 100);
    wait(17);
    set_val(JUMP_BUTTON, 0);
    set_val(AIRROLL_LEFT_BUTTON, 100);
    set_val(PS4_LY, 100);
    set_val(PS4_LX, 0);
    set_val(BOOST_BUTTON, 100);
   	set_val(DRIVE_FORWARDS_BUTTON, 100);
    wait(600);
    set_val(PS4_LY, 100);
    set_val(PS4_LX, 0);
    set_val(AIRROLL_LEFT_BUTTON, 100);
    set_val(BOOST_BUTTON, 100);
   	set_val(DRIVE_FORWARDS_BUTTON, 100);
   	set_val(POWERDRIFT_BUTTON, 100);
    wait(300);	
    set_val(PS4_LX, 0);
    set_val(PS4_LY, 0);
   	set_val(DRIVE_FORWARDS_BUTTON, 100);
   	set_val(POWERDRIFT_BUTTON, 100);
    wait(100);
   	set_val(DRIVE_FORWARDS_BUTTON, 100);
   	set_val(POWERDRIFT_BUTTON, 100);
    wait(200);
}
combo LEFT_KICKOFF_SPEEDFLIP {
	set_val(PS4_LX, 0);
	set_val(PS4_LY, -100);
	set_val(DRIVE_FORWARDS_BUTTON, 100);
	set_val(BOOST_BUTTON, 100);
	set_val(JUMP_BUTTON, 0);
	wait(50);
	set_val(DRIVE_FORWARDS_BUTTON, 100);
	set_val(BOOST_BUTTON, 100);
	set_val(JUMP_BUTTON, 0);
	set_val(PS4_LX, -100);
	set_val(PS4_LY, -100);
	wait(40);
	set_val(PS4_LX, 0);
	set_val(PS4_LY, -100);
	set_val(DRIVE_FORWARDS_BUTTON, 100);
	set_val(BOOST_BUTTON, 100);
	set_val(JUMP_BUTTON, 0);
	wait(350);
	set_val(DRIVE_FORWARDS_BUTTON, 100);
	set_val(BOOST_BUTTON, 100);
	set_val(JUMP_BUTTON, 0);
	set_val(PS4_LX, -100);
	set_val(PS4_LY, -100);
	wait(140);
	set_val(JUMP_BUTTON, 100);
	set_val(PS4_LX, 0);
	set_val(PS4_LY, 100);
	set_val(BOOST_BUTTON, 100);
	set_val(DRIVE_FORWARDS_BUTTON, 100);
	wait(70);
	set_val(JUMP_BUTTON, 0);
    set_val(DRIVE_FORWARDS_BUTTON, 100);
	set_val(BOOST_BUTTON, 100);
    set_val(PS4_LX, 0);
    set_val(PS4_LY, 0);
    wait(17);
    set_val(JUMP_BUTTON, 100);
    set_val(PS4_LX, 100);
    set_val(PS4_LY, -100);
    set_val(BOOST_BUTTON, 100);
   	set_val(DRIVE_FORWARDS_BUTTON, 100);
    wait(17);
    set_val(JUMP_BUTTON, 0);
    set_val(PS4_LX, -100);
    set_val(PS4_LY, 100);
    set_val(BOOST_BUTTON, 100);
   	set_val(DRIVE_FORWARDS_BUTTON, 100);
    wait(17);
    set_val(JUMP_BUTTON, 0);
    set_val(AIRROLL_RIGHT_BUTTON, 100);
    set_val(PS4_LY, 100);
    set_val(PS4_LX, 0);
    set_val(BOOST_BUTTON, 100);
   	set_val(DRIVE_FORWARDS_BUTTON, 100);
    wait(600);
    set_val(PS4_LY, 100);
    set_val(PS4_LX, 0);
    set_val(AIRROLL_RIGHT_BUTTON, 100);
    set_val(BOOST_BUTTON, 100);
   	set_val(DRIVE_FORWARDS_BUTTON, 100);
   	set_val(POWERDRIFT_BUTTON, 100);
    wait(300);	
    set_val(PS4_LX, 0);
    set_val(PS4_LY, 0);
   	set_val(DRIVE_FORWARDS_BUTTON, 100);
   	set_val(POWERDRIFT_BUTTON, 100);
    wait(100);
   	set_val(DRIVE_FORWARDS_BUTTON, 100);
   	set_val(POWERDRIFT_BUTTON, 100);
    wait(200);
}
combo BREEZI_FLICK {
	set_val(JUMP_BUTTON, 0);
	set_val(PS4_LY, 100);
	set_val(PS4_LX, 100);
	set_val(AIRROLL_LEFT_BUTTON, 100);
	wait(40)
	set_val(JUMP_BUTTON, 100);
	set_val(PS4_LY, -100);
	set_val(BOOST_BUTTON, 100);
	set_val(AIRROLL_LEFT_BUTTON, 100);
	wait(60)
	set_val(JUMP_BUTTON, 100);
	set_val(AIRROLL_LEFT_BUTTON, 100);
	set_val(PS4_LY, 100);
	set_val(PS4_LX, 100);
	wait(460)
	set_val(JUMP_BUTTON, 100);
	set_val(AIRROLL_LEFT_BUTTON, 100);
	set_val(PS4_LY, 100);
	set_val(PS4_LX, 100);
	set_val(BOOST_BUTTON, 100);
	wait(100)
	set_val(JUMP_BUTTON, 100);
	set_val(PS4_LX, 100);
	set_val(BOOST_BUTTON, 100);
	wait(50)
	set_val(JUMP_BUTTON, 100);
	set_val(BOOST_BUTTON, 100);
	set_val(PS4_LX, 80);
	wait(40)
	set_val(JUMP_BUTTON, 0);
	set_val(PS4_LX, 100);
	set_val(BOOST_BUTTON, 100);
	set_val(AIRROLL_LEFT_BUTTON, 100);
	wait(50)
	set_val(JUMP_BUTTON, 0);
	set_val(PS4_LX, 100);
	set_val(PS4_LY, -80);
	set_val(BOOST_BUTTON, 0);
	wait(200)
	set_val(JUMP_BUTTON, 0);
	set_val(PS4_LX, 100);
	set_val(PS4_LY, -80);
	set_val(BOOST_BUTTON, 0);
	wait(200)
	set_val(JUMP_BUTTON, 100);
	set_val(PS4_LY, 100);
	set_val(PS4_LX, 0);
	set_val(BOOST_BUTTON, 100);
	wait(400)
	set_val(PS4_LY, -100);
	set_val(JUMP_BUTTON, 100);
	wait(500);
	set_val(PS4_LY, 100);
	set_val(JUMP_BUTTON, 100);
	wait(100);
	set_val(PS4_LY, -100);
	set_val(JUMP_BUTTON, 0);
	wait(300);
	}
combo WAVE_DASH {
	set_val(JUMP_BUTTON, 100);
	set_val(BOOST_BUTTON, 100);
	set_val(AIRROLL_BUTTON, 0);
	wait(17);
	set_val(JUMP_BUTTON, 0);
	set_val(PS4_LY, 0);
	set_val(PS4_LX, 0);
	set_val(BOOST_BUTTON, 100);
	set_val(AIRROLL_BUTTON, 0);
	wait(500);
	set_val(JUMP_BUTTON, 0);
	set_val(PS4_LY, 100);
	wait(150);
	set_val(JUMP_BUTTON, 0);
	wait(200);
	set_val(JUMP_BUTTON, 100);
	set_val(BOOST_BUTTON, 100);
	set_val(PS4_LY, -100);
	set_val(PS4_LX, 0);
	set_val(AIRROLL_BUTTON, 0);
	set_val(POWERDRIFT_BUTTON, 0);
	wait(50);
	set_val(AIRROLL_BUTTON, 0);
	set_val(JUMP_BUTTON, 0);
	set_val(PS4_LY, 100);
	set_val(POWERDRIFT_BUTTON, 100);
	set_val(PS4_LX, 0);
	wait(150);
	set_val(AIRROLL_BUTTON, 0);
	set_val(JUMP_BUTTON, 0);
	set_val(POWERDRIFT_BUTTON, 100);
	wait(150);
}

combo INFINITE_WAVE_DASH {
	set_val(JUMP_BUTTON, 100);
	set_val(BOOST_BUTTON, 100);
	set_val(PS4_LX, 0);
	set_val(PS4_LY, -100);
	set_val(AIRROLL_LEFT_BUTTON, 100);
	set_val(POWERDRIFT_BUTTON, 100);
	set_val(DRIVE_FORWARDS_BUTTON, 100);
	wait(10);
	set_val(JUMP_BUTTON, 0);
	set_val(BOOST_BUTTON, 100);
	set_val(PS4_LX, 0);
	set_val(PS4_LY, -100);
	set_val(AIRROLL_LEFT_BUTTON, 100);
	set_val(POWERDRIFT_BUTTON, 100);
	set_val(DRIVE_FORWARDS_BUTTON, 100);
	wait(10);
	set_val(JUMP_BUTTON, 100);
	set_val(BOOST_BUTTON, 100);
	set_val(PS4_LX, -100);
	set_val(PS4_LY, 0);
	set_val(AIRROLL_LEFT_BUTTON, 100);
	set_val(POWERDRIFT_BUTTON, 100);
	set_val(DRIVE_FORWARDS_BUTTON, 100);
	wait(10);
	set_val(JUMP_BUTTON, 0);
	set_val(BOOST_BUTTON, 100);
	set_val(PS4_LX, 0);
	set_val(PS4_LY, -100);
	set_val(AIRROLL_LEFT_BUTTON, 100);
	set_val(POWERDRIFT_BUTTON, 100);
	set_val(DRIVE_FORWARDS_BUTTON, 100);
	wait(10);
}


combo LEFT_TORNADOSPIN {
	set_val(AIRROLL_LEFT_BUTTON, 100);
	set_val(PS4_LX, 100);
	set_val(BOOST_BUTTON, 100);
}

combo RIGHT_TORNADOSPIN {
	set_val(AIRROLL_RIGHT_BUTTON, 100);
	set_val(PS4_LX, -100);
	set_val(BOOST_BUTTON, 100);
}

combo BOOST_SAFER {
	set_val(BOOST_BUTTON, 0);
	set_val(DRIVE_FORWARDS_BUTTON, 100);
}

combo BOOST_SAFER_TIMER {
	wait(BOOST_SAFER_TIME_AIR)
}

combo RUMBLE_OFF {
	set_rumble(RUMBLE_B, 50);
	wait(2000);
	reset_rumble();
}

combo RUMBLE_ON {
	set_rumble(RUMBLE_A, 100);
	wait(400);
	reset_rumble();	
}

combo TURN_ON_TIMER {
	wait(250);
}

combo STALL {
	set_val(JUMP_BUTTON, 0);
	wait(10);
 	set_val(PS4_LX, 100);
 	set_val(AIRROLL_LEFT_BUTTON, 100);
 	set_val(JUMP_BUTTON, 100);
 	wait(17)
}
combo RIGHT_SPEEDFLIP {
	set_val(JUMP_BUTTON, 0);
	set_val(DRIVE_FORWARDS_BUTTON, 100);
	set_val(BOOST_BUTTON, 100);
	set_val(PS4_LX, -100);
	wait(80)	
	set_val(JUMP_BUTTON, 0);
	set_val(DRIVE_FORWARDS_BUTTON, 100);
	set_val(BOOST_BUTTON, 100);
	wait(100)
	set_val(JUMP_BUTTON, 100);
	set_val(PS4_LX, -25);
	set_val(PS4_LY, 100);
	set_val(BOOST_BUTTON, 100);
	set_val(DRIVE_FORWARDS_BUTTON, 100);
	set_val(POWERDRIFT_BUTTON, 100);
	wait(50);
	set_val(JUMP_BUTTON, 0);
    set_val(POWERDRIFT_BUTTON, 100);
    set_val(DRIVE_FORWARDS_BUTTON, 100);
	set_val(BOOST_BUTTON, 100);
	set_val(DRIVE_FORWARDS_BUTTON, 100);
    set_val(AIRROLL_BUTTON, 100);
    wait(30);
    set_val(POWERDRIFT_BUTTON, 100);
    set_val(JUMP_BUTTON, 100);
    set_val(PS4_LX, 100);
    set_val(PS4_LY, -100);
    set_val(AIRROLL_BUTTON, 100);
    set_val(BOOST_BUTTON, 100);
   	set_val(DRIVE_FORWARDS_BUTTON, 100);
    wait(20);
    set_val(POWERDRIFT_BUTTON, 100);
    set_val(JUMP_BUTTON, 0);
    set_val(PS4_LX, -100);
    set_val(PS4_LY, 80);
    set_val(AIRROLL_BUTTON, 100);
   	set_val(DRIVE_FORWARDS_BUTTON, 100);
    wait(600);
    set_val(PS4_LX, 100);
    set_val(AIRROLL_RIGHT_BUTTON, 100);
    set_val(POWERDRIFT_BUTTON, 100);
    set_val(AIRROLL_BUTTON, 100);
   	set_val(DRIVE_FORWARDS_BUTTON, 100);
    wait(200);
    set_val(POWERDRIFT_BUTTON, 100);
    wait(200);		
}
combo LEFT_SPEEDFLIP {
	set_val(JUMP_BUTTON, 0);
	set_val(DRIVE_FORWARDS_BUTTON, 100);
	set_val(BOOST_BUTTON, 100);
	set_val(PS4_LX, 100);
	wait(80)	
	set_val(JUMP_BUTTON, 0);
	set_val(DRIVE_FORWARDS_BUTTON, 100);
	set_val(BOOST_BUTTON, 100);
	wait(100)
	set_val(JUMP_BUTTON, 100);
	set_val(PS4_LX, 25);
	set_val(PS4_LY, 100);
	set_val(BOOST_BUTTON, 100);
	set_val(DRIVE_FORWARDS_BUTTON, 100);
	set_val(POWERDRIFT_BUTTON, 100);
	wait(50);
	set_val(JUMP_BUTTON, 0);
    set_val(POWERDRIFT_BUTTON, 100);
    set_val(DRIVE_FORWARDS_BUTTON, 100);
	set_val(BOOST_BUTTON, 100);
	set_val(DRIVE_FORWARDS_BUTTON, 100);
    set_val(AIRROLL_BUTTON, 100);
    wait(30);
    set_val(POWERDRIFT_BUTTON, 100);
    set_val(JUMP_BUTTON, 100);
    set_val(PS4_LX, -100);
    set_val(PS4_LY, -100);
    set_val(AIRROLL_BUTTON, 100);
    set_val(BOOST_BUTTON, 100);
   	set_val(DRIVE_FORWARDS_BUTTON, 100);
    wait(20);
    set_val(POWERDRIFT_BUTTON, 100);
    set_val(JUMP_BUTTON, 0);
    set_val(PS4_LX, 100);
    set_val(PS4_LY, 80);
    set_val(AIRROLL_BUTTON, 100);
   	set_val(DRIVE_FORWARDS_BUTTON, 100);
    wait(600);
    set_val(PS4_LX, -100);
    set_val(AIRROLL_LEFT_BUTTON, 100);
    set_val(POWERDRIFT_BUTTON, 100);
    set_val(AIRROLL_BUTTON, 100);
   	set_val(DRIVE_FORWARDS_BUTTON, 100);
    wait(200);
    set_val(POWERDRIFT_BUTTON, 100);
    wait(200);	
}	
function draw_picture(x, y, invert) {                     
    logoOffset = 2;                                    
    logoBit = 16;                                           
    for (logoY = 0; logoY < BOOT_LOGO[1]; logoY++) {         // Loop the Y axis 
        for (logoX = 0; logoX < BOOT_LOGO[0]; logoX++) {     // Loop the X axis 
            logoData = BOOT_LOGO[logoOffset]          
            logoX2 = x + logoX;                       
            logoY2 = y + logoY;                       
            if (logoX2 < 0 || logoX2 >= 128) {        
                logoX2 -= 128;                        
            }                                         
            if (logoY2 < 0 || logoY2 >= 64) {         
                logoY2 -= 64;                         
            }                                         
            if (test_bit(logoData, logoBit - 1)) {     
                pixel_oled(logoX2, logoY2, !invert);   
            }else{                                     
                pixel_oled(logoX2, logoY2, invert);    
            }                                            
            logoBit--;             // Decrement the bit flag, we are moving to the next bit 
            if (!logoBit) {     // Check if we have just handled the last bit  
                logoBit = 16;     // Reset the bit flag     
                logoOffset++;     // Move to the next value 
            }  
        }   
    }    
}

function posx( chars, font ) {
	return( OLED_WIDTH / 2 ) - ( ( chars * font ) / 2 ); 
}

/* image display example / might look fancy and it is extra as fuck, but dont be fooled, It's held together by tape and spit */
/* note this is just an exmaple, you could just use a index for text and just display control buttons instead of image to 8-bit */