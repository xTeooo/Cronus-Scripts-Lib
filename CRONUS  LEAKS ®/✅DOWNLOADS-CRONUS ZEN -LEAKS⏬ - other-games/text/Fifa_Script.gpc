// Script was generated with < FIFA Series Skills Generator > ver. 16.0 Date :11/30/21 Time: 01:53:05
//------------------------------------------------------------------------
//====================================================================================================
/*    
This Script was made and intended for www.cronusmax.com & CronusMAX ONLY.                     * 
UNLESS permission is given by the creator and/or copywritee,                                  * 
All rights reserved. This material may not be reproduced, displayed,                          * 
modified or distributed without the express prior written permission of the                   * 
copyright holder. For permission, contact CronusMax.                                          * 
    __  ____   ___   ____   __ __  _____ ___ ___   ____  __ __                                * 
   /  ]|    \ /   \ |    \ |  |  |/ ___/|   |   | /    ||  |  |                               * 
  /  / |  D  )     ||  _  ||  |  (   \_ | _   _ ||  o  ||  |  |                               * 
 /  /  |    /|  O  ||  |  ||  |  |\__  ||  \_/  ||     ||_   _|                               * 
/   \_ |    \|     ||  |  ||  :  |/  \ ||   |   ||  _  ||     |                               * 
\     ||  .  \     ||  |  ||     |\    ||   |   ||  |  ||  |  |                               * 
 \____||__|\_|\___/ |__|__| \__,_| \___||___|___||__|__||__|__|                               * 
                                                                                              * 
*/ 
//====================================================================================================
                                                                       
                                                                       
/*
$$$$$$$$\ $$$$$$\ $$$$$$$$\  $$$$$$\         $$$$$$\   $$$$$$\  
$$  _____|\_$$  _|$$  _____|$$  __$$\       $$  __$$\ $$  __$$\ 
$$ |        $$ |  $$ |      $$ /  $$ |      \__/  $$ |\__/  $$ |
$$$$$\      $$ |  $$$$$\    $$$$$$$$ |       $$$$$$  | $$$$$$  |
$$  __|     $$ |  $$  __|   $$  __$$ |      $$  ____/ $$  ____/ 
$$ |        $$ |  $$ |      $$ |  $$ |      $$ |      $$ |      
$$ |      $$$$$$\ $$ |      $$ |  $$ |      $$$$$$$$\ $$$$$$$$\ 
\__|      \______|\__|      \__|  \__|      \________|\________|
*/
                                                                         
///////////////////  FIFA 22 SKILLS  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
//-----------------------------------------------------------------------
                                                                         
///\ 0. None.//\0. None.//\0. None.//\0. None.//\
///\ default Skill : 0. None.
                                
//       DESCRIPTIONS - INSTRUCTION                      
//  Switch Skills                                        
//                                                       
// hold button : XB360_LB   and then press : 
//  button :         will switch to Skill :                                    
//  D-pad UP    => 0. None.               
//  D-pad RIGHT => 0. None.               
//  D-pad DOWN  => 0. None.               
//  D-pad LEFT  => 0. None.               
//                   will switch to default Skill :                 
// hold button :XB360_LB + (PS4 SHARE / XB1 VIEW) => 0. None.      
//                                                                        
//   ACTIVATE SKILLS                                                      
//  Skills with Left and Right exit ( direction )                         
//  Double tap : XB360_LB Modifier Button to start skill to the Left 
//  Double tap : XB360_RB Modifier Button to start skill to the Right
//                                                                       
//   Skills with one direction ( no exit )                               
//                                                                       
//    = 0.   None
//-----------------------------------------------------------------------
//-------------------------------------------------------------- 
// DECLARATIONS                                                  
//-------------------------------------------------------------- 
define time_to_dblclick     = 300; // Time to Double click     
//////////////////////////////////////////////////////////////////
// YOUR BUTTON LAYOUT 
define PaceCtrol     = XB360_LT; // Pace Control
define FinesseShot   = XB360_RB; // Finesse Shot
define PlayerRun     = XB360_LB; // Player Run  
define ShotBtn       = XB360_B; // Shot Btn  
define SprintBtn     = XB360_RT; // Sprint Btn 
define PassBtn       = XB360_A; // Pass Btn 
define MODIFIER      = XB360_LB;     
define CrossBtn      = XB360_X; // Cross Btn 
define ThroughBall   = XB360_Y; // Through Ball Btn 
define MOVE_X        = PS4_LX;        
define MOVE_Y        = PS4_LY;        
define SKILL_STICK_X = PS4_RX;        
define SKILL_STICK_Y = PS4_RY;        
//-------------------------------------------------------------- 
// SKILLS LIST                                                   
//-------------------------------------------------------------- 
define FAKE_SHOT_SKILL                 = 1;// Fake Shot                    
define HEEL_TO_HEEL_FLICK_SKILL        = 2;// Heel to Heel                 
define HEEL_FLICK_TURN_SKILL           = 3;// R1 + Heel to Heel            
define RAINBOW_SKILL                   = 4;// Simple Rainbow               
define DRAG_BACK_SOMBRERO_SKILL        = 5;// Drag Back + R3 press         
define FAKE_PASS_SKILL                 = 6;// R2 + Fake Shot               
define DRAG_BACK_UNIVERSAL_SKILL       = 7;// hold R1, LS down              
define STEP_OVER_FEINT_SKILL           = 8;//                               
define DRAG_TO_DRAG_SKILL              = 9;// L2 + Fake Shot + LS zero      
define HOCUS_POCUS_SKILL               =10;// RS D to L, half circle L to R 
define TRIPLE_ELASTICO_SKILL           =11;// RS D to R, half circle R to L 
define ELASTICO_SKILL                  =12;// half circle from R to L       
define REVERSE_ELASTICO_SKILL          =13;// half sircle from L to R       
define CRUYFF_TURN_SKILL               =14;// Fake Shot + LS down           
//--------------------------------------------------------------            
define LA_CROQUETA_SKILL               =15;// L1 + RS                       
define RONALDO_CHOP_SKILL              =16;// L2 + Fake Shot                 
define ROULETTE_SKILL                  =17;// Roulette                       
define FLAIR_ROULETTE_SKILL            =18;// L1 + Roulette                  
define BALL_ROLL_SKILL                 =19;// Ball Roll                     
define BERBA_MCGEADY_SPIN_SKILL        =20;// RS Up , <-/->                  
define BOLASIE_FLICK_SKILL             =21;// R1 + BERBA Spin                 
define TORNADO_SKILL                   =22;// L1 + Berba Spin                  
define THREE_TOUCH_ROULETTE_SKILL      =23;// L2 + RS Down, <-/->               
define ALTERNATIVE_ELASTICO_CHOP_SKILL =24;// R1 + RS Down, <-/->                 
define BALL_ROLL_CHOP_SKILL            =25;// hold RS <-/ hold RS ->                
define FEINT_AND_EXIT_SKILL            =26;// hold L1 + RS half circle from L to R / from R to L 
define FEINT_L_EXIT_R_SKILL            =27;// RS half circle from L to R / from R to L 
define LATERAL_HEEL_TO_HEEL_SKILL      =28;//  L1 + RS <-/->
define WAKA_WAKA_SKILL                 =29;// WAKA WAKA 
define BODY_FEINT_SKILL                =30;// BODY FEINT 
define DRAG_TO_HEEL                    =31;// Drag to Heel move  
define BALL_ROLL_FAKE_TURN             =32;// Ball Roll Fake Turn : L2 + Berba Spin
define FEINT_FORWARD_AND_TURN          =33;// Feint Forward & Turn : RS double down
define TURN_BACK                       =34;// Turn Back                          
define ADVANCED_CROQUETA               =35;// Advanced Croqueta                  
define CANCELED_THREE_TOUCH_ROULETTE_SKILL=36;                              
define REVERSE_STEP_OVER_SKILL         =37;// Reverse Step Over         
define FAKE_DRAG_BACK_SKILL            =38;// Fake Drag Back
define RAINBOW_TO_SCORPION_KICK_SKILL  =39;  
define STEP_OVER_BOOST_SKILL           =40;  
define CANCEL_SHOOT_SKILL              =41;  
define DIRECTIONAL_NUTMEG_SKILL       =42;  
define CANCELED_BERBA_SPIN_SKILL      =43;   
define CANCELED_BERBA_SPIN_WITH_DIRECTION =44;
define BALL_ROLL_TO_SCOOP_TURN_SKILL  =45;
define DRIBBLING_SKILL                =46;
define FOUR_TOUCH_TURN_SKILLS         =47; // FIFA 22
define SKILLED_BRIDGE_SKILL           =48; // FIFA 22
define SCOOP_TURN_FAKE_SKILL          =49; // FIFA 22
//--------------------------------------------------------------   
define UP         = 0;  
define UP_RIGHT   = 1;  
define RIGHT      = 2;  
define DOWN_RIGHT = 3;  
define DOWN       = 4;  
define DOWN_LEFT  = 5;  
define LEFT       = 6;  
define UP_LEFT    = 7;  
int dTemp, dStart, dMid, dEnd;
//--------------------------------------------------------------   
//--------------------------------------------------------------   
// VARIABLES                                                       
//--------------------------------------------------------------   
int DpadUP  = 0;// Skill for D pad-UP NONE 
int DpadR   = 0;// Skill for D pad-RIGHT NONE
int DpadD   = 0;// Skill for D pad-DOWN  NONE
int DpadL   = 0;// Skill for D pad-LEFT NONE 
                                               
int LX, LY;          // Direction of Left Stick         
int right_on ;                            
int w_rstick  = 50;                        
int OnOffMods = TRUE;                            
int Sombrero;     
int hold_btn = 200; 
                
                                               
//--------------------------------------------------------------
// MAIN BLOCK                                                   
//--------------------------------------------------------------
main {                                         
                                                
    //-----------------------------------------         
    // SHOT WITH FULL POWER                             
    if(event_press(XB360_RS)) combo_run(FULL_POWER_cmb);
                                                      
    set_val(XB360_RS,0);                            
	//-----------------------------------------       
	///////////////////////////////////// 
	// CHIP SHOT                 
	if(event_press(XB360_LS)){ 
		combo_run(CHIP_SHOT);   
	}                       
	set_val(XB360_LS,0); 
                       
   //--- DEFENSE                               
   if(defence_on) f_defence();                 
                                                
                                                  
                                                  
    //--------------------------------------------------------------
    //  turn ON Penalty  hold  L1 and press OPTIONS 
    if(get_val(PS4_L1)){                      
        if(event_press(PS4_OPTIONS)){             
            onoff_penalty = !onoff_penalty;   
        }                                         
       set_val(PS4_OPTIONS,0);                    
    }                                              
    if(onoff_penalty){ fPenalties ();  }  
                                                   
	   //-----------------------------------------  
	   // ON / OFF FREE KICK MODE                   
	   // hold L1/LB and press SHARE/VIEW           
	   if(get_val(PS4_L1)){                          
        if(event_press(PS4_SHARE)){             
            onoff_FK = !onoff_FK;               
        }                                       
       set_val(PS4_SHARE,0);                    
    }                                           
    if(onoff_FK) { f_FREE_KICK (); }              
    //----------------------------------------- 
                                                
                                                
                                      
    // ON / OFF All Skills          
    if(get_val(PS4_SHARE)){                 
         if(event_press(PS4_CROSS))OnOffMods = !OnOffMods; 
         set_val(PS4_CROSS,0);                        
    }                                        
                                                
                                                
    ///////////////////////////////////////////////////////////// 
    //                                                           
    if(abs(get_val(MOVE_X))> 60 || abs(get_val(MOVE_Y))> 60){   
	       LX = get_val(MOVE_X);                                      
	       LY = get_val(MOVE_Y);                                      
     calc_zone ();                                              
    }                                                           
    //----------------------------------------------------------- 
                                      
   if(OnOffMods) { // all Skills mode           
                                                
                                                
                                                
      // Bank 1 run to the LEFT                 
      //--------------------------------------------------------------
      /////////////////////////////////////////////////////////
      //   double click : XB360_LB
       if (event_press(XB360_LB) && !tap) {      
                   combo_run(ONE_TAP);                  
       // Second tap                                    
       }else if (event_press(XB360_LB) && tap ){ 
                  tap=FALSE;                         
                  right_on = 0; combo_run(DIRECTION_OF_L_ANALOG);
       }                                               
      //-------------------------------------------------------------- 
      // Bank 1 run to the RIGHT                
      //--------------------------------------------------------------
      ////////////////////////////////////////////////////////// 
      //  double click :XB360_RB
       if (event_press(XB360_RB) && !tap) {      
                   combo_run(ONE_TAP);                  
       // Second tap                                    
       }else if (event_press(XB360_RB) && tap ){ 
                  tap=FALSE;                         
                  right_on = 1;combo_run(DIRECTION_OF_L_ANALOG);
       }                                               
                                                
                                                
                                                
                                                
                                                
                                                
                                                
                                              
     }// ON / OFF mods                          
     //--------------------------------------------------------------
                                                                     
   //--------------------------------------------------------------
} // end of main block                          
                                                
////////////////////////////////////////////////////////////////
// COMBO BLOCKS   //////////////////////////////////////////////
////////////////////////////////////////////////////////////////
// DIRECTION OF LEFT ANALOG                                     
//--------------------------------------------------------------
combo DIRECTION_OF_L_ANALOG {                                   
                                                                
   block(SprintBtn,500);                                        
   block(MOVE_X,1000);block(MOVE_Y,1000);  
}        
//--------------------------------------------------------------
// end of DIRECTIONS                                            
//--------------------------------------------------------------
                                                                
function INSIDE_BOX_AIM() { 
     if(get_val(PS4_LX) > 15 && get_val(PS4_LY) < -15 ) // TOP Right 
     {  
         LA (100, -100);
     }
     if(get_val(PS4_LX) > 15 && get_val(PS4_LY) > 15) // Bottom Right 
     { 
         LA (100, 100);
     }
     if(get_val(PS4_LX) < -15 && get_val(PS4_LY) < -15) // TOP Left 
     { 
         LA (-100 , -100);
     }
     if(get_val(PS4_LX) < -15 && get_val(PS4_LY) > 15) // Bottom Left 
     {
         LA (-100 ,  100);
     }
 }
int tap;
combo ONE_TAP {                                    
    tap = TRUE;                                    
    wait(time_to_dblclick); // wait for second tap 
    tap = FALSE;                                  
}                                              
combo FULL_POWER_cmb {
    set_val(ShotBtn,100);
    set_val(PS4_L3 ,100);
    wait(80);
    set_val(ShotBtn,100);
    wait(160);
}
combo CHIP_SHOT {
    set_val(ShotBtn,100);
    set_val(PlayerRun,100);
    set_val(PS4_L3,100);
    wait( 80);
    set_val(ShotBtn,100);
    set_val(PlayerRun,100);
    wait(100);    
}
////////////////////////////////////////////////////////////////
// VARIABLES  for FREE KICK MOD 
//-------------------------------------------- 
define TOP_SPIN       = 1;                     
define SIDE_SPIN      = 2;                     
define KNUCKLEBALL_FK = 3;                     
define spin_time      = 80;                    
//-------------------------------------------- 
int onoff_FK;                                  
int shot_power = 355;                          
int side_dir   = 100;                          
int FK_mode = 1;

function f_FREE_KICK (){
/////////////////////////////////////////// 
    // AIMING FIX :                                 
    // AIM and then press and hold R2/RT to Lock Aim 
    if(!get_val(PS4_R2)){                             
        LX = get_val(PS4_LX);                           
        LY = get_val(PS4_LY);                           
        if(get_val(PS4_L1)){                     
            ///////////////////////////////////////////   
            // SET THE POWER of the SHOOT                 
            if(event_press(PS4_UP))    shot_power = 330;//
            if(event_press(PS4_RIGHT)) shot_power = 370;//
            if(event_press(PS4_DOWN))  shot_power = 390;//
            if(event_press(PS4_LEFT))  shot_power = 410;//
        }                                               
                                 
    }else if(get_val(PS4_R2)){                       
                               
        ///////////////////////////////////////////    
        // SET THE POWER of the SHOOT                  
        ///////////////////////////////////////////
        // Fine tune Aim                         
        if(press_hold(PS4_LEFT)) {               
            LX = LX - 1;                                  
        }                                               
        if(press_hold(PS4_RIGHT)){                      
            LX = LX + 1;                                  
        }                                               
        if(press_hold(PS4_UP)){                         
            LY = LY - 1;                                  
        }                                               
        if(press_hold(PS4_DOWN)){                       
            LY = LY + 1;                                  
        }                                               
        set_val(PS4_LX, LX );                           
        set_val(PS4_LY, LY );   
    }
    set_val(PS4_UP,0);                              
    set_val(PS4_RIGHT,0);                           
    set_val(PS4_LEFT,0);                            
    set_val(PS4_DOWN,0);                                                   
    ///////////////////////////////////////////      
    // TOP SPIN FK                                   
    if(get_val(XB1_Y)){                              
        FK_mode = TOP_SPIN ;                          
        //shot_power = 450;// 380 / 400               
        combo_run(SHOT_POWER);                        
        set_val(XB1_Y,0);                             
    }                                               
    ///////////////////////////////////////////     
    // SIDE SPIN FK                                 
    // left side                                    
    if(get_val(XB1_X)){                             
        FK_mode = SIDE_SPIN;                          
        side_dir = -100;                              
        //shot_power = 300;                           
        combo_run(SHOT_POWER);                       
        set_val(XB1_X,0);                            
    }                                              
    ///////////////////////////////////////////    
    // SIDE SPIN FK                                 
    // right side                                   
    if(get_val(XB1_B)){                             
        FK_mode = SIDE_SPIN;                          
        side_dir =  100;                              
        //shot_power = 300;                           
        combo_run(SHOT_POWER);                        
        set_val(XB1_B,0);                             
    }                                               
    ///////////////////////////////////////////     
    // KNUCKLEBALL_FK                               
    //                                              
    if(get_val(XB1_A)){                             
        FK_mode = KNUCKLEBALL_FK;                     
        shot_power = 550;                             
        combo_run(SHOT_POWER);                        
        set_val(XB1_A,0);                             
    }                                               
    if(event_press(PS4_L3)){                        
        FK_mode = 0;                                  
        combo_run(SHOT_POWER);                        
    }                                               
     set_val(PS4_R2,0);             
}

combo SHOT_POWER {                                    
	set_val(ShotBtn,100);                               
	wait(shot_power);                                   
	wait(300);                                          
	/////////////////////////////////////////////////   
	//  FREE KICK MODE                                  
	if(FK_mode == TOP_SPIN )  combo_run(TOP_SPIN_FK);    
	if(FK_mode == SIDE_SPIN ) combo_run(SIDE_SPIN_FK);    
	if(FK_mode == KNUCKLEBALL_FK ) combo_run(KNUCKLEBALL);
}                                                       
//--------------------------------------------------- 
combo TOP_SPIN_FK  {                                  
	set_val(PS4_RX,0);                                  
	set_val(PS4_RY,0);                                  
	wait(spin_time);                                           
	set_val(PS4_RX,0);                                  
	set_val(PS4_RY, 100);                               
	wait(spin_time);                                           
	set_val(PS4_RX,0);                                  
	set_val(PS4_RY,0);                                  
	wait(spin_time);                                           
	set_val(PS4_RX,0);                                  
	set_val(PS4_RY,-100);                               
	wait(spin_time);                                           
}                                                     
//--------------------------------------------------- 
combo SIDE_SPIN_FK  {                                 
	set_val(PS4_RX,0);                                  
	set_val(PS4_RY,100);// DOWN                         
	wait(spin_time);                                           
	set_val(PS4_RX,side_dir);// LEFT or RIGHT           
	set_val(PS4_RY,0);                                  
	wait(spin_time);                                           
	set_val(PS4_RX,0);                                  
	set_val(PS4_RY,-100);// UP                          
	wait(spin_time);                                           
}                                                     
//--------------------------------------------------- 
combo KNUCKLEBALL {                                   
	set_val(PS4_RX,0);                                  
	set_val(PS4_RY,100);// DOWN                         
	wait(spin_time);                                           
	set_val(PS4_RX,0);                                  
	set_val(PS4_RY,0);                                  
	wait(spin_time);                                           
	set_val(PS4_RX,0);                                  
	set_val(PS4_RY,-100); // UP                         
	wait(spin_time);                                           
	set_val(PS4_RX,0);                                  
	set_val(PS4_RY,0);                                  
	wait(spin_time);                                           
	set_val(PS4_RX,0);                                  
	set_val(PS4_RY, 100);// DOWN                        
	wait(spin_time);                                           
}                                                     
function press_hold(f_btn) {   
    return event_press(f_btn) || get_val(f_btn) && get_ptime(f_btn) > 250
           && get_ptime(f_btn) % (get_rtime() * 8) == 0;  
} 
//--- Defense V 3.0
// Credits to Dark.Angle 
//=======================================
combo JoCKEY { 
  set_val(PaceCtrol,100);
  wait(150); 
  set_val(PaceCtrol,100);
  set_val(PS4_L3,100);
  wait(150);
  set_val(PS4_L3,0);
  set_val(PaceCtrol,0);
  wait(30);
}

int Teammate_Contain_on = FALSE;
int defence_on = TRUE;

function f_defence (){
    
   //============ COPY THis TO MAIN SECTION ============//
    
	if( get_val(SprintBtn) && (get_val(PassBtn) || get_val(PaceCtrol) ) ){	
	   vm_tctrl(-6);
		
		if( abs(get_val(PS4_LX))>20  || abs(get_val(PS4_LY))>20  ) {
			set_val(PassBtn,0);
			set_val(PaceCtrol,100);
			if(Teammate_Contain_on) set_val(FinesseShot,100);// auto team mate contain
			combo_run(JoCKEY);
		}else{  
			set_val(PassBtn,100);
			
		}
	
	}
	
	if(event_release(PassBtn) || event_release(PaceCtrol)){vm_tctrl(-0); combo_stop(JoCKEY) } 
  
  //==============NEW SENSitivity MODE ==============//
  //This will gives you good left stick dribbling and better control on ball ,, also faster jockey reactions while defending
  //with new defence mode
    if (!get_val(SprintBtn) && !get_val(PassBtn) && !get_val(PS4_TRIANGLE) && !get_val(ShotBtn) && !combo_running(JoCKEY) ){
		sensitivity(PS4_LX, NOT_USE, 88);
		sensitivity(PS4_LY, NOT_USE, 88);
	}else if ( get_val(SprintBtn) && !combo_running(JoCKEY) ) {
		sensitivity(PS4_LX, NOT_USE, 110);
		sensitivity(PS4_LY, NOT_USE, 110);
	} else if ( get_val(SprintBtn) && combo_running(JoCKEY) ) { 
		sensitivity(PS4_LX, NOT_USE, 108);
		sensitivity(PS4_LY, NOT_USE, 108);
	}
}
///////////////////////////////////////////////////
// ZONE FUNCTION
data
(  0, 100, 100, 100,   0, 156, 156, 156, 
 156, 156,   0, 100, 100, 100,   0, 156
);

int move_lx, move_ly, zone_p;

function calc_zone(){
    if(get_val(XB1_LX) >= 50) move_lx = 100;
    else if(get_val(XB1_LX) <= -50) move_lx = -100;
    else move_lx = 0;
    if(get_val(XB1_LY) >= 50) move_ly = 100;
    else if(get_val( XB1_LY) <= -50) move_ly = -100;
    else move_ly = 0;
    
    
    if(move_lx != 0 || move_ly != 0) {
        zone_p = 0; while(zone_p < 8) {
            if(dchar(zone_p) == move_lx && dchar(8 + zone_p) == move_ly) {
                break;
            } zone_p += 1;
        }
    }    
        
}
function calc_relative_xy(d) {
    
        //zone_p += d;
        if(d < 0 ) d = 7;
        else if(d >= 8) d = d - 8;
        move_lx = dchar(d);
        move_ly = dchar(8 + d);   
}
//=========================================================== 
// --- PENALTIES 
//*************************************************   
int onoff_penalty;                                   
int dir;                                      
int LeftRight,UpDown; 
int Pen_X,Pen_Y;
int correct_X,correct_Y;
const int PenaltiX_Y [] []= {
{  87,   0},//0. 1 Right
{ -86,   0},//1. 2 Left
{   0, 100},//2. 3 Down
{   0, -70},//3. 4 Up
{  56,  90},//4. 8 Right Down
{  78, -38},//5. 9 Right Up
{ -56,  90},//6.11 Left Down  
{ -78, -38} //7.13 Left Up 
};
//---------------------------   
function fPenalties () {                              
    
    if(!get_val(PS4_R2)){
		if(event_press(PS4_RIGHT) )LeftRight = 1;// Right
		                                              
		if(event_press(PS4_LEFT) ) LeftRight = 2;// Left
		                                              
		if(event_press(PS4_DOWN))  UpDown    = 3;// Down
		                                              
		if(event_press(PS4_UP))    UpDown    = 4;// Up  
		                                              
		if(LeftRight && !UpDown){                       
		if(LeftRight == 1) dir = 1; // Right          
		else   dir = 2;             // Left           
		                                              
		if(dir == 1 ){                                
		   Pen_X = PenaltiX_Y [0][0] ;  //0.          
		   Pen_Y = PenaltiX_Y [0][1] ;                        
		}                                             
		                                              
		if(dir == 2 ){                                
		   Pen_X = PenaltiX_Y [1][0] ;  //1.           
		   Pen_Y = PenaltiX_Y [1][1] ;                     
		}                                             
		}                                               
		else if(!LeftRight && UpDown){                  
		if(UpDown == 3) dir = 3; // Down              
		else   dir = 4;          // Up                
		if(dir == 3 ){                                
		   Pen_X = PenaltiX_Y [2][0] ;  //2.           
		   Pen_Y = PenaltiX_Y [2][1] ;                   
		}                                             
		                                              
		if(dir == 4 ){                                
		   Pen_X = PenaltiX_Y [3][0] ;  //3.           
		   Pen_Y = PenaltiX_Y [3][1] ;                    
		}                                             
		                                              
		}                                               
		else if(LeftRight && UpDown){                   
		//---------------------------------------       
		  dir = (LeftRight * UpDown) + 5 ;            
		  // Right Down                               
		  if(dir == 8 ){                              
		      Pen_X = PenaltiX_Y [4][0] ;  //4.           
		      Pen_Y = PenaltiX_Y [4][1] ;                      
		  }                                           
		  //Right Up                                  
		  if(dir == 9 ){                              
		      Pen_X = PenaltiX_Y [5][0] ;  //5.           
		      Pen_Y = PenaltiX_Y [5][1] ;                     
		  }
		  // Left Down                                
		  if(dir == 11 ){                             
		      Pen_X = PenaltiX_Y [6][0] ;  //6.           
		      Pen_Y = PenaltiX_Y [6][1] ;                      
		  }           
		  // Left Up                                  
		  if(dir == 13 ){                             
		      Pen_X = PenaltiX_Y [7][0] ;  //7.           
		      Pen_Y = PenaltiX_Y [7][1] ;                        
		  }                                           
		                                  
		}                                               
     }else if(get_val(PS4_R2)){
		if(event_press(PS4_RIGHT) )correct_X += 1;// Right
		                                          
		if(event_press(PS4_LEFT) ) correct_X -= 1;// Left
		                                          
		if(event_press(PS4_DOWN))  correct_Y += 1;// Down
		                                          
		if(event_press(PS4_UP))    correct_Y -= 1;// Up  
     }
     
     	set_val(PS4_LX, Pen_X + correct_X);
     	set_val(PS4_LY, Pen_Y + correct_Y);
     	
      set_val(PS4_UP,   0);                       
      set_val(PS4_DOWN, 0);                       
      set_val(PS4_LEFT, 0);                      
      set_val(PS4_RIGHT,0);                      
      //----  reset the aiming direction  
      if(event_press(XB1_RS)){           
      	LeftRight = 0;                   
      	UpDown    = 0;                  
      	dir       = 0;
      	Pen_X     = 0;
      	Pen_Y     = 0;
      	correct_X = 0;
      	correct_Y = 0;
      }                              
      set_val(XB1_RS,0);           
}                         
//--------------------------------------------------------------
//      Analog Functions                                        
//--------------------------------------------------------------
function RA (xx,yy){ 
	set_val(SKILL_STICK_X,xx);
	set_val(SKILL_STICK_Y,yy);
}                  
function LA (x,y){ 
	set_val(MOVE_X,x);
	set_val(MOVE_Y,y);
}                  
function LA_L_R() {          
	if(right_on) {// right      
		set_val(MOVE_X,inv(LY));  
		set_val(MOVE_Y,LX);       
	}                           
	else {       //  left       
	    set_val(MOVE_X,LY );    
	    set_val(MOVE_Y,inv(LX)); 
    }                         
}                              
function RA_L_R() {             
	if(right_on) {// right          
		set_val(SKILL_STICK_X,inv(LY));
		set_val(SKILL_STICK_Y,LX);      
	}                                  
	else {       //  left               
	    set_val(SKILL_STICK_X,LY );     
	    set_val(SKILL_STICK_Y,inv(LX)); 
    }                                
}                                    
function RA_OPP() {                  
	if(!right_on) {// right             
		set_val(SKILL_STICK_X,inv(LY));   
		set_val(SKILL_STICK_Y,LX);        
	}                                   
	else {       //  left               
	    set_val(SKILL_STICK_X,LY );     
	    set_val(SKILL_STICK_Y,inv(LX)); 
    }                                
}                                    
function RA_UP () {                  
	set_val(SKILL_STICK_X,LX );        
	set_val(SKILL_STICK_Y,LY );        
}                                   
function RA_DOWN () {               
	set_val(SKILL_STICK_X,inv(LX) );   
	set_val(SKILL_STICK_Y,inv(LY) );   
}                                  
function RA_ZERO () {             
	set_val(SKILL_STICK_X,0 );      
	set_val(SKILL_STICK_Y,0 );     
}                             
//--------------------------------------------------------------
//SKILLS LED INDICATION                                         
//--------------------------------------------------------------
function colorled(a,b,c,d) { 
set_led(LED_1,a);            
set_led(LED_2,b);            
set_led(LED_3,c);            
set_led(LED_4,d);            
}// func end                             