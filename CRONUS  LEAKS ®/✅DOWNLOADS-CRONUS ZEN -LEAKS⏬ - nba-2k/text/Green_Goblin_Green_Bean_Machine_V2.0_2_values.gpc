/*

								٭⊹¤.•⨳•.*☆✬ $ꁅꋪꍟꍟꈤ ꁅꂦꌃ꒒ꀤꈤ$ ꁅꋪꍟꍟꈤ ꌃꍟꍏꈤ ꂵꍏꉓꃅꀤꈤꍟ ꃴ2.0 ✬☆*.•⨳•.¤
							
							
				Sorry It's taken so long to make to make adjustments to the last excellent script for ya'll. Im pretty sure yall gonna love this one. I added
				the same dribble set up that i always do since so many of ya'll seem to love it
				Thank Ya'll so much for the love and support it is greatly appreciated.
				please subscribe to my youtube channel need 500 more to hit 1k and monetize - Flex Money Bags AKA Green Goblin. 
    			If You would like to donate here is my paypal - paypal.me/gucciflexbrim59 Enjoy! :)


*VALUES WILL SHOW ON SCREEN FOR ALL 3 OF YOUR SHOT TYPES


 												
 												-/-/-/-/-/-/-/-Instructions-/-/-/-/-/-/-/-

Go to Mycourt if offline (Eyes Red) use ball machine or you can go with a friend just make sure you switch to online mode (Eyes Green)
Shoot all 3 different shots (Jumper, Catch N Shoot, Fade)once you feel comfortable save your values then you should be straight for Online/Rec Play.
If you do need to adjust values just follow the instructions below to do so!


*HOW TO SHOOT*

-Shoot a Regular Jumper = Hold X(Xbox) Hold Square (PS4)
-Shoot a Fade = Hold RT + X(Xbox) Hold R2 + Square(PS4)
-Shoot a Catch & Shoot = Tap X(Xbox) Tap Square(PS4)
-Save Shot Values =  View (Xbox) Options(PS4)


*How To Adjust Values*


-Add +1ms to Jumper = X + Dpad Right(Xbox) Square + Dpad Right(PS4)
-Add -1ms to Jumper = X + Dpad Left(Xbox) Square + Dpad Left(PS4)

-Add +10ms to Jumper = X + Dpad Up(Xbox) Square + Dpad Up(PS4)
-Add -10ms to Jumper = X + Dpad Down(Xbox) Square + Dpad Down(PS4)

-Add +1ms to Catch & Shoot = LB + Dpad Right(Xbox) L1 + Dpad Right(PS4)
-Add -1ms to Catch & Shoot = LB + Dpad Left(Xbox) L1 + Dpad Left(PS4)

-Add +10ms to Catch & Shoot = LB + Dpad Up(Xbox) L1 + Dpad Up(PS4)
-Add -10ms to Catch & Shoot = LB + Dpad Down(Xbox) L1 + Dpad Down(PS4)

-Add +1ms to Fade = RT + Dpad Right(Xbox) R2 + Dpad Right(PS4)
-Add -1ms to Fade = RT + Dpad Left(Xbox) R2 + Dpad Left(PS4)

-Add +10ms to Fade = RT + Dpad Up(Xbox) R2 + Dpad Up(PS4)
-Add -10ms to Fade = RT + Dpad Down(Xbox) R2 + Dpad Down(PS4)

      
      
      $*$*$* Online/Offline Toggle $*$*$*
      +
             LED					LED
        Online = Green			Offline = Red
        
 - To turn online mode on = Menu + Dpad Up(Xbox) Share + Dpad Up(PS4) 
 - To turn back to offline mode = Menu + Dpad Down(Xbox) Share + Dpad Down(PS4) 
 
 
 
 
 #-#/#-#/ DRIBBLE$ /#-#/#-#

-L3 left hand curry slide ( When ball in left hand )
-R3 right hand curry slide ( When Ball in right hand )
-RT + R3 right explosive behind the back ( When Ball in right hand )
-RT + L3 Left explosive behind the back ( When Ball in left hand )




	$$-$$- Advanced Defense -$$-$$

-Hold L2 + R2 for Advanced Defense. 
-Tap RB for auto steal
                                           
 								  

*/
		
							// Offline Default Values (Mr. Green Goblin AKA XBOXGT:iGreen 2EZ Personal Shot Values)
								  
								  //Base:98 Release1:Lonzo Ball Release2:Jerry West Speed: 4/4 Blend: 90/10
								  
								  
								
/**/int CatchNShoot = 400;		int Jumper = 518;		int Fade = 720;/**/


define MAX_RANGE = 330;

int Advdefense = TRUE;
int TimeBetweenTriggers;
int Steal = 1;
int Offline;
int FIND = 1;
const string SHOW1  = "CatchNShoot";
const string SHOW2  = "Jumper";
const string SHOW3  = "Fade";
const string SHOW4  = "Up/Down";

init{  
	CatchNShoot 			= get_pvar(PVAR_1,150,3000,CatchNShoot);
	Jumper 			= get_pvar(PVAR_2,150,3000,Jumper);
	Fade 			= get_pvar(PVAR_3,150,3000,Fade);
	Offline 	= get_pvar(PVAR_4, 0,   1,  Offline);
}

main{

	
	//*-*Advanced Defense
	if(get_val(PS4_L2) && get_val(PS4_R2)) 
	{
		if(FindMax(abs(get_val(PS4_LX)),abs(get_val(PS4_LY))) > 15) 
		{
			TimeBetweenTriggers =  MAX_RANGE - (FindMax(abs(get_val(XB1_LX)),abs(get_val(XB1_LY))) * 3);
			combo_run(ALTERNATE_TRIGGERS);	
		}
			
        }
        
        
		if(event_release(XB1_RB) && (Steal == 1))
		{
			combo_run(STEAL);
		
		}
		
   	
   	//*-*Dribbles
	if(get_val(PS4_R2))
	{		
		if (event_press(PS4_L3)) 
		{
			combo_run(LHExplosiveBB);
		}
		
		if (event_press(PS4_R3)) 
		{
			combo_run(Takeover); 
			combo_run(RHExplosiveBB);
		}
	}
						
		if(get_val(PS4_L3)) 
		{
			combo_run(LHSLIDE); 
			set_val(PS4_L3, 0);
		}
		
		if(get_val(PS4_R3)) 
		{
			combo_run(Takeover); 
			combo_run(RHSLIDE); 
			set_val(PS4_R3, 0);
		}
			
	 	
	 	if(combo_running(RHExplosiveBB) || combo_running(LHExplosiveBB))
	 	{
	 	 combo_stop(LHSLIDE);
	 	 combo_stop(RHSLIDE);
	 	 set_val(PS4_R2, 0);
	 	}


{
	vm_tctrl(10);//Script Speed Can Change between 10/-9
	cls_oled(0);
   	set_val(PS4_ACCX,0);
// ZEN LED
	if (Offline == FALSE){
	set_led(LED_1, 0);
	set_led(LED_2, 2);
	set_led(LED_3, 0);
	set_led(LED_4, 0);
	}
	else if (Offline == TRUE){
	set_led(LED_1, 0);
	set_led(LED_2, 0);
	set_led(LED_3, 2);
	set_led(LED_4, 0);
	}
	
// CATCH N SHOOT
	if (!get_val(PS4_L2) && event_press(PS4_SQUARE)){
		combo_run(CatchNShoot);
    }
	
// JUMPER AND FADES
	if (!get_val(PS4_R2) && get_val(PS4_SQUARE) && get_ptime(PS4_SQUARE) >= Jumper)
		set_val(PS4_SQUARE,0);		
    if (get_val(PS4_R2) && get_val(PS4_SQUARE) && get_ptime(PS4_SQUARE) >= Fade)
    	set_val(PS4_SQUARE,0);

// Switch Between Online and Offline Modes  	  
    if(get_val(PS4_SHARE)){      
    	set_val(PS4_SHARE,0);
    	if(event_press(PS4_DOWN) && Offline == TRUE){
    		set_val(PS4_DOWN,0);
    		Offline = FALSE;
            CatchNShoot = CatchNShoot - 152; 
			Jumper = Jumper - 152; 
			Fade = Fade - 152;
			combo_run(RUMBLE);	
        }
        if(event_press(PS4_UP) && Offline == FALSE){
    		set_val(PS4_UP,0);
    		Offline = TRUE;
        	CatchNShoot = CatchNShoot + 152; 
			Jumper = Jumper + 152; 
	    	Fade = Fade + 152;
			combo_run(RUMBLE);
        }
      
		}
	}
	
// SAVE SHOT VALUES 				
	if (event_press(PS4_OPTIONS)){
        set_pvar(PVAR_1, CatchNShoot);
        set_pvar(PVAR_2, Jumper);
        set_pvar(PVAR_3, Fade);
        set_pvar(PVAR_4, Offline);
    }

// Catch N Shoot Value Adjusting
	if (get_val(PS4_L1)){
		printf(5,5,1,1,SHOW1[0]);
	   	printf(20,30,0,1,SHOW4[0]);
		Get(CatchNShoot,Finds(CatchNShoot));
		if (event_press(PS4_UP)){
			set_val(PS4_UP,0);		
			CatchNShoot += 10;
       		combo_run(RUMBLE);
		}
		if (event_press(PS4_DOWN)){
			set_val(PS4_DOWN,0);		
			CatchNShoot -= 10;
       		combo_run(RUMBLE);
		}
		if (event_press(PS4_LEFT)){
			set_val(PS4_LEFT,0);		
			CatchNShoot -= 1;
       		combo_run(RUMBLE);
		}
		if (event_press(PS4_RIGHT)){
			set_val(PS4_RIGHT,0);		
			CatchNShoot += 1;
       		combo_run(RUMBLE);
		}
	}
	
// Jumper Values Adjusting
	if (get_val(PS4_SQUARE)){
		printf(36,5,1,1,SHOW2[0]);
	   	printf(20,30,0,1,SHOW4[0]);
		Get(Jumper,Finds(Jumper));
		if (event_press(PS4_UP)){
			set_val(PS4_UP,0);		
			Jumper += 10;
       		combo_run(RUMBLE);
		}
		if (event_press(PS4_DOWN)){
			set_val(PS4_DOWN,0);		
			Jumper -= 10;
       		combo_run(RUMBLE);
		}
		if (event_press(PS4_LEFT)){
			set_val(PS4_LEFT,0);		
			Jumper -= 1;
       		combo_run(RUMBLE);
		}
		if (event_press(PS4_RIGHT)){
			set_val(PS4_RIGHT,0);		
			Jumper += 1;
       		combo_run(RUMBLE);
		}
	}

// Fade Value Adjusting
	if (get_val(PS4_R2)){
		printf(45,5,1,1,SHOW3[0]);
	   	printf(20,30,0,1,SHOW4[0]);
		Get(Fade,Finds(Fade));
		if (event_press(PS4_UP)){
			set_val(PS4_UP,0);		
			Fade += 10;	
       		combo_run(RUMBLE);
		}		
		if (event_press(PS4_DOWN)){
			set_val(PS4_DOWN,0);		
			Fade -= 10;		
       		combo_run(RUMBLE);
		}
		if (event_press(PS4_LEFT)){
			set_val(PS4_LEFT,0);		
			Fade -= 1;	
       		combo_run(RUMBLE);
		}		
		if (event_press(PS4_RIGHT)){
			set_val(PS4_RIGHT,0);		
			Fade += 1;		
       		combo_run(RUMBLE);
		}
	}
	


// COMBOS
}


combo CatchNShoot{
	set_val(PS4_SQUARE,100);
	wait(CatchNShoot);
}




combo RUMBLE{
	set_rumble(RUMBLE_A,100);
	set_rumble(RUMBLE_B,100);
	wait(200);
	reset_rumble();
}
//Dribble Moves//


combo LHSLIDE
{ 
	set_val(PS4_RX, 75);
	set_val(PS4_RY, 75);
	wait(400);
}


combo RHSLIDE
{ 
	set_val(PS4_RX, -75);
	set_val(PS4_RY, 75);
	wait(400);
}

combo RHExplosiveBB
{
	set_val(PS4_RX, -75);
	set_val(PS4_RY, 75);
	wait(80);
	set_val(PS4_LX, -75);
	set_val(PS4_LY, -75);
	wait(100);
	set_val(PS4_LX, -75);
	set_val(PS4_LY, -75);
	wait(200);
}
 
combo LHExplosiveBB
{
	set_val(PS4_RX, 75);
	set_val(PS4_RY, 75);
	wait(80);
	set_val(PS4_LX, 75);
	set_val(PS4_LY, -75);
	wait(100);
	set_val(PS4_LX, 75);
	set_val(PS4_LY, -75);
	wait(200);
}



/*
$__$___$__$___$__$___$__$___$__$___$__$___$
   			    **Defense**
$__$___$__$___$__$___$__$___$__$___$__$___$   			    
*/

combo ALTERNATE_TRIGGERS {
    set_val(XB1_LT,100);
    set_val(XB1_RT,0);
    wait(30);
    set_val(XB1_LT,0);
    set_val(XB1_RT,0);
    wait(TimeBetweenTriggers);
    set_val(XB1_RT,100);
    set_val(XB1_LT,0);
    wait(30);
    set_val(XB1_LT,0);
    set_val(XB1_RT,0);
    wait(TimeBetweenTriggers);
}
combo STEAL {
    set_val(XB1_X,100);
    set_val(XB1_LX,0);
    set_val(XB1_LY,0);
    wait(50);
    set_val(XB1_LX,0);
    set_val(XB1_LY,0);
    wait(300);
}

combo Takeover
{
	set_val(PS4_R3, 100);
	wait(100);
}

/*__$__$__$__$__$__$__$__$__$__$
           **FindMax**
  __$__$__$__$__$__$__$__$__$__$*/
  
  
function FindMax(a,b) {
    if(a > b){
        return a;
    }
    return b;
}

function Get(Number,I_Got){if(I_Got >= 5){putc_oled(FIND,(Number / 10000) + 48);Number %= 10000;FIND++;}if(I_Got >= 4){putc_oled(FIND,(Number / 1000) + 48);Number %= 1000;FIND++;}if(I_Got >= 3){putc_oled(FIND,(Number / 100) + 48);Number %= 100;FIND++;}if(I_Got >= 2){putc_oled(FIND,(Number / 10) + 48);Number %= 10;FIND++;}putc_oled(FIND,Number + 48);puts_oled(48,45,1,FIND,1);FIND = 1;}
function Finds(Numbers){Numbers = abs(Numbers);if(Numbers / 10000 > 0) return 5;if(Numbers / 1000 > 0) return 4;if(Numbers / 100 > 0) return 3;if(Numbers / 10 > 0) return 2;return 1;}