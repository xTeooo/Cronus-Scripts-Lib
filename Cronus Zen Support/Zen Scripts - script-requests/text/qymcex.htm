<!doctype html><html><head><link rel="stylesheet" type="text/css" href="//www.redditstatic.com/videoplayer.ANmi3DZjWG4.css" media="all"><link rel="stylesheet" type="text/css" href="//www.redditstatic.com/videoplayercontrols.a_TwaTy76-k.css" media="all"><script type="text/javascript" src="//www.redditstatic.com/standalone-videoplayer.UykoBURbPUg.js"></script><style type="text/css">body, object, embed, div, span, p { margin: 0; padding: 0; }</style></head><body><div class="media-preview no-constraints-when-pinned" id="media-preview-qymcex" style="max-width: 100%; max-height: 100%;" ><div class="media-preview-content video-player"><div class="no-constraints-when-pinned" style="max-width: 100%; max-height: 100%;" ><div id="video-qymcex" class="landscape" data-hls-url="https://v.redd.it/uqnnopreev081/HLSPlaylist.m3u8?a=1669444190%2CNTgzYTAxZmVmNzQ5ZTJmOTlkZGFlZjExMDEzNzdiYzI4NTY4M2JmMjYxM2MwZDA2MTJmMjQ3NWQyZGRhMDkyMQ%3D%3D&amp;v=1&amp;f=sd" data-id-36="qymcex" data-link-url="https://v.redd.it/uqnnopreev081" data-mpd-url="https://v.redd.it/uqnnopreev081/DASHPlaylist.mpd?a=1669444190%2CZjc2Y2FmMzYyODhmYTM5MDliMmJkYjJhMTk5MjEzMDk1OWU1ZDY0MjZiNTM1Nzg1YmUwYmU3ODY1ZTJmOGVmOA%3D%3D&amp;v=1&amp;f=sd" data-obfuscated-poster-url="" data-orientation="landscape" data-seek-preview-url="https://v.redd.it/uqnnopreev081/DASH_96.mp4" data-video-height="486" data-video-width="864.0" data-pinned-height="135" data-pinned-width="240.0" data-max-pinned-width="240" data-is-gif="false" ></div><script type="text/javascript">(function() { var thing = {"obfuscatedPosterUrl": null, "context": "mediaembed", "isGif": false}; var autoplay = true; if (thing.obfuscatedPosterUrl){ autoplay = false; } if (r.config && !r.config.pref_video_autoplay && thing.context === "comments") { autoplay = false; } var play_pause_click_action = autoplay ? "pause" : "play"; var play_pause_click_toggle_action = autoplay ? "play" : "pause"; var play_pause_vector_from = autoplay ? "m5,5l15,7.5l0,15l-15,7.5l0,-30m15,7.5l15,7.5l0,0l-15,7.5l0,-15" : "m5,5l12,0l0,30l-12,0l0,-30m18,0l12,0l0,30l-12,0l0,-30"; var play_pause_vector_to = autoplay ? "m5,5l12,0l0,30l-12,0l0,-30m18,0l12,0l0,30l-12,0l0,-30" : "m5,5l15,7.5l0,15l-15,7.5l0,-30m15,7.5l15,7.5l0,0l-15,7.5l0,-15"; var videoPlayerElement = $("#video-qymcex"); var isMobile = r.utils.isMobile(); var canPlayDash = (typeof (window.MediaSource || window.WebKitMediaSource) === "function"); var videoOptions = { id: videoPlayerElement.data("id36"), linkUrl: videoPlayerElement.data("linkUrl"), src: canPlayDash ? videoPlayerElement.data("mpdUrl") : videoPlayerElement.data("hlsUrl"), type: canPlayDash ? RedditVideoPlayer.Types.MPD : RedditVideoPlayer.Types.HLS, autoplay: autoplay, poster: null, loop: false, orientation: videoPlayerElement.data("orientation"), }; if (isMobile) { videoOptions.enableStorage = false; videoOptions.uiControls = false; if (thing.isGif) { videoOptions.clickAction = RedditVideoPlayer.ClickActions.NONE; } else { videoOptions.controls = true; } } var redditVideoPlayer = new RedditVideoPlayer(videoPlayerElement, videoOptions); videoPlayerElement.data("video-player-object", redditVideoPlayer); redditVideoPlayer.setAspectRatio(videoPlayerElement.data("videoHeight") / videoPlayerElement.data("videoWidth")); if (!isMobile) { var bufferingControlsTree = $.parseHTML( '<div class="buffering-controls">' + '<div class="centered horizontal">' + '<div class="buffering-indicator active">' + '<div class="spinner-layer">' + '<div class="circle-clipper left">' + '<div class="circle"></div>' + '</div>' + '<div class="gap-patch">' + '<div class="circle"></div>' + '</div>' + '<div class="circle-clipper right">' + '<div class="circle"></div>' + '</div>' + '</div>' + '</div>' + '</div>' + '</div>' ); var bufferingControlsOptions = { behavior: RedditVideoController.Behaviors.BUFFERING, startVisible: false, fadeInDuration: 0, fadeOutDuration: 0, }; var bufferingControls = new RedditVideoController(bufferingControlsTree, bufferingControlsOptions); redditVideoPlayer.addUiController(bufferingControls); var endedControlsTree = $.parseHTML( '<div class="ended-controls hide-when-pinned">' + '<div class="centered vertical">' + '<button data-control-type="click" data-action="replay">' + '<img src="//www.redditstatic.com/video-refresh.svg" >' + '</button>' + '<span class="replay-video">Replay Video</span>' + '</div>' + '</div>' ); var endedControlsOptions = { behavior: RedditVideoController.Behaviors.COMPLETED, startVisible: false, fadeInDuration: 400, fadeOutDuration: 0, }; var endedControls = new RedditVideoController(endedControlsTree, endedControlsOptions); redditVideoPlayer.addUiController(endedControls); var playbackControlsTree = $.parseHTML( '<div class="playback-controls right bottom left hide-when-pinned">' + '<a class="control-button permalink" ' + 'tooltip-string="View post on Reddit"' + 'data-control-type="click" ' + 'target="_blank" ' + 'href="https://v.redd.it/uqnnopreev081">' + '<img src="//www.redditstatic.com/video-snoo.svg" />' + '</a>' + '<button ' + 'class="control-button play-pause" ' + 'tooltip-string="Pause"' + 'tooltip-string-toggle="Play" ' + 'data-control-type="click" ' + 'data-action="' + play_pause_click_action + '" ' + 'data-toggle-action="' + play_pause_click_toggle_action + '">' + '<svg class="play-pause" viewbox="0 0 40 40">' + '<path d="' + play_pause_vector_to + '">' + '<animate ' + 'begin="indefinite" ' + 'attributeType="XML" ' + 'attributeName="d" ' + 'fill="freeze" ' + 'to="' + play_pause_vector_to + '" ' + 'from="' + play_pause_vector_from + '" ' + 'dur="0.1s" ' + 'keySplines=".4 0 1 1" ' + 'repeat="1">' + '</animate>' + '</path>' + '</svg>' + '</button>' + '<span class="time-label" ' + 'data-control-type="text" ' + 'data-action="elapsedTime">' + '0:00' + '</span>' + '<div data-control-type="seekBar" ' + 'data-preview-video-src="' + videoPlayerElement.data('seekPreviewUrl') + '">' + '</div>' + '<span class="time-label" ' + 'data-control-type="text" ' + 'data-action="totalTime">' + '0:00' + '</span>' + '<div class="control-button volume-container">' + '<div data-control-type="volumeSlider"></div>' + '<button class="volume" data-control-type="click" data-action="unmute" data-toggle-action="mute">' + '<img class="mute" src="//www.redditstatic.com/video-volume.svg">' + '<img class="unmute" src="//www.redditstatic.com/video-mute.svg">' + '</button>' + '</div>' + '<div class="control-button settings-container" ' + 'tooltip-string="Settings">' + '<label class="settings has-submenu" data-control-type="click">' + '<input class="settings" type="checkbox">' + '<img class="settings-open" src="//www.redditstatic.com/video-settings.svg">' + '<img class="settings-close" src="//www.redditstatic.com/video-settings-open.svg">' + '<span class="submenu">' + '<div data-control-type="settingsMenu"></div>' + '</span>' + '</label>' + '</div>' + '<button class="control-button fullscreen" ' + 'tooltip-string="Fullscreen"' + 'tooltip-string-toggle="Exit Fullscreen" ' + 'data-control-type="click" ' + 'data-action="fullscreenRequest" ' + 'data-toggle-action="fullscreenCancel">' + '<img class="expand" src="//www.redditstatic.com/video-expand.svg">' + '<img class="collapse" src="//www.redditstatic.com/video-collapse.svg">' + '</button>' + '</div>' ); var playbackControlsOptions = { behavior: RedditVideoController.Behaviors.MOUSE_MOVE, }; var playbackControls = new RedditVideoController(playbackControlsTree, playbackControlsOptions); redditVideoPlayer.addUiController(playbackControls); if (r.config && !r.config.pref_video_autoplay && thing.context === "comments") { var interstitialControlsTree = $.parseHTML( '<div class="interstitial-controls hide-when-pinned">' + '<div class="centered vertical">' + '<button data-control-type="click" data-action="play">' + '<svg class="play-pause" viewbox="0 0 36 36">' + '<path d="m5,5l15,7.5l0,15l-15,7.5l0,-30m15,7.5l15,7.5l0,0l-15,7.5l0,-15"></path>' + '</svg>' + '</button>' + '</div>' + '</div>' ); var interstitialControlsOptions = { behavior: RedditVideoController.Behaviors.INTERSTITIAL, startVisible: true, fadeInDuration: 0, fadeOutDuration: 400, }; var interstitialControls = new RedditVideoController(interstitialControlsTree, interstitialControlsOptions); redditVideoPlayer.addUiController(interstitialControls); } $(playbackControlsTree).find('input.settings').change(function() { if ($(this).is(':checked')) { firePlayerEvent.call(redditVideoPlayer, null, null, {verb: 'click', noun: 'settings'}); redditVideoPlayer.setClickAction(RedditVideoPlayer.ClickActions.NONE); } else { redditVideoPlayer.setClickAction(RedditVideoPlayer.ClickActions.PLAY_PAUSE); } }); } if (isMobile && thing.isGif) { $(videoPlayerElement).find("video").bind("webkitendfullscreen", function() { this.play(); }); redditVideoPlayer.mute(); } $(document.body).on("interstitial:destroy", function(event) { if ("t3_qymcex" == event.expando.id) { redditVideoPlayer.play(); } }); var parent = $("#media-preview-qymcex").parent(); var hadInterstitial = parent.hasClass("expando") && !(parent.hasClass("expando--with-interstitial")) && !(parent.hasClass("expando-uninitialized")) && "" != ""; if (hadInterstitial && !isMobile) { $(videoPlayerElement).find("video")[0].addEventListener("canplay", function() { redditVideoPlayer.play(); }) } var playPauseButtons = $(videoPlayerElement).find("button.play-pause"); var isPlaying = autoplay; redditVideoPlayer.addActionCompletedCallback(function(action, value) { if ((action == RedditVideoPlayer.Actions.PLAY && !isPlaying) || (action == RedditVideoPlayer.Actions.PAUSE && isPlaying)) { playPauseButtons.each(function() { var animation = $(this).find('animate').first(); var to = animation.attr('to'); var from = animation.attr('from'); animation.attr({ "from": to, "to": from }); if ('beginElement' in animation[0]) { animation.get(0) .beginElement(); } else { var path = $(this).find('path'); path.attr({"d": from}); } }); isPlaying = !isPlaying; } else if (action == RedditVideoPlayer.Actions.NONE && thing.isGif && isMobile) { redditVideoPlayer.toggleFullScreen(); return; } var settings = $(playbackControlsTree).find("input.settings"); if (settings.prop("checked")) { settings.prop("checked", false); redditVideoPlayer.setClickAction(RedditVideoPlayer.ClickActions.PLAY_PAUSE); } }); var postElement = videoPlayerElement.closest('.thing.link'); r.analytics.observeAdVideoPlayer(postElement, videoPlayerElement); redditVideoPlayer.addActionCompletedCallback(function(action, value) { var actions = [ RedditVideoPlayer.Actions.BUFFERING, RedditVideoPlayer.Actions.PAUSE, RedditVideoPlayer.Actions.PLAYING, RedditVideoPlayer.Actions.REPLAY, RedditVideoPlayer.Actions.SEEK_JUMP, RedditVideoPlayer.Actions.SET_CURRENT_TIME, RedditVideoPlayer.Actions.FULLSCREEN_REQUEST, RedditVideoPlayer.Actions.FULLSCREEN_CANCEL, RedditVideoPlayer.Actions.UNMUTE, RedditVideoPlayer.Actions.MUTE, RedditVideoPlayer.Actions.SET_VOLUME, RedditVideoPlayer.Actions.DURATION_CHANGE, ]; if (actions.indexOf(action) >-1) { var targetElement = $(this.root).closest('.thing.link'); var playerData = { muted: redditVideoPlayer.muted, volume: redditVideoPlayer.volume, duration: redditVideoPlayer.duration, }; r.analytics.handleVideoAdEvent(action, value, playerData, targetElement); } }); var lastTime = 0; redditVideoPlayer.addTimeUpdateHandler(function(currentTime, duration) { var targetElement = $(this.root).closest('.thing.link'); var INTERVAL = 0.5; var timeDiff = currentTime - lastTime; lastTime = currentTime; if (timeDiff >0 && timeDiff< INTERVAL) { r.analytics.handleVideoTimeUpdate(currentTime, timeDiff, duration, targetElement); } }); function firePlayerEvent(action, value, extras) { extras = (typeof extras === 'object') ? extras : {}; var verb = extras.verb || ''; var noun = extras.noun || ''; var source = extras.source || 'videoplayer'; var maxTimestamp = this.maxPlayed * 1000; var durationMs = this.duration * 1000; var timeMs = this.currentTime * 1000; var pinnableElement = $(this.root).closest('.pinnable-content'); var targetElement = $(this.root).closest('.thing.link'); var targetData = targetElement.data(); var videoState = { maxTimestampServed: parseInt(maxTimestamp), percentServed: maxTimestamp / durationMs, duration: parseInt(durationMs), time: parseInt(timeMs), isNsfw: targetElement.hasClass('over18'), isSpoiler: targetElement.hasClass('spoiler'), isPinned: pinnableElement.hasClass('pinned'), isVertical: this.orientation === RedditVideoPlayer.Orientations.PORTRAIT, firstFrameTime: this.firstFrameTime, loadStartTime: this.loadStartTime, }; r.analytics.videoPlayerEvent(source, verb, noun, targetData, videoState); } redditVideoPlayer.addActionCompletedCallback(firePlayerEvent); $(playbackControlsTree).find('a.permalink').click(function() { firePlayerEvent.call(redditVideoPlayer, null, null, {verb: 'click', noun: 'snoo'}); }); })();</script></div></div></div></body></html>