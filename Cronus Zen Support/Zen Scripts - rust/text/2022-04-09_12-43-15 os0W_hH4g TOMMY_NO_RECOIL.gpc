
/*
  _   _                       _____               __              _____                                             
 | \ | |                     |  __ \             / _|            / ____|                                            
 |  \| | _____   _____ _ __  | |__) |_ _ _   _  | |_ ___  _ __  | (___   ___ __ _ _ __ ___  _ __ ___   ___ _ __ ___ 
 | . ` |/ _ \ \ / / _ \ '__| |  ___/ _` | | | | |  _/ _ \| '__|  \___ \ / __/ _` | '_ ` _ \| '_ ` _ \ / _ \ '__/ __|
 | |\  |  __/\ V /  __/ |    | |  | (_| | |_| | | || (_) | |     ____) | (_| (_| | | | | | | | | | | |  __/ |  \__ \
 |_|_\_|\___| \_/ \___|_|  _ |_|   \__,_|\__, | |_| \___/|_|    |_____/ \___\__,_|_| |_| |_|_| |_| |_|\___|_|  |___/
  / ____|         (_)     | |             __/ |                                                                     
 | (___   ___ _ __ _ _ __ | |_ ___       |___/                                                                      
  \___ \ / __| '__| | '_ \| __/ __|                                                                                 
  ____) | (__| |  | | |_) | |_\__ \                                                                                 
 |_____/ \___|_|  |_| .__/ \__|___/                                                                                 
                    | |                                                                                             
                    |_|                        
   ____                      _____                          
  / __ \                    / ____|                         
 | |  | |_ __   ___ _ __   | (___   ___  _   _ _ __ ___ ___ 
 | |  | | '_ \ / _ \ '_ \   \___ \ / _ \| | | | '__/ __/ _ \
 | |__| | |_) |  __/ | | |  ____) | (_) | |_| | | | (_|  __/
  \____/| .__/ \___|_| |_| |_____/ \___/ \__,_|_|  \___\___|
  ______| |            _          ______    _ _ _           
 |  ____|_|           | |        |  ____|  | (_) |          
 | |__ _ __ ___  ___  | |_ ___   | |__   __| |_| |_         
 |  __| '__/ _ \/ _ \ | __/ _ \  |  __| / _` | | __|        
 | |  | | |  __/  __/ | || (_) | | |___| (_| | | |_         
 |_|  |_|  \___|\___|  \__\___/  |______\__,_|_|\__|
                                                                                                                    
VIBRATION-25% 
X-70% 
Y-70% 
ADS-40% 
1x-40% 
4x-70%
DEADZONE L-10%
DEADZONE R-10% 
*/                                                                               
      

define AIM_X    = PS4_RX;
define AIM_Y    = PS4_RY;
define STRAFE   = PS4_LX;
define WALK     = PS4_LY;

define DeadZone = 10;
int AntiRecoil_Y; // vertical antirecoil
int AntiRecoil_X; // horizontal antirecoil


main {
 
    if(get_val(PS4_R2))
    {
        AntiRecoil_Y = 37; 
        AntiRecoil_X = 8; 

        if(get_ptime(PS4_R2) >= 125)   
        {
            AntiRecoil_Y = 37; 
            AntiRecoil_X = 7; 
        }
          if(get_ptime(PS4_R2) >= 250)   
        {
            AntiRecoil_Y = 35; 
            AntiRecoil_X = 7; 
        }

        if(get_ptime(PS4_R2) >= 375)  
        {
            AntiRecoil_Y = 35; 
            AntiRecoil_X = 7; 
        }

        if(get_ptime(PS4_R2) >= 500)  
        {
            AntiRecoil_Y = 35; 
            AntiRecoil_X = -5; 
                 
        }
            if(get_ptime(PS4_R2) >= 625)  
        {
            AntiRecoil_Y = 35; 
            AntiRecoil_X = -5; 
            
            
        }   
        if(get_ptime(PS4_R2) >= 750)  
        {
            AntiRecoil_Y = 35; 
            AntiRecoil_X = -4; 
            
            
        }   
        if(get_ptime(PS4_R2) >= 875)  
        {
            AntiRecoil_Y = 33; 
            AntiRecoil_X = 3; 
            
            
        }   
        if(get_ptime(PS4_R2) >= 1000)  
        {
            AntiRecoil_Y = 33; 
            AntiRecoil_X = 3; 
            
            
        }
       if(get_ptime(PS4_R2) >= 1125)  
        {
            AntiRecoil_Y = 33; 
            AntiRecoil_X = 3; 
            
            
        }
       if(get_ptime(PS4_R2) >= 1250)  
        {
            AntiRecoil_Y = 28; 
            AntiRecoil_X = 3; 
            
            
        }
       if(get_ptime(PS4_R2) >= 1375)  
        {
            AntiRecoil_Y = 28; 
            AntiRecoil_X = 2; 
            
            
        }
       if(get_ptime(PS4_R2) >= 1500)  
        {
            AntiRecoil_Y = 28; 
            AntiRecoil_X = 2; 
            
            
        }
       if(get_ptime(PS4_R2) >= 1625)  
        {
            AntiRecoil_Y = 24; 
            AntiRecoil_X = -2; 
            
            
        }
       if(get_ptime(PS4_R2) >= 1750)  
        {
            AntiRecoil_Y = 22; 
            AntiRecoil_X = -2; 
            
            
        }
          if(get_ptime(PS4_R2) >= 1875)  
        {
            AntiRecoil_Y = 22; 
            AntiRecoil_X = 3; 
            
            
        }
          if(get_ptime(PS4_R2) >= 2000)  
        {
            AntiRecoil_Y = 22; 
            AntiRecoil_X = 3; 
            
            
        }
          if(get_ptime(PS4_R2) >= 2125)  
        {
            AntiRecoil_Y = 22; 
            AntiRecoil_X = 2; 
            
            
        }
          if(get_ptime(PS4_R2) >= 2250)  
        {
            AntiRecoil_Y = 22; 
            AntiRecoil_X = 2; 
            
            
        }
          if(get_ptime(PS4_R2) >= 2375)  
        {
            AntiRecoil_Y = 22; 
            AntiRecoil_X = 2; 
            
            
        }
          if(get_ptime(PS4_R2) >= 2500)  
        {
            AntiRecoil_Y = 0; 
            AntiRecoil_X = 0; 
            
            
        }
      
       
        set_val(PS4_RY, SmartSens(AntiRecoil_Y, PS4_RY));
        set_val(PS4_RX, SmartSens(AntiRecoil_X, PS4_RX));
    }
}
main{
     deadzone(PS4_L2,PS4_R2,99,99);

    

}
main{
    if(get_ival(PS4_L2) > 1)
    set_val(PS4_L2, 100);

    if(get_ival(PS4_R2) > 1)
    set_val(PS4_R2, 100);

    

}
main {

block_rumble();



}
int SmartSens;

function SmartSens(f_val, f_axis) { 

    SmartSens = ( (f_val * ( 100 - abs( get_val(f_axis) ) ) ) / 100); 

    return clamp(get_val(f_axis) + SmartSens, -100, 100);
    
}


main {
    RemoveStickNoise();
}

function RemoveStickNoise() {
    if (abs(get_val(AIM_Y)) < DeadZone && abs(get_val(AIM_X)) < DeadZone) 
    {
        set_val(AIM_Y, 0);
        set_val(AIM_X, 0);
    }

    if (abs(get_val(STRAFE)) < DeadZone && abs(get_val(WALK)) < DeadZone) 
    {
        set_val(STRAFE, 0);
        set_val(WALK, 0);
    }
}