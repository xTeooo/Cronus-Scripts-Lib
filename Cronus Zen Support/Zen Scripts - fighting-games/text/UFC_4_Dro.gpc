
 
// MuayThai 2
//Author: zDarkDro
// Mapped to PS
// Mapped to LEFT
// Mapped to TOUCH
// Mapped to Down
// Mapped to L3
// Mapped to R3
// Mapped to RIGHT
// Square
// Circle
 
 
 // unmap PS4_PS;
 // unmap PS4_SHARE;
 
 
int active = FALSE;
 
main {
 
 
    if (get_val(PS4_SHARE)) {
        combo_run(c_2PeiceToTheBody);
    }
 
        if (get_val(PS4_OPTIONS)) {
        combo_run(c_2PeiceToTheBody2);
    }
 
 
        if (get_val(PS4_LEFT)) {
        combo_run( c_2PeiceToTheHeadAndBody);
    } 
 
 
        if (get_val(PS4_UP)) {
        combo_run(c_2PeiceToTheHead);
    }
 
 
    if (get_val(PS4_TOUCH)) {
        combo_run(c_StraightPunchLeadKick);
    }
    if (get_val(PS4_DOWN)) {
        combo_run(c_Str8Uppercut);
    }
    if (get_val(PS4_L3)) {
        combo_run(c_IronSharifCombo);
    }
        // Mapped to R3
    if(get_val(PS4_R3)) {
        combo_run(c_XsuCamdro);
    }
    if (get_val(PS4_RIGHT)) {
        combo_run(c_Str8Uppercut2);
    }
 
    if ((get_val(PS4_R2)) && (get_val(PS4_LEFT))) {
        combo_run(c_DenyLeft);
        combo_stop(c_JabLegKick);
    }
 
    if ((get_val(PS4_R2)) && (get_val(PS4_RIGHT))) {
        combo_run(c_DenyRight);
        combo_stop(c_Str8Uppercut2);
    }
 
    if ((get_val(PS4_R2)) && (get_val(PS4_UP))) {
        combo_run(c_DenyUp);
        combo_stop(c_Str8Uppercut2);
    }
 
 
    if ((get_val(PS4_R2)) && (get_val(PS4_DOWN))) {
        combo_run(c_DenyDown);
        combo_stop(c_Str8Uppercut);
    }  
 
 
 
///////////////////// FAKES
 
 
 
        if ((get_val(PS4_PS)) && (get_val(PS4_DOWN))) {
        combo_run(c_Str8Uppercut);
        combo_stop(c_Str8Uppercut);
    }
 
 
            if ((get_val(PS4_PS)) && (get_val(PS4_LEFT))) {
        combo_run(c_Str8Uppercut);
        combo_stop(c_2PeiceToTheHeadAndBody);
    }
 
            if ((get_val(PS4_PS)) && (get_val(PS4_UP))) {
        combo_run(c_2PeiceToTheHeadAndBody);
        combo_stop(c_Str8Uppercut);
    }
 
 
            if ((get_val(PS4_PS)) && (get_val(PS4_RIGHT))) {
        combo_run(c_2PeiceToTheHeadAndBody);
        combo_stop(c_Str8Uppercut2);
    }
 
 
 
 
 
 
 
 
 
 
 
 
    // EXTRA
 
 
        if ((get_val(PS4_L2)) && (get_val(PS4_DOWN))) {
        combo_run(c_TAKEDOWN);
        combo_stop(c_Str8Uppercut);
    }
 
        if ((get_val(PS4_SQUARE)) && (get_val(PS4_UP))) {
        combo_run(c_GetUp);
        combo_stop(c_Str8Uppercut);
    }
 
 
 
 
}
 
 
 
 combo c_GetUp {
    // GET UP
    set_val(PS4_SQUARE, 100);
    set_val(PS4_RY, -100);
    wait(1700); 
 }
 
 combo c_HighTakedown {
    set_val(PS4_RX, 100);
    set_val(PS4_L2, 100);
    set_val(PS4_L1, 100);
    wait(1700);
 
}
 
combo c_TAKEDOWN {
    set_val(PS4_RY,  100);
    wait(1700);
    set_val(PS4_RY, 0);
}
 
 
 
 
////////////////////////////////////////////////////////
 /////////QUICK DENIALS
 
combo c_DenyLeft {
    set_val(PS4_RX,  -100);
    wait(60);
    set_val(PS4_RX, 0);
}
 
combo c_DenyRight {
    set_val(PS4_RX, 100);
    wait(80);
    set_val(PS4_RX, 0);
}
 
combo c_DenyDown {
    set_val(PS4_RY, 100);
    wait(80);
    set_val(PS4_RY, 0);
}
 
combo c_DenyUp {
    set_val(PS4_RY,  -100);
    wait(80);
    set_val(PS4_RY, 0);
}
 
////////////////////////////////////////////////
////// TRANSITION FAKES
 
 
 
 
 

 
 
 
 
combo c_Str8Uppercut {
    set_val(PS4_TRIANGLE, 100);
    wait(80);
    set_val(PS4_LX,  -30);
    set_val(PS4_TRIANGLE, 100);
    wait(10);
    set_val(PS4_LX,  -57);
    set_val(PS4_TRIANGLE, 0);
    wait(10);
    set_val(PS4_LX,  -94);
    wait(10);
    set_val(PS4_LX,  -100);
    wait(60);
    set_val(PS4_LX,  -100);
    set_val(PS4_SQUARE, 100);
    wait(80);
    set_val(PS4_LX, 0);
    set_val(PS4_SQUARE, 100);
    wait(30);
    set_val(PS4_SQUARE, 0);
}
 
combo c_IronSharifCombo {
    // Triangle
    set_val(PS4_TRIANGLE, 100);
    wait(125); wait(125);
 
    // SQUARE
    set_val(PS4_SQUARE, 100);
    set_val(PS4_L2, 100); 
    wait(125); wait(125);
 
    // Triangle
    set_val(PS4_TRIANGLE, 100);
    set_val(PS4_L2, 100);
    wait(150); wait(150); 
 
    // SQUARE
    set_val(PS4_SQUARE, 100);
    set_val(PS4_L2, 100);
    wait(40); wait(40);
}
 
 
 
 
 
 
 
combo c_2PeiceToTheBody {
 
    // Triangle
    set_val(PS4_L2, 100);
    set_val(PS4_TRIANGLE, 100);
    wait(125); wait(125); 
 
    // SQUARE
    set_val(PS4_L2, 100);
    set_val(PS4_SQUARE, 100);
    wait(100); wait(100);
 
    //Dash Out
    set_val(PS4_LX, -100);
    wait(100); wait(100);
 
}
 
 
combo c_2PeiceToTheBody2 {
 
    // Triangle
    set_val(PS4_L2, 100);
    set_val(PS4_TRIANGLE, 100);
    wait(125); wait(125); 
 
    // SQUARE
    set_val(PS4_L2, 100);
    set_val(PS4_SQUARE, 100);
    wait(100); wait(100);
 
    //Dash Out
    set_val(PS4_LX, 100);
    wait(100); wait(100);
 
}
 
 
/////////////////////////////////////////////////
   ///////// Red 
 
combo c_2PeiceToTheHead1{
 
 
    // SQUARE
    set_val(PS4_SQUARE, 100);
    wait(100); wait(100);
 
    // Triangle
    set_val(PS4_TRIANGLE, 100);
    wait(125); wait(125); 
 
    //Dash Out
    set_val(PS4_LX, -100);
    wait(100); wait(100);
 
}
 
 
 
combo c_2PeiceToTheHeadAndBody1 {
 
    // JAB
    set_val(PS4_SQUARE, 100);
    wait(125); wait(125); 
 
    // STRAIGHT TO THE BODY
    set_val(PS4_L2, 100);
    set_val(PS4_TRIANGLE, 100);
    wait(100); wait(100);
 
    //Dash Out
    set_val(PS4_LX, -100);
    wait(100); wait(100);
 
}
 
 
 
 
 
//////////////////////////////////////////////////////////////////////////////
 
 //////////////// Blue 
 
 
 
 
combo c_2PeiceToTheHead{
 
 
    // SQUARE
    set_val(PS4_SQUARE, 100);
    wait(100); wait(100);
 
    // Triangle
    set_val(PS4_TRIANGLE, 100);
    wait(125); wait(125); 
 
    //Dash Out
    set_val(PS4_LX, 100);
    wait(100); wait(100);
 
}
 
 
 
combo c_2PeiceToTheHeadAndBody {
 
    // JAB
    set_val(PS4_SQUARE, 100);
    wait(125); wait(125); 
 
    // STRAIGHT TO THE BODY
    set_val(PS4_L2, 100);
    set_val(PS4_TRIANGLE, 100);
    wait(100); wait(100);
 
    //Dash Out
    set_val(PS4_LX, 100);
    wait(100); wait(100);
 
}
 
 
 
 
 
 
 
 
 
 
 
 
 
combo c_Str8Uppercut2 {
    set_val(PS4_TRIANGLE, 100);
    wait(130);
    set_val(PS4_TRIANGLE, 0);
    wait(10);
    set_val(PS4_LX, 34);
    wait(20);
    set_val(PS4_LX, 55);
    wait(20);
    set_val(PS4_LX, 83);
    wait(10);
    set_val(PS4_LX, 100);
    wait(10);
    set_val(PS4_LX, 100);
    set_val(PS4_SQUARE, 100);
    wait(100);
    set_val(PS4_LX, 0);
    set_val(PS4_SQUARE, 100);
    wait(10);
    set_val(PS4_LX,  -53);
    set_val(PS4_SQUARE, 100);
    wait(10);
    set_val(PS4_LX, 0);
    set_val(PS4_SQUARE, 100);
    wait(10);
    set_val(PS4_SQUARE, 0);
}
 
combo c_XsuCamdro {
    // Triangle
    set_val(PS4_TRIANGLE, 100);
    wait(125); wait(125);
 
    // SQUARE
    set_val(PS4_SQUARE, 100);
    set_val(PS4_L2, 100);
    wait(125); wait(125);
 
    // Triangle
    set_val(PS4_TRIANGLE, 100); 
    wait(30); wait(30);
 
}
combo c_StraightPunchLeadKick {
    set_val(PS4_TRIANGLE, 100);
    wait(120);
    set_val(PS4_TRIANGLE, 0);
    wait(140);
    set_val(PS4_CROSS, 100);
    wait(80);
    set_val(PS4_CROSS, 0);
}
 
combo c_JabLegKick {
    set_val(PS4_SQUARE, 80);
    wait(100);
    wait(100);
    set_val(PS4_CIRCLE, 80);
    wait(50);
    wait(50);
}
 
 
 
/* function f_color(c1, c2, c3, c4) {
    set_led(LED_1, c1);
    set_led(LED_2, c2);
    set_led(LED_3, c3);
    set_led(LED_4, c4);
} 
*/
 
 main { // remapping code 
    set_val(PS4_PS, 0);
    set_val(PS4_SHARE, 0);
    set_val(PS4_OPTIONS, 0);
}
 
 