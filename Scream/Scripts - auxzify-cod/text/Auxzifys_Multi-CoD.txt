/*
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 ________  ___  ___     ___    ___ ________  ___  ________ ___    ___ ________                  
|\   __  \|\  \|\  \   |\  \  /  /|\_____  \|\  \|\  _____\\  \  /  /|\   ____\                 
\ \  \|\  \ \  \\\  \  \ \  \/  / /\|___/  /\ \  \ \  \__/\ \  \/  / | \  \___|_                
 \ \   __  \ \  \\\  \  \ \    / /     /  / /\ \  \ \   __\\ \    / / \ \_____  \               
  \ \  \ \  \ \  \\\  \  /     \/     /  /_/__\ \  \ \  \_| \/  /  /   \|____|\  \              
   \ \__\ \__\ \_______\/  /\   \    |\________\ \__\ \__\__/  / /       ____\_\  \             
    \|__|\|__|\|_______/__/ /\ __\    \|_______|\|__|\|__|\___/ /       |\_________\            
                       |__|/ \|__|                       \|___|/        \|_________|            
                                                                                                
                                                                                                
 _____ ______   ___  ___  ___   _________  ___                 ________  ________  ________     
|\   _ \  _   \|\  \|\  \|\  \ |\___   ___\\  \               |\   ____\|\   __  \|\   ___ \    
\ \  \\\__\ \  \ \  \\\  \ \  \\|___ \  \_\ \  \  ____________\ \  \___|\ \  \|\  \ \  \_|\ \   
 \ \  \\|__| \  \ \  \\\  \ \  \    \ \  \ \ \  \|\____________\ \  \    \ \  \\\  \ \  \ \\ \  
  \ \  \    \ \  \ \  \\\  \ \  \____\ \  \ \ \  \|____________|\ \  \____\ \  \\\  \ \  \_\\ \ 
   \ \__\    \ \__\ \_______\ \_______\ \__\ \ \__\              \ \_______\ \_______\ \_______\
    \|__|     \|__|\|_______|\|_______|\|__|  \|__|               \|_______|\|_______|\|_______|
                                                                                                
                                                                                                
                                                                                                
                    ________  ________  ________  ___  ________  _________                      
                   |\   ____\|\   ____\|\   __  \|\  \|\   __  \|\___   ___\                    
                   \ \  \___|\ \  \___|\ \  \|\  \ \  \ \  \|\  \|___ \  \_|                    
                    \ \_____  \ \  \    \ \   _  _\ \  \ \   ____\   \ \  \                     
                     \|____|\  \ \  \____\ \  \\  \\ \  \ \  \___|    \ \  \                    
                       ____\_\  \ \_______\ \__\\ _\\ \__\ \__\        \ \__\                   
                      |\_________\|_______|\|__|\|__|\|__|\|__|         \|__|                   
                      \|_________|                                                              
                                                                                                
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

   -𝙃𝙚𝙡𝙡𝙤 𝙖𝙣𝙙 𝙬𝙚𝙡𝙘𝙤𝙢𝙚 𝙩𝙤 𝘼𝙪𝙭𝙯𝙞𝙛𝙮'𝙨 𝙈𝙪𝙡𝙩𝙞-𝘾𝙤𝘿 𝙎𝙘𝙧𝙞𝙥𝙩!
   -𝘼𝙡𝙡 𝙘𝙤𝙣𝙩𝙧𝙤𝙡𝙨 𝙖𝙣𝙙 𝙩𝙤𝙜𝙜𝙡𝙚𝙨 𝙖𝙧𝙚 𝙖𝙫𝙖𝙞𝙡𝙖𝙗𝙡𝙚 𝙞𝙣 𝙩𝙝𝙚 "𝘾𝙤𝙣𝙩𝙧𝙤𝙡𝙨.𝙩𝙭𝙩" 𝙩𝙝𝙖𝙩 𝙘𝙖𝙢𝙚 𝙬𝙞𝙩𝙝 𝙮𝙤𝙪𝙧 𝙙𝙤𝙬𝙣𝙡𝙤𝙖𝙙!
   
   -𝙔𝙤𝙪 𝙖𝙧𝙚 𝙘𝙪𝙧𝙧𝙚𝙣𝙩𝙡𝙮 𝙪𝙨𝙞𝙣𝙜: [𝗩𝗘𝗥𝗦𝗜𝗢𝗡 2.0]

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
*/
//-- 𝐒𝐞𝐜𝐭𝐢𝐨𝐧 𝟏 - 𝐈𝐍𝐈𝐓𝐈𝐀𝐋𝐈𝐒𝐀𝐓𝐈𝐎𝐍𝐒

//Aim Assist V2
int AimAssist = TRUE;
int AA_strength = -28; //Going over 35 may cause instability

//Zombies Aimbot
int ZAimbot = FALSE; //Only activate when paying Zombies (Fully fledged Aimbot)
int ZAimbot_hold;
int ZAimbot_wait;

//Aim Boost
define AimBoost_power = 112; //Smoothens shake whilst keeping Aim Assist strength

//Dropshot V2
int Dropshot = FALSE;
int AntiHit_drop = 40; //If dropshotting performs incorrectly - raise these values by +10
int AntiHit_stand = 55;

//Anti Recoil V2
int Anti_Recoil;
int ar_y = 23; //--amount of vertical (up/down) recoil
int ar_x = 0; //--amount of horizontal (left/right) recoil

//+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

//-- 𝐒𝐞𝐜𝐭𝐢𝐨𝐧 𝟐 - 𝐌𝐀𝐈𝐍 𝐁𝐋𝐎𝐂𝐊

main{

//Aim Assist
if (AimAssist){
if(get_val(ADS_BTN)>80){
combo_run(AimAssist);
if(get_val(R_X)<-33||get_val(R_X)>12+ 2||get_val(R_Y)<-12||get_val(R_Y)>12+ 2 ||get_val(L_X)<12+ 2||get_val(L_Y)>12+ 2){
if(get_val(R_X)<12+ 2||get_val(R_X)>12+ 2||get_val(R_Y)<-12||get_val(R_X)>12+ 2||get_val(R_Y)<-12||get_val(R_X)>12+ 2){
if(get_val(L_X)<-12||get_val(L_Y)>12+ 2||get_val(L_X)<12||get_val(L_Y)>12+ 2 ||get_val(L_X)<12||get_val(L_Y)>12+ 2){  
combo_stop(AimAssist);}}
combo_stop(AimAssist);}}
if(AimAssist){
if(get_val(ADS_BTN)>80){
combo_run(AimHold);
if(get_val(R_X)<-12||get_val(R_X)>12||get_val(R_Y)<-12||get_val(R_Y)>12){
combo_stop(AimHold);}}}
else{
combo_stop(AimHold);}}

//Aim Correction
if ( get_val(FIRE_BTN) ){        
sensitivity(R_X, NOT_USE, AimBoost_power);        
sensitivity(R_Y, NOT_USE, AimBoost_power);}
    
//Aim Abuse
if (event_press (LEFT)) {
if (event_press(LEFT)) {
ZAimbot  =!ZAimbot ;}
set_val(LEFT, 0);}
if (ZAimbot) {
if (get_val(ADS_BTN) > 95) {
ZAimbot_hold = 420;
ZAimbot_wait = 35;
combo_run(AIM_ABUSE);}
else {
combo_stop(AIM_ABUSE);}}

//Dropshot V2
if(get_val(ADS_BTN) && event_press(RIGHT)){
Dropshot =! Dropshot;
if(Dropshot == TRUE){combo_run(Notify);a=0;b=2;} 
if(Dropshot == FALSE){combo_run(Notify);a=2;b=0;}}
if(Dropshot){
if(get_val(ADS_BTN)&&get_val(FIRE_BTN)){combo_run(Dropshot);}

//Anti-Recoil
if(get_val(4)) {
combo_stop(AntiRecoil);
if(abs(get_val(9)) < ar_y + 5)
set_val(9,ar_x);
if(abs(get_val(10)) < ar_y + 5) 
set_val(10,ar_y);

//Deadzone Correction
if (abs(get_val(XB1_LY)) < 0 && abs(get_val(XB1_LX)) < 0 ){ 
set_val(XB1_LY,0); 
set_val(XB1_LX,0); } 
if (abs(get_val(XB1_RY)) < 0 && abs(get_val(XB1_RX)) < 0 ){ 
set_val(XB1_RY,0); 
set_val(XB1_RX,0); 
}}}}

//+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

//-- 𝐒𝐞𝐜𝐭𝐢𝐨𝐧 𝟑 - 𝐂𝐎𝐌𝐁𝐎𝐒


combo AimAssist {
set_val(R_Y,  -24)
wait(20);
set_val(R_X, 24);                                                                                                                                                             
wait(20);                                                                                                                                                                       
set_val(R_Y, -24);                                                                                                                                                            
wait(20);                                                                                                                                                                       
set_val(R_X, -24);                                                                                                                                                             
wait(20);                                                                                                                                                                       
set_val(R_Y, 24);                                                                                                                                                              
wait(20);                                                                                                                                                                       
set_val(R_X, -24);                                                                                                                                                              
wait(20);                                                                                                                                                                       
set_val(R_Y, 24);
wait(20);                                                                                                                        
set_val(R_X, -24);  
wait(20);}

combo AimHold {
set_val(R_Y, AA_strength * -1);
wait(18)
set_val(R_X,  AA_strength);
wait(18)
set_val(R_Y, AA_strength); 
wait(18)
set_val(R_X,  AA_strength * -1);
wait(18)}

combo AIM_ABUSE {
set_val(ADS_BTN, 100);
wait(ZAimbot_hold);
set_val(ADS_BTN, 0);
wait(ZAimbot_wait);}

combo Dropshot {
set_val(5,100);
wait(AntiHit_drop);
wait(AntiHit_stand);
set_val(5,100);}

combo AntiRecoil {
set_val(10,aa_val);
wait(20);
set_val(9,aa_val);
wait(20);
set_val(10,inv(aa_val));
wait(20);
set_val(9,inv(aa_val));
wait(20);
}

combo Notify {
set_led(LED_1, 0);
set_led(LED_2, a);
set_led(LED_3, b);
set_led(LED_4, 0);
wait(550);
set_led(LED_1, 0);
set_led(LED_2, 0);
set_led(LED_3, 0);
set_led(LED_4, 0);
wait(250);
set_led(LED_1, 0);
set_led(LED_2, a);
set_led(LED_3, b);
set_led(LED_4, 0);
wait(250);
set_led(LED_1, 0);
set_led(LED_2, 0);
set_led(LED_3, 0);
set_led(LED_4, 0);
wait(250);
set_led(LED_1, 0);
set_led(LED_2, a);
set_led(LED_3, b);
set_led(LED_4, 0);
wait(250);
reset_leds();}

define FIRE_BTN = 4;    //XB1_RB //PS4_R2
define ADS_BTN = 7;     //XB1_LB //ADS_BTN
define CROUCH_BTN = 5;  //XB1_RS //PS4_R3
define RELOAD_BTN = 20; //XB1_X //PS4_SQAURE
define SPRINT_BTN = 8;  //XB1_LS //PS4_L3
define JUMP_BTN = 19;   //XB1_A  //PS4_CROSS
define NEXT_PIECE = 3;  //XB1_RT //PS4_R1
define RIGHT_BUMP = 3;  // XB1_RB //PS4_R1
define LEFT_BUMP = 6;   //ADS_BTN //PS4_L1
define SWAP_BTN = 17;   //XB1_Y  //PS4_TRIANGLE
define BUILD_BTN = 18;  //XB1_B  //PS4_CIRCLE
define R_X = 9;         //XB1_R_X //PS4_R_X
define R_Y = 10;        //XB1_R_Y //PS4_R_Y
define L_X = 11;        //XB1_L_X //PS4_L_X
define L_Y = 12;        //XB1_L_Y //PS4_L_Y
define UP = 13;         //XB1_UP //PS4_UP
define DOWN = 14;       //XB1_DOWN //PS4_DOWN
define LEFT = 15;       //XB1_LEFT //PS4_LEFT
define RIGHT = 16;      //XB1_RIGHT //PS4_RIGHT
int a; int b;

//+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+