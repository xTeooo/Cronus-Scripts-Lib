const int16 CMP_R []= {000};
    const int16 CMP_G [] = {000};
    const int16 CMP_B [] = {000};
  
    int RX = PS4_RX;
    int RY = PS4_RY;
    int rgb;
    int rVal;
    int bVal;
    int gVal;
 main
{
 
    
 

    
        // Next Pixel
        // Moving From The Left To The Right, 
        // Get The Pixel
        RAXIS = get_polar(POLAR_RS, POLAR_ANGLE);
        rgb = get_val(POLAR_RS, RX + 150, RY + 150);
        rgb = get_val(POLAR_RS, RX - 150, RY - 150);
        // Save Pixel Color In Byte Values
        // This Step Might Not Be Necessary..
        // Coult Probably Get It As An Int
        rVal = CMP_R[(rgb)];
        gVal = CMP_G[(rgb)];
        bVal = CMP_B[(rgb)];
        combo_run(val)
       rVal = 50 ; //aug1.6 0x32321C
            gVal = 50 ;
            bVal = 28 ;
 
            rVal = 26 ; //gign1.6 0x1A1B12
            gVal = 27 ;
            bVal = 18 ;
 
            rVal = 44 ; //sas1.6 0x2C2C21
            gVal = 44 ;
            bVal = 33 ;
 
            rVal = 14 ; //gsg91.6 0x0E1019
            gVal = 16 ;
            bVal = 25 ;
 
            rVal = 40 ; //leet1.6 0x282515
            gVal = 37 ;
            bVal = 21 ;
 
            rVal = 8 ; //arctic1.6 0x080707
            gVal = 7 ;
            bVal = 7 ;
 
            rVal = 13 ; //urban1.6 0x0D0A07
            gVal = 10 ;
            bVal = 7 ;
 
            rVal = 213 ; //guerilla1.6 0xD5573D
            gVal = 87 ;
            bVal = 61 ;
 
            rVal = 50 ; //sascsgo 0x322A27
            gVal = 42 ;
            bVal = 39 ;
 
            rVal = 44 ; //fbicsgo 0x2C3C6A
            gVal = 60 ;
            bVal = 106 ;
 
            rVal = 76 ; //vertcsgo 0x4C4634
            gVal = 70 ;
            bVal = 52 ;
 
            rVal = 38 ; // gigncsgo 0x262210
            gVal = 34 ;
            bVal = 16 ;
 
            rVal = 86 ; // russecsgo 0x56544C
            gVal = 84 ;
            bVal = 76 ;
 
            rVal = 63 ; // itacsgo 0x3F3D39
            gVal = 61 ;
            bVal = 57 ;
        
            rVal = 56;  // arabcsgo jaune 0x382414  zeus 0x513C2B black 0x1C0F0A rouge 0x513921 barbe 0x66361E
            gVal = 36 ;
            bVal = 20 ;
            rVal = 81;  // arabcsgo jaune 0x382414  zeus 0x513C2B black 0x1C0F0A rouge 0x513921 barbe 0x66361E
            gVal = 60;
            bVal = 43;
            rVal = 28;  // arabcsgo jaune 0x382414  zeus 0x513C2B black 0x1C0F0A rouge 0x513921 barbe 0x66361E
            gVal = 28;
            bVal = 10;
            rVal = 81;  // arabcsgo jaune 0x382414  zeus 0x513C2B black 0x1C0F0A rouge 0x513921 barbe 0x66361E
            gVal =  15;
            bVal =  33;
            rVal = 102;  // arabcsgo jaune 0x382414  zeus 0x513C2B black 0x1C0F0A rouge 0x513921 barbe 0x66361E
            gVal = 54;
            bVal = 30;
 
            rVal = 134 ; // polizeicsgo 0x866D46
            gVal = 109 ;
            bVal = 70 ;
                                
            rVal = 202 ; // afghancsgo 0xCA7148
            gVal = 113 ;
            bVal = 72 ;
 
            rVal = 87 ; // beigecsgo 0x574B3A
            gVal = 75 ;
            bVal = 58 ;
 
            rVal = 146; //0x926A4F wingman
            gVal = 106;
            bVal = 79;
 
            rVal = 56; // 0x383425 spitfire
            gVal = 52;
            bVal = 37;
 
            rVal = 42; //   prowler 0x2A221C
            gVal = 34;
            bVal = 28;
 
            rVal = 53; // hemlock 0x352B23
            gVal = 43;
            bVal = 35;
 
            rVal = 36; // flatline 0x241E19
            gVal = 30;
            bVal = 25;
 
            rVal = 185; // RE45 0xB98B64
            gVal = 139;
            bVal = 100;
 
            rVal = 45; // p2020 
            gVal = 37;
            bVal = 29;
            
            rVal = 79; // R301 0x4F4031
            gVal = 64;
            bVal = 49;
 
            rVal = 156; // r99 0x9C5E32
            gVal = 94;
            bVal = 50;
 
            rVal = 71; // alternator 0x473A31
            gVal = 58;
            bVal = 49;
 
            rVal = 48; // scout 0x30241A
            gVal = 36;
            bVal = 26;
 
            rVal = 119; // mozambique 0x775631
            gVal = 86;
            bVal = 49;
 
            rVal = 69; // peacekeeper 0x453827
            gVal = 56;
            bVal = 39;
 
            rVal = 103; // EVA 0x67513A
            gVal = 81;
            bVal = 58;
 
            rVal = 62; // sentinel 0x3E3223
            gVal = 226;
            bVal = 35;
 
            rVal = 48; // fusil a charge 0x30261D
            gVal = 38;
            bVal = 26;
 
            rVal = 57; // longBOW 0x393022
            gVal = 48;
            bVal = 34;
 
            rVal = 42; // fusil triple 0x2A261D
            gVal = 38;
            bVal = 29;
 
            rVal = 52; // havoc 0x34271F
            gVal = 39;
            bVal = 31;
 
            rVal = 57; // EMG L STAR 0x393128
            gVal = 49;
            bVal = 40;
 
            rVal = 87; // KRABER 0x574732
            gVal = 71;
            bVal = 50;
 
            rVal = 48; // MASTIFF 0x302C1C
            gVal = 44;
            bVal = 28;
 
            rVal = 72; // DEVOTION 0x483718
            gVal = 55;
            bVal = 24;
 
 
 
                if (RY == 0)
                {
 
                   set_polar(POLAR_RS, 0, 0);
 
                   }
                if (RX == 0)
                {
                    set_polar(POLAR_RS,0, 0);
                    
                }}
                int RAXIS;
  combo val {
  set_val(RAXIS,rVal)
  set_val(RAXIS,bVal)
  set_val(RAXIS,gVal)}